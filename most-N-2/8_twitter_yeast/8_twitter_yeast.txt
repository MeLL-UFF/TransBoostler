Starting experiment 8_twitter_yeast 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.241
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.14510545683864134;  // std dev = 4.851, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
%   | | | else return 0.15083186192877937;  // std dev = 5.046, 123.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7413433124639606;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7340533457129585;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6606212017857348;  // std dev = 3.509, 84.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=69 */
%   | | | else return -0.160809819584531;  // std dev = 0.005, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.27303886640718417;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.8444674378357556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5752019415546883;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3085870525993556;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.10911963938308343;  // std dev = 4.270, 117.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6270097370315547;  // std dev = 1.899, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.14064078977187477;  // std dev = 5.58e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09086642478242377;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.15298241229009685;  // std dev = 1.240, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4511078049849001;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.29505259737241224;  // std dev = 0.958, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6333239512927377;  // std dev = 0.965, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.023391057430583385;  // std dev = 5.235, 256.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5173418512298378;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.11685223979737937;  // std dev = 1.422, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.1669452826677521;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.35498393800580047;  // std dev = 0.044, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3663423592346221;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.0703032731207055;  // std dev = 5.525, 236.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3898490884921856;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.10382571341256237;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.04917925915467303;  // std dev = 1.127, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.27679602665472114;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3492158576652572;  // std dev = 0.191, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2877514918619548;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3019992381974852;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return 0.016272656259192338;  // std dev = 2.192, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.27922315106943624;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.05092600466553133;  // std dev = 2.980, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | | | else return 0.07972716566856249;  // std dev = 4.279, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2516179362244114;  // std dev = 0.194, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24235801270383228;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.7178781392272001;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5054007493348736;  // std dev = 1.613, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.1876774782669694;  // std dev = 0.524, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2268832972492034;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.059340110760287584;  // std dev = 4.040, 136.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17628615239050552;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.08130197516120646;  // std dev = 0.915, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4224194008320532;  // std dev = 2.589, 79.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=71 */
%   | | else return -0.15448017515839552;  // std dev = 0.517, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.20066344907968214;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.059707562658948235;  // std dev = 1.501, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1764866463895835;  // std dev = 0.103, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18159426108000185;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.01963919734703809;  // std dev = 1.284, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.31808934794512655;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.0012499739491611335;  // std dev = 1.880, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.21106865653780765;  // std dev = 1.065, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.026760536336479762;  // std dev = 3.532, 132.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=40 */
%   | | | else return 0.07995560457840871;  // std dev = 1.317, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14068861612002118;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.23502052397330797;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06579383221942955;  // std dev = 0.769, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return 0.011932979957789325;  // std dev = 2.149, 101.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.21038184695320405;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.04644787824982222;  // std dev = 3.455, 115.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=40 */
%   | | | else return 0.0808531850334556;  // std dev = 1.311, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.840', 'seconds']
Parameter learned model CLL:-0.200642 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.943, 1, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.851, 82, 33], 'false,false,true,false': [5.046, 87, 36], 'false,false,false,true': [1.225, 6, 2], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.031, 0, 9], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [3.509, 15, 69], 'false,false,true,false': [0.005, 169, 0], 'false,false,false,true': [1.309, 4, 3], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.025, 0, 8], 'true,false': [0.874, 1, 3], 'false,true,true': [4.27, 83, 34], 'false,true,false,true': [1.899, 4, 37], 'false,true,false,false': [5.58e-08, 65, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.195, 5, 2], 'false,false,false,true': [1.24, 4, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.074, 0, 5], 'true,false': [0.958, 1, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.965, 1, 14], 'false,true,false': [5.235, 199, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.422, 6, 3], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.044, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.075, 0, 4], 'false,true': [5.525, 165, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.127, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.045, 0, 4], 'true,true,false': [0.191, 0, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [2.192, 30, 12], 'false,false,true': [0.06, 0, 3], 'false,false,false,true': [2.98, 54, 20], 'false,false,false,false': [4.279, 83, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.194, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [1.613, 3, 33], 'true,false': [0.524, 78, 0], 'false,true': [0.052, 0, 3], 'false,false,true': [4.04, 96, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.02, 0, 3], 'true,false': [0.915, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.589, 8, 71], 'false,true,false': [0.517, 138, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.501, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.103, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.018, 0, 3], 'false,true,true': [1.284, 35, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.88, 43, 17], 'false,false,true': [1.065, 2, 3], 'false,false,false,true': [3.532, 92, 40], 'false,false,false,false': [1.317, 7, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.028, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.769, 1, 3], 'false,true': [2.149, 72, 29], 'false,false,true': [0.049, 0, 3], 'false,false,false,true': [3.455, 75, 40], 'false,false,false,false': [1.311, 6, 4]}]
{'': [0.07638888888888877, 0.2082696180108709], 'false': [1.4802973661668753e-16, 0.20480190960382047], 'false,false': [0.20586469882070507, 0.18749999999999983], 'false,false,true': [0.20461247637051175, 0.20701963117192262], 'false,false,false': [0.18750000000000003, 0.18750000000000003], 'true': [0.09876543209876527, 1.4802973661668753e-16], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0]}
{'': [9.486794123821211e-05, 0.20327490249678104], 'false': [0.0, 0.20151465898639034], 'false,false': [0.1983239282159265, 0.2500000000000001], 'false,false,false': [0.2448979591836736, 0.0], 'false,false,true': [0.14661087211084048, 1.4870125820759627e-07], 'true': [0.0, 0.0001062872304614536], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.07953288560603226, 0.1677496291367124], 'false': [0.16490833000871938, 0.21292052228474745], 'false,false': [0.20408163265306123, 0.21983021396440686], 'false,false,false': [0.21983021396440686, nan], 'false,false,true': [nan, 0.20408163265306123], 'false,true': [0.15581220767521467, 0.17378145359217714], 'false,true,false': [0.08793319711067382, 4.7824991830006746e-17], 'true': [7.904587959534082e-05, 0.19105156571713]}
{'': [0.08278178568366969, 0.1285821452617224], 'false': [0.12400315114860315, 0.22214045187457065], 'false,false': [0.0, 0.22957006324306023], 'false,false,false': [0.22457383857998048, 0.25], 'false,true': [0.06204249161450927, 0.10704224885599899], 'true': [0.001104712263571228, 0.13097537415273783], 'false,true,true': [nan, 0.06204249161450927], 'false,false,true': [nan, 0.0]}
{'': [0.0007131647223897727, 0.1335042020066009], 'false': [0.12936121022796152, 0.207845119071532], 'false,false': [0.0, 0.21761276926731443], 'false,false,false': [0.22222222222222218, 0.21151019883092692], 'true': [0.0002792230827861619, 0.0013904629435435023], 'true,true': [0.0002792230827861619, nan], 'false,false,true': [nan, 0.0]}
{'': [0.0046352493350854725, 0.13281962180209256], 'false': [0.1143549857510514, 0.13613919121428428], 'false,false': [0.0011943344957965802, 0.13752397009111003], 'false,false,false': [0.11997366301399386, 0.14768752272257768], 'true': [0.005564791545837765, 5.074956891039373e-05], 'true,true': [0.0005088425937746083, 0.007278603185890598], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}
{'': [0.1255303181355869, 0.11801668082243037], 'true': [0.09401599079615959, 0.003523544779580159], 'false': [0.0009017143975766454, 0.11999425633602057], 'false,false': [0.11999425633602057, nan], 'true,true': [0.003420235212144336, 0.10970003173771616], 'true,true,false': [0.0, 0.07230370783609105], 'true,true,true': [0.003754463625758142, 0.0]}
{'': [0.07156243448888414, 0.11139398492863231], 'false': [0.10917330756299072, 0.1287857718083566], 'false,false': [0.0, 0.13259512412448682], 'false,false,false': [0.13259512412448682, nan], 'false,true': [0.08484801793768325, 0.0019362741470199795], 'false,true,true': [nan, 0.08484801793768292], 'true': [0.00012919474886015822, 0.09311801592124375], 'false,false,true': [0.0, nan]}
{'': [0.0010014586742487736, 0.08238096233884444], 'false': [0.049505223386734847, 0.10579996959927054], 'false,false': [0.2269612284371218, 0.09958633799884913], 'false,false,false': [0.09452038146819854, 0.15776577148795146], 'false,true': [0.035847607810193645, 0.05956447493316897], 'false,true,false': [0.0, 0.05888545220651571], 'true': [0.0013305264598337217, 0.00010497168639140204], 'true,false': [nan, 0.00010497168639140204]}
{'': [0.06058872908242819, 0.08059906709966583], 'false': [0.045705455374246265, 0.10738927694158167], 'false,false': [0.0008072026415233599, 0.10933835242373562], 'false,false,false': [0.10381103115153303, 0.1718135199299795], 'true': [0.001073480170524714, 0.1478568859093107], 'true,true': [0.001073480170524714, nan], 'true,true,true': [0.0001145208756945515, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
1;false,false,false;complex(A, K).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 6.357
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.11346808403568258;  // std dev = 2.989, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | else if ( interaction(H, A), phenotype(A, I) )
%   | | | then return 0.1352573688344515;  // std dev = 4.078, 83.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=23 */
%   | | | else return 0.1974346493852254;  // std dev = 5.011, 112.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.668594337039948;  // std dev = 3.410, 83.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=69 */
%   | | | else return -0.15823749359864359;  // std dev = 0.144, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.04666233722598566;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.33237662294027137;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4509864282505112;  // std dev = 0.317, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5957530524383111;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( enzyme(A, G), interaction(A, H) )
%   | | | then return -0.011665645799330139;  // std dev = 1.810, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | | else return 0.10808642611097369;  // std dev = 3.945, 99.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=29 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.642232985871364;  // std dev = 1.673, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14431688724515224;  // std dev = 0.031, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(J, L) )
%   | | | then return 0.22576467580136036;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.007051585502165895;  // std dev = 1.096, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return 0.1590980091346937;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.45369186280129287;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4474453852124644;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), complex(A, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.47243575353309164;  // std dev = 1.230, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.022102194603605272;  // std dev = 1.668, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.02832798845063452;  // std dev = 2.743, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | | else return 0.07267033296856235;  // std dev = 4.310, 157.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=44 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.5571070301161742;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.03790222785650171;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.03165693188223073;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.33674410589591913;  // std dev = 0.000630, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1448174482121121;  // std dev = 0.940, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.036400265950845834;  // std dev = 1.471, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.19278721981391853;  // std dev = 2.522, 39.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   | | else if ( interaction(A, H), location(H, I) )
%   | | | then return 0.009492830761004493;  // std dev = 1.733, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return 0.07828883213679785;  // std dev = 4.203, 136.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=42 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.41880575919898044;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.28452543346073583;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0251964282252254;  // std dev = 1.229, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.28681531137240485;  // std dev = 0.037, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return -0.23026833952899728;  // std dev = 0.702, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.3215879997166481;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1255565796326075;  // std dev = 0.005, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.12117135092609843;  // std dev = 1.636, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.29655806322516226;  // std dev = 1.330, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.33830942629469957;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.09834446547689255;  // std dev = 4.569, 156.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=55 */
%   | | | else return 0.0288249046502565;  // std dev = 1.891, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24176430522304704;  // std dev = 0.038, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5640761119503059;  // std dev = 1.022, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1920227865088735;  // std dev = 0.085, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.015024591848507296;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5150232011886993;  // std dev = 0.768, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.1655036717474546;  // std dev = 0.075, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return 0.0467701727755196;  // std dev = 3.127, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | | | else return 0.1282497383207201;  // std dev = 0.744, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17573145288738165;  // std dev = 0.000739, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.20810105955597913;  // std dev = 0.107, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.055478250532316996;  // std dev = 0.773, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( location(A, I) )
%   | | | then return 0.403172204365012;  // std dev = 2.256, 74.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=68 */
%   | | | else return 0.21415050061011953;  // std dev = 0.753, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.15425664301982245;  // std dev = 0.028, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.21251431263902976;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.08397918172166459;  // std dev = 0.755, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.11558348750763701;  // std dev = 1.171, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16995006155122216;  // std dev = 0.041, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.05127838611947849;  // std dev = 0.760, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return -0.02755660018220166;  // std dev = 0.237, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return -0.014776782426227764;  // std dev = 0.653, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0011582049491263569;  // std dev = 1.716, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3030281692087051;  // std dev = 1.174, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.21198576960637283;  // std dev = 0.527, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.08295606781174802;  // std dev = 1.579, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.03681946377242761;  // std dev = 2.535, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14754902276074405;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.17538508966113273;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( phenotype(G, I), interaction(G, A) )
%   | | | then return -0.18937297409387668;  // std dev = 0.222, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.03922229672878821;  // std dev = 1.400, 59.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | else if ( location(A, J) )
%   | | | then return 0.004469369404397859;  // std dev = 1.672, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.2363303223325075;  // std dev = 0.459, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.029418277185386893;  // std dev = 0.900, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.0022345694208583903;  // std dev = 2.481, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
%   | | | else return 0.05078260296361676;  // std dev = 2.248, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.125', 'seconds']
Refined model CLL: -0.195845


******************************************
Best model found
******************************************
Results 

CLL : -0.201919 

AUC ROC : 0.98849 

AUC PR : 0.287271 

Precision : 0.188351 

Recall : 0.882979 

F1 : 0.310474 

Total Learning Time : 6.357 

Total Inference Time : 13.217105150222778 

Total revision time: 28.165066192626952
Best scored revision CLL: -0.195845


Results 

CLL : -0.201919 

AUC ROC : 0.98849 

AUC PR : 0.287271 

Precision : 0.188351 

Recall : 0.882979 

F1 : 0.310474 

Total Learning Time : 28.18100232887268 

Total Inference Time : 13.217105150222778 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.316
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08777856472914089;  // std dev = 4.887, 135.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=31 */
%   | | | else return 0.17505034355021573;  // std dev = 5.544, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7473839334745775;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7573871012272588;  // std dev = 0.046, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7641072739982948;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.734253294452439;  // std dev = 2.840, 85.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=76 */
%   | | | else return -0.15781535504553584;  // std dev = 0.080, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.08320549123154837;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.11891977694583408;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5944716071489399;  // std dev = 0.053, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5868271727847422;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06669424678622639;  // std dev = 4.351, 139.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5615997073484923;  // std dev = 2.610, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | | else return -0.14396204686974567;  // std dev = 5.96e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8160179201014642;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1914988025383145;  // std dev = 1.464, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.35087447349344036;  // std dev = 0.961, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.3269975312073613;  // std dev = 0.916, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5322830932795547;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4671484486307619;  // std dev = 2.112, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | else return 0.04086904246668599;  // std dev = 5.046, 240.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4965613013077137;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.013692944738426844;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.2547122559138153;  // std dev = 0.942, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3538704772806356;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3701094931831811;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.041440291102063716;  // std dev = 5.888, 310.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.37511937732138245;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.030216115954523136;  // std dev = 1.644, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.11001565376214972;  // std dev = 0.908, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.38135018572193513;  // std dev = 0.263, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2848047303766157;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.012441919936018998;  // std dev = 2.832, 78.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2921570390803716;  // std dev = 0.043, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.034989728212711145;  // std dev = 2.395, 60.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | | | else return 0.05838400813555268;  // std dev = 4.688, 173.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.278967598794946;  // std dev = 0.255, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.23681152986136256;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.21880445377085778;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5514259689782738;  // std dev = 1.066, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1711723105428231;  // std dev = 0.543, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24572672245148725;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05869905469526135;  // std dev = 4.476, 157.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.20572726920878537;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.11818589876330772;  // std dev = 0.949, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32413303655995895;  // std dev = 3.752, 103.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=82 */
%   | | else return -0.14179761481014774;  // std dev = 0.220, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.1966994575997788;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.03402943009770376;  // std dev = 1.497, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18070265380564693;  // std dev = 0.119, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1912311694030303;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.19971831066510565;  // std dev = 0.101, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.014320787603813043;  // std dev = 1.851, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2771462869342564;  // std dev = 0.189, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.0637909587660811;  // std dev = 1.654, 66.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18460765256110684;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05473306675555364;  // std dev = 3.680, 156.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=47 */
%   | | | else return 0.02451656683254525;  // std dev = 1.377, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14092870018136874;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.032540330951713825;  // std dev = 0.928, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return -0.3970080538601165;  // std dev = 0.036, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1803658106025575;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.0032309369702878525;  // std dev = 2.457, 110.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.008070380358029539;  // std dev = 0.912, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0414041584739025;  // std dev = 3.934, 141.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=47 */
%   | | | else return 0.010595758672084319;  // std dev = 1.405, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.905', 'seconds']
Parameter learned model CLL:-0.198281 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.309, 2, 12], 'true,false': [1.195, 2, 5], 'false,true,true': [1.0, 2, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.887, 104, 31], 'false,false,true,false': [5.544, 97, 45], 'false,false,false,true': [1.633, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.046, 0, 13], 'false,true,true': [0.089, 0, 4], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [2.84, 9, 76], 'false,false,true,false': [0.08, 191, 0], 'false,false,false,true': [1.225, 6, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.053, 0, 11], 'true,false': [0.031, 0, 6], 'false,true,true': [4.351, 105, 34], 'false,true,false,true': [2.61, 8, 48], 'false,true,false,false': [5.96e-08, 104, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.464, 6, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.961, 1, 10], 'true,false': [0.916, 1, 7], 'false,true,true,true': [0.008, 0, 3], 'false,true,true,false': [2.112, 6, 21], 'false,true,false': [5.046, 182, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.247, 7, 2], 'false,false,false,false': [0.942, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.004, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.055, 0, 10], 'false,true': [5.888, 228, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.644, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(J, A)'}, {'true,true,true': [0.908, 1, 5], 'true,true,false': [0.263, 0, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.01, 0, 2], 'false,true': [2.832, 59, 19], 'false,false,true': [0.043, 0, 8], 'false,false,false,true': [2.395, 49, 11], 'false,false,false,false': [4.688, 123, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.255, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [1.066, 1, 33], 'true,false': [0.543, 107, 0], 'false,true': [0.005, 0, 5], 'false,false,true': [4.476, 110, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.949, 1, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.752, 21, 82], 'false,true,false': [0.22, 172, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.497, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.119, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.101, 0, 5], 'false,true,true': [1.851, 35, 13], 'false,true,false,true': [0.189, 0, 8], 'false,true,false,false': [1.654, 55, 11], 'false,false,true': [0.004, 0, 5], 'false,false,false,true': [3.68, 109, 47], 'false,false,false,false': [1.377, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.027, 0, 7], 'true,true,true,false': [0.928, 1, 6], 'true,true,false,true': [0.036, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.084, 0, 3], 'false,true': [2.457, 78, 32], 'false,false,true': [0.912, 1, 5], 'false,false,false,true': [3.934, 94, 47], 'false,false,false,false': [1.405, 10, 4]}]
{'': [0.15419501133786812, 0.20671366154677767], 'false': [0.17283950617283939, 0.20018917398019767], 'false,false': [0.19909030483910944, 0.22222222222222207], 'false,false,false': [0.22222222222222207, nan], 'false,false,true': [0.1768998628257899, 0.21647490577266532], 'false,true': [0.25, 0.0], 'true': [0.1224489795918365, 0.20408163265306106], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.0001404349511413811, 0.20313096873940953], 'false': [0.0016262707086134626, 0.19868632100357278], 'false,false': [0.19884149757628458, 0.19555555555555573], 'false,false,true': [0.09486827647885392, 3.313462288200524e-05], 'false,false,false': [0.1875, 0.20408163265306123], 'false,true': [0.0019921816180513696, 0.0], 'true': [0.0, 0.00016010138414124242], 'false,true,false': [0.0, 0.0]}
{'': [0.00023402635898088253, 0.15076904133142263], 'false': [0.14703323139563423, 0.22695253282088504], 'false,false': [0.22695253282088504, nan], 'false,false,true': [0.0, 0.2141910471755321], 'false,true': [0.1361896436164661, 0.15584135332391805], 'false,true,false': [0.12167970663682308, 3.416070845000482e-17], 'true': [0.0002518278064352796, 0.0001635779517312752]}
{'': [0.09294549279219479, 0.13274699226696626], 'false': [0.12937013788248658, 0.19712193980503684], 'false,false': [0.0, 0.2003535449454685], 'false,false,false': [0.17283950617283955, 0.22204376485810456], 'false,true': [0.1491387194501554, 0.10608687975683463], 'false,true,true': [2.1512449799902338e-05, 0.16528304581239808], 'true': [0.08395406949465832, 0.10497863708408323], 'false,false,true': [nan, 0.0]}
{'': [0.00024007825917430925, 0.11496772173299744], 'false': [0.11182113878633737, 0.175831249899094], 'false,false': [0.0, 0.18011844199435675], 'false,false,false': [0.18011844199435675, nan], 'true': [2.4657514436286576e-06, 0.000297822340327869], 'true,true': [2.4657514436286576e-06, nan], 'false,false,true': [nan, 0.0]}
{'': [0.06815605111275594, 0.11501218155952495], 'false': [0.10281870499159965, 0.11873182024137079], 'false,false': [0.00022983932982340027, 0.12059408467183612], 'false,false,false': [0.09559967805794499, 0.12701751788285048], 'true': [0.07721961198647348, 5.2532165101606965e-05], 'true,true': [0.13735529020850742, 0.007680188544916551], 'true,false': [nan, 5.2532165101606965e-05]}
{'': [0.10091854494657466, 0.12472007343733828], 'false': [6.0136841076863234e-06, 0.12761224925799747], 'false,false': [0.12761224925799747, nan], 'true': [0.04143270939588046, 0.002753572407064629], 'true,true': [0.004161260167860212, 0.038964303773036175], 'true,true,false': [0.0, 0.03343175714041421], 'true,true,true': [0.004327606628138388, 0.0]}
{'': [0.051308869443843136, 0.10428291625547938], 'false': [0.10223455139641277, 0.13475559591613953], 'false,false': [0.0, 0.14004630185983255], 'false,false,false': [0.14004630185983255, nan], 'false,true': [0.13670690347012823, 0.0002806377214995264], 'false,true,true': [nan, 0.1367069034701279], 'true': [0.0, 0.06426554830791557], 'false,false,true': [0.0, nan]}
{'': [0.0015984203840764752, 0.07745469844925486], 'false': [0.05765843832397703, 0.08875654812596491], 'false,false': [3.964790217619862e-06, 0.09086634780460891], 'false,false,false': [0.08678725593495522, 0.13548124018460203], 'false,true': [0.07141514147785621, 0.04867258853022846], 'false,true,false': [0.004467280452877906, 0.04146451520401326], 'true': [0.0015722720455022543, 0.0014772096975240179], 'true,false': [0.0, 0.002047513128875794]}
{'': [0.07268243716555645, 0.09022541322997889], 'false': [0.05487030117259221, 0.11372798053845094], 'false,false': [0.13859597030964246, 0.11268410165680959], 'false,false,false': [0.10978070592691475, 0.14106201722137715], 'true': [0.08212447751865513, 0.002327804305765619], 'true,true': [0.06451504909236268, 0.0006344622116355725], 'true,true,true': [0.00010154305766365319, 0.12305453583492972], 'true,true,false': [0.0006344622116355725, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 6.573
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( enzyme(I, J), interaction(K, A) )
%   | | | then return -0.026466449515872396;  // std dev = 1.629, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return 0.13814893509951232;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( location(A, L), phenotype(A, M) )
%   | | | then return 0.1793168183111909;  // std dev = 5.465, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
%   | | | else return 0.1011395893051197;  // std dev = 4.436, 107.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=26 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), location(E, F) )
%   | | then return 0.7372321343150519;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3319045176838227;  // std dev = 1.062, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6936840423109023;  // std dev = 3.334, 89.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=76 */
%   | | | else return -0.16035957949235827;  // std dev = 0.087, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.17288682958242127;  // std dev = 1.632, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.15461416061009808;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.585609518115763;  // std dev = 0.041, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5678671702738275;  // std dev = 0.088, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.1249779812618302;  // std dev = 3.732, 84.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=27 */
%   | | | else return -0.005339550372603931;  // std dev = 1.999, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5586221183436322;  // std dev = 2.737, 57.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   | | | else return -0.13892186490994976;  // std dev = 0.050, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.5659227590733945;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1697756309024282;  // std dev = 0.954, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.18658272106192975;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.41056684210926986;  // std dev = 0.001, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4841250149538135;  // std dev = 0.088, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4633762069587199;  // std dev = 0.114, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6020511028489463;  // std dev = 1.229, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.14581756641220392;  // std dev = 0.239, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0.06995848559844756;  // std dev = 5.021, 205.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=58 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5131474740280995;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.27898769793348244;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07553429342329643;  // std dev = 1.130, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.20184505411272619;  // std dev = 0.336, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return -0.3314814120110895;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3403453414079175;  // std dev = 0.034, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(G, A) )
%   | then if ( phenotype(A, H), interaction(A, I) )
%   | | then return 0.024729274685109697;  // std dev = 0.305, 89.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=23 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.07261878433273394;  // std dev = 4.739, 177.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=54 */
%   | | | else return 0.14508051870019908;  // std dev = 1.266, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.3868564354069234;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, M) )
%   | | | then return -0.01714809682511537;  // std dev = 1.162, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.2549383781855479;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.11879839584649156;  // std dev = 0.365, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.4438401432286868;  // std dev = 0.127, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3068914794521736;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13840146377371296;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.04566754239953768;  // std dev = 2.575, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | | else return -0.056491071485802215;  // std dev = 0.288, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.16587366124268157;  // std dev = 0.277, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return -0.01754379665795318;  // std dev = 2.157, 49.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
%   | | | else return 0.07614995613873718;  // std dev = 4.606, 158.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=51 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.28665054803993156;  // std dev = 0.050, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2175444217055721;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.43856703301562233;  // std dev = 1.794, 39.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=33 */
%   | else return -0.16576764835280092;  // std dev = 0.080, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2414062172074531;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.1616730200477083;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.00502136017242228;  // std dev = 1.897, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( location(A, I) )
%   | | | then return 0.0985318937168046;  // std dev = 3.552, 100.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=36 */
%   | | | else return -0.03019644726839317;  // std dev = 1.406, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.2008335637876657;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, E), interaction(A, F) )
%   | | then return -0.04269245276585839;  // std dev = 0.699, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.19760403876610422;  // std dev = 0.022, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.21114478678111756;  // std dev = 2.136, 28.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   | | | else return 0.46078644607453006;  // std dev = 1.562, 66.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=64 */
%   | | else return -0.1492570302570946;  // std dev = 0.035, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.19139922045206503;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.055643278238872454;  // std dev = 1.053, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.06609152336276869;  // std dev = 0.890, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19426140312018175;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.07862194013465551;  // std dev = 0.574, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20027655077614065;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( complex(A, J), location(A, K) )
%   | | | then return -0.04011227925270135;  // std dev = 1.672, 68.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=14 */
%   | | | else return 0.06252088922247061;  // std dev = 1.776, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | else return -0.07242510387978938;  // std dev = 0.101, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.0011049993615106872;  // std dev = 0.929, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(A, M) )
%   | | | then return -0.06961811553067425;  // std dev = 2.245, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | | else return 0.01831777325777434;  // std dev = 3.569, 121.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=40 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16736140469171334;  // std dev = 0.034, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.3492413215493544;  // std dev = 0.223, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.2088134762647221;  // std dev = 0.765, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.1215518566078892;  // std dev = 0.620, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.005399859980315759;  // std dev = 3.753, 191.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=52 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4160043414013877;  // std dev = 0.316, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.20532464241440052;  // std dev = 0.415, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.3175901351270323;  // std dev = 0.572, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.043391603500151296;  // std dev = 1.173, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '19.694', 'seconds']
Refined model CLL: -0.195206


******************************************
Best model found
******************************************
Results 

CLL : -0.173112 

AUC ROC : 0.989245 

AUC PR : 0.337372 

Precision : 0.251549 

Recall : 0.766038 

F1 : 0.378731 

Total Learning Time : 6.573 

Total Inference Time : 13.96762466430664 

Total revision time: 30.025380910873412
Best scored revision CLL: -0.195206


Results 

CLL : -0.173112 

AUC ROC : 0.989245 

AUC PR : 0.337372 

Precision : 0.251549 

Recall : 0.766038 

F1 : 0.378731 

Total Learning Time : 30.04131704711914 

Total Inference Time : 13.96762466430664 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.443
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08672036367094095;  // std dev = 2.484, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.15345094852233016;  // std dev = 5.568, 149.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.13351125394009203;  // std dev = 3.711, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7313730497173964;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return -0.23292803776327828;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.41787244556146597;  // std dev = 0.855, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8208900743628247;  // std dev = 0.992, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.1597262782790207;  // std dev = 0.041, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.03205631254748062;  // std dev = 1.998, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.19824997533937216;  // std dev = 3.105, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.41250929388914154;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.44425532563517334;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.059394811097499695;  // std dev = 2.093, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6890168658705189;  // std dev = 0.198, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14108888864348587;  // std dev = 1.07e-07, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5524261025068926;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20949724816249995;  // std dev = 3.438, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.21295816089917977;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.44737460829652537;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1646518418401645;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.382597213673754;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4100904212867691;  // std dev = 0.632, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.07575856715133718;  // std dev = 4.154, 172.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return -0.04588752505349181;  // std dev = 0.652, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.562417886337597;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.05308317629936459;  // std dev = 1.924, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.07751696679470842;  // std dev = 3.247, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.37237545207970596;  // std dev = 0.073, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3614794115107377;  // std dev = 0.097, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.05841720346040509;  // std dev = 4.237, 188.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.42652079274069665;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.42276399315987745;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.05461992920718902;  // std dev = 3.686, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | | else return 0.6556014316878581;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2649726387241704;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.48769897839014076;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.33913250475230666;  // std dev = 0.017, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.32581848891080256;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.3656738020928114;  // std dev = 0.152, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06324384822702102;  // std dev = 1.014, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2932589791388373;  // std dev = 0.074, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.06169125436098762;  // std dev = 2.668, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
%   | | | else return 0.059375757199575406;  // std dev = 4.713, 152.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25658985575582766;  // std dev = 0.210, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2533727012510511;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.22376767956482735;  // std dev = 0.614, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.6354962410234806;  // std dev = 0.783, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.1955093824331996;  // std dev = 0.675, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2418389025270457;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06617923335950202;  // std dev = 3.293, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17657155383838707;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.20574484651232675;  // std dev = 0.075, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43719906678461234;  // std dev = 0.738, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14655006835465206;  // std dev = 0.215, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.20848842835968356;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04166772058709913;  // std dev = 3.034, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16251891899290558;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1214237727571803;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19865251214492194;  // std dev = 0.081, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.08027473661161802;  // std dev = 0.439, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.20729356624222162;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.03350685334302433;  // std dev = 1.432, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16955839995214061;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0225432231974724;  // std dev = 2.657, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
%   | | | else return 0.07426340591268527;  // std dev = 2.927, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1430410765625753;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14796438838436135;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.13108667198277324;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15975325532682783;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.020446774109962904;  // std dev = 1.363, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.14705717415964323;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.019739855602013703;  // std dev = 2.701, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
%   | | | else return -0.01648517416403854;  // std dev = 3.173, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.094', 'seconds']
Parameter learned model CLL:-0.180232 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [2.484, 27, 8], 'false,false,true,false': [5.568, 105, 44], 'false,false,false,true': [3.711, 50, 19], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 9], 'false,true,true': [0.041, 0, 4], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.855, 1, 2], 'false,false,true,true': [0.992, 1, 52], 'false,false,true,false': [0.041, 129, 0], 'false,false,false,true': [1.998, 18, 5], 'false,false,false,false': [3.105, 27, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.926, 1, 6], 'true,false': [0.943, 1, 8], 'false,true,true': [2.093, 27, 8], 'false,true,false,true': [0.198, 0, 48], 'false,true,false,false': [1.07e-07, 111, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.438, 31, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.011, 0, 9], 'true,false': [1.192, 2, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.632, 1, 3], 'false,true,false': [4.154, 120, 52], 'false,false,true,true': [0.652, 1, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.924, 13, 5], 'false,false,false,false': [3.247, 35, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.073, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.097, 0, 9], 'false,true': [4.237, 132, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.686, 49, 19], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.005, 0, 6], 'true,true,false': [0.0, 0, 1], 'true,false,true,true': [0.017, 0, 2], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.152, 0, 3], 'false,true': [1.014, 19, 3], 'false,false,true': [0.074, 0, 6], 'false,false,false,true': [2.668, 52, 23], 'false,false,false,false': [4.713, 106, 46]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.21, 0, 12], 'true,true,true,false': [0.005, 0, 2], 'true,true,false,true': [0.614, 1, 1], 'true,true,false,false': [0.783, 0, 36], 'true,false': [0.675, 104, 0], 'false,true': [0.058, 0, 5], 'false,false,true': [3.293, 72, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.003, 0, 5], 'true,false': [0.075, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.738, 0, 56], 'false,true,false': [0.215, 129, 0], 'false,false,true,true': [0.004, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.034, 44, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.038, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.081, 0, 4], 'false,true,true': [0.439, 14, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.432, 46, 14], 'false,false,true': [0.044, 0, 5], 'false,false,false,true': [2.657, 80, 36], 'false,false,false,false': [2.927, 35, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.026, 0, 5], 'true,true,true,false': [0.011, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.088, 0, 4], 'false,true': [1.363, 57, 17], 'false,false,true': [0.039, 0, 5], 'false,false,false,true': [2.701, 77, 36], 'false,false,false,false': [3.173, 50, 20]}]
{'': [-2.5376526277146434e-16, 0.20953890870656688], 'false': [0.12244897959183662, 0.20311240622481383], 'false,false': [0.2027410207939516, 0.20408163265306076], 'false,false,false': [0.1995379122033181, 0.0], 'false,false,true': [0.17632653061224507, 0.20809873429124892], 'false,true': [0.0, 0.1388888888888887], 'false,true,false': [0.0, 0.18750000000000006], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [6.344131569286608e-17, 0.21056640907379331], 'false': [0.18806640549113895, 0.20714173801744787], 'false,false': [0.2038995409974875, 0.21608349986947284], 'false,false,false': [0.173569117358795, 0.22959183673469366], 'false,false,true': [0.01857227028470745, 1.2924168092128362e-05], 'false,true': [0.00042480411835421616, 0.262324441624796], 'false,true,false': [0.0, 0.24388060489246446], 'true': [0.0, -9.868649107779169e-17]}
{'': [0.1093749999999998, 0.16362331927825877], 'false': [0.14218075926425594, 0.2302207155785418], 'false,false': [0.22945961012337598, 0.25], 'false,false,false': [0.25, nan], 'false,false,true': [0.0, 0.2316972758738193], 'false,true': [0.1251806542614701, 0.14546982599765626], 'false,true,false': [0.0008160466161271825, 1.0402089600091557e-16], 'true': [0.12244897959183677, 0.0987654320987654]}
{'': [0.10840882411722194, 0.13360652228985162], 'false': [0.10272985655999188, 0.21050396929316129], 'false,false': [0.22404840837515982, 0.20959513507043573], 'false,false,true': [0.2127274547201791, 0.0], 'false,false,false': [0.2056501356295043, 0.21085730277912007], 'true': [1.3703443314231714e-05, 0.2028121377659739], 'false,true': [0.0799653865539601, 0.10033705842829033], 'false,true,true': [0.0, 0.09980555789947967]}
{'': [0.0010773645605690607, 0.12416595963880137], 'false': [0.0954919062266117, 0.1999263267630783], 'false,false': [3.528385772583187e-06, 0.20204381624615528], 'false,false,false': [0.19978057396375073, 0.0], 'true': [0.0010585472147716323, 0.001045417320110209], 'true,true': [0.0010585472147716323, nan], 'false,false,true': [0.0, 0.0]}
{'': [0.00548132695659168, 0.12164978916891178], 'false': [0.046744423571854446, 0.12727806238775674], 'false,false': [0.0009244867353850698, 0.12921838583772258], 'false,false,false': [0.0949071943332088, 0.14614647863726296], 'true': [0.006077862737514412, 0.003639154626285755], 'true,true': [4.122377433311379e-06, 0.0], 'true,false': [0.00012005549803034699, 0.007701499670310326], 'true,false,true': [0.0001514794871468328, 0.0]}
{'': [0.13343268427607416, 0.09730345814044197], 'true': [0.06876479110014638, 0.004378132251103535], 'false': [0.0006743141315435741, 0.10041170575631547], 'false,false': [0.10041170575631547, nan], 'true,true': [0.003160837646897785, 0.06287489623816], 'true,true,false': [0.18828899240312236, 0.017047736702544263], 'true,true,true': [0.0036839940808057934, 1.302754364326808e-05]}
{'': [0.0006024865485765307, 0.09230630552547098], 'false': [0.07511560184629557, 0.1402899875907894], 'false,false': [9.913019814261625e-06, 0.1438304323895643], 'false,false,false': [0.1438304323895643, nan], 'false,true': [0.009712696899928406, 0.00035766352623224716], 'false,true,true': [nan, 0.009712696899928533], 'true': [2.1995166110289068e-06, 0.0006320218421703285], 'false,false,true': [9.913019814261625e-06, nan]}
{'': [0.001004662501465791, 0.07329005272604187], 'false': [0.031070321765908328, 0.08984993757348436], 'false,false': [0.000393898947943494, 0.0919826864364689], 'false,false,false': [0.06086042669736622, 0.1558077570383014], 'false,true': [0.01286537954718693, 0.03489536614848705], 'false,true,false': [0.0, 0.034188066243573255], 'true': [0.0001575805711470029, 0.0022542755132608505], 'true,false': [0.0, 0.001624988754092123]}
{'': [0.0007037694646647798, 0.07412243755403998], 'false': [0.025108697164631787, 0.09315944441866433], 'false,false': [0.0003116134688072758, 0.09516621544182614], 'false,false,false': [0.06454281351586044, 0.1437908375280848], 'true': [0.00011570747301191675, 0.0019520114385478647], 'true,true': [0.00010654277242969773, 0.0], 'true,true,true': [0.00013712503481282944, 4.042296056539404e-05], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,false;interaction(A, J), interaction(J, K).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
4;false,false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 2.64
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, A), interaction(A, I) )
%   | | | then return -0.021851064900487778;  // std dev = 1.625, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | | else return 0.1763307532813309;  // std dev = 5.780, 154.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=49 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284563;  // std dev = 3.559, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6194734122109545;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8367709778887498;  // std dev = 0.043, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.16151351396515146;  // std dev = 0.104, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.2245098390576353;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.09970809936965236;  // std dev = 2.836, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.566271840320843;  // std dev = 0.012, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.41323692812237406;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.004116247447029516;  // std dev = 1.306, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.2781156799764332;  // std dev = 1.320, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6778879870154633;  // std dev = 0.262, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14211195616355754;  // std dev = 0.062, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10091719979172084;  // std dev = 3.715, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | else return 0.29284213045252416;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4441522033788289;  // std dev = 0.027, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.38805143625061544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.24016309711066988;  // std dev = 0.903, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.12008197300819695;  // std dev = 0.090, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0.05740541025077101;  // std dev = 4.108, 182.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5303278377452416;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.003124272430297389;  // std dev = 1.971, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.16769291947413395;  // std dev = 3.062, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3213401022448342;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.25102050137177406;  // std dev = 0.295, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F), interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.501962542012341;  // std dev = 0.171, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.03549771913395342;  // std dev = 1.396, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.08458595855557009;  // std dev = 2.111, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return 0.0517841975901058;  // std dev = 3.270, 118.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.35994778962352547;  // std dev = 0.039, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.15785370268016238;  // std dev = 3.419, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return 0.2400400186383823;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.2728807930641644;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.262003271805907;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3298684366796661;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(A, H), enzyme(H, I) )
%   | | then return -0.10341320145742093;  // std dev = 0.005, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.0024069289425278305;  // std dev = 0.547, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2680186391061045;  // std dev = 0.449, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.30769923957550405;  // std dev = 0.029, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.020694630958409628;  // std dev = 3.438, 104.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=28 */
%   | | | else return 0.07574410296310026;  // std dev = 4.201, 123.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2286770454795233;  // std dev = 0.034, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.48745119131258946;  // std dev = 0.390, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.727044447601761;  // std dev = 0.109, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1883583098415549;  // std dev = 0.075, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2509163167525137;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.005682289391338944;  // std dev = 1.480, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.06909682625393702;  // std dev = 1.426, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.21412206821113403;  // std dev = 1.013, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.0663888727787284;  // std dev = 2.228, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17045231833668573;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.1933403038091125;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.353625404563363;  // std dev = 0.404, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.45336661030357944;  // std dev = 1.030, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.12952894524348274;  // std dev = 0.221, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return -0.1396595864637913;  // std dev = 0.199, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.18870997668029127;  // std dev = 0.030, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return -0.046466016105965166;  // std dev = 1.238, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.015150507015037253;  // std dev = 2.739, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.14744305495979548;  // std dev = 0.007, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17568411532107356;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, A), complex(A, G) )
%   | | | then return -0.07279063148416459;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.047724959237070784;  // std dev = 0.301, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.2134221418198733;  // std dev = 0.053, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.006716199008007643;  // std dev = 1.380, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17682797398997596;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return -0.0151201885994322;  // std dev = 2.662, 139.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=35 */
%   | | | else return 0.051004705691181214;  // std dev = 2.891, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.13242907031295176;  // std dev = 0.010, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.15078798046396763;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.22713684853333538;  // std dev = 0.408, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.12100682358173398;  // std dev = 0.706, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.059615492123000595;  // std dev = 0.287, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.029888172966451233;  // std dev = 1.047, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1525401253228621;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.09985037203290449;  // std dev = 1.509, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.016972724772821884;  // std dev = 3.661, 165.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=52 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '9.161', 'seconds']
Refined model CLL: -0.178275


******************************************
Best model found
******************************************
Results 

CLL : -0.191836 

AUC ROC : 0.982788 

AUC PR : 0.203425 

Precision : 0.140988 

Recall : 0.855596 

F1 : 0.242084 

Total Learning Time : 2.64 

Total Inference Time : 2.9081504344940186 

Total revision time: 9.79159980583191
Best scored revision CLL: -0.178275


Results 

CLL : -0.191836 

AUC ROC : 0.982788 

AUC PR : 0.203425 

Precision : 0.140988 

Recall : 0.855596 

F1 : 0.242084 

Total Learning Time : 9.807535942077637 

Total Inference Time : 2.9081504344940186 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.664
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.04124752664880815;  // std dev = 3.259, 71.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=13 */
%   | | | else return 0.14919371121891478;  // std dev = 5.258, 134.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1308762078267851;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7347337483847239;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7305718385191504;  // std dev = 0.023, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.41787244556146597;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7512057788947993;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8235791175845588;  // std dev = 0.995, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15516245984003452;  // std dev = 0.079, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.1715479795159841;  // std dev = 1.808, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.10588623490398735;  // std dev = 2.253, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5694641834806193;  // std dev = 0.018, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5620900825074584;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.04702950579871216;  // std dev = 2.798, 67.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6900743870061545;  // std dev = 0.162, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.14112604509649168;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3693047106139813;  // std dev = 0.975, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07332939290974022;  // std dev = 2.532, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.10301149442963603;  // std dev = 1.417, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4294645230468828;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3235439968814648;  // std dev = 0.960, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6170271940238092;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5923253584195272;  // std dev = 0.201, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.056770361260232896;  // std dev = 4.240, 182.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4593938718167395;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5908102447105072;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.05286595596549253;  // std dev = 1.933, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.16307992944450098;  // std dev = 2.098, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33961073189966906;  // std dev = 0.037, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3417036083741212;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.05122521142513218;  // std dev = 4.409, 199.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3528988996726139;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3950222778217896;  // std dev = 0.070, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.022709534517965965;  // std dev = 2.617, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.06233475099693586;  // std dev = 1.412, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.09529907785475177;  // std dev = 0.894, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.33744588197887665;  // std dev = 0.141, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.27703442521224;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.30664751301978604;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.37954193731527863;  // std dev = 0.169, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.029881263884047122;  // std dev = 1.171, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.013575426279915006;  // std dev = 1.193, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.060265437890289736;  // std dev = 2.168, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0.04841837289857741;  // std dev = 4.530, 168.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2669319992909439;  // std dev = 0.212, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.23007783188889466;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.27753045081159644;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.565100867269796;  // std dev = 1.194, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17731187024897838;  // std dev = 0.919, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.26797160827622085;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05495292068382916;  // std dev = 3.312, 105.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1951747091383722;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.12144572278051631;  // std dev = 0.945, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3476264844949406;  // std dev = 2.518, 63.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=56 */
%   | | else return -0.13669375796434932;  // std dev = 0.179, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.1875007590201706;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1943032031604759;  // std dev = 0.046, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return -7.892846195376826E-4;  // std dev = 2.571, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16506438318847078;  // std dev = 0.021, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.24171358878111437;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19595778740299724;  // std dev = 0.093, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.11190615094328585;  // std dev = 0.475, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.24416212411206814;  // std dev = 0.176, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.024948260953622528;  // std dev = 1.574, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1987134542723951;  // std dev = 0.000958, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.024973099402575295;  // std dev = 2.939, 105.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
%   | | | else return 0.05759188784895707;  // std dev = 2.439, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14206663071663883;  // std dev = 0.008, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.149532477431714;  // std dev = 0.014, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.15032368538018237;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.08171766328119508;  // std dev = 0.726, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.15222067799175446;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.03213658859747259;  // std dev = 1.782, 115.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1689527089826196;  // std dev = 0.000845, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.020428372527221548;  // std dev = 2.855, 110.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=31 */
%   | | | else return 0.010532356385323235;  // std dev = 2.508, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.721', 'seconds']
Parameter learned model CLL:-0.174676 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [3.259, 58, 13], 'false,false,true,false': [5.258, 95, 39], 'false,false,false,true': [2.558, 24, 9], 'false,false,false,false': [1.095, 2, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.023, 0, 11], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.798, 1, 2], 'false,true,false,false': [0.039, 0, 3], 'false,false,true,true': [0.995, 1, 52], 'false,false,true,false': [0.079, 130, 0], 'false,false,false,true': [1.808, 10, 5], 'false,false,false,false': [2.253, 18, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.018, 0, 11], 'true,false': [0.019, 0, 4], 'false,true,true': [2.798, 53, 14], 'false,true,false,true': [0.162, 0, 42], 'false,true,false,false': [0.0, 71, 0], 'false,false,true,true': [0.975, 1, 3], 'false,false,true,false': [2.532, 26, 9], 'false,false,false,true': [1.417, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.001, 0, 6], 'true,false': [0.96, 1, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.201, 0, 6], 'false,true,false': [4.24, 133, 49], 'false,false,true,true': [0.006, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.933, 14, 5], 'false,false,false,false': [2.098, 12, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.037, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.024, 0, 6], 'false,true': [4.409, 143, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.07, 0, 2], 'false,false,false,true': [2.617, 30, 9], 'false,false,false,false': [1.412, 6, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.894, 1, 5], 'true,true,false': [0.141, 0, 3], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.065, 0, 3], 'true,false,false': [0.169, 0, 4], 'false,true': [1.171, 20, 5], 'false,false,true': [1.193, 2, 5], 'false,false,false,true': [2.168, 32, 13], 'false,false,false,false': [4.53, 121, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.212, 0, 13], 'true,true,true,false': [0.052, 0, 3], 'true,true,false,true': [0.015, 0, 3], 'true,true,false,false': [1.194, 1, 33], 'true,false': [0.919, 106, 0], 'false,true': [0.001, 0, 3], 'false,false,true': [3.312, 74, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.945, 1, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.518, 7, 56], 'false,true,false': [0.179, 135, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.046, 0, 2], 'false,false,false,true': [2.571, 37, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.021, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.093, 0, 5], 'false,true,true': [0.475, 19, 1], 'false,true,false,true': [0.176, 0, 6], 'false,true,false,false': [1.574, 59, 17], 'false,false,true': [0.000958, 0, 3], 'false,false,false,true': [2.939, 74, 31], 'false,false,false,false': [2.439, 27, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.008, 0, 8], 'true,true,true,false': [0.014, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.726, 1, 2], 'true,false': [0.045, 0, 3], 'false,true': [1.782, 91, 24], 'false,false,true': [0.000845, 0, 3], 'false,false,false,true': [2.855, 79, 31], 'false,false,false,false': [2.508, 33, 12]}]
{'': [0.05859374999999978, 0.2028539229536044], 'false': [0.10937499999999978, 0.1940083659333786], 'false,false': [0.18931588340273733, 0.21606648199445933], 'false,false,false': [0.19834710743801665, 0.23999999999999994], 'false,false,true': [0.1495734973219594, 0.2063377144130101], 'false,true': [0.0, 0.12244897959183662], 'false,true,false': [1.4802973661668753e-16, 0.18750000000000006], 'true': [0.07100591715976314, 1.4802973661668753e-16]}
{'': [3.7260457621949665e-05, 0.20836889208871343], 'false': [0.10399158673791792, 0.20381253928715565], 'false,false': [0.2025285028323471, 0.20968299378185887], 'false,false,false': [0.21804382233763928, 0.20304969738383094], 'false,false,true': [0.01867856373842868, 4.7960163438788024e-05], 'false,true': [0.0, 0.13410363265592706], 'false,true,false': [0.2121482382086197, 0.0005034715476790463], 'true': [0.0, 4.6190649944448254e-05]}
{'': [5.549047712568959e-05, 0.15962493480064718], 'false': [0.14832307405922115, 0.20171293285339056], 'false,false': [0.19677285216805435, 0.22311957968333815], 'false,false,false': [0.22311957968333815, nan], 'false,false,true': [0.23775772219200852, 0.18310410920808765], 'false,true': [0.11680791570496601, 0.16157858872886802], 'false,true,false': [0.0006217065625661414, -3.752866562113205e-17], 'true': [2.858528203959891e-05, 8.960302915955731e-05]}
{'': [0.060223417097409304, 0.12522371716471778], 'false': [0.10571974203846318, 0.21215866930350186], 'false,false': [0.0038481868817264266, 0.2171746802824458], 'false,false,false': [0.19670765145109995, 0.2315681491387756], 'false,true': [0.005859645645351273, 0.09879713065634886], 'true': [2.3114116021183406e-07, 0.09215014447247427], 'false,true,true': [0.0, 0.0067490845840210145], 'false,false,true': [1.552596773848891e-05, 0.0]}
{'': [0.0001282791977461173, 0.11459509348300884], 'false': [0.09768909458017917, 0.18056147832512692], 'false,false': [0.0020169708334106438, 0.1844799199732198], 'false,false,false': [0.1756216248540519, 0.22159011229254738], 'false,false,true': [0.0, 0.002433996587883097], 'true': [0.00014878868623275428, 9.488688585377696e-05], 'true,true': [0.00014878868623275428, nan]}
{'': [0.06441633922537965, 0.11504536763687735], 'false': [0.05487422654615361, 0.12125017885818754], 'false,false': [0.2034008363804427, 0.11841803394404675], 'false,false,false': [0.10448056268057714, 0.12212163314387171], 'true': [0.10394744186126997, 0.005812522667310013], 'true,true': [0.13307715074313228, 0.006597974265860562], 'true,false': [0.001228835111427115, 0.007172350211874734], 'true,false,true': [0.0, 0.001419213072861747]}
{'': [0.11093896840087944, 0.10281850011061386], 'true': [0.048879198939128066, 0.007968371561150255], 'false': [4.644531807855105e-07, 0.10449568712604411], 'false,false': [0.10449568712604411, nan], 'true,true': [0.003181161428314011, 0.0446736871820772], 'true,true,false': [7.927720415673578e-05, 0.04190334662286489], 'true,true,true': [0.0034499465710110875, 0.0009128642153552377]}
{'': [0.05684446979868539, 0.09267309227403756], 'false': [0.0830784252361362, 0.1291670115982112], 'false,false': [0.0007017055215752984, 0.13488714885616476], 'false,false,false': [0.13488714885616476, nan], 'false,true': [0.10066561363246328, 0.000236403342511637], 'false,true,true': [nan, 0.1006656136324633], 'true': [0.0, 0.074433635540908], 'false,false,true': [0.0, 0.001037133866935623]}
{'': [0.00102836941276762, 0.07333133153268422], 'false': [0.03254651543850803, 0.09998746563111949], 'false,false': [3.0590784459716414e-07, 0.10151555142385264], 'false,false,false': [0.08226083867649404, 0.15257934000861942], 'false,true': [0.011265452650529301, 0.03550682511764054], 'false,true,false': [0.005173898532371796, 0.03260247623706595], 'true': [4.458296983106402e-05, 0.0017406747650925102], 'true,false': [0.0, 0.001739877491485392]}
{'': [0.038692877860794526, 0.06547798995307356], 'false': [0.027623882324138052, 0.09186602685249243], 'false,false': [2.3783648349373632e-07, 0.09320886239438457], 'false,false,false': [0.07412448386273515, 0.13979006595624735], 'true': [0.04627601762983502, 0.0006804932795137728], 'true,true': [3.560376527420306e-05, 0.14189255836337122], 'true,true,false': [0.0, 0.17572928094568055], 'true,true,true': [8.525507813474109e-06, 9.932570137874061e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.92
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), enzyme(A, I) )
%   | | then if ( complex(A, J), phenotype(H, K) )
%   | | | then return 0.15814893509951236;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.34201990284144784;  // std dev = 2.782, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.02481560176617903;  // std dev = 2.739, 54.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=9 */
%   | | | else return 0.15125238337537442;  // std dev = 4.902, 116.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.778063797907254;  // std dev = 1.657, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.1661686503378614;  // std dev = 0.167, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.15586373585131744;  // std dev = 2.349, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.0362176924936198;  // std dev = 1.802, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4377193779227552;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return -0.04141568018102466;  // std dev = 1.275, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return 0.05594351788683621;  // std dev = 2.434, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6188543161422947;  // std dev = 1.685, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.14453157213510062;  // std dev = 0.127, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( complex(A, J), phenotype(A, I) )
%   | | | then return 0.32560607616796977;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07534995708325423;  // std dev = 2.383, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.12907287028969652;  // std dev = 1.193, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.34215905361588544;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.1130383134622815;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4463716467956149;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.44637164679561486;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.6047476488743347;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.13410466048516412;  // std dev = 0.082, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0.09893173488666004;  // std dev = 4.109, 146.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=49 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5366908517528106;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.0218036064441723;  // std dev = 2.174, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.16611738478998175;  // std dev = 1.952, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.24818283192357077;  // std dev = 0.304, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.007021498045730638;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.15601083246807773;  // std dev = 0.914, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.38785965828928687;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11795747631396149;  // std dev = 0.032, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.06187482989012727;  // std dev = 4.279, 169.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.40379839163259906;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.12900389711555835;  // std dev = 2.442, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return -0.031298463540784124;  // std dev = 1.553, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.24270859425557448;  // std dev = 0.234, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( enzyme(A, H), complex(A, I) )
%   | | | then return 0.09889934367772962;  // std dev = 1.123, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.0279578998572211;  // std dev = 2.136, 80.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=15 */
%   | | else if ( interaction(D, E) )
%   | | | then return 0.11096406652899075;  // std dev = 2.187, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.023957237059499516;  // std dev = 1.934, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5678040090196071;  // std dev = 0.945, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.1661639325942602;  // std dev = 0.148, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.03183501615044147;  // std dev = 1.555, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.07807834323613155;  // std dev = 1.507, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.25255623181066267;  // std dev = 0.022, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.3411593009471865;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.565499744173272;  // std dev = 0.753, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.16330238178632578;  // std dev = 0.079, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.31193200360454276;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), enzyme(I, J) )
%   | | | then return 0.15294419656439562;  // std dev = 1.502, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.034697493502071554;  // std dev = 2.423, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.019633584985290373;  // std dev = 0.838, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.01986920768979543;  // std dev = 0.707, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.19699841100631776;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E) )
%   | | then return 0.23357628804396094;  // std dev = 0.038, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.139343761447309;  // std dev = 1.064, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.37820100846729693;  // std dev = 0.198, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.14324445308358455;  // std dev = 0.061, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.21606846327779616;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.09106838070789218;  // std dev = 0.752, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.054566645993684326;  // std dev = 1.939, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return -0.025041425836660854;  // std dev = 1.166, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1650179223295379;  // std dev = 0.008, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1676632212818372;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.028027218345261156;  // std dev = 0.933, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), interaction(H, H) )
%   | | then return -0.044386902218365054;  // std dev = 0.116, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.09316238978648347;  // std dev = 0.530, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.012296561357595041;  // std dev = 1.281, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.04146752171059068;  // std dev = 0.813, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.11071428404454518;  // std dev = 1.620, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.01064312843061354;  // std dev = 3.013, 100.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.14352685247305916;  // std dev = 0.007, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.17116084052759273;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.02362032751552784;  // std dev = 0.775, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.2444566165081976;  // std dev = 0.098, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.048385828308207125;  // std dev = 1.537, 95.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=16 */
%   | | else return 0.11242091705002677;  // std dev = 0.482, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.03301296696449352;  // std dev = 0.814, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return -0.017772486488854853;  // std dev = 1.659, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.041438826554120164;  // std dev = 3.012, 99.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '11.711', 'seconds']
Refined model CLL: -0.175907


******************************************
Best model found
******************************************
Results 

CLL : -0.183352 

AUC ROC : 0.983295 

AUC PR : 0.222729 

Precision : 0.146746 

Recall : 0.780919 

F1 : 0.247065 

Total Learning Time : 3.92 

Total Inference Time : 3.6435940265655518 

Total revision time: 12.41834796333313
Best scored revision CLL: -0.174676


Results 

CLL : -0.183352 

AUC ROC : 0.983295 

AUC PR : 0.222729 

Precision : 0.146746 

Recall : 0.780919 

F1 : 0.247065 

Total Learning Time : 12.434284099578857 

Total Inference Time : 3.6435940265655518 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.109
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1768302537808309;  // std dev = 7.699, 273.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.16532890014890428;  // std dev = 4.772, 103.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | | else return 0.2111183375929564;  // std dev = 5.751, 141.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13119295099589307;  // std dev = 4.863, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   | | | else return 0.11644980984583851;  // std dev = 5.991, 168.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.10846743492700064;  // std dev = 3.090, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return 0.11389587569663627;  // std dev = 7.007, 223.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10729026575496609;  // std dev = 7.580, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07137362335811447;  // std dev = 7.671, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7327537377788159;  // std dev = 0.029, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2672989199368897;  // std dev = 0.043, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.09769326521110197;  // std dev = 3.586, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | | else return 0.08721177453567307;  // std dev = 4.541, 90.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.057658611567862984;  // std dev = 3.749, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   | | | else return 0.05036760132103511;  // std dev = 5.887, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03259502767213293;  // std dev = 7.010, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0012553968093174015;  // std dev = 7.162, 293.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.507', 'seconds']
Parameter learned model CLL:-0.325779 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.699, 186, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.772, 69, 34], 'false,false,false,false': [5.751, 88, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.863, 73, 35], 'false,false,false,false': [5.991, 116, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.09, 30, 14], 'false,false,false,false': [7.007, 150, 73]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.58, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.671, 182, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.029, 0, 35], 'true,false': [0.043, 76, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.586, 36, 20], 'false,false,false,false': [4.541, 58, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.749, 65, 35], 'false,false,false,false': [5.887, 104, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.01, 180, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.162, 206, 87]}]
{'': [nan, 0.2171235358048553], 'false': [nan, 0.2171235358048554], 'false,false': [nan, 0.2171235358048553], 'false,false,false': [nan, 0.2171235358048554]}
{'': [nan, 0.22942421392099058], 'false': [nan, 0.22942421392099008], 'false,false': [nan, 0.22942421392099058], 'false,false,false': [0.2211330002827782, 0.2345958452794149]}
{'': [nan, 0.21578414380184802], 'false': [nan, 0.21578414380184802], 'false,false': [nan, 0.21578414380184702], 'false,false,false': [0.2189429151111893, 0.21366845110738697]}
{'': [nan, 0.2196325336795615], 'false': [nan, 0.2196325336795615], 'false,false': [nan, 0.21963253367956073], 'false,false,false': [0.21694214876033013, 0.22015851581485357]}
{'': [nan, 0.22442169141957763], 'false': [nan, 0.22442169141957763], 'false,false': [nan, 0.22442169141957719], 'false,false,false': [nan, 0.22442169141957719]}
{'': [nan, 0.21876540637093986], 'false': [nan, 0.21876540637093986], 'false,false': [nan, 0.2187654063709401], 'false,false,false': [nan, 0.2187654063709398]}
{'': [0.21593825435554473, 0.22933669564116477], 'false': [nan, 0.22933669564116477], 'false,false': [nan, 0.22933669564116477], 'false,false,false': [0.22959183673469344, 0.2291358024691362], 'true': [2.402384264174527e-05, 2.3915702076283158e-05], 'true,true': [nan, 2.402384264174527e-05], 'true,true,false': [nan, 2.402384264174527e-05]}
{'': [nan, 0.19031214315746517], 'false': [nan, 0.19031214315746517], 'false,false': [nan, 0.190312143157465], 'false,false,false': [0.14057627896276514, 0.22217334221670412]}
{'': [nan, 0.1840198577046482], 'false': [nan, 0.18401985770464788], 'false,false': [nan, 0.18401985770464788], 'false,false,false': [nan, 0.18401985770464788]}
{'': [nan, 0.17506455020911096], 'false': [nan, 0.17506455020911096], 'false,false': [nan, 0.1750645502091112], 'false,false,false': [nan, 0.1750645502091112]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 10.924
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( phenotype(D, E) )
%   | then if ( phenotype(A, E), complex(D, F) )
%   | | then return 0.10814893509951223;  // std dev = 0.433, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.1914822684328457;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.33183314562582816;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else return 0.0803711573217346;  // std dev = 0.416, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.18018283340459706;  // std dev = 3.589, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.15226658215833588;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.26137474155112406;  // std dev = 3.863, 62.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=25 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), complex(F, D) )
%   | | then return 0.47944526368200163;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8185495863867945;  // std dev = 0.111, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.1695791636519509;  // std dev = 0.073, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( interaction(A, G), enzyme(G, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.81973012926195;  // std dev = 0.111, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.4822204964559911;  // std dev = 1.126, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.01409677575051981;  // std dev = 1.572, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, L), phenotype(A, M) )
%   | | | then return 0.06301826163376127;  // std dev = 2.633, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.2001058802718117;  // std dev = 5.384, 124.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=46 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.5544054553131458;  // std dev = 0.358, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | else if ( interaction(D, A) )
%   | | then return -0.1863489370679174;  // std dev = 0.174, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( phenotype(D, F), phenotype(A, G) )
%   | | | then return 0.014011955764236415;  // std dev = 2.387, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | | else return 0.137959237753559;  // std dev = 2.696, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   else if ( complex(A, H) )
%   | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.7446188618451939;  // std dev = 0.060, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.18014274798662888;  // std dev = 0.147, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.32706538326199674;  // std dev = 2.161, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.11938752986412574;  // std dev = 3.585, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | else return 0.3922463482756014;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.5668430831578437;  // std dev = 0.218, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( interaction(C, A) )
%   | | then return -0.15878732269091145;  // std dev = 0.152, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( complex(A, E), interaction(C, F) )
%   | | | then return 0.0569600594801243;  // std dev = 1.734, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.22483667540522462;  // std dev = 2.966, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
%   else if ( complex(A, G), enzyme(A, H) )
%   | then return 0.12756942511326722;  // std dev = 0.320, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B), location(J, K) )
%   | | | then return 0.3747943897171466;  // std dev = 0.660, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04331009585163963;  // std dev = 4.669, 117.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=32 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.11296829641915063;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.05369837024751604;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.34176395772377943;  // std dev = 0.165, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.012804890735634716;  // std dev = 0.362, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | else if ( recursion_proteinclass(D, B) )
%   | | then return 0.5859342250986758;  // std dev = 0.210, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, E), phenotype(D, F) )
%   | | | then return 0.01778807532415722;  // std dev = 2.812, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0.11698366799407142;  // std dev = 4.337, 98.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=36 */
%   else if ( interaction(A, A) )
%   | then return 0.049209308371130245;  // std dev = 0.554, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then return -0.07206087191905419;  // std dev = 0.289, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.09163398352101987;  // std dev = 0.954, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.03713488876466275;  // std dev = 1.791, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then if ( complex(D, F), interaction(A, C) )
%   | | then return 0.2333219983938145;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3196244688289993;  // std dev = 0.112, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4816504972164729;  // std dev = 0.202, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.12254867542375307;  // std dev = 0.057, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( location(A, I), complex(G, J) )
%   | | | then return 0.006008065617942528;  // std dev = 4.420, 131.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=35 */
%   | | | else return 0.06973235912716687;  // std dev = 4.356, 95.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=32 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.3935528794942463;  // std dev = 0.684, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10714921021330166;  // std dev = 1.812, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), interaction(F, A) )
%   | | then return 0.4574724953586993;  // std dev = 0.098, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.5379921621282755;  // std dev = 0.167, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.19202304768633413;  // std dev = 0.059, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( location(A, G), interaction(H, A) )
%   | then if ( interaction(I, H), enzyme(I, J) )
%   | | then if ( interaction(H, I), location(H, G) )
%   | | | then return 0.10425867744159507;  // std dev = 3.124, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | else return 7.72195764282057E-4;  // std dev = 2.653, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | else if ( interaction(K, H), interaction(L, K) )
%   | | | then return 1.7261089483995386E-4;  // std dev = 2.556, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return -0.07365441699258414;  // std dev = 1.984, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else if ( interaction(A, M), complex(M, N) )
%   | | then return 0.16553970060168588;  // std dev = 0.813, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.30147741301823777;  // std dev = 1.088, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( complex(D, E) )
%   | then return 0.05130112803141642;  // std dev = 0.367, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | else if ( interaction(A, D), phenotype(D, F) )
%   | | then return 0.01538049556178711;  // std dev = 0.612, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.033703107049774604;  // std dev = 0.388, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.20016901730581768;  // std dev = 1.970, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then return -0.0490014112175802;  // std dev = 0.319, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else if ( location(A, J), interaction(K, A) )
%   | | then if ( interaction(L, K), enzyme(L, M) )
%   | | | then return 0.08283890089116587;  // std dev = 3.649, 77.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=28 */
%   | | | else return 0.01945786963120951;  // std dev = 2.426, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.023354851366501908;  // std dev = 0.734, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.08127720557407561;  // std dev = 1.420, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, C) )
%   | then return 0.03130720473180473;  // std dev = 0.242, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | else if ( location(A, D), location(C, D) )
%   | | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | | then return 0.5506328011663094;  // std dev = 0.921, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.22959513085195102;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(A, F) )
%   | | | then return -0.02857968026980947;  // std dev = 1.278, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.12168383636218012;  // std dev = 1.338, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( complex(A, G), interaction(A, H) )
%   | then return 0.06816336823923229;  // std dev = 0.331, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then return -0.07758692385964466;  // std dev = 0.301, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.04359097247303758;  // std dev = 2.485, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return -0.029791281365200706;  // std dev = 4.111, 97.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=26 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( enzyme(A, E), complex(C, F) )
%   | then if ( interaction(A, G), complex(A, H) )
%   | | then return 0.2795099986531962;  // std dev = 0.518, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, C) )
%   | | | then return 0.028407814975418656;  // std dev = 2.236, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.192227105470098;  // std dev = 0.607, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(J, C), recursion_proteinclass(J, B) )
%   | | then return 0.2081018237126691;  // std dev = 0.311, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.20278975756444698;  // std dev = 0.572, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.014824500068520685;  // std dev = 4.862, 136.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=43 */
%   else if ( interaction(A, K) )
%   | then if ( interaction(K, L) )
%   | | then return 0.11849036126092272;  // std dev = 0.631, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.00859889148087373;  // std dev = 0.346, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else return 0.4021606519392635;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.546', 'seconds']
Refined model CLL: -0.274443


******************************************
Best model found
******************************************
Results 

CLL : -0.287536 

AUC ROC : 0.874281 

AUC PR : 0.225177 

Precision : 0.284165 

Recall : 0.464539 

F1 : 0.352624 

Total Learning Time : 10.924 

Total Inference Time : 4.346691608428955 

Total revision time: 18.143507965087892
Best scored revision CLL: -0.274443


Results 

CLL : -0.287536 

AUC ROC : 0.874281 

AUC PR : 0.225177 

Precision : 0.284165 

Recall : 0.464539 

F1 : 0.352624 

Total Learning Time : 18.17291904258728 

Total Inference Time : 4.346691608428955 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.255
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18935912618231546;  // std dev = 8.340, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.19219599648779578;  // std dev = 4.600, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
%   | | | else return 0.15770125755589207;  // std dev = 6.927, 219.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1505995861178777;  // std dev = 5.195, 120.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=41 */
%   | | | else return 0.14743239120825696;  // std dev = 6.454, 186.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.0730566010122613;  // std dev = 2.913, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.09302740683066679;  // std dev = 7.980, 299.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08880885595281908;  // std dev = 8.412, 325.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09054504772786498;  // std dev = 8.299, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7360809185936379;  // std dev = 0.008, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.26369487953891274;  // std dev = 0.010, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.04897118449822834;  // std dev = 3.784, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | | else return 0.09345367398955423;  // std dev = 5.201, 118.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06550376889766944;  // std dev = 4.058, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
%   | | | else return 0.03793722292903647;  // std dev = 6.553, 198.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05922306876117468;  // std dev = 7.566, 292.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.026775493031558226;  // std dev = 7.671, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.099', 'seconds']
Parameter learned model CLL:-0.335619 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.34, 210, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.6, 59, 33], 'false,false,false,false': [6.927, 148, 71]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.195, 79, 41], 'false,false,false,false': [6.454, 123, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.913, 29, 12], 'false,false,false,false': [7.98, 207, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.412, 221, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.299, 204, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.008, 0, 41], 'true,false': [0.01, 75, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.784, 45, 21], 'false,false,false,false': [5.201, 76, 42]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.058, 73, 41], 'false,false,false,false': [6.553, 135, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.566, 188, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.671, 209, 104]}]
{'': [nan, 0.22151000040569802], 'false': [nan, 0.22151000040569652], 'false,false': [nan, 0.22151000040569802], 'false,false,false': [nan, 0.22151000040569652]}
{'': [nan, 0.2225783438963622], 'false': [nan, 0.2225783438963608], 'false,false': [nan, 0.2225783438963622], 'false,false,false': [0.23003308128544325, 0.21909468109505556]}
{'': [nan, 0.22432742147811366], 'false': [nan, 0.22432742147811366], 'false,false': [nan, 0.2243274214781099], 'false,false,false': [0.22490216198341706, 0.22395268737814625]}
{'': [nan, 0.2123001213448025], 'false': [nan, 0.2123001213448025], 'false,false': [nan, 0.21230012134480497], 'false,false,false': [0.20701963117192135, 0.21297610735917183]}
{'': [nan, 0.21771361220029706], 'false': [nan, 0.21771361220029706], 'false,false': [nan, 0.21771361220029362], 'false,false,false': [nan, 0.21771361220029362]}
{'': [nan, 0.22361365846135894], 'false': [nan, 0.22361365846135894], 'false,false': [nan, 0.22361365846135864], 'false,false,false': [nan, 0.22361365846135894]}
{'': [0.22842158365523496, 0.22528684543486785], 'true': [1.652724897296344e-06, 1.3397954740312913e-06], 'false': [nan, 0.22528684543486785], 'false,false': [nan, 0.22528684543486785], 'false,false,false': [0.2169421487603309, 0.22924446997989004], 'true,true': [nan, 1.652724897296344e-06], 'true,true,false': [nan, 1.652724897296344e-06]}
{'': [nan, 0.19059837114895223], 'false': [nan, 0.19059837114895223], 'false,false': [nan, 0.19059837114895237], 'false,false,false': [0.1444157101797309, 0.21691072701916045]}
{'': [nan, 0.19606439814405033], 'false': [nan, 0.19606439814405047], 'false,false': [nan, 0.19606439814405047], 'false,false,false': [nan, 0.19606439814405047]}
{'': [nan, 0.18801180585370628], 'false': [nan, 0.18801180585370628], 'false,false': [nan, 0.1880118058537061], 'false,false,false': [nan, 0.1880118058537061]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 10.709
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7331489350995123;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( enzyme(C, D), enzyme(A, E) )
%   | | | then return 0.039967116917694;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.32156356924585383;  // std dev = 3.193, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.10814893509951237;  // std dev = 3.571, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | | else return 0.18897600276868506;  // std dev = 5.426, 133.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6833510231481005;  // std dev = 0.237, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( interaction(E, A), phenotype(A, F) )
%   | | then if ( complex(E, G) )
%   | | | then return 0.03263120720203905;  // std dev = 3.299, 70.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | | | else return -0.18566370335876908;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( phenotype(E, H) )
%   | | | then return 0.14800104267699457;  // std dev = 3.605, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return -0.0855105812552812;  // std dev = 0.962, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6893850578150547;  // std dev = 1.823, 33.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | | else return -0.16025072034604243;  // std dev = 0.176, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.23683384271482416;  // std dev = 3.518, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
%   | | | else return 0.10022017310460728;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.6091695956075412;  // std dev = 0.334, 41.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=35 */
%   | else if ( interaction(A, D) )
%   | | then return -0.17962979357882203;  // std dev = 0.193, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.3288972560764066;  // std dev = 1.824, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return 0.11740216696822972;  // std dev = 5.122, 147.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=46 */
%   else if ( complex(A, H), interaction(I, A) )
%   | then return -0.06423061135651742;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.8121389661808524;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.18987284433586568;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.05838503563707531;  // std dev = 1.986, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.001409861854082435;  // std dev = 1.341, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.5871392739360923;  // std dev = 0.295, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(D, E), location(A, F) )
%   | | then if ( enzyme(D, C), complex(A, G) )
%   | | | then return -0.22152731780037688;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.03977421008035694;  // std dev = 3.126, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.46123903896831936;  // std dev = 1.344, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.19335929828161913;  // std dev = 0.084, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.5775663210683845;  // std dev = 0.139, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( complex(A, J), interaction(K, A) )
%   | | then return 0.030716793893934738;  // std dev = 0.357, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.029342171533111253;  // std dev = 1.468, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.17529708441254443;  // std dev = 4.520, 98.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=39 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4482979386921563;  // std dev = 0.149, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( phenotype(D, F) )
%   | | | then return 0.003902771218890991;  // std dev = 2.008, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.10075146351727855;  // std dev = 1.686, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( complex(D, G), complex(A, G) )
%   | | | then return -0.16434266626037314;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.01302747686851824;  // std dev = 1.050, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5585873550365332;  // std dev = 0.970, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.07177302052221103;  // std dev = 3.724, 88.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=27 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.28985396765577;  // std dev = 0.882, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.049000865488747034;  // std dev = 4.369, 106.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=29 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(A, A) )
%   | | then return 0.22243474127866603;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.02904165029376708;  // std dev = 0.470, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.44096367883195436;  // std dev = 0.120, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), phenotype(F, G) )
%   | | then return 0.07356177773288815;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.42616378216241557;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3202280408822758;  // std dev = 3.786, 82.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=52 */
%   | | | else return -0.1849776338532734;  // std dev = 0.308, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( complex(A, K), location(A, L) )
%   | | | then return -0.0704418670130353;  // std dev = 1.834, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | | else return 0.04768400652557501;  // std dev = 3.812, 82.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=23 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4673984123068143;  // std dev = 0.207, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.19032329015463864;  // std dev = 0.103, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), interaction(E, G) )
%   | | then if ( recursion_proteinclass(G, B), interaction(A, H) )
%   | | | then return 0.4369931223665849;  // std dev = 0.436, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.01694153925953518;  // std dev = 2.378, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | else return -0.03097708171496361;  // std dev = 0.316, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( complex(I, K), phenotype(I, L) )
%   | | | then return 0.07804813693882338;  // std dev = 1.703, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return -0.028864775006091394;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return -0.0024473183708736386;  // std dev = 0.852, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.17562396472461578;  // std dev = 3.169, 51.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | then return 0.34472147541199055;  // std dev = 0.245, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | else if ( interaction(A, C) )
%   | | then return -0.14008421376306088;  // std dev = 0.055, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( interaction(D, A), interaction(E, D) )
%   | | | then return 0.0016039406085798706;  // std dev = 2.581, 83.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=26 */
%   | | | else return 0.05628691034035066;  // std dev = 4.247, 112.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=40 */
%   else if ( complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.49010551501289534;  // std dev = 0.300, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.14670676363518792;  // std dev = 0.057, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( enzyme(A, H) )
%   | | then return 0.22778938272738125;  // std dev = 1.095, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( location(A, I) )
%   | | | then return -0.029731118921928146;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.21197069194693555;  // std dev = 0.801, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.12076933840418445;  // std dev = 0.114, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.2509266573816012;  // std dev = 0.149, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.34748754335619103;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0.23717454163148277;  // std dev = 0.111, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.030686255111016563;  // std dev = 0.434, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( location(A, H), interaction(I, A) )
%   | | then if ( enzyme(I, J), interaction(K, I) )
%   | | | then return 0.03219203489313224;  // std dev = 2.908, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
%   | | | else return -0.010444621524596538;  // std dev = 4.470, 167.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=45 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.24972272118661396;  // std dev = 1.207, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.01195688274235896;  // std dev = 1.621, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), enzyme(F, C) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.1137158908555631;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.028240834309007035;  // std dev = 0.926, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.4530789098539132;  // std dev = 0.203, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else return -0.20395251552828586;  // std dev = 0.076, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.16687338092602566;  // std dev = 0.080, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.306395696420782;  // std dev = 0.876, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return -0.026380342564908024;  // std dev = 2.254, 63.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=10 */
%   | | else if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.030328451418868595;  // std dev = 2.578, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | | else return -0.032581678982068825;  // std dev = 2.884, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '19.310', 'seconds']
Refined model CLL: -0.227199


******************************************
Best model found
******************************************
Results 

CLL : -0.221942 

AUC ROC : 0.960574 

AUC PR : 0.374575 

Precision : 0.339196 

Recall : 0.509434 

F1 : 0.40724 

Total Learning Time : 10.709 

Total Inference Time : 8.823866605758667 

Total revision time: 22.770336402893065
Best scored revision CLL: -0.227199


Results 

CLL : -0.221942 

AUC ROC : 0.960574 

AUC PR : 0.374575 

Precision : 0.339196 

Recall : 0.509434 

F1 : 0.40724 

Total Learning Time : 22.799747480392455 

Total Inference Time : 8.823866605758667 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.305
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17870642638871098;  // std dev = 7.906, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.19011363908200932;  // std dev = 4.950, 107.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=38 */
%   | | | else return 0.21259582978850136;  // std dev = 5.797, 143.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16331858461247392;  // std dev = 5.315, 123.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=44 */
%   | | | else return 0.15002527204816135;  // std dev = 5.605, 139.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.10914354976936742;  // std dev = 4.014, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
%   | | | else return 0.1089389623370662;  // std dev = 6.750, 206.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09339702159744119;  // std dev = 7.831, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.085938928367897;  // std dev = 7.772, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.724965593774197;  // std dev = 0.015, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2748282887856079;  // std dev = 0.022, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.1185452404238042;  // std dev = 2.925, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.052121809656189;  // std dev = 4.784, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05052085877932265;  // std dev = 4.210, 125.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=44 */
%   | | | else return 0.03386415337166279;  // std dev = 5.707, 149.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.025190954681982302;  // std dev = 7.104, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03139926878874973;  // std dev = 7.032, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.357', 'seconds']
Parameter learned model CLL:-0.329472 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.906, 195, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.95, 69, 38], 'false,false,false,false': [5.797, 89, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.315, 79, 44], 'false,false,false,false': [5.605, 91, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.014, 49, 24], 'false,false,false,false': [6.75, 138, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.831, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.772, 176, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.015, 0, 44], 'true,false': [0.022, 98, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.925, 22, 14], 'false,false,false,false': [4.784, 70, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.21, 81, 44], 'false,false,false,false': [5.707, 101, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.104, 193, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.032, 182, 92]}]
{'': [nan, 0.21780038606757518], 'false': [nan, 0.2178003860675749], 'false,false': [nan, 0.21780038606757518], 'false,false,false': [nan, 0.2178003860675749]}
{'': [nan, 0.2325759999999988], 'false': [nan, 0.23257600000000006], 'false,false': [nan, 0.2325759999999988], 'false,false,false': [0.22901563455323662, 0.2350237175411995]}
{'': [nan, 0.22777173708480256], 'false': [nan, 0.22777173708480256], 'false,false': [nan, 0.2277717370848021], 'false,false,false': [0.2296803087911101, 0.22599989679734125]}
{'': [nan, 0.22105269633205507], 'false': [nan, 0.22105269633205507], 'false,false': [nan, 0.22105269633205493], 'false,false,false': [0.22067930193282043, 0.22118500475496733]}
{'': [nan, 0.22217131760356246], 'false': [nan, 0.22217131760356246], 'false,false': [nan, 0.2221713176035634], 'false,false,false': [nan, 0.2221713176035634]}
{'': [nan, 0.2253615697544576], 'false': [nan, 0.2253615697544576], 'false,false': [nan, 0.22536156975445792], 'false,false,false': [nan, 0.2253615697544574]}
{'': [0.21376312260576638, 0.22541544539653252], 'false': [nan, 0.22541544539653252], 'false,false': [nan, 0.22541544539653252], 'false,false,false': [0.23765432098765438, 0.22004437869822596], 'true': [4.896242033632219e-06, 4.7704882120589615e-06], 'true,true': [nan, 4.896242033632219e-06], 'true,true,false': [nan, 4.896242033632219e-06]}
{'': [nan, 0.1836376579217324], 'false': [nan, 0.1836376579217324], 'false,false': [nan, 0.1836376579217322], 'false,false,false': [0.1418077264325385, 0.2186033103203828]}
{'': [nan, 0.17706738934424643], 'false': [nan, 0.17706738934424632], 'false,false': [nan, 0.17706738934424632], 'false,false,false': [nan, 0.17706738934424632]}
{'': [nan, 0.1804732257227059], 'false': [nan, 0.1804732257227059], 'false,false': [nan, 0.1804732257227061], 'false,false,false': [nan, 0.1804732257227061]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.311
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(F, A), interaction(A, F) )
%   | | then if ( phenotype(F, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.058148935099512224;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( interaction(H, A), location(H, I) )
%   | | | then return 0.13401100406502958;  // std dev = 5.896, 174.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=48 */
%   | | | else return 0.2081489350995121;  // std dev = 3.695, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.728352773263003;  // std dev = 0.081, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(F, A), interaction(F, D) )
%   | | then if ( interaction(A, F) )
%   | | | then return -0.1275931229791236;  // std dev = 0.023, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.05156663302776041;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( interaction(D, G), interaction(H, A) )
%   | | | then return 0.20052559575831114;  // std dev = 2.367, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.0846912013532242;  // std dev = 3.115, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8386203311260696;  // std dev = 0.020, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.16094510543332485;  // std dev = 0.030, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.1645697290029926;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.13268079098633545;  // std dev = 3.632, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.5692182396600531;  // std dev = 0.101, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.5539438832556866;  // std dev = 0.800, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7676418793627862;  // std dev = 0.356, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else return -0.15892984381600053;  // std dev = 0.213, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.43552614573343407;  // std dev = 0.860, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6450908817241863;  // std dev = 1.276, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.16872043860572225;  // std dev = 0.114, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.0702475648742934;  // std dev = 3.452, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | | | else return 0.17216830684691067;  // std dev = 2.768, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4424912435677636;  // std dev = 0.148, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(D, F), interaction(G, E) )
%   | | then if ( complex(D, H), phenotype(D, I) )
%   | | | then return 0.05793917987219071;  // std dev = 1.451, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.13345715566258737;  // std dev = 0.065, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1133754824694202;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.09792816106070036;  // std dev = 4.273, 125.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=39 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, J) )
%   | | | then return 0.12542786023440905;  // std dev = 1.788, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.3254509028523595;  // std dev = 1.701, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.19326861978698798;  // std dev = 1.886, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.0617229814882109;  // std dev = 2.686, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.395508706464788;  // std dev = 0.096, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( phenotype(A, F), enzyme(D, E) )
%   | | then if ( phenotype(D, F) )
%   | | | then return -0.1549210358334651;  // std dev = 0.105, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.03776145012644772;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, G), complex(G, H) )
%   | | | then return 0.21794498870383752;  // std dev = 1.781, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.08441592352460389;  // std dev = 1.535, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, I) )
%   | | | then return 0.041974460463733515;  // std dev = 1.045, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.022835399190920237;  // std dev = 1.462, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.10690423063062061;  // std dev = 3.061, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
%   | | | else return 0.04841761401257662;  // std dev = 4.269, 116.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=32 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.31689184697911876;  // std dev = 0.234, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(C, F), complex(F, D) )
%   | | then return -0.09305464403645597;  // std dev = 0.241, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | else if ( phenotype(C, G), interaction(H, A) )
%   | | | then return 0.20072063992888567;  // std dev = 1.227, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.009556884674816753;  // std dev = 1.587, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.3526045357912936;  // std dev = 0.193, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(J, A), interaction(A, K) )
%   | | then if ( complex(J, L), phenotype(J, M) )
%   | | | then return 0.098716742520428;  // std dev = 1.320, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.0697071848278918;  // std dev = 1.270, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.1392232261815352;  // std dev = 2.252, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | | | else return 0.0889221699006259;  // std dev = 4.560, 111.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.23182648646547283;  // std dev = 0.059, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.5277463227286371;  // std dev = 0.110, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.1770341207313698;  // std dev = 0.312, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.2631778284396029;  // std dev = 0.724, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.7124579707687997;  // std dev = 0.243, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.22092535510175346;  // std dev = 0.068, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then return 0.33570227010485354;  // std dev = 0.968, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, L), interaction(A, M) )
%   | | | then return 0.24365079324271774;  // std dev = 0.835, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.11613062986155165;  // std dev = 3.512, 68.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(A, D) )
%   | | then if ( enzyme(E, F), phenotype(E, G) )
%   | | | then return -0.16762899506558546;  // std dev = 0.776, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.17894003495294597;  // std dev = 0.082, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3713177328244181;  // std dev = 0.182, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.14956285475395983;  // std dev = 0.246, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.23955762479064638;  // std dev = 0.171, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( phenotype(J, K), location(A, L) )
%   | | | then return 0.05175685011316612;  // std dev = 2.581, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return -0.043917872137148206;  // std dev = 1.560, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( phenotype(A, M), interaction(A, N) )
%   | | | then return 0.02877851960024685;  // std dev = 1.850, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.12354279595550742;  // std dev = 2.722, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.19859445252068075;  // std dev = 0.070, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.3477243811196367;  // std dev = 0.073, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return -0.13154460263313583;  // std dev = 0.260, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, F), phenotype(I, J) )
%   | | | then return 0.5607658135245921;  // std dev = 0.209, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.4076299369335855;  // std dev = 0.138, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.2020054660832205;  // std dev = 0.144, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.22381525834044155;  // std dev = 0.196, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.0395402271152285;  // std dev = 2.106, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.04079828460494926;  // std dev = 3.378, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.1219465006468511;  // std dev = 0.059, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.20520429742518767;  // std dev = 0.140, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.19797135090149948;  // std dev = 0.561, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return 0.3856570223451624;  // std dev = 0.738, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.13557106140008005;  // std dev = 0.053, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( complex(H, J) )
%   | | | then return 0.02250030460668898;  // std dev = 1.372, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return -0.03790313302850327;  // std dev = 2.153, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.028298177308952958;  // std dev = 1.811, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.04908244048352209;  // std dev = 2.713, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.099', 'seconds']
Refined model CLL: -0.197022


******************************************
Best model found
******************************************
Results 

CLL : -0.19218 

AUC ROC : 0.979522 

AUC PR : 0.342542 

Precision : 0.25537 

Recall : 0.772563 

F1 : 0.383857 

Total Learning Time : 6.311 

Total Inference Time : 2.609104871749878 

Total revision time: 11.998349252700805
Best scored revision CLL: -0.197022


Results 

CLL : -0.19218 

AUC ROC : 0.979522 

AUC PR : 0.342542 

Precision : 0.25537 

Recall : 0.772563 

F1 : 0.383857 

Total Learning Time : 12.027760330200195 

Total Inference Time : 2.609104871749878 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.181
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19277928529406538;  // std dev = 7.565, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1624369262773064;  // std dev = 4.333, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   | | | else return 0.20721870995852343;  // std dev = 6.025, 155.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1261182741665339;  // std dev = 4.359, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | | | else return 0.11612274613292277;  // std dev = 6.320, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.16395959719034803;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.1296539738906592;  // std dev = 7.102, 223.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=77 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07443320948304458;  // std dev = 7.688, 275.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10164577761697269;  // std dev = 7.456, 243.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7254209098542964;  // std dev = 0.005, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2746591717176783;  // std dev = 0.007, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.017704191589647842;  // std dev = 3.783, 77.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=19 */
%   | | | else return 0.07495453217896933;  // std dev = 5.042, 112.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04451126228632247;  // std dev = 3.369, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
%   | | | else return 0.09131614099633634;  // std dev = 6.037, 157.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03534788593867202;  // std dev = 7.067, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05399123844683999;  // std dev = 6.923, 235.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.499', 'seconds']
Parameter learned model CLL:-0.355617 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.565, 171, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.333, 57, 28], 'false,false,false,false': [6.025, 97, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.359, 59, 28], 'false,false,false,false': [6.32, 128, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.372, 15, 9], 'false,false,false,false': [7.102, 146, 77]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.688, 189, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.456, 157, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.005, 0, 28], 'true,false': [0.007, 53, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.783, 58, 19], 'false,false,false,false': [5.042, 73, 39]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.369, 54, 28], 'false,false,false,false': [6.037, 99, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.067, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.923, 149, 86]}]
{'': [nan, 0.22265287892322444], 'false': [nan, 0.22265287892322422], 'false,false': [nan, 0.22265287892322444], 'false,false,false': [nan, 0.22265287892322422]}
{'': [nan, 0.2299305555555541], 'false': [nan, 0.22993055555555492], 'false,false': [nan, 0.2299305555555541], 'false,false,false': [0.22089965397924013, 0.23417273673256858]}
{'': [nan, 0.21590346953841727], 'false': [nan, 0.21590346953841727], 'false,false': [nan, 0.21590346953841769], 'false,false,false': [0.21837086218622007, 0.2147175268901376]}
{'': [nan, 0.2270984365566584], 'false': [nan, 0.2270984365566584], 'false,false': [nan, 0.22709843655665785], 'false,false,false': [0.23437500000000003, 0.22620095634896212]}
{'': [nan, 0.21491897574303157], 'false': [nan, 0.21491897574303157], 'false,false': [nan, 0.21491897574303173], 'false,false,false': [nan, 0.21491897574303173]}
{'': [nan, 0.2287848967235599], 'false': [nan, 0.2287848967235599], 'false,false': [nan, 0.22878489672355967], 'false,false,false': [nan, 0.22878489672355948]}
{'': [0.22622216563243266, 0.2122914851886847], 'true': [9.48120020652762e-07, 8.82076772948329e-07], 'false': [nan, 0.2122914851886847], 'false,false': [nan, 0.2122914851886847], 'false,false,false': [0.1858660819699781, 0.22696109693877473], 'true,true': [nan, 9.48120020652762e-07], 'true,true,false': [nan, 9.48120020652762e-07]}
{'': [nan, 0.20049201179863177], 'false': [nan, 0.20049201179863177], 'false,false': [nan, 0.20049201179863194], 'false,false,false': [0.1384366065811791, 0.23215149538225868]}
{'': [nan, 0.19510942467420425], 'false': [nan, 0.19510942467420367], 'false,false': [nan, 0.19510942467420367], 'false,false,false': [nan, 0.19510942467420367]}
{'': [nan, 0.2039325554090066], 'false': [nan, 0.2039325554090066], 'false,false': [nan, 0.20393255540900612], 'false,false,false': [nan, 0.20393255540900612]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 10.916
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(A, D) )
%   | | then if ( interaction(E, A), phenotype(E, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.054870246574922205;  // std dev = 3.105, 61.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=12 */
%   | | | else return 0.20251979602666362;  // std dev = 5.839, 151.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( phenotype(C, D) )
%   | then return 0.05588457802749203;  // std dev = 0.389, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.28495366574857295;  // std dev = 1.615, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.030688489083769532;  // std dev = 1.228, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   else if ( interaction(G, A), interaction(G, G) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.8316659141890864;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.16833408581091355;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5717620920477201;  // std dev = 0.939, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.17538562300956376;  // std dev = 5.315, 128.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=44 */
%   | | | else return 0.3048897654645854;  // std dev = 1.929, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( phenotype(D, E) )
%   | | then return 0.7080570962615799;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5553664367462843;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7144892878539763;  // std dev = 0.078, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( phenotype(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), phenotype(I, F) )
%   | | | then return 0.731384728648141;  // std dev = 0.199, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.8050501589790777;  // std dev = 0.036, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.18842911015255662;  // std dev = 0.077, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12493657438795784;  // std dev = 0.018, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.17522368265421293;  // std dev = 3.430, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | | else return 0.07123237355912251;  // std dev = 4.784, 127.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=34 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4964879083513801;  // std dev = 0.069, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(E, A), interaction(A, F) )
%   | | then if ( interaction(F, F) )
%   | | | then return -0.11544675155892097;  // std dev = 0.018, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.009020469842458892;  // std dev = 1.624, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( phenotype(E, G), complex(D, H) )
%   | | | then return 0.15937068010497385;  // std dev = 3.064, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | | else return 0.05152480827241907;  // std dev = 3.333, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | else if ( interaction(I, A), complex(A, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4848654533976917;  // std dev = 0.816, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.20941152468533786;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( location(A, L) )
%   | | | then return 0.1796772749799159;  // std dev = 3.682, 64.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=26 */
%   | | | else return 0.44629182115304705;  // std dev = 0.826, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.6490744087519129;  // std dev = 0.104, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.18973665704204856;  // std dev = 0.030, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(F, H) )
%   | | | then return 0.5536828490900183;  // std dev = 0.657, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.19634454799951506;  // std dev = 0.480, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.140806521870708;  // std dev = 0.349, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0.038091269108894224;  // std dev = 5.159, 162.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=46 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5945067471017744;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.31566054800762666;  // std dev = 0.645, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.07541214336231122;  // std dev = 2.496, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.5378992474409076;  // std dev = 0.133, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.20281254212682093;  // std dev = 0.063, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.26822945513910607;  // std dev = 0.082, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.5967245931899327;  // std dev = 0.353, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( enzyme(G, H), phenotype(G, I) )
%   | | | then return -0.12761560789376805;  // std dev = 1.164, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | | else return 0.01934783605883042;  // std dev = 2.966, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then return 0.5397109955209135;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.11045329697172389;  // std dev = 3.425, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   | | | else return -0.08188892267946342;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, F) )
%   | | then if ( interaction(F, E), complex(E, G) )
%   | | | then return 0.21463184981443512;  // std dev = 0.522, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.46688864277337994;  // std dev = 0.357, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5810944193819316;  // std dev = 0.167, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.18764552310630744;  // std dev = 0.064, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J), phenotype(I, J) )
%   | | | then return 0.48987121286233193;  // std dev = 1.568, 39.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=36 */
%   | | | else return 0.2127255293069294;  // std dev = 2.420, 37.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   | | else return -0.20726341225879946;  // std dev = 0.065, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(A, K) )
%   | | then return -0.14732075790518698;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.013823608481861519;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(G, A) )
%   | | then return 0.21289939708167555;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.4773115005807962;  // std dev = 0.166, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.1790307636936824;  // std dev = 0.066, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( interaction(H, A), interaction(A, H) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.16440546480011328;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.03939429211054424;  // std dev = 0.168, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3900472363168446;  // std dev = 1.567, 34.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   | | | else return -0.19314172814079517;  // std dev = 0.432, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.14853788764326442;  // std dev = 2.136, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return 0.03998646519294737;  // std dev = 2.229, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.16309931729610902;  // std dev = 0.184, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.42743748762466083;  // std dev = 1.080, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.161438641925374;  // std dev = 0.470, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0.20563510264654083;  // std dev = 1.639, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then return -0.08157889822335666;  // std dev = 0.032, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.1739514476540472;  // std dev = 0.050, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( enzyme(A, H) )
%   | then return 0.0344905202406063;  // std dev = 0.435, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return -0.12467489769187663;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.08132115151581076;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.13856504789666715;  // std dev = 0.082, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( complex(A, D), complex(C, D) )
%   | | then return -0.04258595121510298;  // std dev = 0.173, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( interaction(E, A), interaction(A, E) )
%   | | | then return -0.047197819429416143;  // std dev = 0.390, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.09989403079250778;  // std dev = 1.409, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.17568470946969253;  // std dev = 0.145, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( phenotype(H, I) )
%   | | | then return -0.023837130639384026;  // std dev = 2.888, 120.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=37 */
%   | | | else return -0.12561888684573633;  // std dev = 0.809, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.06449070695364457;  // std dev = 0.918, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.05017730399676071;  // std dev = 1.945, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '14.234', 'seconds']
Refined model CLL: -0.18744


******************************************
Best model found
******************************************
Results 

CLL : -0.199332 

AUC ROC : 0.988858 

AUC PR : 0.428929 

Precision : 0.318713 

Recall : 0.770318 

F1 : 0.450879 

Total Learning Time : 10.916 

Total Inference Time : 8.328725814819336 

Total revision time: 22.22555672836304
Best scored revision CLL: -0.18744


Results 

CLL : -0.199332 

AUC ROC : 0.988858 

AUC PR : 0.428929 

Precision : 0.318713 

Recall : 0.770318 

F1 : 0.450879 

Total Learning Time : 22.254967805862428 

Total Inference Time : 8.328725814819336 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.293
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11199508894566487;  // std dev = 4.962, 130.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=33 */
%   | | | else return 0.14847151574467238;  // std dev = 5.055, 124.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.039967116917694;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7353395955528769;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6534945559245632;  // std dev = 3.598, 85.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=69 */
%   | | | else return -0.15826776560308284;  // std dev = 0.029, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.1668936958309223;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.003929078618301869;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5600181218188023;  // std dev = 0.056, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5919392378865646;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07688589615885165;  // std dev = 4.433, 135.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6748947880442956;  // std dev = 1.382, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.1406627525844174;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1981799104640057;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.14382403976486938;  // std dev = 1.301, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.43558501554170315;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2762392564689968;  // std dev = 0.943, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.646475474452674;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.07020179230405256;  // std dev = 4.961, 209.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5196283109497593;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.032360597692170034;  // std dev = 1.496, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.16814748338490768;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.2146215614462127;  // std dev = 0.928, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16793028750061523;  // std dev = 0.854, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.09683918505560254;  // std dev = 5.243, 216.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39148492004201507;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.15848965675720592;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.028292549341090895;  // std dev = 1.250, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2786029264353249;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.349268417743189;  // std dev = 0.168, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.30061574233257904;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3031041245666958;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return 0.017301176461284682;  // std dev = 2.165, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.33750592607177543;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.056301454807786505;  // std dev = 2.939, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | | else return 0.06256833353527871;  // std dev = 4.182, 137.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25275618874087974;  // std dev = 0.171, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2431173923943174;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5583837008800414;  // std dev = 0.976, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.18346982687244842;  // std dev = 0.526, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.26666812573785803;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07404044762093188;  // std dev = 3.911, 124.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.18695103257210446;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.09303318816694615;  // std dev = 0.912, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.37638722803986463;  // std dev = 2.916, 82.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=71 */
%   | | else return -0.15511304594311365;  // std dev = 0.230, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.20120482614650093;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.1410866962293711;  // std dev = 1.290, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18289997176536066;  // std dev = 0.097, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16839635324373178;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.053663408562514066;  // std dev = 1.646, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.09261635921537936;  // std dev = 0.588, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.01891449071210735;  // std dev = 1.661, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.19018710797799387;  // std dev = 1.075, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.023015907438393837;  // std dev = 3.564, 129.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=40 */
%   | | | else return -0.0026715887785772768;  // std dev = 1.448, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.031092771809020203;  // std dev = 0.862, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.23453816594371446;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0028529909636930695;  // std dev = 0.496, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return 0.005653729994727262;  // std dev = 2.285, 95.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.23488070402262964;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.015691994196331185;  // std dev = 3.840, 147.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=40 */
%   | | | else return 0.09197040477988352;  // std dev = 1.335, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.925', 'seconds']
Parameter learned model CLL:-0.196561 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.962, 97, 33], 'false,false,true,false': [5.055, 88, 36], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.279, 9, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.067, 0, 9], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [3.598, 16, 69], 'false,false,true,false': [0.029, 144, 0], 'false,false,false,true': [1.415, 6, 3], 'false,false,false,false': [0.926, 6, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.056, 0, 8], 'true,false': [0.05, 0, 3], 'false,true,true': [4.433, 101, 34], 'false,true,false,true': [1.382, 2, 37], 'false,true,false,false': [0.0, 71, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.095, 3, 2], 'false,false,false,true': [1.301, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.064, 0, 5], 'true,false': [0.943, 1, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.966, 1, 14], 'false,true,false': [4.961, 152, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.496, 9, 3], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.928, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.854, 1, 4], 'false,true': [5.243, 145, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.25, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.025, 0, 4], 'true,true,false': [0.168, 0, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [2.165, 34, 12], 'false,false,true': [0.027, 0, 3], 'false,false,false,true': [2.939, 48, 20], 'false,false,false,false': [4.182, 96, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.171, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.976, 1, 33], 'true,false': [0.526, 100, 0], 'false,true': [0.024, 0, 3], 'false,false,true': [3.911, 84, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.018, 0, 3], 'true,false': [0.912, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.916, 11, 71], 'false,true,false': [0.23, 140, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.29, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.097, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.003, 0, 3], 'false,true,true': [1.646, 34, 11], 'false,true,false,true': [0.588, 1, 1], 'false,true,false,false': [1.661, 38, 17], 'false,false,true': [1.075, 2, 3], 'false,false,false,true': [3.564, 89, 40], 'false,false,false,false': [1.448, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.862, 1, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.496, 1, 3], 'false,true': [2.285, 66, 29], 'false,false,true': [0.022, 0, 3], 'false,false,false,true': [3.84, 107, 40], 'false,false,false,false': [1.335, 6, 4]}]
{'': [0.07638888888888877, 0.20088824484428908], 'false': [1.4802973661668753e-16, 0.1972702331961604], 'false,false': [0.1978578957157918, 0.18749999999999983], 'false,false,true': [0.18940828402366988, 0.20603537981269623], 'false,false,false': [0.24000000000000005, 0.14876033057851243], 'true': [-2.220446049250313e-16, 0.18750000000000006], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0]}
{'': [0.00044937956321756576, 0.21039178076951012], 'false': [0.0, 0.2089020894372742], 'false,false': [0.21034285397242772, 0.18586118233655938], 'false,false,true': [0.15231179946045145, 5.873752134979673e-06], 'false,false,false': [0.2224153506029866, 0.12244897959183669], 'true': [0.0, 0.0005034715476789723], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.0007104641423471104, 0.1604418835061525], 'false': [0.15761012159827406, 0.20721862082549605], 'false,false': [0.24, 0.1879515432636626], 'false,false,true': [nan, 0.24], 'false,false,false': [0.1879515432636626, nan], 'false,true': [0.1455635355389173, 0.1695694472237851], 'false,true,false': [0.04895897033994482, -2.189172161232703e-17], 'true': [0.00039153379682199674, 0.0008198849539215273]}
{'': [0.08054179597460052, 0.1389405775409961], 'false': [0.13478313344960804, 0.1967519230555814], 'false,false': [0.0, 0.19663737283822988], 'false,false,false': [0.18655354482700529, 0.22222222222222224], 'false,true': [0.06221955844485514, 0.117752785035499], 'true': [0.0008215940443140113, 0.12690518446401947], 'false,true,true': [nan, 0.06221955844485514], 'false,false,true': [nan, 0.0]}
{'': [0.12285793149249041, 0.13159365120320085], 'false': [0.1272609995866771, 0.1939830174170393], 'false,false': [0.0, 0.2011526330999239], 'false,false,false': [0.24, 0.17351673160719486], 'true': [0.10757779677708776, 0.1459645623831884], 'true,true': [0.10757779677708776, nan], 'false,false,true': [nan, 0.0]}
{'': [0.0036719786135829976, 0.12256269432486876], 'false': [0.10186578156076076, 0.12673670573746437], 'false,false': [0.0002397586660318196, 0.12748108156036728], 'false,false,false': [0.12705796185702892, 0.1276780697829995], 'true': [0.004441075098640902, 1.5480115357624502e-06], 'true,true': [0.00016152917706235836, 0.005645328875111777], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}
{'': [0.10927297370108979, 0.12127158482175733], 'false': [0.00018443319558990776, 0.12332460664328575], 'false,false': [0.12332460664328575, nan], 'true': [0.03918972009540802, 0.002770256984973427], 'true,true': [0.0026772054998967054, 0.028038366982969746], 'true,true,false': [nan, 0.02803836698296938], 'true,true,true': [0.0029364800139763505, 0.0]}
{'': [0.07097528492026178, 0.10705569663928774], 'false': [0.10433054597896997, 0.1514805211100877], 'false,false': [0.0, 0.16630001053521165], 'false,false,false': [0.16630001053521165, nan], 'false,true': [0.1036629432978703, 0.0003774785956320605], 'false,true,true': [nan, 0.10366294329787024], 'true': [0.00010871006735393059, 0.09239233616346984], 'false,false,true': [0.0, nan]}
{'': [0.0008905471984352219, 0.08873679094644481], 'false': [0.05839469101151093, 0.10931275194383241], 'false,false': [0.2313375368333776, 0.1035465058394507], 'false,false,false': [0.09847153146944834, 0.14971352266624788], 'false,true': [0.06017967800915314, 0.054905423755887396], 'false,true,false': [0.173147547692783, 0.05016924943939097], 'true': [0.0011657657748812, 3.645576236832593e-06], 'true,false': [nan, 3.645576236832593e-06]}
{'': [0.07953244778651442, 0.08640482693310984], 'false': [0.05493740730820378, 0.10505195657700277], 'false,false': [0.00015614875268498327, 0.1059426392815678], 'false,false,false': [0.10029631217357626, 0.17809074810957137], 'true': [0.08671965454043831, 0.061571481380009827], 'true,true': [0.08671965454043831, nan], 'true,true,true': [0.09296071931414632, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 5.764
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.724815601766179;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.041851064900487685;  // std dev = 2.683, 80.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=8 */
%   | | else if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.26723984419042146;  // std dev = 3.261, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | | else return 0.1563945491345987;  // std dev = 4.885, 114.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return 0.31947341221095443;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.7194734122109544;  // std dev = 3.65e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H), complex(G, H) )
%   | | then return 0.7763394517212514;  // std dev = 0.080, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.1286281315580171;  // std dev = 0.724, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7386162122098595;  // std dev = 2.374, 75.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=69 */
%   | | | else return -0.15870526803401738;  // std dev = 0.206, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.10059620871810002;  // std dev = 0.881, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.34640578410415834;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4760528851296874;  // std dev = 0.294, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5871639962407985;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.005499036610188099;  // std dev = 1.649, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.09898223923903374;  // std dev = 3.671, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6336080850182864;  // std dev = 1.669, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14210679055111405;  // std dev = 0.102, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7485968937479064;  // std dev = 0.244, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.18253892636638278;  // std dev = 0.088, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.11869664764635941;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.44587224959151206;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3328724182893521;  // std dev = 0.329, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.11972285173872672;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.003981189383483619;  // std dev = 2.059, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.0995415719773923;  // std dev = 4.786, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
%   | | | else return 0.06121685068649262;  // std dev = 1.235, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.35822298005666464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.288306494120363;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0699884019558053;  // std dev = 1.059, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.3802321497965516;  // std dev = 0.047, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.08235540637376768;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( phenotype(A, G), complex(A, H) )
%   | | | then return -0.0268765356255287;  // std dev = 1.801, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.04700463312167729;  // std dev = 2.422, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return 0.020407461101463385;  // std dev = 1.707, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.07645357503827266;  // std dev = 4.104, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return -0.14379794846067134;  // std dev = 0.600, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.01235215313912058;  // std dev = 1.263, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.11217429263013082;  // std dev = 0.927, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.35897649856021124;  // std dev = 0.123, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2930405801653176;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return -0.26532070656743995;  // std dev = 0.530, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11740997875004851;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.13884560644204505;  // std dev = 1.289, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.03991955572604097;  // std dev = 1.522, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.3062383276919582;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.12009231795733809;  // std dev = 2.298, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.028341172916851932;  // std dev = 4.439, 183.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2793770019693254;  // std dev = 0.347, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2515145559703045;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5617547851299924;  // std dev = 0.068, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.15612735986913606;  // std dev = 0.048, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.24530044187362512;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( complex(A, H), phenotype(A, I) )
%   | | | then return -0.16761670048491503;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.04026906932344299;  // std dev = 3.015, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.07450526161315137;  // std dev = 2.418, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | | else return 0.12382716715522046;  // std dev = 0.735, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1782622861381233;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, E), location(A, F) )
%   | | then return -0.06408467681403171;  // std dev = 0.840, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2017076792138089;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( location(A, I) )
%   | | | then return 0.3655523028739882;  // std dev = 2.869, 79.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=68 */
%   | | | else return 0.17666933837972762;  // std dev = 0.706, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.14888710544183;  // std dev = 0.038, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.2071706015367092;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.230843530982289;  // std dev = 0.718, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.004169668549507777;  // std dev = 0.738, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19399318208349098;  // std dev = 0.079, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.046892431729398054;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( location(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( location(F, E), location(G, E) )
%   | | | then return 0.3156006242251621;  // std dev = 0.295, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.05207092334914987;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.13394882306940742;  // std dev = 0.581, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.028726032229300886;  // std dev = 3.673, 167.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=55 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(I, I) )
%   | | | then return -0.049632624829282476;  // std dev = 0.793, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.040760751649050686;  // std dev = 0.531, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.05826083060369128;  // std dev = 0.260, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.14095747261984803;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.06712744899275658;  // std dev = 0.583, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.08919246660272107;  // std dev = 0.427, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.29786891154652134;  // std dev = 0.218, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.099499040086108;  // std dev = 0.077, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.020895277378395593;  // std dev = 0.196, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.0699214923286334;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(L, A), complex(A, M) )
%   | | | then return -0.015717435206871445;  // std dev = 2.188, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return 0.05147175864935947;  // std dev = 2.796, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.353', 'seconds']
Refined model CLL: -0.189218


******************************************
Best model found
******************************************
Results 

CLL : -0.184689 

AUC ROC : 0.98746 

AUC PR : 0.298722 

Precision : 0.197943 

Recall : 0.819149 

F1 : 0.318841 

Total Learning Time : 5.764 

Total Inference Time : 7.590656280517578 

Total revision time: 21.94587286186218
Best scored revision CLL: -0.189218


Results 

CLL : -0.184689 

AUC ROC : 0.98746 

AUC PR : 0.298722 

Precision : 0.197943 

Recall : 0.819149 

F1 : 0.318841 

Total Learning Time : 21.968096572875975 

Total Inference Time : 7.590656280517578 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.525
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08777856472914089;  // std dev = 4.887, 135.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=31 */
%   | | | else return 0.18423589162125065;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7347337483847239;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7288643883178896;  // std dev = 0.027, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7716035333475302;  // std dev = 0.104, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.4208934929686716;  // std dev = 0.731, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6836767037010492;  // std dev = 3.444, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.15833661528895868;  // std dev = 0.084, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.044467437835755505;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.17780077116908885;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.48185227682703546;  // std dev = 0.951, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5688194142797034;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07469298883935463;  // std dev = 4.404, 135.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.570304163129172;  // std dev = 2.611, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | | else return -0.14503310481581663;  // std dev = 8.94e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8196606846416381;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17010921070502097;  // std dev = 1.500, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.43920862759873264;  // std dev = 0.030, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4379349283690926;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5697968996605474;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6061462874000744;  // std dev = 1.334, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else return 0.025503589356170288;  // std dev = 5.264, 251.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.500034580211929;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return -0.01477466485332578;  // std dev = 1.301, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.16789838416559594;  // std dev = 1.030, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3466137779933088;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.160626349086173;  // std dev = 1.290, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.04666095142704176;  // std dev = 5.934, 298.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.377565048542412;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.013860475315351273;  // std dev = 1.732, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.27642460310746564;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.21703527412680623;  // std dev = 1.129, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.29370313550060556;  // std dev = 1.41e-06, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.06427604410804197;  // std dev = 2.617, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.29261818529225775;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.024841202149730696;  // std dev = 2.384, 57.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
%   | | | else return 0.08888983235790747;  // std dev = 4.606, 158.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.299586105146678;  // std dev = 0.383, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2366445701519706;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.01724767665135421;  // std dev = 0.879, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5209713763807883;  // std dev = 1.124, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.17708527571265703;  // std dev = 0.726, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23547828948260788;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08452991547995546;  // std dev = 4.351, 143.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17369759350638647;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.06809924462173564;  // std dev = 1.323, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40555304560643224;  // std dev = 2.798, 92.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=82 */
%   | | else return -0.14742745208075156;  // std dev = 0.260, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.19657986245607562;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.6971847596007555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.167075204973176;  // std dev = 1.273, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return -8.285563820889889E-4;  // std dev = 1.207, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.16863696530370212;  // std dev = 0.821, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.21488392980408116;  // std dev = 0.117, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.019582708901248615;  // std dev = 1.559, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.11494085175191553;  // std dev = 0.929, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.06323713160467362;  // std dev = 1.546, 73.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.01903032373438564;  // std dev = 0.911, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03539018732005493;  // std dev = 3.892, 145.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=47 */
%   | | | else return 0.07460733917352322;  // std dev = 1.328, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.04314121123848892;  // std dev = 0.877, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.12238111191216182;  // std dev = 0.729, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.2966569475036095;  // std dev = 0.105, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.18473056410442565;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.024983430880520616;  // std dev = 2.430, 123.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1823989542828747;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.032046258060142;  // std dev = 3.766, 149.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=47 */
%   | | | else return -0.015989210098432915;  // std dev = 1.393, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.993', 'seconds']
Parameter learned model CLL:-0.199855 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [1.095, 3, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.887, 104, 31], 'false,false,true,false': [5.507, 93, 45], 'false,false,false,true': [1.732, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.027, 0, 13], 'false,true,true': [0.104, 0, 4], 'false,true,false,true': [0.731, 1, 2], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [3.444, 14, 76], 'false,false,true,false': [0.084, 175, 0], 'false,false,false,true': [1.265, 8, 2], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.951, 1, 11], 'true,false': [0.017, 0, 6], 'false,true,true': [4.404, 101, 34], 'false,true,false,true': [2.611, 8, 48], 'false,true,false,false': [8.94e-08, 94, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.5, 7, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.03, 0, 10], 'true,false': [0.037, 0, 7], 'false,true,true,true': [0.049, 0, 3], 'false,true,true,false': [1.334, 2, 21], 'false,true,false': [5.264, 193, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.301, 9, 2], 'false,false,false,false': [1.03, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.002, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.29, 2, 10], 'false,true': [5.934, 216, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.732, 16, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(J, A)'}, {'true,true,true': [0.019, 0, 5], 'true,true,false': [1.129, 3, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.41e-06, 0, 2], 'false,true': [2.617, 40, 19], 'false,false,true': [0.016, 0, 8], 'false,false,false,true': [2.384, 46, 11], 'false,false,false,false': [4.606, 108, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.383, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.879, 1, 3], 'true,true,false,false': [1.124, 2, 33], 'true,false': [0.726, 117, 0], 'false,true': [0.014, 0, 5], 'false,false,true': [4.351, 96, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.323, 2, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.798, 10, 82], 'false,true,false': [0.26, 193, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [1.273, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [1.207, 3, 9], 'true,false,true': [0.821, 2, 2], 'true,false,false': [0.117, 0, 5], 'false,true,true': [1.559, 37, 13], 'false,true,false,true': [0.929, 2, 8], 'false,true,false,false': [1.546, 62, 11], 'false,false,true': [0.911, 1, 5], 'false,false,false,true': [3.892, 98, 47], 'false,false,false,false': [1.328, 7, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.877, 1, 7], 'true,true,true,false': [0.729, 1, 6], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.105, 2, 0], 'true,false': [0.089, 0, 3], 'false,true': [2.43, 91, 32], 'false,false,true': [0.011, 0, 5], 'false,false,false,true': [3.766, 102, 47], 'false,false,false,false': [1.393, 12, 4]}]
{'': [0.05246913580246885, 0.20630641715417106], 'false': [0.20999999999999988, 0.20018917398019767], 'false,true': [0.24000000000000005, 0.0], 'false,false': [0.20088824484428916, 0.18749999999999983], 'false,false,true': [0.1768998628257899, 0.2197542533081297], 'false,false,false': [0.18749999999999983, nan], 'true': [0.07100591715976314, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [4.8348344665239503e-05, 0.20690572708622457], 'false': [0.09563203982892704, 0.202934826774899], 'false,false': [0.20380412066174214, 0.1875000000000001], 'false,false,true': [0.13181218487538718, 4.070084801791195e-05], 'false,false,false': [0.15999999999999995, 0.22222222222222218], 'false,true': [0.002717549529714036, 0.15044057129485383], 'false,true,false': [0.17829993634945637, 0.0], 'true': [0.0, 5.511902015048902e-05]}
{'': [0.05191832234655072, 0.15875765476715378], 'false': [0.1555646098248142, 0.21968662109196016], 'false,false': [0.21968662109196016, nan], 'false,false,true': [0.0, 0.20449837232588416], 'false,true': [0.1437005448972928, 0.16518101318621567], 'false,true,false': [0.1217791674655162, 8.503835933299071e-17], 'true': [0.07533151004553174, 4.975828411453905e-05]}
{'': [0.0001338145909852706, 0.13737334307276694], 'false': [0.13473191574959312, 0.18031165269706861], 'false,false': [0.0, 0.179256943671824], 'false,false,false': [0.153827008788312, 0.2122613084645156], 'false,true': [0.0686713467993746, 0.11038489433466414], 'false,true,true': [0.0007981546367080335, 0.0773719167114889], 'true': [8.896161569857953e-05, 0.00019693597012625043], 'false,false,true': [nan, 0.0]}
{'': [0.09561633438259595, 0.1203738401455187], 'false': [0.11818120693932527, 0.14984971223938418], 'false,false': [0.0, 0.150046295911957], 'false,false,false': [0.150046295911957, nan], 'true': [6.410914624721542e-07, 0.13864798357538483], 'true,true': [6.410914624721542e-07, nan], 'false,false,true': [nan, 0.0]}
{'': [0.06813008799791082, 0.1230807912487002], 'false': [0.11605180186632577, 0.12493877705220582], 'false,false': [3.1583241587584965e-05, 0.1276241549127595], 'false,false,false': [0.09972995311623291, 0.1342580407130415], 'true': [0.07577647786368062, 9.977296766550126e-13], 'true,true': [7.236381972338667e-05, 0.10628247859863156], 'true,false': [nan, 9.977296766550126e-13]}
{'': [0.100316489598251, 0.12864784122632292], 'false': [3.759079131879783e-05, 0.13237492571025133], 'false,false': [0.13237492571025133, nan], 'true': [0.06463704471521613, 0.004504104780255645], 'true,true': [0.009421358913254685, 0.07887076855432654], 'true,true,false': [0.19332923473617675, 0.036079057498705526], 'true,true,true': [0.00980184720575353, 0.0]}
{'': [0.09401167170077747, 0.09895614227194902], 'false': [0.09455661905125898, 0.20946487219884202], 'false,false': [0.19970379991009757, 0.1799605256142711], 'false,false,true': [0.0, 0.0], 'false,false,false': [0.1799605256142711, nan], 'false,true': [0.08510614396046205, 0.0003511801856794898], 'true': [0.0, 0.11673386949737125], 'false,true,true': [nan, 0.0851061439604618]}
{'': [0.11818679944523514, 0.08169496779227031], 'true': [0.12144350972562455, 0.1126740305533208], 'true,false': [0.16840463249131157, 0.0027169814543614055], 'false': [0.04495253116567481, 0.10959526336993944], 'false,false': [0.13817281240723386, 0.10848257974477214], 'false,false,false': [0.10444230128824458, 0.1603112584233583], 'false,true': [0.04862868316474578, 0.0425529172358784], 'false,true,false': [0.08624619557758663, 0.03274254944196467]}
{'': [0.08252504774968485, 0.07649088463431132], 'true': [0.09329977732351469, 0.002613246930501268], 'true,true': [0.08830847038686723, 0.005475101787039818], 'true,true,true': [0.09613897423037483, 0.07601054347913169], 'false': [0.0480129918039094, 0.09573487067747778], 'false,false': [2.5653453447249675e-05, 0.09792843495116799], 'false,false,false': [0.09519542811093724, 0.1212959034297211], 'true,true,false': [nan, 0.005475101787039818]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 5.486
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.12600607795665522;  // std dev = 3.314, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.14386322081379757;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=22 */
%   | | | else return 0.22883859027192557;  // std dev = 5.202, 116.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.5194734122109544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7505511758931249;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.4068585879990681;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6341190478411363;  // std dev = 3.893, 95.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=76 */
%   | | | else return -0.1643545259153903;  // std dev = 0.132, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.1336125034205054;  // std dev = 1.447, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.04678130040795262;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5730703001287334;  // std dev = 0.023, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3114521397840011;  // std dev = 0.423, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.10931972943620712;  // std dev = 3.123, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.011037915814348542;  // std dev = 3.133, 86.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=16 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5458005273622293;  // std dev = 2.858, 58.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   | | | else return -0.1446325469241691;  // std dev = 0.059, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.3157974819828729;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5130529449089584;  // std dev = 0.802, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.1842025180171271;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4587005163837209;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( complex(A, E) )
%   | | then return -0.19377882184668396;  // std dev = 0.826, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.28879493006570506;  // std dev = 0.332, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5391629172247663;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4730820612847579;  // std dev = 2.177, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | else return 0.0449472319532502;  // std dev = 0.337, 235.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=58 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.42024857420642914;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.15845504954388698;  // std dev = 1.499, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.16306552458108411;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.22378001013106255;  // std dev = 0.332, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.2828837695825832;  // std dev = 0.283, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F), location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.26299291061687097;  // std dev = 2.503, 43.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=26 */
%   | | | else return -0.13857911828620403;  // std dev = 0.106, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.06296728274622951;  // std dev = 2.674, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | | else return 0.14455536581702075;  // std dev = 3.913, 101.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=40 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.32256659752805417;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.13175694087705295;  // std dev = 1.285, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.029941043752605;  // std dev = 0.871, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.2580501455856231;  // std dev = 0.241, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else return 0.29850393382896084;  // std dev = 0.059, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.15716074630963855;  // std dev = 0.203, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.01989817348832956;  // std dev = 2.057, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.014084597851784371;  // std dev = 0.953, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.08689419930527738;  // std dev = 1.526, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.30467743064287955;  // std dev = 0.061, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.0035761512793158613;  // std dev = 2.998, 85.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=18 */
%   | | | else return 0.07662756566430126;  // std dev = 4.137, 130.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=43 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2839779984560397;  // std dev = 0.076, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( complex(A, E), interaction(F, A) )
%   | | | then return 0.30333025112011747;  // std dev = 1.605, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return 0.5902273206366843;  // std dev = 0.285, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1755458336681557;  // std dev = 0.070, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.07637876314066017;  // std dev = 0.943, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( complex(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), interaction(J, K) )
%   | | | then return -0.02620026793872286;  // std dev = 1.268, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.018818085996571046;  // std dev = 0.968, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( location(A, L) )
%   | | | then return 0.06612346934886879;  // std dev = 3.954, 111.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=37 */
%   | | | else return 0.015030754057264428;  // std dev = 1.249, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.2017807949691326;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return -0.13347810203564978;  // std dev = 1.139, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.21984037169989193;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), complex(A, J) )
%   | | | then return 0.27289334970934326;  // std dev = 1.282, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | | else return 0.4320975618253277;  // std dev = 2.516, 71.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=64 */
%   | | else return -0.15714939617839707;  // std dev = 0.058, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.1615080275464743;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.06818652339474586;  // std dev = 1.204, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.10638163228642646;  // std dev = 0.609, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( phenotype(C, D), complex(A, E) )
%   | then if ( phenotype(A, D) )
%   | | then return 0.06976408349854653;  // std dev = 0.202, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return -0.03781993425727083;  // std dev = 0.224, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( interaction(A, C), enzyme(A, F) )
%   | | then return -0.16008087568321186;  // std dev = 0.296, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.101235858008576;  // std dev = 1.131, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.00327300037106887;  // std dev = 1.800, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   else if ( interaction(A, H), interaction(H, H) )
%   | then return -0.01985738299354999;  // std dev = 0.212, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2141374142474912;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.05493703975613378;  // std dev = 2.836, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   | | | else return 0.004917689431527155;  // std dev = 2.688, 90.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=30 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.18851893663264713;  // std dev = 0.041, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.048472969323380376;  // std dev = 0.318, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3326720531018733;  // std dev = 0.338, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.12750485508697126;  // std dev = 0.632, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( location(A, J) )
%   | | | then return -0.037331654282603856;  // std dev = 1.823, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | | else return -0.12362487209586802;  // std dev = 0.582, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.1987609203536572;  // std dev = 0.130, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return -0.0032175650658401956;  // std dev = 3.485, 115.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | else return 0.04766549266965692;  // std dev = 2.119, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '22.877', 'seconds']
Refined model CLL: -0.196086


******************************************
Best model found
******************************************
Results 

CLL : -0.17524 

AUC ROC : 0.990313 

AUC PR : 0.323716 

Precision : 0.24821 

Recall : 0.784906 

F1 : 0.377153 

Total Learning Time : 5.486 

Total Inference Time : 10.954414367675781 

Total revision time: 26.00891932106018
Best scored revision CLL: -0.196086


Results 

CLL : -0.17524 

AUC ROC : 0.990313 

AUC PR : 0.323716 

Precision : 0.24821 

Recall : 0.784906 

F1 : 0.377153 

Total Learning Time : 26.031143032073974 

Total Inference Time : 10.954414367675781 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.386
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.04862512557570285;  // std dev = 2.545, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | | else return 0.14953966357633253;  // std dev = 5.584, 151.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16460054800273813;  // std dev = 3.630, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6194734122109543;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.803867756265432;  // std dev = 1.391, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15866968363540046;  // std dev = 0.058, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.1301544437541334;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.20276162614382226;  // std dev = 3.084, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5676350157676627;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4633397818906506;  // std dev = 0.938, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.12275434903625503;  // std dev = 2.016, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6676489777314474;  // std dev = 1.016, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14074330355341583;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13394722994523012;  // std dev = 3.625, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.14765857104209354;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.44255202811208627;  // std dev = 0.066, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4493217816520275;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3904856373012646;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4149777334114228;  // std dev = 0.635, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.060769344655325734;  // std dev = 4.226, 188.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5220932102645505;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.07463057393064469;  // std dev = 1.899, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.11170148652160605;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3207896154446348;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3499563373986695;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.07864229303180763;  // std dev = 4.227, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.39325203175396384;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.045434016352053554;  // std dev = 3.712, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | | else return 0.02834955309184605;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25857355409327804;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.35785575734315733;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return -0.04393325250595459;  // std dev = 0.861, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.26593049105123534;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.05088380243087489;  // std dev = 1.031, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.08801055697474083;  // std dev = 1.038, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.27810715360205746;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.08841113979411923;  // std dev = 2.626, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   | | | else return 0.05029863887838626;  // std dev = 4.790, 160.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25186955760944857;  // std dev = 0.207, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2893937541217854;  // std dev = 0.036, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2294220233071822;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6461222350814932;  // std dev = 0.763, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.1923587173461809;  // std dev = 0.462, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22513556523351017;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.03312326878489114;  // std dev = 3.417, 130.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16958903832760075;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.1865468775517193;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4476592167122014;  // std dev = 0.739, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14731863992454042;  // std dev = 0.326, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.08113615913055001;  // std dev = 0.772, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.045956286979721594;  // std dev = 3.074, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16539537969129395;  // std dev = 0.096, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.17321025411798474;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.20589809316566293;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.1730692931779095;  // std dev = 1.042, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.21074388090737672;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.024127742964649403;  // std dev = 1.225, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16143984898010424;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04140895627621793;  // std dev = 2.640, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
%   | | | else return 0.028099806258370347;  // std dev = 3.081, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1271901445119894;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.20927026507443658;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.132515500008753;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15376225134704383;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.013447980693008062;  // std dev = 1.349, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.14076426470559494;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.013984309916141654;  // std dev = 2.813, 115.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=36 */
%   | | | else return 0.0069433945978410955;  // std dev = 3.120, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.433', 'seconds']
Parameter learned model CLL:-0.174972 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.545, 34, 8], 'false,false,true,false': [5.584, 107, 44], 'false,false,false,true': [3.63, 43, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.949, 1, 9], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [1.391, 2, 52], 'false,false,true,false': [0.058, 133, 0], 'false,false,false,true': [1.879, 12, 5], 'false,false,false,false': [3.084, 26, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.03, 0, 6], 'true,false': [0.938, 1, 8], 'false,true,true': [2.016, 19, 8], 'false,true,false,true': [1.016, 1, 48], 'false,true,false,false': [0.0, 87, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.625, 41, 20], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.066, 0, 9], 'true,false': [0.028, 0, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.635, 1, 3], 'false,true,false': [4.226, 136, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.899, 13, 5], 'false,false,false,false': [3.179, 31, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.022, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.033, 0, 9], 'false,true': [4.227, 115, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.712, 50, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.03, 0, 6], 'true,true,false': [0.0, 0, 1], 'true,false,true,true': [0.861, 1, 2], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [1.031, 2, 3], 'false,true': [1.038, 27, 3], 'false,false,true': [0.02, 0, 6], 'false,false,false,true': [2.626, 44, 23], 'false,false,false,false': [4.79, 114, 46]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.207, 0, 12], 'true,true,true,false': [0.036, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.763, 0, 36], 'true,false': [0.462, 86, 0], 'false,true': [0.017, 0, 5], 'false,false,true': [3.417, 94, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.012, 0, 5], 'true,false': [0.021, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.739, 0, 56], 'false,true,false': [0.326, 135, 0], 'false,false,true,true': [0.772, 1, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.074, 44, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.096, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.092, 0, 4], 'false,true,true': [1.042, 14, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.225, 47, 14], 'false,false,true': [0.013, 0, 5], 'false,false,false,true': [2.64, 72, 36], 'false,false,false,false': [3.081, 47, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.008, 0, 5], 'true,true,true,false': [0.029, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.045, 0, 4], 'false,true': [1.349, 48, 17], 'false,false,true': [0.011, 0, 5], 'false,false,false,true': [2.813, 79, 36], 'false,false,false,false': [3.12, 51, 20]}]
{'': [-2.5376526277146434e-16, 0.20816115702479407], 'false': [-1.4802973661668753e-16, 0.20118983234180773], 'false,false': [0.19683749899326236, 0.21301775147928947], 'false,false,false': [0.21253902185223675, 0.22222222222222224], 'false,false,true': [0.15419501133786864, 0.20648217183456946], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [0.062222222222222415, 0.2103827631128306], 'false': [7.401486830834377e-17, 0.2073412586681771], 'false,false': [0.20064727605933383, 0.22597082935793525], 'false,false,false': [0.20769179132000828, 0.2320047590719811], 'false,false,true': [0.03583175205756567, 2.56622950934161e-05], 'true': [0.0, 0.09000000000000026], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.06126547567028077, 0.1736061369979703], 'false': [0.15704179328003842, 0.21512757182420159], 'false,false': [0.21478207581413028, 0.22222222222222224], 'false,false,false': [0.22222222222222224, nan], 'false,false,true': [0.0, 0.21543867171073672], 'false,true': [0.15049921677995431, 0.15821302658799657], 'false,true,false': [0.021075303549195453, -7.656710514656252e-18], 'true': [0.00015051803120373167, 0.09765778243921461]}
{'': [0.00037846384034612157, 0.12721606780670675], 'false': [0.09771490382088267, 0.21213078838815258], 'false,false': [0.0027342245491302763, 0.21455888664240144], 'false,false,false': [0.20029409446891877, 0.21975425330812887], 'false,true': [0.08075011361717219, 0.09500502109074298], 'false,true,true': [0.0, 0.10081766946709134], 'false,false,true': [0.0, 0.0], 'true': [0.00048341914241537925, 0.00016008243469838311]}
{'': [0.0003066587726408633, 0.1325999854331366], 'false': [0.10446398107064786, 0.19628696170335336], 'false,false': [0.0013155195952261611, 0.19902474407403487], 'false,false,false': [0.19967685181622039, 0.18750000000000003], 'false,false,true': [0.0, 0.0], 'true': [9.964319786885945e-05, 0.00011784682902633076], 'true,true': [9.964319786885945e-05, nan]}
{'': [0.13212707178130348, 0.12130676744582482], 'true': [0.0013377943895980554, 0.19622994321793313], 'true,false': [0.17147405202776517, 0.21241894680246282], 'true,false,true': [0.24738387088443156, 0.0], 'false': [0.03592774037536592, 0.12955450868587276], 'false,false': [6.396632430541449e-05, 0.13176949248591122], 'false,false,false': [0.10294036524968044, 0.14341295954848082], 'true,true': [0.00015262356660482776, 0.0]}
{'': [0.14029505968424855, 0.08780537803976474], 'true': [0.04404897284033801, 0.0024794513147742515], 'false': [5.4724743030043485e-05, 0.08981489494480399], 'false,false': [0.08981489494480399, nan], 'true,true': [0.003317698007040602, 0.020314514681321914], 'true,true,false': [0.0, 0.016185859012755807], 'true,true,true': [0.0035587087843189555, 0.0006647202086020737]}
{'': [0.0001064154411470976, 0.09598824900835863], 'false': [0.07677144340063273, 0.1506426554761065], 'false,false': [0.19873470593407974, 0.14766509479633858], 'false,false,true': [0.19873470593407974, nan], 'false,false,false': [0.14766509479633858, nan], 'false,true': [0.009741444620108444, 0.0007862998599235823], 'false,true,true': [nan, 0.009741444620108477], 'true': [2.7119538942671496e-05, 4.776575188132471e-05]}
{'': [0.0015877425148350308, 0.07729050445677728], 'false': [0.038325578718436844, 0.0919112847073416], 'false,false': [3.268934622928099e-05, 0.09410148146140855], 'false,false,false': [0.06453766902378998, 0.14164726544876013], 'false,true': [0.07244471004219283, 0.02549807805733492], 'false,true,false': [0.0, 0.024582820943566994], 'true': [0.0010240500808961803, 0.0018607688901892516], 'true,false': [0.0, 0.0021122621484151796]}
{'': [0.0011880040098576033, 0.07652738762383032], 'false': [0.028011817335454724, 0.09283695201522066], 'false,false': [2.602443519224007e-05, 0.09489307718254988], 'false,false,false': [0.06883058253900003, 0.13707632606387427], 'true': [0.0014600845293678694, 0.0005072457909138378], 'true,true': [0.001695517416021062, 0.0], 'true,true,true': [1.4185059239607556e-05, 0.00028702164094067856], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 2.834
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, A), enzyme(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( enzyme(H, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.034619523334806335;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.1016271959690766;  // std dev = 4.602, 115.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=28 */
%   | | | else return 0.183545760496337;  // std dev = 5.259, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7319045176838227;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.7401919213324014;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7863470123406409;  // std dev = 1.667, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.1570938594406553;  // std dev = 0.112, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | else if ( location(A, J) )
%   | | | then return 0.13227709922139938;  // std dev = 3.563, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.2343055454296863;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5789037158604;  // std dev = 0.091, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5539582747146053;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11970597607597051;  // std dev = 0.024, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.1483422768295784;  // std dev = 1.962, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.692997838421633;  // std dev = 0.294, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1386940741668401;  // std dev = 0.070, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.1912963721798475;  // std dev = 0.515, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.1967639154211266;  // std dev = 3.466, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | else return 0.16055964094674385;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.422749434900705;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.25918821658174634;  // std dev = 0.931, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38446946447161456;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6128505611125906;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.11378542955621179;  // std dev = 0.067, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.08275219241363553;  // std dev = 4.103, 167.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=52 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5070863894495223;  // std dev = 0.000683, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.07903498076570876;  // std dev = 3.146, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.24524749037177537;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.35636596403263204;  // std dev = 0.099, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.23238144462459479;  // std dev = 0.294, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.043380286612059595;  // std dev = 2.435, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | | else return -0.0130738879203663;  // std dev = 1.200, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( enzyme(A, H), interaction(A, I) )
%   | | | then return -0.030736345445460205;  // std dev = 1.215, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return 0.10625090070985178;  // std dev = 2.912, 81.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=30 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3825501717422203;  // std dev = 0.000646, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.03901096720863163;  // std dev = 2.554, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return -0.02104492296015377;  // std dev = 2.933, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2957333362293085;  // std dev = 0.040, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.28829196174701427;  // std dev = 0.484, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.10200141864708252;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.04625919853321025;  // std dev = 0.468, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.10805725692397435;  // std dev = 0.013, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( enzyme(A, K) )
%   | | | then return -0.050593478246489375;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2953963213674521;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.13713848201681;  // std dev = 2.069, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.055784371178581815;  // std dev = 4.969, 188.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=57 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2384286982503487;  // std dev = 0.035, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2816851503112954;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6375164380621738;  // std dev = 0.792, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18423568214529482;  // std dev = 0.067, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.24662370592426736;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), interaction(I, I) )
%   | | | then return 0.2825781495313191;  // std dev = 0.967, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.036724428121455405;  // std dev = 1.855, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.011887674743565902;  // std dev = 2.089, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return 0.010920550190800484;  // std dev = 1.448, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17493420744315777;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E), complex(A, F) )
%   | | then return -0.1223498260175746;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2042829085111313;  // std dev = 0.021, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.4310952118632307;  // std dev = 0.099, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14116933394151224;  // std dev = 0.035, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.07534278066049119;  // std dev = 0.966, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.017915828693454997;  // std dev = 1.078, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( location(A, L) )
%   | | | then return 0.08244866676847208;  // std dev = 2.479, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.19258051417413918;  // std dev = 0.829, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1643920981032696;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.20267629464211723;  // std dev = 0.466, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.18182967046530754;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.03804669136125999;  // std dev = 0.091, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.06328919657249282;  // std dev = 0.443, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.03748256044922459;  // std dev = 1.464, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1726880461504199;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.0435978473420252;  // std dev = 0.678, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.027384010755874124;  // std dev = 3.982, 170.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=54 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.14774141130210447;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.1332375934376323;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15408869703436068;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(H, H), location(G, I) )
%   | | | then return -0.03807428548209004;  // std dev = 1.000, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.014984121621432403;  // std dev = 0.842, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else return 0.0800451164288446;  // std dev = 0.455, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.149427924219575;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return -0.010461545912830038;  // std dev = 1.805, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.04366367442488139;  // std dev = 3.605, 120.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=42 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.170', 'seconds']
Refined model CLL: -0.181081


******************************************
Best model found
******************************************
Results 

CLL : -0.193184 

AUC ROC : 0.981531 

AUC PR : 0.205988 

Precision : 0.133696 

Recall : 0.797834 

F1 : 0.229016 

Total Learning Time : 2.834 

Total Inference Time : 3.0156021118164062 

Total revision time: 10.027067155838013
Best scored revision CLL: -0.174972


Results 

CLL : -0.193184 

AUC ROC : 0.981531 

AUC PR : 0.205988 

Precision : 0.133696 

Recall : 0.797834 

F1 : 0.229016 

Total Learning Time : 10.049290866851807 

Total Inference Time : 3.0156021118164062 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.608
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07126368919787303;  // std dev = 3.198, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | | else return 0.15585885876363392;  // std dev = 5.233, 131.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10139217834275562;  // std dev = 2.610, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7347337483847239;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7305718385191504;  // std dev = 0.023, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7533133569089265;  // std dev = 2.132, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return -0.1578653621418179;  // std dev = 0.068, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.03369034699549515;  // std dev = 2.007, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.12019160481079467;  // std dev = 2.239, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5694641834806193;  // std dev = 0.018, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.22560145328802497;  // std dev = 1.166, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06046436065557804;  // std dev = 2.815, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5928677006556504;  // std dev = 2.106, 47.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=42 */
%   | | | else return -0.14160699004865598;  // std dev = 4.71e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3195346339180646;  // std dev = 0.923, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.09159697685442884;  // std dev = 2.506, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.05444121348017689;  // std dev = 1.502, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4294645230468828;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.46178955219019246;  // std dev = 0.121, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5403901228726258;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6206337683863211;  // std dev = 0.162, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.048965582785155566;  // std dev = 4.452, 197.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.47572984315963796;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5326486481405178;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.3813550950063536;  // std dev = 1.484, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.07430684086980753;  // std dev = 2.259, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32587396929723433;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22943866294898912;  // std dev = 0.899, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.055953847499354475;  // std dev = 4.592, 200.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3605709723821596;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3807172973501338;  // std dev = 0.028, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.04432090157779864;  // std dev = 2.575, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.1911189752185329;  // std dev = 1.319, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26497575047595634;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.30142793927761385;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.28222372936532125;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.29818389598928885;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.13447198172031777;  // std dev = 0.922, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06777950887092946;  // std dev = 1.261, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16066148056724405;  // std dev = 0.893, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.05420607379052788;  // std dev = 2.315, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return 0.05612474658354855;  // std dev = 4.663, 164.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2491116033710284;  // std dev = 0.213, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2554119757075715;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.06771316493349969;  // std dev = 0.805, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6103573418011324;  // std dev = 0.714, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.17167669237758915;  // std dev = 0.544, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.11722792516354344;  // std dev = 1.073, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08120430079526954;  // std dev = 3.392, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17438693335089694;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2365707537738765;  // std dev = 0.212, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4249103273448873;  // std dev = 1.781, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.13906877698724912;  // std dev = 0.213, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.18677646396999492;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.09032063762238347;  // std dev = 0.765, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.10145687735857493;  // std dev = 2.309, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.14945805097307852;  // std dev = 0.051, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.32917239109558527;  // std dev = 0.743, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.21293851869182018;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09546148115725282;  // std dev = 0.321, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18227960455897702;  // std dev = 0.401, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.010607977010126722;  // std dev = 1.592, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2509459063890895;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03575514580219801;  // std dev = 2.900, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | | else return -0.04465846409764806;  // std dev = 2.542, 55.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12566800175093604;  // std dev = 0.019, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.15467621027709422;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.12968331710518666;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.218134521085749;  // std dev = 0.050, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1951417448200303;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.019172465984977714;  // std dev = 1.815, 96.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2069451306873128;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.034735042161752036;  // std dev = 2.817, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | | else return 0.005235502348483746;  // std dev = 2.475, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.858', 'seconds']
Parameter learned model CLL:-0.179803 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.198, 48, 13], 'false,false,true,false': [5.233, 92, 39], 'false,false,false,true': [2.61, 28, 9], 'false,false,false,false': [1.309, 4, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.023, 0, 11], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 3], 'false,false,true,true': [2.132, 5, 52], 'false,false,true,false': [0.068, 163, 0], 'false,false,false,true': [2.007, 21, 5], 'false,false,false,false': [2.239, 18, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.018, 0, 11], 'true,false': [1.166, 2, 4], 'false,true,true': [2.815, 46, 14], 'false,true,false,true': [2.106, 5, 42], 'false,true,false,false': [4.71e-08, 86, 0], 'false,false,true,true': [0.923, 2, 3], 'false,false,true,false': [2.506, 25, 9], 'false,false,false,true': [1.502, 9, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.001, 0, 6], 'true,false': [0.121, 0, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.162, 0, 6], 'false,true,false': [4.452, 148, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.484, 4, 5], 'false,false,false,false': [2.259, 19, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.01, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.899, 1, 6], 'false,true': [4.592, 144, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.028, 0, 2], 'false,false,false,true': [2.575, 26, 9], 'false,false,false,false': [1.319, 4, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.018, 0, 5], 'true,true,false': [0.112, 0, 3], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.104, 0, 3], 'true,false,false': [0.922, 1, 4], 'false,true': [1.261, 29, 5], 'false,false,true': [0.893, 1, 5], 'false,false,false,true': [2.315, 34, 13], 'false,false,false,false': [4.663, 117, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.213, 0, 13], 'true,true,true,false': [0.04, 0, 3], 'true,true,false,true': [0.805, 1, 3], 'true,true,false,false': [0.714, 0, 33], 'true,false': [0.544, 108, 0], 'false,true': [1.073, 2, 3], 'false,false,true': [3.392, 65, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.212, 0, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.781, 3, 56], 'false,true,false': [0.213, 143, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.765, 1, 2], 'false,false,false,true': [2.309, 20, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.051, 0, 10], 'true,false,true': [0.743, 1, 1], 'true,false,false': [0.071, 0, 5], 'false,true,true': [0.321, 23, 1], 'false,true,false,true': [0.401, 1, 6], 'false,true,false,false': [1.592, 47, 17], 'false,false,true': [0.051, 0, 3], 'false,false,false,true': [2.9, 68, 31], 'false,false,false,false': [2.542, 43, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.019, 0, 8], 'true,true,true,false': [0.019, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.05, 0, 2], 'true,false': [0.025, 0, 3], 'false,true': [1.815, 72, 24], 'false,false,true': [0.044, 0, 3], 'false,false,false,true': [2.817, 68, 31], 'false,false,false,false': [2.475, 32, 12]}]
{'': [0.05859374999999978, 0.20681129231655102], 'false': [-2.5376526277146434e-16, 0.19764435507038333], 'false,false': [0.1974826388888897, 0.19834710743801603], 'false,false,false': [0.18407596785975178, 0.24489795918367335], 'false,false,true': [0.16769685568395537, 0.20907872501602515], 'true': [0.07100591715976314, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [3.7260457621949665e-05, 0.18546976886902458], 'false': [-6.344131569286608e-17, 0.17989327362229426], 'false,false': [0.18006829437974736, 0.17913463409305444], 'false,false,true': [0.07978098696203056, 2.8727594102640328e-05], 'false,false,false': [0.15495403989102238, 0.20046786073582643], 'true': [0.0, 4.6190649944448254e-05], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 0.0]}
{'': [0.1069660915540421, 0.15798076498199198], 'false': [0.14968745921683813, 0.18934444844558362], 'false,false': [0.18869271484843747, 0.1880932039712304], 'false,false,true': [0.17041109281680558, 0.18472021745768782], 'false,false,false': [0.1880932039712304, nan], 'false,true': [0.13203733969585518, 0.15662278946580166], 'false,true,false': [0.09438989101357236, 2.581914010756178e-17], 'true': [2.858528203955854e-05, 0.22650893054071972]}
{'': [0.001233814818457309, 0.1266027365053024], 'false': [0.10773218674204714, 0.2173279123207295], 'false,false': [0.0007199445245447874, 0.2266904885774459], 'false,false,false': [0.24477794560014482, 0.196186369381476], 'false,true': [0.004525522064277888, 0.10063077184120366], 'false,true,true': [0.0, 0.004359912506610793], 'true': [2.3114116021183406e-07, 0.0016382409330092014], 'false,false,true': [0.0, 0.0]}
{'': [0.05278046938350145, 0.12196463049931786], 'false': [0.10541585288953227, 0.1946159928566266], 'false,false': [0.00036077725308016523, 0.20228096824989444], 'false,false,false': [0.18943065839969686, 0.2485744554803587], 'true': [1.0081793063178148e-05, 0.11539699089656283], 'false,false,true': [0.0, 0.0004058744097152067], 'true,true': [1.0081793063178148e-05, nan]}
{'': [0.0562394227252359, 0.11962325935462408], 'false': [0.04679199891171619, 0.12887111459352504], 'false,false': [0.1330416311942201, 0.12844789131739873], 'false,false,false': [0.11399112619035373, 0.13259016863400247], 'true': [0.0019255214248729557, 0.10199789680129394], 'true,false': [0.0027668859528458267, 0.1700444492173872], 'true,false,true': [0.0, 0.0036254995407948853], 'true,true': [6.313296232958176e-05, 0.004199025903008839]}
{'': [0.1104629428178881, 0.1271434631930036], 'false': [0.23008763742282562, 0.11983251278360119], 'false,false': [0.11983251278360119, nan], 'true': [0.06170864799225735, 0.002742649441515863], 'true,true': [0.002940011281502869, 0.05969809123848536], 'true,true,false': [0.16198999687593202, 0.015465266677302221], 'true,true,true': [0.0034853232824855196, 0.0005447406736700707]}
{'': [0.003762229828660598, 0.09515683159014877], 'false': [0.08169819690137124, 0.1673923966290767], 'false,false': [0.16051538562148898, 0.16658457370410334], 'false,false,false': [0.16658457370410334, nan], 'false,false,true': [0.0, 0.19482481323426107], 'false,true': [0.05377609207749968, 0.00031616243279834473], 'false,true,true': [nan, 0.05377609207749964], 'true': [0.0, 0.004099159396746382]}
{'': [0.05964585369279059, 0.07363797361460882], 'false': [0.033966622096496375, 0.09731422509821117], 'false,false': [0.0008690351142821943, 0.09805623687521824], 'false,false,false': [0.08496346007589964, 0.11746629669155446], 'true': [0.0002587524808211672, 0.1395695762128286], 'true,false': [0.27607173411992103, 0.0010017877612691962], 'false,true': [0.004291909412364151, 0.04127184367553935], 'false,true,false': [0.022929605369801404, 0.03960986635832736]}
{'': [0.001509823584431691, 0.07280780604375107], 'false': [0.03431062596489808, 0.09718574801849997], 'false,false': [0.0006552600770174388, 0.0985355563850002], 'false,false,false': [0.08016429902521462, 0.13926842347199841], 'true': [0.0013342210075653273, 0.0002006218354966005], 'true,true': [0.00021003431074574918, 0.002566369142128345], 'true,true,false': [0.0, 0.001241681884655503], 'true,true,true': [4.722344000877149e-05, 0.0001880968641759656]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.22
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.07633075328133054;  // std dev = 3.063, 55.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | | | else return 0.18113030155913865;  // std dev = 5.933, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6361400788776211;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7879065490111783;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.50517232473028;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.781616824772304;  // std dev = 1.687, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.15702071174057936;  // std dev = 0.157, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.28839141059215084;  // std dev = 1.494, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.10828668838150807;  // std dev = 2.417, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5082201224889452;  // std dev = 0.241, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return -0.02135862036823844;  // std dev = 1.519, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | | else return 0.12702662478320936;  // std dev = 2.193, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6712894989409773;  // std dev = 1.002, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.1428224230875239;  // std dev = 0.043, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6839894216332763;  // std dev = 0.928, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.1885316613470921;  // std dev = 0.067, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.13651390928744256;  // std dev = 1.303, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.24340751120156978;  // std dev = 1.425, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.44407222107724936;  // std dev = 0.009, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6626896011938048;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.498437532007324;  // std dev = 0.678, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( complex(A, G), enzyme(A, H) )
%   | | | then return 0.15033764665708402;  // std dev = 1.498, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.03499219630740391;  // std dev = 4.045, 167.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=42 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.5348103599407608;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5006723292290183;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.08947567275654254;  // std dev = 2.321, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.7107039460711398;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3355172734069526;  // std dev = 0.009, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.20090319071796772;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5596136170243364;  // std dev = 0.268, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.13997951241056558;  // std dev = 0.109, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.04223773713403852;  // std dev = 1.201, 31.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | | else return 0.04529014196364484;  // std dev = 3.225, 111.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=30 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.39435389485294453;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.01511577883913804;  // std dev = 2.121, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.13018562775969503;  // std dev = 1.514, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.21786022016990475;  // std dev = 0.178, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.34641028631143406;  // std dev = 0.078, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(A, G), interaction(F, G) )
%   | | then return -0.11018838624407393;  // std dev = 0.010, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4321785719818056;  // std dev = 0.233, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.13236142487831773;  // std dev = 0.015, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.4922299108427839;  // std dev = 0.920, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return -0.17005639937318673;  // std dev = 0.533, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.39888387131497577;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08464078345335944;  // std dev = 3.358, 105.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=39 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.25625802606065173;  // std dev = 0.057, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.36188550030613215;  // std dev = 0.294, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.1500077933859423;  // std dev = 0.081, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.4020642940108635;  // std dev = 0.070, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.17766991574608437;  // std dev = 0.143, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(G, H) )
%   | | | then return 0.1444543735771048;  // std dev = 1.642, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.0024930608623106878;  // std dev = 1.237, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.12235928522496142;  // std dev = 1.106, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.06837345979605;  // std dev = 0.748, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17660067044712424;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E) )
%   | | then return 0.18038707413820057;  // std dev = 0.024, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.25748152070770797;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.27625609268207396;  // std dev = 0.268, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.4118017907547582;  // std dev = 1.021, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else return -0.12554729501761897;  // std dev = 0.038, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.19384704956892815;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.02798593091735183;  // std dev = 1.590, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.15856291138969425;  // std dev = 1.198, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16008280327446883;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.026639446974158043;  // std dev = 0.341, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.05695179664806401;  // std dev = 0.836, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( complex(A, H), phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.025711030588652328;  // std dev = 0.326, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.15150121314926868;  // std dev = 0.500, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.021484249130507074;  // std dev = 0.157, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.024620743707312792;  // std dev = 0.820, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.056284487821293194;  // std dev = 1.779, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return -0.01359230252365102;  // std dev = 2.718, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.1397544614072678;  // std dev = 0.016, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.20329482096108575;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.20146271479771483;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.1446115425587601;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.058739303087829264;  // std dev = 0.708, 40.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=4 */
%   | | | else return -0.006447754524027098;  // std dev = 1.201, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.02032458269069548;  // std dev = 0.820, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, J) )
%   | | | then return -0.00426540224192316;  // std dev = 3.053, 146.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=41 */
%   | | | else return 0.1281289049522918;  // std dev = 0.534, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '45.283', 'seconds']
Refined model CLL: -0.159649


******************************************
Best model found
******************************************
Results 

CLL : -0.17424 

AUC ROC : 0.989651 

AUC PR : 0.336392 

Precision : 0.201499 

Recall : 0.855124 

F1 : 0.326146 

Total Learning Time : 3.22 

Total Inference Time : 3.779650926589966 

Total revision time: 11.753834178924562
Best scored revision CLL: -0.159649


Results 

CLL : -0.17424 

AUC ROC : 0.989651 

AUC PR : 0.336392 

Precision : 0.201499 

Recall : 0.855124 

F1 : 0.326146 

Total Learning Time : 11.776057889938356 

Total Inference Time : 3.779650926589966 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.118
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.15544623239680821;  // std dev = 4.816, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   | | | else return 0.1854216623722384;  // std dev = 4.921, 110.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.058148935099512175;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5376552303927726;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7322837513786774;  // std dev = 2.673, 77.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=69 */
%   | | | else return -0.16404781944957275;  // std dev = 0.025, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.14644071140209167;  // std dev = 1.451, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.0897187297348978;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5886131109664913;  // std dev = 0.054, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5996953357065603;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.11252951176962023;  // std dev = 4.202, 110.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6060308789276542;  // std dev = 1.898, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.14447285876977503;  // std dev = 4.47e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23137594087620972;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.003641168464031676;  // std dev = 1.431, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4350976522732422;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.45356828671507515;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5154373859107988;  // std dev = 1.487, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return 0.07161674235680925;  // std dev = 4.858, 195.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5544671261160741;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.06035865406291254;  // std dev = 1.487, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.32675145628767366;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.2117116420388086;  // std dev = 0.927, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.34696042902072044;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.06832817684995533;  // std dev = 5.315, 228.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4168469265176379;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.11978629054547259;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.0200694957189952;  // std dev = 1.239, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2764104705744671;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.35259535288628185;  // std dev = 0.169, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2994963795001081;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.08220104236759147;  // std dev = 0.337, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.04168766008324266;  // std dev = 2.393, 58.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.27289443810777275;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.058078960618113705;  // std dev = 2.944, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0.05809024154722394;  // std dev = 4.118, 139.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25320684688209527;  // std dev = 0.174, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.3026356071596866;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5265637639306595;  // std dev = 1.475, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.1736673735341556;  // std dev = 0.264, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22220311139802443;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07452798929082605;  // std dev = 3.851, 119.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1844721185291777;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.07668924138085571;  // std dev = 0.945, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.36335604342857963;  // std dev = 2.972, 83.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=71 */
%   | | else return -0.15726951130179198;  // std dev = 0.245, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.2427954299710624;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.012473738012108406;  // std dev = 1.498, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18283586583619482;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.3946949879489251;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.18491087393135253;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.016558129785991797;  // std dev = 1.409, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.1441804998006933;  // std dev = 0.695, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.001664682523659649;  // std dev = 1.692, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1748323777372175;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03823741198423202;  // std dev = 3.379, 119.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=40 */
%   | | | else return 0.11340069130528453;  // std dev = 1.366, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1462121813269517;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.23467645741883725;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04268495312991373;  // std dev = 0.402, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.002671276671277031;  // std dev = 2.416, 95.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1510245684190625;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.012037080737497473;  // std dev = 3.595, 148.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=40 */
%   | | | else return 0.07064681565545919;  // std dev = 1.377, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.769', 'seconds']
Parameter learned model CLL:-0.199739 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.816, 78, 33], 'false,false,true,false': [4.921, 74, 36], 'false,false,false,true': [1.265, 8, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 2], 'true,false': [1.279, 2, 9], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [2.673, 8, 69], 'false,false,true,false': [0.025, 153, 0], 'false,false,false,true': [1.451, 7, 3], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.054, 0, 8], 'true,false': [1.49e-08, 0, 3], 'false,true,true': [4.202, 76, 34], 'false,true,false,true': [1.898, 4, 37], 'false,true,false,false': [4.47e-08, 60, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.095, 3, 2], 'false,false,false,true': [1.431, 12, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.047, 0, 5], 'true,false': [0.003, 0, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.487, 3, 14], 'false,true,false': [4.858, 138, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.487, 9, 3], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.927, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.005, 0, 4], 'false,true': [5.315, 157, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.239, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.027, 0, 4], 'true,true,false': [0.169, 0, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.337, 1, 1], 'false,true': [2.393, 46, 12], 'false,false,true': [0.004, 0, 3], 'false,false,false,true': [2.944, 42, 20], 'false,false,false,false': [4.118, 98, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.174, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.475, 2, 33], 'true,false': [0.264, 83, 0], 'false,true': [0.004, 0, 3], 'false,false,true': [3.851, 79, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.02, 0, 3], 'true,false': [0.945, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.972, 12, 71], 'false,true,false': [0.245, 161, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.498, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.098, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.022, 0, 3], 'false,true,true': [1.409, 34, 11], 'false,true,false,true': [0.695, 1, 1], 'false,true,false,false': [1.692, 45, 17], 'false,false,true': [0.003, 0, 3], 'false,false,false,true': [3.379, 79, 40], 'false,false,false,false': [1.366, 7, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.03, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.402, 1, 3], 'false,true': [2.416, 66, 29], 'false,false,true': [0.003, 0, 3], 'false,false,false,true': [3.595, 108, 40], 'false,false,false,false': [1.377, 8, 4]}]
{'': [-1.6148698540002277e-16, 0.21542244382214346], 'false': [0.18750000000000006, 0.21264388108184584], 'false,false': [0.21473761798488994, 0.1799307958477507], 'false,false,true': [0.20891161431702107, 0.22016528925619955], 'false,true': [0.0, 1.4802973661668753e-16], 'false,false,false': [0.16000000000000003, 0.20408163265306126], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.13017751479289943, 0.21122628822580922], 'false': [0.0, 0.2096841087159023], 'false,false': [0.20999349753594193, 0.2045696484382676], 'false,false,true': [0.09280247256592983, 4.196207230769465e-06], 'false,false,false': [0.2104782554695023, 0.1875], 'true': [0.0, 0.14876033057851243], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.0002923216784674584, 0.16728030011650863], 'false': [0.16633857505739277, 0.17210938172687867], 'false,false': [0.24000000000000005, 0.13651339399443152], 'false,false,true': [nan, 0.24000000000000005], 'false,true': [0.16051193690231855, 0.17150035811928857], 'false,true,false': [0.08786905019131856, 3.3306690738754695e-17], 'false,false,false': [0.13651339399443152, nan], 'true': [0.00036844711556827114, 7.401486830834377e-17]}
{'': [0.0002849329609769701, 0.14062700333786093], 'false': [0.13626295480411776, 0.2018693365557505], 'false,false': [0.0, 0.20242299136547057], 'false,false,false': [0.18435561491535937, 0.25], 'false,true': [0.13005991503656641, 0.12100842611132957], 'false,true,true': [nan, 0.1300599150365665], 'true': [0.0004395063927733034, 1.047069320729103e-06], 'false,false,true': [nan, 0.0]}
{'': [0.07564678488070134, 0.12818099801164984], 'false': [0.12390248079743124, 0.18896845116923042], 'false,false': [0.0, 0.19360566160562911], 'false,false,false': [0.22222222222222218, 0.1705505788597139], 'true': [0.10736988081805533, 5.770085940964842e-06], 'true,true': [0.10736988081805533, nan], 'false,false,true': [nan, 0.0]}
{'': [0.02062145276487277, 0.12200877488350664], 'false': [0.09874277767475306, 0.12627809805455456], 'false,false': [5.840635463105759e-06, 0.1274841948222253], 'false,false,false': [0.13978182511798637, 0.12199892083809932], 'true': [0.00467149638221467, 0.04827407841029999], 'true,false': [0.0, 0.05667202976893862], 'true,true': [0.00018580170525914208, 0.005680435993616872], 'true,false,true': [nan, 0.0]}
{'': [0.11512355028426148, 0.12210693076860148], 'false': [4.4294432231621146e-06, 0.1246488842265145], 'false,false': [0.1246488842265145, nan], 'true': [0.06112353270155791, 0.0008406360388471568], 'true,true': [0.0029560537333779484, 0.06211859326120417], 'true,true,false': [nan, 0.06211859326120412], 'true,true,true': [0.0030295498028448664, 0.0]}
{'': [0.07669715442814908, 0.09975227276910922], 'false': [0.0972931798990285, 0.13501162660119873], 'false,false': [0.0, 0.14032937786454808], 'false,false,false': [0.14032937786454808, nan], 'false,true': [0.10644804466423691, 0.0003718274452693444], 'false,true,true': [nan, 0.1064480446642368], 'true': [0.000138561212073271, 0.09931239834858178], 'false,false,true': [0.0, nan]}
{'': [0.02637374788125933, 0.07832502036253597], 'false': [0.049313259042957316, 0.1006855691110689], 'false,false': [3.0852861929534883e-06, 0.10262642862051582], 'false,false,false': [0.09594611263462396, 0.16972381918620777], 'false,true': [0.0440874012542034, 0.052910597318576565], 'false,true,false': [0.24125720241306875, 0.046170187342318814], 'true': [0.001206794969575306, 0.06310805575378237], 'true,false': [0.0, 0.00015833555688161047]}
{'': [0.017046700645290836, 0.08062945954083435], 'false': [0.061456407785644145, 0.09180390920031817], 'false,false': [2.4365639626072744e-06, 0.09307233089368613], 'false,false,false': [0.0873015801619249, 0.15792104353355776], 'true': [0.0009677722270303134, 0.04045136919515763], 'true,true': [0.0009677722270303134, nan], 'true,true,true': [0.0001277843842626969, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 6.783
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7993254056877469;  // std dev = 1.372, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | | else return -0.14185106490048763;  // std dev = 8.43e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.23087620782678447;  // std dev = 5.071, 110.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=41 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6794141343983419;  // std dev = 2.664, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | | else return -0.1545175764222644;  // std dev = 0.337, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.19579379763716537;  // std dev = 1.173, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.04734133796440178;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462843;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.08043266861611512;  // std dev = 2.531, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | | else return 0.13135689407539491;  // std dev = 2.778, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5359599969421781;  // std dev = 2.156, 43.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=37 */
%   | | | else return -0.13990264167706967;  // std dev = 0.178, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return -0.012720084697386091;  // std dev = 0.799, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.14986103023928088;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3070585620196465;  // std dev = 0.917, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.017513584158309968;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(G, G), interaction(A, I) )
%   | | | then return 0.0072704517969171475;  // std dev = 2.085, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   | | | else return 0.07631279351220516;  // std dev = 4.616, 184.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=57 */
%   | | else return 0.26342696718630465;  // std dev = 0.337, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5181212151985404;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.04921928878806875;  // std dev = 0.802, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.1908980391647607;  // std dev = 1.175, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.34715434894367897;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3438490362207378;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.25127007293395925;  // std dev = 4.018, 115.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=68 */
%   | | | else return -0.14375121092165652;  // std dev = 0.497, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.14399702847819246;  // std dev = 0.656, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.19502632087699018;  // std dev = 0.702, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.39040632028174194;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.06933986646350913;  // std dev = 0.790, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.31255615539294;  // std dev = 0.963, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.06673387445679575;  // std dev = 0.916, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.32627938649957566;  // std dev = 0.168, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2762774044141429;  // std dev = 0.026, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then return -0.03980532687127823;  // std dev = 0.248, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.14704053321973645;  // std dev = 0.994, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.030396392371184754;  // std dev = 1.180, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.04193277413514307;  // std dev = 0.821, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.0787073036759553;  // std dev = 2.412, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
%   | | | else return 0.03393775277121572;  // std dev = 3.562, 134.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2530745903840076;  // std dev = 0.052, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( phenotype(A, E), interaction(F, A) )
%   | | | then return 0.44008980974948975;  // std dev = 0.240, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.5600965479353526;  // std dev = 0.295, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.16282350779757893;  // std dev = 0.085, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.26994123737298475;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.12276128701753923;  // std dev = 1.522, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.048927644799434886;  // std dev = 2.975, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.22629521622465001;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.010159603074169566;  // std dev = 0.673, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.21854666256376512;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return -0.17354147011041046;  // std dev = 0.858, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20019518827856062;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.28920194084815926;  // std dev = 2.274, 58.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   | | | else return 0.43593164918835325;  // std dev = 0.424, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.1326186386397415;  // std dev = 0.040, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.203370071633743;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.006051143005807492;  // std dev = 1.035, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.13428697832037767;  // std dev = 0.546, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17768739786269705;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.037357827196502616;  // std dev = 0.270, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(A, H), phenotype(H, I) )
%   | | | then return -0.05424647201909589;  // std dev = 1.247, 41.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | | | else return -0.004442493336111456;  // std dev = 0.831, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return -0.05676682983076127;  // std dev = 0.824, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.026676532045568625;  // std dev = 1.348, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return -0.0671016317494939;  // std dev = 0.886, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(M, A), phenotype(A, N) )
%   | | | then return -0.035031148171047584;  // std dev = 1.721, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | | | else return 0.017027129405106752;  // std dev = 2.774, 100.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=30 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( location(A, F), interaction(A, A) )
%   | | | then return 0.13461623383842689;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14596329297078867;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20123218694392353;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1868451770065278;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( interaction(A, I), complex(I, J) )
%   | | then return 0.029963184864153114;  // std dev = 0.215, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | else return -0.032973813075450754;  // std dev = 0.175, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.040460140819397916;  // std dev = 0.830, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return -0.019807468119957084;  // std dev = 2.505, 76.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=21 */
%   | | | else return 0.023767128941627323;  // std dev = 2.209, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.568', 'seconds']
Refined model CLL: -0.171767


******************************************
Best model found
******************************************
Results 

CLL : -0.174582 

AUC ROC : 0.990038 

AUC PR : 0.371038 

Precision : 0.227313 

Recall : 0.914894 

F1 : 0.36415 

Total Learning Time : 6.783 

Total Inference Time : 11.79690146446228 

Total revision time: 26.86874172782898
Best scored revision CLL: -0.171767


Results 

CLL : -0.174582 

AUC ROC : 0.990038 

AUC PR : 0.371038 

Precision : 0.227313 

Recall : 0.914894 

F1 : 0.36415 

Total Learning Time : 32.393272853851315 

Total Inference Time : 11.79690146446228 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.233
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07957750652808272;  // std dev = 4.913, 140.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=31 */
%   | | | else return 0.15035672730730365;  // std dev = 5.644, 154.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.14386322081379804;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7473839334745775;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6659873187375693;  // std dev = 0.955, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.5319045176838226;  // std dev = 0.910, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7505511758931249;  // std dev = 0.044, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6426773185660408;  // std dev = 3.898, 95.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=76 */
%   | | | else return -0.15656188310210276;  // std dev = 0.064, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.12543301544918353;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.12543301544918353;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4326288303605529;  // std dev = 1.276, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.597402920446536;  // std dev = 0.032, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09412380842498733;  // std dev = 4.402, 124.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5532181567658355;  // std dev = 2.862, 58.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   | | | else return -0.14109739273584992;  // std dev = 6.99e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8221092599134894;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.02503575460460638;  // std dev = 1.717, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.46483369610086545;  // std dev = 0.030, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.246551432782474;  // std dev = 1.254, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5114939289903065;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.46206438358094404;  // std dev = 2.204, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | else return 0.024952218826288643;  // std dev = 5.346, 264.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6722202445078056;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.04064054068037905;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.2813363693901537;  // std dev = 0.932, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.39425917819918493;  // std dev = 0.094, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13300037696958414;  // std dev = 1.520, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.07278003957001312;  // std dev = 5.890, 282.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5115039397962158;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.059972570758600525;  // std dev = 1.655, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.28541530506797586;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.29283393355430254;  // std dev = 1.026, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3748214113865497;  // std dev = 0.015, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.061453624697519374;  // std dev = 2.735, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.22483982365768374;  // std dev = 0.910, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.03389384622685031;  // std dev = 2.391, 67.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   | | | else return 0.08713922676479914;  // std dev = 4.767, 153.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.29512803616667344;  // std dev = 0.275, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.3014712947838485;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.021350510717486337;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.45811412767252035;  // std dev = 2.142, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | else return -0.1698013894943988;  // std dev = 0.374, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.12504976447464197;  // std dev = 0.923, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08605803977897682;  // std dev = 4.407, 146.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1772719416721461;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2490193921664154;  // std dev = 0.094, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3814765228363352;  // std dev = 3.362, 97.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=82 */
%   | | else return -0.15104172490894918;  // std dev = 0.314, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.2419950279940396;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.8566239657087288;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.06743609417823336;  // std dev = 1.394, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18522358354145085;  // std dev = 0.119, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.15485957340000045;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.21598508066637204;  // std dev = 0.093, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.014026792270162252;  // std dev = 1.725, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.19006768873754376;  // std dev = 0.924, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.03698242941345468;  // std dev = 1.581, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.22223116468046333;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05914827974220193;  // std dev = 3.790, 140.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | | | else return 0.1406332693276296;  // std dev = 1.291, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.018914124662555598;  // std dev = 0.922, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.1808358190746833;  // std dev = 0.093, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return -0.7478872619402738;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1780461120277992;  // std dev = 0.076, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.004410020206272069;  // std dev = 2.415, 122.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.022649072804522625;  // std dev = 0.897, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02506114373760508;  // std dev = 3.916, 154.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=47 */
%   | | | else return -0.022357020235771168;  // std dev = 1.424, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.844', 'seconds']
Parameter learned model CLL:-0.203861 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.309, 2, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.816, 1, 2], 'false,false,true,true': [4.913, 109, 31], 'false,false,true,false': [5.644, 109, 45], 'false,false,false,true': [1.69, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.955, 1, 13], 'false,true,true': [0.91, 1, 4], 'false,true,false,true': [0.044, 0, 2], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [3.898, 19, 76], 'false,false,true,false': [0.064, 187, 0], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [1.276, 2, 11], 'true,false': [0.032, 0, 6], 'false,true,true': [4.402, 90, 34], 'false,true,false,true': [2.862, 10, 48], 'false,true,false,false': [6.99e-08, 100, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.717, 15, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.03, 0, 10], 'true,false': [1.254, 2, 7], 'false,true,true,true': [0.116, 0, 3], 'false,true,true,false': [2.204, 7, 21], 'false,true,false': [5.346, 206, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.247, 7, 2], 'false,false,false,false': [0.932, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.094, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.52, 3, 10], 'false,true': [5.89, 200, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.655, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(J, A)'}, {'true,true,true': [0.033, 0, 5], 'true,true,false': [1.026, 1, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.015, 0, 2], 'false,true': [2.735, 45, 19], 'false,false,true': [0.91, 1, 8], 'false,false,false,true': [2.391, 56, 11], 'false,false,false,false': [4.767, 103, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.275, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.857, 1, 3], 'true,true,false,false': [2.142, 5, 33], 'true,false': [0.374, 99, 0], 'false,true': [0.923, 1, 5], 'false,false,true': [4.407, 99, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.094, 0, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.362, 15, 82], 'false,true,false': [0.314, 191, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [1.394, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.119, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.093, 0, 5], 'false,true,true': [1.725, 39, 13], 'false,true,false,true': [0.924, 1, 8], 'false,true,false,false': [1.581, 45, 11], 'false,false,true': [0.039, 0, 5], 'false,false,false,true': [3.79, 93, 47], 'false,false,false,false': [1.291, 5, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.922, 1, 7], 'true,true,true,false': [0.093, 0, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.076, 0, 3], 'false,true': [2.415, 90, 32], 'false,false,true': [0.897, 1, 5], 'false,false,false,true': [3.916, 107, 47], 'false,false,false,false': [1.424, 11, 4]}]
{'': [0.09418282548476423, 0.19951730491908398], 'false': [0.10937499999999978, 0.19227525721032324], 'false,false': [0.19167939284557403, 0.20408163265306106], 'false,false,false': [0.20408163265306106, nan], 'false,false,true': [0.17239795918367462, 0.2068223983808411], 'false,true': [0.0, 0.1388888888888887], 'false,true,false': [1.4802973661668753e-16, 0.22222222222222224], 'true': [0.1224489795918365, 0.0]}
{'': [0.05176398026290831, 0.2011070612136018], 'false': [0.11398409100688517, 0.19696871684281148], 'false,false': [0.19660790743029322, 0.20408163265306115], 'false,false,false': [0.20408163265306117, 0.20408163265306117], 'false,false,true': [0.1599817843451718, 2.1805230623000012e-05], 'false,true': [0.1655905717222576, 0.0008585132404309951], 'true': [0.0, 0.0650813758226432], 'false,true,false': [0.0009658273954848973, 0.0]}
{'': [0.0916145464490929, 0.16184164976730847], 'false': [0.16061246600715512, 0.1776606479061085], 'false,false': [0.1776606479061085, nan], 'false,false,true': [0.0, 0.15524489967894994], 'false,true': [0.15629374231730353, 0.16383198840322316], 'false,true,false': [0.1411907552679043, 4.884981308350689e-17], 'true': [0.12524739902852877, 0.00016670744307119753]}
{'': [0.09475584214161796, 0.13538648673218895], 'false': [0.13176020363715854, 0.20519917864999543], 'false,false': [0.0, 0.1987817354370813], 'false,false,false': [0.17283950617283947, 0.2170432637720428], 'false,true': [0.15729434447348312, 0.10824179088402487], 'false,true,true': [0.004465255053532495, 0.1734324433207961], 'true': [8.99525610091878e-05, 0.17486271838237658], 'false,false,true': [nan, 0.0]}
{'': [0.13142280828170616, 0.1266840227103005], 'true': [0.0012602340074248733, 0.17762069184857515], 'false': [0.1230214926724064, 0.19525558971765983], 'false,false': [0.0, 0.19561037907297], 'false,false,false': [0.19561037907297, nan], 'true,true': [0.0012602340074248733, nan], 'false,false,true': [nan, 0.0]}
{'': [0.06275806129798693, 0.1286335833512416], 'false': [0.11684387449719477, 0.13192445869034383], 'false,false': [0.09198158808917843, 0.13236091820690488], 'false,false,false': [0.08531502839843226, 0.1485014252777502], 'true': [0.070270821126006, 0.00011805253179783537], 'true,true': [0.00021986847956541046, 0.10527795209968689], 'true,false': [nan, 0.00011805253179783537]}
{'': [0.11198884327142693, 0.13344451480303013], 'false': [0.1419191652700964, 0.13303622749900354], 'false,false': [0.13303622749900354, nan], 'true': [0.10793171938418988, 0.0014155892267414595], 'true,true': [0.004732636324158282, 0.14320721966443625], 'true,true,false': [0.1835080802667107, 0.12079717075483735], 'true,true,true': [0.005045630604317708, 0.0]}
{'': [0.0014466923933339547, 0.10739431797570065], 'false': [0.10292460872951364, 0.19914451578240927], 'false,false': [0.3017409233311209, 0.16198254531065032], 'false,false,true': [0.0, 0.0], 'false,false,false': [0.16198254531065032, nan], 'false,true': [0.11650924877459587, 0.0005157371993008982], 'false,true,true': [nan, 0.11650924877459568], 'true': [0.0, 0.0006806057726121118]}
{'': [0.0018051363794975503, 0.08616706487053571], 'false': [0.057526531395228044, 0.105264632888895], 'false,false': [0.00030355597098734034, 0.10797464481698286], 'false,false,false': [0.10260474799232237, 0.18526763163090415], 'false,true': [0.057251698140381994, 0.05771442220473441], 'false,true,false': [0.09477793001491201, 0.04461985155370292], 'true': [0.0015780374180082589, 0.0019976640215466873], 'true,false': [0.0, 0.001729207447716441]}
{'': [0.09221258466878798, 0.08106430278141001], 'true': [0.1067399904312991, 0.0019377056318145662], 'true,true': [0.0677493143385126, 0.0], 'false': [0.047810672157555835, 0.10398340112447142], 'false,false': [0.13401806972876812, 0.10291697085744386], 'false,false,false': [0.09956762948824736, 0.1352546294059124], 'true,true,true': [0.10623432006509335, 0.001453896157569995], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 8.543
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5152917922423687;  // std dev = 2.808, 35.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=23 */
%   | | | else return -0.14185106490048766;  // std dev = 5.96e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.27675358626230306;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return 0.15138201780627805;  // std dev = 5.250, 133.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=39 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7641072739982948;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6128073108134792;  // std dev = 3.958, 96.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=76 */
%   | | | else return -0.15813915277144888;  // std dev = 0.317, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.11393458143363913;  // std dev = 1.632, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.222033103412951;  // std dev = 0.471, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.1191102539701876;  // std dev = 3.714, 85.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
%   | | | else return -0.02044503994925336;  // std dev = 1.936, 45.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6501734642741067;  // std dev = 1.712, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.1388196731471653;  // std dev = 0.207, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.24107274436844112;  // std dev = 1.458, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.0506331429050032;  // std dev = 0.605, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1770573029138074;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.45054260542230323;  // std dev = 0.040, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3131567224483057;  // std dev = 0.340, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.2880980434316903;  // std dev = 4.513, 127.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=76 */
%   | | | else return -0.13438438926635154;  // std dev = 0.501, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.0032329895375162367;  // std dev = 1.326, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.11505302619673298;  // std dev = 0.832, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5317349447336186;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.1051158331116188;  // std dev = 1.072, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.1897378060470639;  // std dev = 1.048, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.2037089769193255;  // std dev = 0.325, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.37169475537762625;  // std dev = 0.038, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), location(A, G) )
%   | | then if ( interaction(F, H), enzyme(H, I) )
%   | | | then return 0.054861505928365674;  // std dev = 3.091, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | | | else return -0.07275695143822526;  // std dev = 1.835, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.14680420341103756;  // std dev = 3.022, 70.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=29 */
%   | | | else return 0.07049398827543539;  // std dev = 2.604, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4002018116858832;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.14305862213874493;  // std dev = 1.013, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.009259431764716549;  // std dev = 1.157, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.34614234627121354;  // std dev = 0.081, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( phenotype(D, F), interaction(D, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.15398593229621615;  // std dev = 0.399, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.05646011554024392;  // std dev = 1.478, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.30536201632738547;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.013033614842398166;  // std dev = 3.028, 92.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( complex(H, J), phenotype(A, I) )
%   | | | then return -0.012842625539194357;  // std dev = 2.093, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.08874245392875253;  // std dev = 3.291, 104.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=38 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.11577091806311143;  // std dev = 0.922, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.19480383898000014;  // std dev = 1.202, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2743889126266097;  // std dev = 0.073, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.44948061762876046;  // std dev = 1.557, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | | else return 0.6813059060912339;  // std dev = 0.087, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.15826966880501733;  // std dev = 0.102, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.24663404859262092;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4979609010429562;  // std dev = 0.332, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.15338381086988848;  // std dev = 0.398, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.06475704727612286;  // std dev = 1.031, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.03472166698074519;  // std dev = 3.045, 90.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1668982239959087;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.192165968045094;  // std dev = 0.020, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.3997967782896079;  // std dev = 1.392, 34.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   | | | else return 0.2834385544152929;  // std dev = 2.483, 60.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=51 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return -0.10063189281067075;  // std dev = 0.167, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.14377706378037006;  // std dev = 0.605, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.19382309103291784;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.040611684575941824;  // std dev = 1.196, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.11442672681772588;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16449038089698131;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.1345167381980987;  // std dev = 0.888, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.03192628849600262;  // std dev = 0.956, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.10317883346343823;  // std dev = 2.361, 45.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=30 */
%   | | | else return -0.0978475315902243;  // std dev = 0.356, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0.20394647834909652;  // std dev = 0.391, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1745120633926527;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.012268755227928984;  // std dev = 2.877, 114.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=34 */
%   | | | else return 0.04969462995848312;  // std dev = 1.798, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1312476623609094;  // std dev = 0.017, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.013419543314340254;  // std dev = 1.155, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.060979130909272816;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(F, H), interaction(H, H) )
%   | | then return -0.019440793110959708;  // std dev = 0.276, 188.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=55 */
%   | | else return 0.019423256267678584;  // std dev = 0.193, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | else if ( enzyme(A, I) )
%   | | then if ( interaction(A, J) )
%   | | | then return -0.03832888344944303;  // std dev = 1.147, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.002992371045391594;  // std dev = 0.573, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.02651108066652384;  // std dev = 0.256, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '6.386', 'seconds']
Refined model CLL: -0.189098


******************************************
Best model found
******************************************
Results 

CLL : -0.167942 

AUC ROC : 0.990791 

AUC PR : 0.375013 

Precision : 0.256921 

Recall : 0.875472 

F1 : 0.39726 

Total Learning Time : 8.543 

Total Inference Time : 68.75511574745178 

Total revision time: 86.40404698944091
Best scored revision CLL: -0.189098


Results 

CLL : -0.167942 

AUC ROC : 0.990791 

AUC PR : 0.375013 

Precision : 0.256921 

Recall : 0.875472 

F1 : 0.39726 

Total Learning Time : 91.92857811546325 

Total Inference Time : 68.75511574745178 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.476
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1005731775237548;  // std dev = 2.462, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.12808758540625984;  // std dev = 5.668, 163.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.27119241336038186;  // std dev = 3.339, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8235105130119058;  // std dev = 0.991, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15769599294941716;  // std dev = 0.014, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.1581981051336059;  // std dev = 1.824, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.2630082535044076;  // std dev = 2.895, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0752147435976129;  // std dev = 2.060, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6881596840530199;  // std dev = 0.277, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13828492958498384;  // std dev = 8.94e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13124605546949103;  // std dev = 3.566, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.06004761992920027;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3856150648474185;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4118648236381098;  // std dev = 0.629, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.0523260462553231;  // std dev = 4.222, 197.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5227671447847979;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.04258726475750907;  // std dev = 1.923, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.14129359580497214;  // std dev = 3.038, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.0400838365187177;  // std dev = 4.332, 213.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.39373584561602626;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.035563983582915785;  // std dev = 3.653, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | | else return 0.29375085403849854;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.052826242342955076;  // std dev = 0.440, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.3095690807977659;  // std dev = 0.077, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.31979829393124076;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06486447046010271;  // std dev = 1.022, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.03813116599792945;  // std dev = 2.789, 89.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=23 */
%   | | | else return 0.06724618507117087;  // std dev = 4.646, 148.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2373898603006197;  // std dev = 0.161, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.11895369270836753;  // std dev = 0.834, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6310700904710977;  // std dev = 0.634, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19620331804348162;  // std dev = 0.966, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04907969852474437;  // std dev = 3.427, 123.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1731054375757407;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.1757661443554318;  // std dev = 0.006, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.45280441010621203;  // std dev = 0.759, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.13554059942518926;  // std dev = 0.206, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.09828781203432946;  // std dev = 0.835, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.009152870827154425;  // std dev = 3.047, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16213932232606845;  // std dev = 0.084, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.12994179445924003;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.20478817272597968;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.05409228557509166;  // std dev = 0.441, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.21236697700375173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.031108310546205543;  // std dev = 1.283, 69.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15291610289271884;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02996558568856634;  // std dev = 2.751, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
%   | | | else return -0.03711451873044226;  // std dev = 3.156, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13009888462536906;  // std dev = 0.000330, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2017979310706974;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.1302193091159506;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14195548426036275;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.018347462511983496;  // std dev = 1.376, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.13414148449564967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03315128518253385;  // std dev = 2.651, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
%   | | | else return 0.02195458574418867;  // std dev = 3.026, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.557', 'seconds']
Parameter learned model CLL:-0.175857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.462, 25, 8], 'false,false,true,false': [5.668, 119, 44], 'false,false,false,true': [3.339, 27, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 9], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [0.991, 1, 52], 'false,false,true,false': [0.014, 138, 0], 'false,false,false,true': [1.824, 10, 5], 'false,false,false,false': [2.895, 19, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.06, 24, 8], 'false,true,false,true': [0.277, 0, 48], 'false,true,false,false': [8.94e-08, 114, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.566, 37, 20], 'false,false,false,true': [0.866, 3, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [3.33e-08, 0, 9], 'true,false': [1.49e-08, 0, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.629, 1, 3], 'false,true,false': [4.222, 145, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.923, 14, 5], 'false,false,false,false': [3.038, 24, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 9], 'false,true': [4.332, 157, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.653, 45, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [7.45e-09, 0, 6], 'true,true,false': [0.44, 1, 1], 'true,false,true,true': [0.077, 0, 2], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.055, 0, 3], 'false,true': [1.022, 20, 3], 'false,false,true': [7.45e-09, 0, 6], 'false,false,false,true': [2.789, 66, 23], 'false,false,false,false': [4.646, 102, 46]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.161, 0, 12], 'true,true,true,false': [0.834, 1, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.634, 0, 36], 'true,false': [0.966, 124, 0], 'false,true': [0.0, 0, 5], 'false,false,true': [3.427, 87, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.006, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.759, 0, 56], 'false,true,false': [0.206, 156, 0], 'false,false,true,true': [0.835, 1, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.047, 45, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.084, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.102, 0, 4], 'false,true,true': [0.441, 5, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.283, 55, 14], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.751, 80, 36], 'false,false,false,false': [3.156, 60, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.00033, 0, 5], 'true,true,true,false': [0.066, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.05, 0, 4], 'false,true': [1.376, 57, 17], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.651, 77, 36], 'false,false,false,false': [3.026, 44, 20]}]
{'': [-2.5376526277146434e-16, 0.21418707639561338], 'false': [-1.4802973661668753e-16, 0.20751353602665693], 'false,false': [0.19491878384006744, 0.241566014160766], 'false,false,false': [0.24243856332703168, 0.22222222222222224], 'false,false,true': [0.1836547291092747, 0.1970717753773203], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [0.0, 0.21200125168969772], 'false': [0.12244897959183687, 0.20916921570002514], 'false,false': [0.19816710052190956, 0.24128201378916997], 'false,false,false': [0.22174202138419272, 0.24653979238754276], 'false,false,true': [0.01853428599654195, 1.4939109964318291e-06], 'false,true': [0.0, 0.22222222222222224], 'false,true,false': [0.0, 0.0], 'true': [0.0, -9.868649107779169e-17]}
{'': [-2.5376526277146434e-16, 0.1606622443305353], 'false': [0.14132814763683088, 0.2203793422287882], 'false,false': [0.22224920858858702, 0.18750000000000003], 'false,false,true': [0.0, 0.22304697099715293], 'false,false,false': [0.18750000000000003, nan], 'false,true': [0.1326196121748893, 0.1428860011804695], 'false,true,false': [0.0016030951391159398, 7.011934892369409e-17], 'true': [-3.700743415417188e-17, -5.551115123125783e-17]}
{'': [1.2688263138573217e-16, 0.12330188157367804], 'false': [0.09321630148610678, 0.2218234347329377], 'false,false': [0.002769578006138418, 0.22502861102996885], 'false,false,false': [0.19454819758317765, 0.23668639053254387], 'false,true': [0.07929464317405568, 0.09046269821707308], 'false,true,true': [0.0, 0.09898049400025566], 'false,false,true': [0.0, 0.0], 'true': [1.2335811384723962e-16, 4.4408920985006264e-17]}
{'': [-3.172065784643304e-17, 0.11721927016646594], 'false': [0.08810264291477377, 0.2083037305878594], 'false,false': [0.001333126087620956, 0.21167871278350048], 'false,false,false': [0.2084611586162986, 0.25000000000000006], 'false,false,true': [0.0, 0.0], 'true': [-2.2204460492503132e-17, -3.700743415417188e-17], 'true,true': [-2.2204460492503132e-17, nan]}
{'': [0.020146469552169352, 0.11662115377409535], 'false': [0.045452723110175605, 0.12198262110292729], 'false,false': [9.25185853854297e-18, 0.12409436603676217], 'false,false,false': [0.0874271162419446, 0.1458259375344561], 'true': [0.03187895656555341, 0.0020428766396284803], 'true,true': [9.25185853854297e-18, 0.09680789840645615], 'true,false': [0.0022192620069249464, 0.0010072232038069173], 'true,false,true': [0.0029590160092332757, 0.0]}
{'': [0.12456436335136414, 0.09273062479332717], 'true': [0.07300075898418178, 0.007532361063647978], 'false': [-5.551115123125783e-18, 0.09549166921539202], 'false,false': [0.09549166921539202, nan], 'true,true': [0.06835562322798516, 0.015542019278976677], 'true,true,true': [0.00215234931891393, 0.23158413664741506], 'true,true,false': [0.0, 0.01117633346396617]}
{'': [3.900872149456955e-06, 0.08896250047249382], 'false': [0.07020026290684228, 0.14727560561439043], 'false,false': [0.23222711018807748, 0.1428454948682113], 'false,false,true': [0.23222711018807748, nan], 'false,false,false': [0.1428454948682113, nan], 'false,true': [0.010284394251531445, 0.00027271395228288493], 'false,true,true': [nan, 0.010284394251531477], 'true': [0.0, 3.539680283745936e-06]}
{'': [0.0017365089864272948, 0.07149471433925271], 'false': [0.0254786059345282, 0.08882295800981793], 'false,false': [-2.7755575615628915e-18, 0.09052668177343476], 'false,false,false': [0.06525207638315708, 0.12451174791878458], 'false,true': [0.03245073497265053, 0.024820016799585808], 'false,true,false': [0.0, 0.023869572346877387], 'true': [0.0007773734648380518, 0.002970422230762504], 'true,false': [0.0, 0.0025926317205235486]}
{'': [0.0012785311674352595, 0.07135967773545886], 'false': [0.02557788681098524, 0.08924185351142375], 'false,false': [0.0, 0.09145970176447328], 'false,false,false': [0.06219347045020174, 0.14305285545783383], 'true': [0.0015096930756296784, 0.0006337348367399416], 'true,true': [0.0017438249068266187, 0.0], 'true,true,true': [2.175308689567057e-08, 0.0014371927081619634], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 2.948
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( enzyme(H, J), enzyme(A, J) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.11621345122854335;  // std dev = 5.448, 155.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=40 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.17633075328133013;  // std dev = 3.784, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | | else return 0.31648226843284566;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.7609104304538484;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8192726058393147;  // std dev = 0.988, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15741005635101465;  // std dev = 0.193, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.22058251577342491;  // std dev = 3.413, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return 0.03530054233495232;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5788469100331285;  // std dev = 0.081, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5540846504749204;  // std dev = 0.003, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12149806886900182;  // std dev = 0.041, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.19929525294473172;  // std dev = 1.841, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6623474199876966;  // std dev = 1.011, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.13937125899085498;  // std dev = 0.124, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11400403567142252;  // std dev = 3.657, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | else return 0.08038646740517438;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4248244130793423;  // std dev = 0.024, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.39174817312472054;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5870573658906314;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.13685780204601744;  // std dev = 0.295, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.05523936473643021;  // std dev = 4.188, 189.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5270669180515937;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return -0.03953752639803466;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.16034888779015466;  // std dev = 3.256, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.340438900722931;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.31939980770706344;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3170167712523574;  // std dev = 0.009, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A) )
%   | then return 0.07104450923905013;  // std dev = 0.306, 181.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=56 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.39682947396369517;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.049418033967314194;  // std dev = 2.388, 40.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=7 */
%   | | | else return 0.2370866335435224;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.2650817640202586;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.3061583392322882;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.04956912919314538;  // std dev = 0.935, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(A, H), enzyme(H, I) )
%   | | then return -0.09599368822562461;  // std dev = 0.009, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.10148644499384693;  // std dev = 0.633, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.05299008843618071;  // std dev = 0.471, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2537241185758214;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return 0.13896537600534023;  // std dev = 2.067, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.04648479414207503;  // std dev = 4.945, 195.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=57 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2448074465546565;  // std dev = 0.049, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2092163822050046;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6216241672755756;  // std dev = 0.728, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19813465904678704;  // std dev = 0.081, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.20863850855464836;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( location(G, I), location(H, I) )
%   | | | then return 0.08334201747382296;  // std dev = 2.754, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   | | | else return -0.05539246421506453;  // std dev = 0.831, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.02819451201566925;  // std dev = 0.779, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.08433249237688027;  // std dev = 1.265, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1754153477096232;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.330336864696;  // std dev = 0.280, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.4895785002846935;  // std dev = 0.292, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.13848407545142208;  // std dev = 0.313, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.14665544607292735;  // std dev = 0.260, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5422915122809508;  // std dev = 0.416, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.24021916085304107;  // std dev = 0.151, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( location(A, J) )
%   | | | then return 0.032983625912667444;  // std dev = 2.039, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.09658018845863248;  // std dev = 0.903, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15095585897403907;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1983692872033595;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( enzyme(A, G), complex(A, H) )
%   | | | then return -0.0399629044246829;  // std dev = 0.336, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.07214233242128161;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.19304984290467903;  // std dev = 0.017, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.03237181512357948;  // std dev = 1.511, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.15223210053311337;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.011233952418669467;  // std dev = 2.330, 94.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=27 */
%   | | | else return -0.0484876971588726;  // std dev = 3.225, 116.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14014665698342635;  // std dev = 0.030, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.01704434048442145;  // std dev = 0.791, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, H) )
%   | | then if ( interaction(H, I) )
%   | | | then return -0.04114394373799758;  // std dev = 0.976, 54.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=9 */
%   | | | else return 0.0891087015030665;  // std dev = 0.682, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.06477116530920662;  // std dev = 0.574, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.10110913834826749;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.133607574100069;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), phenotype(A, N) )
%   | | | then return 0.06025730883871629;  // std dev = 1.444, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.01282856415009357;  // std dev = 3.471, 144.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=43 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.954', 'seconds']
Refined model CLL: -0.172581


******************************************
Best model found
******************************************
Results 

CLL : -0.198316 

AUC ROC : 0.982504 

AUC PR : 0.19601 

Precision : 0.131857 

Recall : 0.945848 

F1 : 0.231449 

Total Learning Time : 2.948 

Total Inference Time : 2.81984543800354 

Total revision time: 9.95843694114685
Best scored revision CLL: -0.172581


Results 

CLL : -0.198316 

AUC ROC : 0.982504 

AUC PR : 0.19601 

Precision : 0.131857 

Recall : 0.945848 

F1 : 0.231449 

Total Learning Time : 15.482968067169189 

Total Inference Time : 2.81984543800354 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.515
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07126368919787303;  // std dev = 3.198, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | | else return 0.15814893509951178;  // std dev = 5.225, 130.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.09499104036267027;  // std dev = 2.621, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7324548349452545;  // std dev = 0.070, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7670719622367217;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4813730497173963;  // std dev = 0.881, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7865761978783141;  // std dev = 1.670, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.15828940713714895;  // std dev = 0.066, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.22780726886658634;  // std dev = 1.755, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.1477133867385;  // std dev = 2.204, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5588443971225469;  // std dev = 0.057, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3885860069349682;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.04768270384490357;  // std dev = 2.808, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6725607716926763;  // std dev = 0.993, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14183396619228003;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7003659991668606;  // std dev = 0.161, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.02983803757919491;  // std dev = 2.604, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.13941096108457146;  // std dev = 1.417, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.41561741621618253;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3530579851915144;  // std dev = 0.954, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6243441441613836;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6003056741153286;  // std dev = 0.190, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.028656078850807693;  // std dev = 4.425, 214.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4670320100230563;  // std dev = 0.050, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6060264788150763;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.09774491266472422;  // std dev = 1.877, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.12705591826247795;  // std dev = 2.145, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32489379092470017;  // std dev = 0.017, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.38435061923580244;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.05378693102999233;  // std dev = 4.457, 205.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3224317266737584;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4219910829216807;  // std dev = 0.048, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.004780716187069812;  // std dev = 2.633, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | | else return 0.036903463912298456;  // std dev = 1.478, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25138181616934285;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3282511751599768;  // std dev = 0.158, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2563454557930449;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.31512097864668326;  // std dev = 0.126, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.14904013427285634;  // std dev = 1.046, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06607979142885909;  // std dev = 1.225, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.31040361629522584;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.08450762382108269;  // std dev = 2.202, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | | else return 0.07732653752202684;  // std dev = 4.475, 153.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2604727270014115;  // std dev = 0.296, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2652233247798988;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.23922851598146463;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5772364875547652;  // std dev = 1.089, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1675251826867725;  // std dev = 0.412, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.015362753302170323;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06623387693835585;  // std dev = 3.381, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16954822015147442;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.20006838724954443;  // std dev = 0.135, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44294331949771776;  // std dev = 1.254, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.13969549222087238;  // std dev = 0.195, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.16986005346172572;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.0529459159519177;  // std dev = 0.721, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.041705199467396176;  // std dev = 2.501, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15040180139208997;  // std dev = 0.059, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.23116049040009823;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.22720258569173887;  // std dev = 0.111, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09568960710158593;  // std dev = 0.289, 28.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2316526724334206;  // std dev = 0.170, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.034661445143485875;  // std dev = 1.564, 77.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.22315043779494728;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03540477619754972;  // std dev = 2.766, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   | | | else return 0.06791540141487123;  // std dev = 2.401, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12629168213664904;  // std dev = 0.008, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.15594097406174917;  // std dev = 0.038, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.11021550388922452;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20518561599267093;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.20775713824864459;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -6.139730137587668E-4;  // std dev = 1.539, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18689315141633767;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03517737520043438;  // std dev = 2.763, 92.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | | else return 0.013755468527920962;  // std dev = 2.471, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.938', 'seconds']
Parameter learned model CLL:-0.179392 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.866, 1, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.198, 48, 13], 'false,false,true,false': [5.225, 91, 39], 'false,false,false,true': [2.621, 29, 9], 'false,false,false,false': [1.414, 6, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.07, 0, 11], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [0.881, 1, 3], 'false,false,true,true': [1.67, 3, 52], 'false,false,true,false': [0.066, 149, 0], 'false,false,false,true': [1.755, 8, 5], 'false,false,false,false': [2.204, 16, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.057, 0, 11], 'true,false': [0.869, 1, 4], 'false,true,true': [2.808, 52, 14], 'false,true,false,true': [0.993, 1, 42], 'false,true,false,false': [0.0, 73, 0], 'false,false,true,true': [0.161, 0, 3], 'false,false,true,false': [2.604, 33, 9], 'false,false,false,true': [1.417, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.004, 0, 6], 'true,false': [0.954, 1, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.19, 0, 6], 'false,true,false': [4.425, 165, 49], 'false,false,true,true': [0.05, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.877, 12, 5], 'false,false,false,false': [2.145, 15, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.017, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.095, 0, 6], 'false,true': [4.457, 149, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.048, 0, 2], 'false,false,false,true': [2.633, 34, 9], 'false,false,false,false': [1.478, 8, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.012, 0, 5], 'true,true,false': [0.158, 0, 3], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.126, 0, 3], 'true,false,false': [1.046, 1, 4], 'false,true': [1.225, 30, 5], 'false,false,true': [0.054, 0, 5], 'false,false,false,true': [2.202, 27, 13], 'false,false,false,false': [4.475, 106, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.296, 0, 13], 'true,true,true,false': [0.079, 0, 3], 'true,true,false,true': [0.031, 0, 3], 'true,true,false,false': [1.089, 1, 33], 'true,false': [0.412, 105, 0], 'false,true': [0.857, 1, 3], 'false,false,true': [3.381, 66, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.135, 0, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.254, 1, 56], 'false,true,false': [0.195, 138, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.721, 1, 2], 'false,false,false,true': [2.501, 29, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.059, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.111, 0, 5], 'false,true,true': [0.289, 27, 1], 'false,true,false,true': [0.17, 0, 6], 'false,true,false,false': [1.564, 60, 17], 'false,false,true': [0.024, 0, 3], 'false,false,false,true': [2.766, 66, 31], 'false,false,false,false': [2.401, 25, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.008, 0, 8], 'true,true,true,false': [0.038, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.018, 0, 2], 'true,false': [0.034, 0, 3], 'false,true': [1.539, 59, 24], 'false,false,true': [0.021, 0, 3], 'false,false,false,true': [2.763, 61, 31], 'false,false,false,false': [2.471, 32, 12]}]
{'': [0.05859374999999978, 0.20531760195650772], 'false': [0.10937499999999978, 0.196596285573054], 'false,false': [0.19813053370247607, 0.19013128112267944], 'false,false,true': [0.16769685568395537, 0.21000000000000046], 'false,false,false': [0.18074792243767326, 0.2222222222222221], 'false,true': [0.0, 0.12244897959183662], 'false,true,false': [0.18750000000000006, 1.4802973661668753e-16], 'true': [-1.4802973661668753e-16, 0.18750000000000006]}
{'': [0.0003624995143289548, 0.20036342524163434], 'false': [0.18039461476137303, 0.19519428618763796], 'false,false': [0.18949755284927572, 0.22201093949591633], 'false,false,false': [0.2370235825775812, 0.21120899394208897], 'false,false,true': [0.050710552128118994, 2.9586949516787134e-05], 'false,true': [0.0, 0.2082446516712327], 'false,true,false': [0.22222222222222224, 0.19387462287157514], 'true': [0.0, 0.00044937956321764653]}
{'': [0.0536709218225227, 0.1589132587306529], 'false': [0.15026623353810895, 0.1871679570521449], 'false,false': [0.1792620150429437, 0.22319078847513765], 'false,false,false': [0.22319078847513765, nan], 'false,false,true': [0.008610920590650903, 0.16147752911433264], 'false,true': [0.11946374206795125, 0.1632126766100042], 'false,true,false': [0.022911631414581426, 0.0], 'true': [0.0002941318011920576, 0.15117066526182982]}
{'': [0.05782971125692815, 0.11700024600275367], 'false': [0.09889422695519147, 0.20454202906167107], 'false,false': [0.005133189896253813, 0.20850487213798075], 'false,false,false': [0.20731065704159293, 0.20905317994744735], 'false,true': [0.0052101500891329955, 0.09148332665464946], 'true': [2.2074591887003927e-06, 0.09105858263177305], 'false,true,true': [0.0, 0.005995958717014045], 'false,false,true': [0.0012599640594553319, 0.0]}
{'': [0.0014712486352670565, 0.11231806237237289], 'false': [0.09690014134467817, 0.16736900574052424], 'false,false': [0.002985834891796694, 0.16900185431470843], 'false,false,false': [0.16124090586480674, 0.1985184323531598], 'false,false,true': [0.0, 0.0011747305321947732], 'true': [3.309727887826044e-05, 0.0015074070101605923], 'true,true': [3.309727887826044e-05, nan]}
{'': [0.07165314634615381, 0.11725614572016618], 'false': [0.042902937155159755, 0.12698600289802292], 'false,false': [0.0005915877217813504, 0.12890609186674865], 'false,false,false': [0.12125303431031167, 0.1308962035594246], 'true': [0.004539023272520454, 0.1293895603150743], 'true,false': [0.004631126500030405, 0.21901052391541143], 'true,false,true': [0.0, 0.005311194811694231], 'true,true': [2.9084901949816278e-05, 0.008362525753702166]}
{'': [0.1056034656706423, 0.120538352350991], 'false': [0.18363586076502217, 0.1178339032918268], 'false,false': [0.1178339032918268, nan], 'true': [0.04762221220882289, 0.0016181812504229252], 'true,true': [0.005858884123411026, 0.04056106560116966], 'true,true,false': [0.00031359791376660745, 0.03484884878948257], 'true,true,true': [0.006732329339933037, 0.002055618206172588]}
{'': [0.0013953282582417866, 0.09217835864569322], 'false': [0.0784861610841802, 0.1514639296751081], 'false,false': [0.13923266718334534, 0.15252237263123453], 'false,false,false': [0.15252237263123453, nan], 'false,false,true': [0.0, 0.17323293124287212], 'false,true': [0.02760137927073078, 0.00027468507039649613], 'false,true,true': [nan, 0.02760137927073075], 'true': [0.0, 0.0016543255255628123]}
{'': [0.0023957277798457993, 0.06879739616875716], 'false': [0.027831464480533915, 0.098833888795531], 'false,false': [0.00018715767739684494, 0.10034258089709286], 'false,false,false': [0.07888247827667093, 0.15583775102642738], 'false,true': [0.002980354223128415, 0.034589245174690135], 'false,true,false': [0.0047932386304028645, 0.031784032938586386], 'true': [0.0003535971010206945, 0.0020492045340579634], 'true,false': [0.0, 0.0024564346059228305]}
{'': [0.0015569826420256706, 0.07320747252703964], 'false': [0.028538611960456733, 0.09949055464245077], 'false,false': [0.00014320147489313428, 0.10113883149558163], 'false,false,false': [0.08298013111799307, 0.1387965921363472], 'true': [0.0010118236441826402, 0.0003797528782345054], 'true,true': [0.00028885528768016753, 0.0021091805235540217], 'true,true,false': [0.0, 0.0001573300543506323], 'true,true,true': [8.238722437582668e-06, 0.0007080571393226695]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.22
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.028691570758426797;  // std dev = 4.272, 129.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=22 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.13756069980539468;  // std dev = 3.700, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | | else return 0.212315601766179;  // std dev = 3.313, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7670719622367216;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7941546747331153;  // std dev = 1.458, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.1546721110079446;  // std dev = 0.116, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.23923569617106216;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.15686854578262188;  // std dev = 2.156, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5652184053346796;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return -0.0325200968640509;  // std dev = 1.377, 31.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | | else return 0.18564582632349036;  // std dev = 2.084, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6652670349512644;  // std dev = 1.030, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14025544690594757;  // std dev = 0.328, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.8214185129310545;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.18218211172893284;  // std dev = 0.029, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16629471115538746;  // std dev = 2.251, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.41511958974394436;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.08178625641061103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.4293562118874274;  // std dev = 0.023, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.05996632150496034;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.3254483681382834;  // std dev = 0.346, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.06960260558137235;  // std dev = 0.326, 168.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=49 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.020409044756351545;  // std dev = 1.970, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.2133501131328086;  // std dev = 1.812, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3388364988523067;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2208404079499605;  // std dev = 0.373, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then return -0.030891626316923135;  // std dev = 0.217, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.12786758971254117;  // std dev = 1.729, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.06945588987421562;  // std dev = 3.742, 141.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=44 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.012621486173183668;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.0351840259754292;  // std dev = 1.913, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.17602849406589144;  // std dev = 1.807, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.2913521204254105;  // std dev = 0.081, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3218289862894136;  // std dev = 0.043, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.08022549962429502;  // std dev = 0.440, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.12788502403654414;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.04499871684883173;  // std dev = 0.407, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06763237669333019;  // std dev = 0.825, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.3179851684162956;  // std dev = 0.127, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.06036362960095493;  // std dev = 3.647, 123.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | | | else return 0.012112201335003745;  // std dev = 3.324, 91.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=24 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2465339522166936;  // std dev = 0.059, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.5256625987327139;  // std dev = 0.190, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.16315507289161696;  // std dev = 0.075, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.49181063708539324;  // std dev = 0.096, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.18015102900777816;  // std dev = 0.085, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5289420019346066;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.21323261251313022;  // std dev = 0.218, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.017659912935866516;  // std dev = 1.680, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return -0.04662224145309186;  // std dev = 0.928, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1631898584565824;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, E) )
%   | | then return -0.0608451977134086;  // std dev = 0.750, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.19535919412143588;  // std dev = 0.041, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.5321718656215559;  // std dev = 0.228, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.38612098078495394;  // std dev = 0.505, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | else return -0.13172688407453487;  // std dev = 0.030, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.19625158094733733;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.05402633342516634;  // std dev = 1.960, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return -0.06714421600924102;  // std dev = 1.213, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15223720851924488;  // std dev = 0.021, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.19926284460506283;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.0768920884801628;  // std dev = 0.265, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | | else return -0.008211869510104112;  // std dev = 0.549, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.011081861386872368;  // std dev = 1.391, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | | else return 0.056557227693960085;  // std dev = 0.515, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.17734600187989902;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.010417607018644625;  // std dev = 1.803, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.025228717058268756;  // std dev = 2.683, 110.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14582855338698983;  // std dev = 0.033, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.049299908211975135;  // std dev = 0.700, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.006872420096589504;  // std dev = 0.679, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return -0.08951196309814524;  // std dev = 0.592, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.040895623322153865;  // std dev = 1.143, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return -0.02295313627561589;  // std dev = 0.745, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.1530570044888071;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.023464936818278746;  // std dev = 1.597, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return -0.016345313065769255;  // std dev = 2.957, 112.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21.887', 'seconds']
Refined model CLL: -0.167826


******************************************
Best model found
******************************************
Results 

CLL : -0.187716 

AUC ROC : 0.986769 

AUC PR : 0.239848 

Precision : 0.15091 

Recall : 0.908127 

F1 : 0.258812 

Total Learning Time : 3.22 

Total Inference Time : 3.672888994216919 

Total revision time: 11.531642780303955
Best scored revision CLL: -0.167826


Results 

CLL : -0.187716 

AUC ROC : 0.986769 

AUC PR : 0.239848 

Precision : 0.15091 

Recall : 0.908127 

F1 : 0.258812 

Total Learning Time : 17.056173906326293 

Total Inference Time : 3.672888994216919 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.293
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.13087620782678364;  // std dev = 4.899, 121.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=33 */
%   | | | else return 0.15814893509951114;  // std dev = 5.020, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.039967116917694;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7353395955528769;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7505511758931249;  // std dev = 0.044, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.28162893957529533;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.641948391256936;  // std dev = 3.692, 86.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=69 */
%   | | | else return -0.16039079128714384;  // std dev = 0.021, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.06810909634892866;  // std dev = 1.513, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.35321377852455527;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5600181218188023;  // std dev = 0.056, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5919392378865646;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08226186711528;  // std dev = 4.416, 130.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6797253446522086;  // std dev = 1.377, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.14157838428024389;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.18637451934254187;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3136254806574581;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.13546594193505232;  // std dev = 1.333, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.43558501554170315;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.285007292835131;  // std dev = 0.886, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4490420249586152;  // std dev = 1.918, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else return 0.0606260858889359;  // std dev = 5.029, 217.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return -0.40668792371909246;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5960822229451995;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.10004824569892648;  // std dev = 1.417, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.01902570096062798;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3370680387943268;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15395257332305678;  // std dev = 0.914, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.07698132727465563;  // std dev = 5.471, 235.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4484550362250409;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.14270358625885934;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.03127428504265886;  // std dev = 1.285, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.260823385845726;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.37162160732031807;  // std dev = 0.270, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27376929362043256;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.34178044722557344;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.007711349878480382;  // std dev = 2.449, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.09687393441917941;  // std dev = 0.842, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.09548217737751294;  // std dev = 2.830, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return 0.09420618830464994;  // std dev = 4.100, 121.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2549478870342508;  // std dev = 0.275, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.26950205037413977;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5720107104766632;  // std dev = 1.073, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.18857871027762754;  // std dev = 0.622, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.31859133990686966;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04226607297975399;  // std dev = 4.102, 136.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17081967132164877;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.20374638472722334;  // std dev = 0.113, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4553849031600413;  // std dev = 1.967, 76.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=71 */
%   | | else return -0.1553769468831129;  // std dev = 0.251, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.21983083144217563;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.0687714841273376;  // std dev = 1.360, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1585658193065368;  // std dev = 0.097, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.34072299317640353;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.20917046583306884;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.016773301124640233;  // std dev = 1.434, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.35416204130342144;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.0036263939907247547;  // std dev = 1.654, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.21718313573537348;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.026421740732096653;  // std dev = 3.499, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
%   | | | else return 0.0370473767696256;  // std dev = 1.398, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.127164923350679;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.21941313600055412;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1772291316626078;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.03899152881161879;  // std dev = 2.586, 118.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.18254600433692736;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.021441360650471027;  // std dev = 3.519, 120.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=40 */
%   | | | else return 0.009527282249936877;  // std dev = 1.396, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.762', 'seconds']
Parameter learned model CLL:-0.196154 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.816, 1, 2], 'false,false,true,true': [4.899, 88, 33], 'false,false,true,false': [5.02, 84, 36], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.279, 9, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.067, 0, 9], 'false,true,true': [0.044, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.707, 1, 1], 'false,false,true,true': [3.692, 17, 69], 'false,false,true,false': [0.021, 135, 0], 'false,false,false,true': [1.513, 10, 3], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.056, 0, 8], 'true,false': [0.05, 0, 3], 'false,true,true': [4.416, 96, 34], 'false,true,false,true': [1.377, 2, 37], 'false,true,false,false': [0.0, 72, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [1.0, 2, 2], 'false,false,false,true': [1.333, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.064, 0, 5], 'true,false': [0.886, 1, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.918, 5, 14], 'false,true,false': [5.029, 160, 57], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.417, 7, 3], 'false,false,false,false': [0.894, 4, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.036, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.914, 1, 4], 'false,true': [5.471, 164, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.285, 10, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.026, 0, 4], 'true,true,false': [0.27, 0, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [2.449, 40, 12], 'false,false,true': [0.842, 1, 3], 'false,false,false,true': [2.83, 41, 20], 'false,false,false,false': [4.1, 80, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.275, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.073, 1, 33], 'true,false': [0.622, 90, 0], 'false,true': [0.025, 0, 3], 'false,false,true': [4.102, 96, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.016, 0, 3], 'true,false': [0.113, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.967, 5, 71], 'false,true,false': [0.251, 172, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.36, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.097, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.099, 0, 3], 'false,true,true': [1.434, 35, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.654, 43, 17], 'false,false,true': [0.019, 0, 3], 'false,false,false,true': [3.499, 82, 40], 'false,false,false,false': [1.398, 8, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.016, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.087, 0, 3], 'false,true': [2.586, 89, 29], 'false,false,true': [0.017, 0, 3], 'false,false,false,true': [3.519, 80, 40], 'false,false,false,false': [1.396, 10, 4]}]
{'': [0.07638888888888877, 0.20639743984967948], 'false': [0.18750000000000006, 0.20336416902602744], 'false,false': [0.20433532480501398, 0.18749999999999983], 'false,false,true': [0.1983471074380178, 0.21000000000000116], 'false,true': [nan, 0.18750000000000006], 'false,true,false': [0.0, 0.22222222222222224], 'false,false,false': [0.24000000000000005, 0.14876033057851243], 'true': [-2.220446049250313e-16, 0.18750000000000006]}
{'': [0.00044937956321764653, 0.2152417537765026], 'false': [0.18045492962607107, 0.21358454282213002], 'false,false': [0.2146963270641528, 0.19524776824795925], 'false,false,true': [0.15847451045674243, 3.3712804814555064e-06], 'false,false,false': [0.17598639067195251, 0.24999999999999994], 'false,true': [0.0009658273954848973, 0.25], 'false,true,false': [nan, 0.25], 'true': [0.0, 0.0005034715476789723]}
{'': [0.0007104641423470701, 0.16370986985414981], 'false': [0.16064309117968856, 0.21401442223021935], 'false,false': [0.24000000000000005, 0.1973962353168615], 'false,false,true': [0.0, 0.25], 'false,false,false': [0.1973962353168615, nan], 'false,true': [0.15002150996297486, 0.1708229141927564], 'false,true,false': [0.04864895467874875, -5.2427198385076835e-17], 'true': [0.00039153379682199674, 0.0008198849539215273]}
{'': [0.07123629565374179, 0.13826174490405993], 'false': [0.13393777713306154, 0.19758316171509022], 'false,false': [0.25138699176028145, 0.19027058233576313], 'false,false,true': [0.0, 0.0], 'false,false,false': [0.20067967191261724, 0.15999999999999998], 'false,true': [0.19365450417810867, 0.11656305627085219], 'false,true,true': [nan, 0.19365450417810873], 'true': [0.0008215940443140113, 0.1120851566825901]}
{'': [0.07790171890815922, 0.13077485772394576], 'false': [0.12738938640007855, 0.17394550491722938], 'false,false': [0.0, 0.17397408653679938], 'false,false,false': [0.23999999999999994, 0.13756084817146352], 'true': [0.00018124188217043851, 0.167150477089267], 'true,true': [0.00018124188217043851, nan], 'false,false,true': [nan, 0.0]}
{'': [0.00943062397400944, 0.1342696952506248], 'false': [0.11534350500916207, 0.13727017810774583], 'false,false': [0.1774335692300391, 0.1363873583019178], 'false,false,false': [0.13128868790354395, 0.13895721668905348], 'true': [0.01123057229016602, 0.0011563792536755102], 'true,true': [0.00016918952349678773, 0.014623569222642407], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}
{'': [0.12187675183008671, 0.12264406934669538], 'false': [0.00020026834467886298, 0.12369707180838413], 'false,false': [0.12369707180838413, nan], 'true': [0.04565421444258418, 0.004305581940109931], 'true,true': [0.006870580486520117, 0.03383281044345258], 'true,true,false': [nan, 0.033832810443452474], 'true,true,true': [0.007538381837851748, 0.0]}
{'': [0.0013968565958750784, 0.09767625943417878], 'false': [0.09513298430157516, 0.14394986196304035], 'false,false': [0.0, 0.15419038176166414], 'false,false,false': [0.15419038176166414, nan], 'false,true': [0.05088857460457615, 0.0003671831056248805], 'false,true,true': [nan, 0.0508885746045761], 'true': [8.319244241675183e-05, 0.00159379834732392], 'false,false,true': [0.0, nan]}
{'': [0.02217169046233404, 0.07914983877571614], 'false': [0.04604604542677503, 0.10438912701938799], 'false,false': [0.0001237401916309444, 0.10593449729124176], 'false,false,false': [0.10032650438486142, 0.1628462985168551], 'false,true': [0.04470386998958676, 0.04690278060053797], 'false,true,false': [0.0, 0.04558592698054311], 'true': [0.001178812331796012, 0.059126663919276956], 'true,false': [0.0, 0.0032398478270187123]}
{'': [0.0016879041338249538, 0.08373177789413555], 'false': [0.05669318672015473, 0.10519879678197884], 'false,false': [9.556405410307094e-05, 0.10697468648486723], 'false,false,false': [0.10319558588005633, 0.13923986222133536], 'true': [0.0009641451559768456, 0.0025380690970872775], 'true,true': [0.0009641451559768456, nan], 'true,true,true': [3.816358612217836e-05, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 6.362
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( interaction(G, G) )
%   | | | then return 0.030562728202960583;  // std dev = 2.034, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return 0.11740819435877163;  // std dev = 2.277, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.2015224290754172;  // std dev = 6.118, 166.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=57 */
%   | | | else return 0.058148935099512286;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7670719622367216;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6865977038063751;  // std dev = 3.195, 81.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | | else return -0.16332111408827607;  // std dev = 0.107, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.45092203251355417;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.006220824629302997;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5615239171140314;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5882063320409344;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.11956431672982194;  // std dev = 3.921, 94.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=29 */
%   | | | else return -0.009715875571753511;  // std dev = 1.695, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5905747292742562;  // std dev = 2.096, 42.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=37 */
%   | | | else return -0.14656521029791506;  // std dev = 9.06e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return -0.21569560396350312;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.11763772936983015;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.37895983404951306;  // std dev = 0.987, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.43333678912990853;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.27933359040841593;  // std dev = 0.353, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( interaction(F, G), complex(G, H) )
%   | | | then return 0.04614147563067742;  // std dev = 3.219, 73.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=18 */
%   | | | else return -0.1532272143023917;  // std dev = 0.175, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.0759631746166305;  // std dev = 3.618, 108.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=31 */
%   | | | else return 0.11924312534779412;  // std dev = 2.776, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.46093423985511217;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.004442672419472303;  // std dev = 1.506, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.04723665489082406;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( phenotype(A, E), interaction(A, A) )
%   | | then return 0.32733723243643525;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3501272636124132;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1535434045169871;  // std dev = 0.900, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12497086814772596;  // std dev = 0.015, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.09509500711106418;  // std dev = 4.558, 150.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=48 */
%   | | | else return 0.027597072854053068;  // std dev = 3.084, 90.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=23 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3503465131688944;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2645401219278832;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.04611627336331772;  // std dev = 1.253, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2632614325221492;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.34394090705503777;  // std dev = 0.214, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.27523244483510534;  // std dev = 7.42e-05, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, A) )
%   | then if ( enzyme(A, F) )
%   | | then return -0.10671042903509226;  // std dev = 0.007, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.1316000562314058;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( phenotype(A, I), enzyme(G, J) )
%   | | | then return -0.06136664502543646;  // std dev = 1.194, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.10524695317217224;  // std dev = 4.371, 128.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=47 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return -0.08666653159831615;  // std dev = 1.214, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.04822881334617194;  // std dev = 3.247, 82.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=24 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24344221154280718;  // std dev = 0.065, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.4303185939260466;  // std dev = 1.430, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.5709618652561188;  // std dev = 0.991, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( interaction(G, A) )
%   | | then return -0.1899813612508792;  // std dev = 0.069, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else return -0.2754833921377971;  // std dev = 0.082, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.3232069287672992;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(K, J), interaction(I, K) )
%   | | | then return 0.051138872296237974;  // std dev = 3.732, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
%   | | | else return -0.03180533308190464;  // std dev = 1.240, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else return 0.3553864095729062;  // std dev = 0.587, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17342676841515117;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.22737081462205816;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.05078069131862101;  // std dev = 0.791, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.3360672408991795;  // std dev = 2.892, 60.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=48 */
%   | | | else return 0.47108795593323866;  // std dev = 1.017, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.13913218137799507;  // std dev = 0.275, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | | else return -0.18011402612873798;  // std dev = 0.185, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.18444198493762765;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.16407158143727915;  // std dev = 0.402, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17828049261595166;  // std dev = 0.040, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.706890722845919;  // std dev = 0.190, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.1675156027674339;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.018311544575608168;  // std dev = 1.400, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return -0.06926445239725892;  // std dev = 1.407, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else return -0.015048270439847865;  // std dev = 0.234, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.009543934567041307;  // std dev = 0.781, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.015270005602072331;  // std dev = 3.552, 132.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=40 */
%   | | | else return 0.13090746279189064;  // std dev = 1.189, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15388678620412305;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.12556227538616155;  // std dev = 0.750, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.2260782496927908;  // std dev = 1.788, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | | else return -0.12013634932714086;  // std dev = 0.232, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return -0.00702109428513853;  // std dev = 1.064, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.05735810939588107;  // std dev = 0.778, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.21760243225587203;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, M), phenotype(A, N) )
%   | | | then return -0.0510651447876812;  // std dev = 1.986, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.07142038917509144;  // std dev = 3.000, 90.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '43.182', 'seconds']
Refined model CLL: -0.198461


******************************************
Best model found
******************************************
Results 

CLL : -0.206064 

AUC ROC : 0.986839 

AUC PR : 0.327813 

Precision : 0.181054 

Recall : 0.840426 

F1 : 0.297926 

Total Learning Time : 6.362 

Total Inference Time : 44.33442163467407 

Total revision time: 59.729966192245485
Best scored revision CLL: -0.196154


Results 

CLL : -0.206064 

AUC ROC : 0.986839 

AUC PR : 0.327813 

Precision : 0.181054 

Recall : 0.840426 

F1 : 0.297926 

Total Learning Time : 59.74412992477417 

Total Inference Time : 44.33442163467407 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.182
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11434728220694913;  // std dev = 4.802, 121.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=31 */
%   | | | else return 0.14847151574467274;  // std dev = 5.651, 155.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7473839334745775;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6010256902182202;  // std dev = 1.340, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7247248082409459;  // std dev = 2.972, 86.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=76 */
%   | | | else return -0.15877870376899722;  // std dev = 0.033, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.04595587670632807;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.1570669878174392;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5934160784791582;  // std dev = 0.051, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6129127252190639;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07101648124460219;  // std dev = 4.391, 130.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6129701482676438;  // std dev = 2.124, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.14060100338168405;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.799758245064472;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.18736131456091415;  // std dev = 1.463, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.449061990925616;  // std dev = 0.048, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.233023281804336;  // std dev = 1.253, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2539416113553463;  // std dev = 0.787, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.562653310726665;  // std dev = 1.517, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else return 0.025692822804804696;  // std dev = 5.107, 259.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.008753190161178814;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.07298200218225527;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2366052496357117;  // std dev = 0.941, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.24352552129337357;  // std dev = 0.930, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( complex(A, E) )
%   | | | then return -0.6198979470738363;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3648803686798393;  // std dev = 0.071, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A) )
%   | then return 0.07783399666785294;  // std dev = 5.596, 262.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=82 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06694952430096418;  // std dev = 0.811, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.011717402292806777;  // std dev = 1.651, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2793723886198409;  // std dev = 0.000992, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4165998247405784;  // std dev = 0.289, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.42455515370499597;  // std dev = 0.140, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.008864115466862348;  // std dev = 2.734, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.28085253205516303;  // std dev = 0.046, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.0024393769337060374;  // std dev = 2.195, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | | else return 0.07293378136287067;  // std dev = 4.618, 153.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.28567994890232323;  // std dev = 0.322, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.41791401264262507;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.22722888365492422;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.45836390253582787;  // std dev = 1.770, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.17501329065908466;  // std dev = 0.636, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.06351526303863747;  // std dev = 0.903, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06749374656274827;  // std dev = 4.381, 144.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.18038642054926768;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1397795056518459;  // std dev = 0.894, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3696292157833681;  // std dev = 3.176, 95.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=82 */
%   | | else return -0.14641507597089662;  // std dev = 0.251, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.3209833286205256;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.021093535496073106;  // std dev = 1.504, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18974036619282644;  // std dev = 0.161, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.14254913949622305;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.1265387658477853;  // std dev = 0.564, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.056295840590626964;  // std dev = 1.945, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.10833697736136304;  // std dev = 0.875, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.05300690796658012;  // std dev = 1.441, 71.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19439118338988637;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03459532461981772;  // std dev = 3.809, 148.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=47 */
%   | | | else return 0.005904228389305583;  // std dev = 1.403, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.023707933887924026;  // std dev = 0.919, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.19742105438398663;  // std dev = 0.164, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return -0.4121548166376662;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17977987163821982;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.016184686381594045;  // std dev = 2.294, 135.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16578180590691385;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.00362738682493864;  // std dev = 4.058, 166.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=47 */
%   | | | else return 0.019971508380735945;  // std dev = 1.386, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.009', 'seconds']
Parameter learned model CLL:-0.198853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.309, 2, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.802, 90, 31], 'false,false,true,false': [5.651, 110, 45], 'false,false,false,true': [1.549, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.34, 2, 13], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [2.972, 10, 76], 'false,false,true,false': [0.033, 208, 0], 'false,false,false,true': [1.247, 7, 2], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.051, 0, 11], 'true,false': [0.031, 0, 6], 'false,true,true': [4.391, 96, 34], 'false,true,false,true': [2.124, 5, 48], 'false,true,false,false': [0.0, 95, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.463, 6, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.048, 0, 10], 'true,false': [1.253, 2, 7], 'false,true,true,true': [0.787, 1, 3], 'false,true,true,false': [1.517, 3, 21], 'false,true,false': [5.107, 201, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [0.941, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'true,true,false': 'complex(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'interaction(G, H), interaction(H, G)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.93, 1, 7], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.071, 0, 10], 'false,true': [5.596, 180, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.811, 1, 1], 'false,false,false,true': [1.651, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(J, A)'}, {'true,true,true': [0.000992, 0, 5], 'true,true,false': [0.289, 0, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.14, 0, 2], 'false,true': [2.734, 54, 19], 'false,false,true': [0.046, 0, 8], 'false,false,false,true': [2.195, 42, 11], 'false,false,false,false': [4.618, 103, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.322, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [1.77, 4, 33], 'true,false': [0.636, 125, 0], 'false,true': [0.903, 1, 5], 'false,false,true': [4.381, 97, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.894, 1, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.176, 13, 82], 'false,true,false': [0.251, 177, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.504, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.161, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.564, 1, 5], 'false,true,true': [1.945, 39, 13], 'false,true,false,true': [0.875, 3, 8], 'false,true,false,false': [1.441, 60, 11], 'false,false,true': [0.036, 0, 5], 'false,false,false,true': [3.809, 101, 47], 'false,false,false,false': [1.403, 11, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.919, 1, 7], 'true,true,true,false': [0.164, 0, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.074, 0, 3], 'false,true': [2.294, 103, 32], 'false,false,true': [0.031, 0, 5], 'false,false,false,true': [4.058, 119, 47], 'false,false,false,false': [1.386, 10, 4]}]
{'': [0.09418282548476423, 0.20876189588696484], 'false': [-2.5376526277146434e-16, 0.2014768448334893], 'false,false': [0.199537912203319, 0.23999999999999985], 'false,false,false': [0.23999999999999985, nan], 'false,false,true': [0.19056075404685593, 0.20603537981269623], 'true': [0.1224489795918365, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.09807518223052486, 0.19573113105616524], 'false': [0.10937500000000006, 0.19177674804298384], 'false,false': [0.19157978853707275, 0.19555555555555545], 'false,false,false': [0.17283950617283955, 0.2222222222222223], 'false,false,true': [0.10267709048077073, 5.161402838721036e-06], 'false,true': [0.0, 0.1875], 'false,true,false': [0.22222222222222224, 0.0], 'true': [0.0, 0.1197189356599089]}
{'': [0.00029841979669686935, 0.15928271630733298], 'false': [0.15590612703769258, 0.22549120198108188], 'false,false': [0.22549120198108188, nan], 'false,false,true': [0.0, 0.2139466857709919], 'false,true': [0.14828853758134417, 0.1610109800317093], 'false,true,false': [0.08510475163222059, -3.0385051200267444e-17], 'true': [0.00023829028257228333, 0.00016269773484049269]}
{'': [0.09435863515068608, 0.1279797529242808], 'false': [0.12357384461779272, 0.22374316330987318], 'false,false': [0.25, 0.21661401435298205], 'false,false,true': [nan, 0.25], 'false,false,false': [0.20408163265306126, 0.2215085941687065], 'false,true': [0.11599589015423192, 0.10069456458854747], 'false,true,true': [0.15476949288178926, 0.0959189211288685], 'true': [0.00023261123902948989, 0.17437851466953844]}
{'': [0.09240150429684943, 0.12471960863428604], 'false': [0.11950628975393725, 0.1997313315075436], 'false,false': [0.32891937943072963, 0.18177820135232944], 'false,false,true': [nan, 0.32891937943072963], 'false,false,false': [0.18177820135232944, nan], 'true': [0.1696553785975682, 0.0005078816270704722], 'true,true': [0.10802895806367954, 0.0], 'true,true,false': [0.0, nan]}
{'': [0.010568968053589367, 0.11983207120911465], 'false': [0.10237345994907328, 0.12506836445217465], 'false,false': [0.00026504203586218134, 0.12798349790903601], 'false,false,false': [0.09092803495725275, 0.13935805845407961], 'true': [0.010280643665032436, 0.009747841233411075], 'true,true': [1.9693884192317768e-07, 0.009266513948692316], 'true,false': [nan, 0.009747841233411075]}
{'': [0.09280315917820536, 0.13339775618515573], 'false': [0.13579186939530222, 0.13329736833482023], 'false,false': [0.13329736833482023, nan], 'true': [0.06517616055338651, 0.00323633161136852], 'true,true': [0.007499579214911567, 0.08206571841162183], 'true,true,false': [0.0, 0.08471294080865115], 'true,true,true': [0.006906685686742649, 0.0]}
{'': [0.04472001848040408, 0.10103889425541367], 'false': [0.0978389886920051, 0.15808672105415392], 'false,false': [0.0, 0.16157752430328945], 'false,false,false': [0.16157752430328945, nan], 'false,true': [0.10617570980466506, 0.00035468857375142276], 'false,true,true': [nan, 0.1061757098046651], 'true': [0.0, 0.057130739609332064], 'false,false,true': [0.0, nan]}
{'': [0.02115740334514205, 0.07933738176417288], 'false': [0.0514365889712562, 0.09890395402187532], 'false,false': [0.00025235200542031433, 0.10114479402181017], 'false,false,false': [0.09801194099779402, 0.1313081841915071], 'false,true': [0.07274040458371417, 0.03768562045108425], 'false,true,false': [0.06960455234719962, 0.029248356469780964], 'true': [0.0028735649399198654, 0.039871386151216534], 'true,false': [0.0, 0.053097765185531394]}
{'': [0.06978964336576873, 0.0744588153193357], 'false': [0.03898938100857201, 0.10019087040145304], 'false,false': [0.0001962843256045288, 0.10220955312555192], 'false,false,false': [0.09922238593357977, 0.1371152284593908], 'true': [0.08114873607121341, 0.001849527805195451], 'true,true': [0.0695839042141794, 0.0], 'true,true,true': [0.10546554679448886, 0.004498143688540383], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;true,true;interaction(D, A).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 5.019
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5248156017661789;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.016879093829671028;  // std dev = 2.900, 63.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=10 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.17602972980149936;  // std dev = 5.722, 151.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=48 */
%   | | | else return 0.2684053453559226;  // std dev = 3.072, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7291098928136794;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7283686250750082;  // std dev = 0.016, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6850861473025003;  // std dev = 3.329, 89.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=76 */
%   | | | else return -0.16103235849323871;  // std dev = 0.152, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.23916065919052895;  // std dev = 1.550, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.1777604885754248;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5619670364742891;  // std dev = 0.019, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4242413404495399;  // std dev = 0.356, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.102823305291407;  // std dev = 3.763, 90.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
%   | | | else return -0.01980120253577993;  // std dev = 2.022, 47.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5955697152519122;  // std dev = 2.297, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.1450141322456191;  // std dev = 0.105, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.6003512064563898;  // std dev = 0.913, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.08295722867606665;  // std dev = 0.579, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.19849535852625155;  // std dev = 0.061, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.33130592071795345;  // std dev = 0.310, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   else if ( enzyme(A, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( complex(E, G), phenotype(A, H) )
%   | | | then return 0.13791447467912946;  // std dev = 1.627, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.03785702430639535;  // std dev = 0.925, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( enzyme(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.6269773448075069;  // std dev = 0.285, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.15785617767494897;  // std dev = 0.348, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(A, J), complex(A, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.4947245093332798;  // std dev = 1.174, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.11328632162203936;  // std dev = 1.567, 64.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=4 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.09009277640319663;  // std dev = 3.870, 115.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=36 */
%   | | | else return 0.021399867899083238;  // std dev = 1.636, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.002974725219174782;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3545712049062268;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), location(F, G) )
%   | | then return 0.04473985326591884;  // std dev = 1.161, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.35470793531660605;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then return 0.048663077446785837;  // std dev = 0.323, 278.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=77 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.22421498062010295;  // std dev = 0.709, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.12703600105323787;  // std dev = 0.754, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.06560279036279232;  // std dev = 1.486, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.2886978941498046;  // std dev = 0.248, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.4395840706584951;  // std dev = 0.151, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.522255692020193;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.16667500958819126;  // std dev = 0.220, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.06544087339935502;  // std dev = 2.426, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.007980784156488197;  // std dev = 0.664, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.3072236558428625;  // std dev = 0.054, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, M), location(A, N) )
%   | | | then return -0.038203527628774055;  // std dev = 2.224, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
%   | | | else return 0.08758352951752485;  // std dev = 4.219, 137.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.42784476710995684;  // std dev = 0.188, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | else return -0.15847763206861928;  // std dev = 0.067, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), complex(H, I) )
%   | | | then return 0.028623098643186923;  // std dev = 0.467, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5439257052518505;  // std dev = 0.574, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.17167991653307196;  // std dev = 0.022, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5130493945260498;  // std dev = 0.372, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16758885078701832;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( location(A, L) )
%   | | | then return 0.061639048573786645;  // std dev = 2.864, 80.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
%   | | | else return 0.1360811320506024;  // std dev = 0.521, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1545919931488298;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return 0.2126886313134592;  // std dev = 0.039, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.1678691793427128;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( location(A, I), phenotype(A, J) )
%   | | | then return 0.34996514615300905;  // std dev = 2.278, 58.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=51 */
%   | | | else return 0.21587784400134735;  // std dev = 2.427, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else return -0.1371699143027966;  // std dev = 0.025, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.3361887960463994;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.18735095808077132;  // std dev = 0.807, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.12367713928566648;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1712297345134251;  // std dev = 0.075, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.08411142119842767;  // std dev = 0.304, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( phenotype(A, G), enzyme(A, H) )
%   | | then return -0.07749065238439241;  // std dev = 0.219, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( location(A, I), complex(A, J) )
%   | | | then return -0.04016077017129567;  // std dev = 1.764, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | | else return 0.02808721796932988;  // std dev = 1.611, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then if ( enzyme(A, L) )
%   | | | then return -0.30036775726575937;  // std dev = 0.976, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.11474706539933237;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, M), interaction(N, A) )
%   | | | then return 0.044907561503300504;  // std dev = 3.025, 125.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=43 */
%   | | | else return -0.021408617239965833;  // std dev = 1.313, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), interaction(E, E) )
%   | | | then return 0.006289023564848696;  // std dev = 0.761, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.18872847102810417;  // std dev = 0.220, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.4204210273226059;  // std dev = 0.041, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.18954759458292636;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10766235798207831;  // std dev = 0.014, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.021990635981826195;  // std dev = 0.217, 111.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1570635140568898;  // std dev = 0.147, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.08594951130795843;  // std dev = 1.167, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.014749553397902302;  // std dev = 3.311, 147.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=47 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.690', 'seconds']
Refined model CLL: -0.188395


******************************************
Best model found
******************************************
Results 

CLL : -0.163806 

AUC ROC : 0.989928 

AUC PR : 0.366606 

Precision : 0.309859 

Recall : 0.830189 

F1 : 0.451282 

Total Learning Time : 5.019 

Total Inference Time : 7.137321472167969 

Total revision time: 21.32106378173828
Best scored revision CLL: -0.188395


Results 

CLL : -0.163806 

AUC ROC : 0.989928 

AUC PR : 0.366606 

Precision : 0.309859 

Recall : 0.830189 

F1 : 0.451282 

Total Learning Time : 21.33522751426697 

Total Inference Time : 7.137321472167969 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.475
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08672036367094095;  // std dev = 2.484, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.1476226193100376;  // std dev = 5.591, 152.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16460054800273813;  // std dev = 3.630, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109544;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21947341221095448;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8404504218651032;  // std dev = 0.021, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15922440765305157;  // std dev = 0.038, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else if ( location(A, K) )
%   | | | then return 0.1053989015008628;  // std dev = 3.628, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | | else return 0.2369079676072364;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.026437427589689186;  // std dev = 2.146, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6633189506876791;  // std dev = 1.007, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14044464653957267;  // std dev = 8.16e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1383449121478247;  // std dev = 3.641, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.3180391779870364;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.39151669965371505;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5913257497457803;  // std dev = 0.133, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.06628721203156594;  // std dev = 4.174, 183.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5209958314147283;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.11480397665477471;  // std dev = 3.509, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | | else return 0.27905133834316054;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2207118471601497;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.055829079760693824;  // std dev = 4.222, 195.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.39246484133952886;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1352541469691058;  // std dev = 3.490, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return 0.2446493381353123;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26351494553810045;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2039664893924904;  // std dev = 0.779, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3037660444871665;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.059453169183437474;  // std dev = 0.940, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2746385494962485;  // std dev = 1.29e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06173224451147347;  // std dev = 3.945, 163.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=49 */
%   | | | else return 0.054563575273027194;  // std dev = 3.723, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25320109955054754;  // std dev = 0.230, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2266649306067438;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.22341887061016696;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6135150128889076;  // std dev = 1.080, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.1953947171118582;  // std dev = 0.552, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22341887061016696;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.09762819962055447;  // std dev = 3.175, 97.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17452772513473414;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.0738288798145912;  // std dev = 0.941, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4374865576463901;  // std dev = 0.719, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1469266903291374;  // std dev = 0.546, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.18945461210553338;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.02234434763384771;  // std dev = 3.117, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.06272559699002692;  // std dev = 0.885, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1439403323356937;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2036834855097706;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.0857170603574264;  // std dev = 0.424, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18390743544051436;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.020651849758042254;  // std dev = 1.260, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1760850030399833;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.035783506394022696;  // std dev = 2.661, 104.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=36 */
%   | | | else return 0.031114414328623986;  // std dev = 3.072, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14152418905574396;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15609404467007892;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.15120468967469325;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16779869948567008;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.035499534233142116;  // std dev = 1.628, 75.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15197610378642967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.011564939467794185;  // std dev = 2.730, 139.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=36 */
%   | | | else return 0.01974470412120223;  // std dev = 3.101, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.064', 'seconds']
Parameter learned model CLL:-0.177724 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.484, 27, 8], 'false,false,true,false': [5.591, 108, 44], 'false,false,false,true': [3.63, 43, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [2.98e-08, 0, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.707, 1, 1], 'false,false,true,true': [0.021, 0, 52], 'false,false,true,false': [0.038, 139, 0], 'false,false,false,true': [3.628, 49, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.146, 33, 8], 'false,true,false,true': [1.007, 1, 48], 'false,true,false,false': [8.16e-08, 109, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.641, 42, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.133, 0, 3], 'false,true,false': [4.174, 131, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.509, 39, 18], 'false,false,false,false': [1.0, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.949, 1, 9], 'false,true': [4.222, 139, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.49, 34, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.025, 0, 7], 'true,true,false': [0.779, 1, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.94, 17, 3], 'false,false,true': [1.29e-08, 0, 6], 'false,false,false,true': [3.945, 114, 49], 'false,false,false,false': [3.723, 46, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.23, 0, 12], 'true,true,true,false': [0.024, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.08, 1, 36], 'true,false': [0.552, 86, 0], 'false,true': [0.0, 0, 5], 'false,false,true': [3.175, 61, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.017, 0, 6], 'true,false': [0.941, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.719, 0, 56], 'false,true,false': [0.546, 127, 0], 'false,false,true,true': [0.021, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.117, 47, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.885, 1, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.086, 0, 4], 'false,true,true': [0.424, 14, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.26, 46, 14], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.661, 68, 36], 'false,false,false,false': [3.072, 44, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.012, 0, 5], 'true,true,true,false': [0.029, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.085, 0, 4], 'false,true': [1.628, 58, 17], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.73, 103, 36], 'false,false,false,false': [3.101, 44, 20]}]
{'': [-2.5376526277146434e-16, 0.21092482422931377], 'false': [-1.4802973661668753e-16, 0.2040816326530626], 'false,false': [0.20074923503674763, 0.21301775147928947], 'false,false,false': [0.21253902185223675, 0.22222222222222224], 'false,false,true': [0.17632653061224507, 0.2056786703601117], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [2.5376526277146434e-16, 0.2021626085324968], 'false': [0.12244897959183687, 0.19872074365374795], 'false,false': [0.1980113778833178, 0.20060069023757066], 'false,false,false': [0.1964594269578626, 0.24000000000000005], 'false,false,true': [8.433906660643996e-06, 1.0140164496771728e-05], 'false,true': [0.0, 0.25], 'false,true,false': [nan, 0.25], 'true': [7.401486830834377e-17, 1.1102230246251565e-16]}
{'': [-2.5376526277146434e-16, 0.1584582238016216], 'false': [0.13909942000258607, 0.2151515888829553], 'false,false': [0.213123600489759, 0.25], 'false,false,false': [0.25, nan], 'false,false,true': [0.0, 0.21380065010783184], 'false,true': [0.11234970298603349, 0.14464236929215804], 'false,true,false': [0.02071483558167312, 6.111319401606367e-17], 'true': [-7.401486830834377e-17, -1.1102230246251565e-16]}
{'': [1.2688263138573217e-16, 0.12869979698859288], 'false': [0.09815292280568261, 0.21667470809028536], 'false,false': [0.0026771438743096176, 0.2199413002165008], 'false,false,false': [0.2160629213282357, 0.25], 'false,true': [0.011898972585598744, 0.09521029849745238], 'false,true,true': [0.0, 0.005884382656124935], 'false,false,true': [0.0, 0.0], 'true': [1.6148698540002277e-16, -3.700743415417188e-17]}
{'': [0.06222222222222219, 0.12295958779968882], 'false': [0.09140514280880091, 0.22449691785462678], 'false,false': [0.0012871230434265135, 0.23095596350894526], 'false,false,false': [0.22980214579157068, 0.25], 'true': [-2.2204460492503132e-17, 0.08999999999999998], 'false,false,true': [0.0, 0.0], 'true,true': [-2.2204460492503132e-17, nan]}
{'': [0.041450323906640725, 0.12104713019067558], 'false': [0.04418486609566648, 0.12637078367817012], 'false,false': [2.7755575615628914e-17, 0.12850189897742412], 'false,false,false': [0.09547636697726103, 0.21002837650164324], 'true': [0.051468290626642516, 0.0005247461299587586], 'true,true': [9.280092376331586e-05, 0.12132546534356678], 'true,false': [0.0, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.13758259529766387, 0.09954124533780115], 'true': [0.05095572732917171, 0.0035367496987843954], 'false': [0.0, 0.10389658575238477], 'false,false': [0.10389658575238477, nan], 'true,true': [0.003911594302014162, 0.03457951503839716], 'true,true,false': [0.0, 0.03150949125695471], 'true,true,true': [0.004415288899955285, 0.00028585391818409384]}
{'': [0.06144532258556979, 0.09469527191643153], 'false': [0.0769889488411205, 0.14163932781109823], 'false,false': [0.00021929529723681979, 0.14505137666703855], 'false,false,false': [0.14505137666703855, nan], 'false,true': [0.009237076930947203, 0.0023491709441485083], 'true': [4.709217430647061e-05, 0.09832137321355464], 'false,true,true': [nan, 0.00923707693094714], 'false,false,true': [0.00021929529723681979, nan]}
{'': [0.056590996294868724, 0.07503757013640404], 'false': [0.024808931155446867, 0.0960469416236571], 'false,false': [0.0, 0.09832204852480642], 'false,false,false': [0.06807174001544901, 0.1474653043539742], 'true': [0.07831562438308245, 0.002046147705094664], 'false,true': [0.011958851632690056, 0.026917357564272312], 'false,true,false': [0.0, 0.02646478019831972], 'true,false': [0.0, 0.001843835761132083]}
{'': [0.000694945194941708, 0.07051618366602484], 'false': [0.035352333075351385, 0.08282278344476236], 'false,false': [0.0, 0.08429509781086217], 'false,false,false': [0.05360171223518116, 0.1502860589644378], 'true': [0.00014088612951754508, 0.001795307712687693], 'true,true': [0.00017255137341410862, 0.0], 'true,true,true': [2.94011888871043e-05, 0.0002784595814033323], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.063
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0.15814893509951236;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.08765713182082385;  // std dev = 3.284, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | | else return 0.21431331866115524;  // std dev = 5.786, 146.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7298326667716779;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7401919213324014;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8149301466202212;  // std dev = 0.995, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.1614504046694242;  // std dev = 0.161, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.17879785049999203;  // std dev = 2.423, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.07509761303894229;  // std dev = 2.895, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5795817495614637;  // std dev = 0.091, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5534461089913827;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12138869944266696;  // std dev = 0.041, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.1340863781180459;  // std dev = 1.926, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6784484305837882;  // std dev = 0.266, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1461846962845835;  // std dev = 0.317, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.022247575283326715;  // std dev = 0.732, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.13793490831699903;  // std dev = 3.635, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | else return 0.8371597502085913;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.41335276392303705;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.13275951111727738;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.1812749456341164;  // std dev = 0.897, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5368944738541613;  // std dev = 0.105, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.10611894973431464;  // std dev = 0.059, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.08380850671247247;  // std dev = 4.006, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5409756489973663;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.3268271650416149;  // std dev = 1.771, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.08944650795861928;  // std dev = 3.023, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.36889791287682944;  // std dev = 0.150, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return -0.26525924765955955;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.33492782492560297;  // std dev = 0.026, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( phenotype(A, G), complex(A, H) )
%   | | then return 0.01854768672155714;  // std dev = 0.283, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.03445861647086564;  // std dev = 0.750, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.05948912094802265;  // std dev = 3.355, 114.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4071292657003177;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.008880768363667638;  // std dev = 2.267, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.11429301691223628;  // std dev = 2.932, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.29035025582785834;  // std dev = 0.054, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.327719639315782;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.08869498115076002;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.018627784554047195;  // std dev = 0.781, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return -0.1082269546690232;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.04607359771127408;  // std dev = 0.500, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.29989996976222466;  // std dev = 0.156, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.10120043915828612;  // std dev = 2.425, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
%   | | | else return 0.03310996342583621;  // std dev = 4.830, 174.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=48 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.240398605475999;  // std dev = 0.044, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1978212649373029;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6355654738083056;  // std dev = 0.744, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18335645183913502;  // std dev = 0.079, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.25075490955829194;  // std dev = 0.131, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( location(H, I) )
%   | | | then return 0.031189199042601146;  // std dev = 2.923, 93.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=27 */
%   | | | else return -0.19206571948008377;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.033984878105619655;  // std dev = 0.912, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.13308920321978;  // std dev = 1.127, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1762316330230755;  // std dev = 0.088, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.16491727185633492;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.23679956083437542;  // std dev = 0.084, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.3293963242425688;  // std dev = 0.310, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.48265962638760596;  // std dev = 0.305, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.14418161665540058;  // std dev = 0.032, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.20590263089232863;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.025267369680282682;  // std dev = 2.585, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.13158008390155895;  // std dev = 1.538, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16580393486597103;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.19794597460851807;  // std dev = 0.413, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.17055880867350157;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.03975586127940848;  // std dev = 0.116, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.21793582642161202;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.013842400419905957;  // std dev = 1.271, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17504465338729536;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return -0.08509910988165954;  // std dev = 1.736, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.026459959879919826;  // std dev = 3.626, 157.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=51 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1439294834616227;  // std dev = 0.028, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.15388402557504036;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( enzyme(A, G), complex(A, H) )
%   | | | then return -0.18353527978199546;  // std dev = 0.557, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07010423665449078;  // std dev = 0.017, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.050160043019438876;  // std dev = 0.993, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return -0.02038913518440394;  // std dev = 0.836, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.1514532589641568;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.07393977491521439;  // std dev = 2.470, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.0073398649064238914;  // std dev = 3.124, 129.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=42 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.680', 'seconds']
Refined model CLL: -0.179915


******************************************
Best model found
******************************************
Results 

CLL : -0.195249 

AUC ROC : 0.982094 

AUC PR : 0.200726 

Precision : 0.134545 

Recall : 0.801444 

F1 : 0.23041 

Total Learning Time : 3.063 

Total Inference Time : 2.8986408710479736 

Total revision time: 10.26623452949524
Best scored revision CLL: -0.177724


Results 

CLL : -0.195249 

AUC ROC : 0.982094 

AUC PR : 0.200726 

Precision : 0.134545 

Recall : 0.801444 

F1 : 0.23041 

Total Learning Time : 10.280398262023926 

Total Inference Time : 2.8986408710479736 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.568
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.04655473220096165;  // std dev = 3.248, 69.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=13 */
%   | | | else return 0.1972793698821204;  // std dev = 5.077, 115.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.20430278125335852;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7194734122109544;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8184332114607655;  // std dev = 0.997, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.16119913445888667;  // std dev = 0.106, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else if ( location(A, I) )
%   | | | then return 0.10404227020597287;  // std dev = 2.825, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.06954674027598451;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.023323448793234773;  // std dev = 2.838, 76.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6541915322171374;  // std dev = 1.003, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14630009634671554;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.4358464890592443;  // std dev = 0.746, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.09823105412620667;  // std dev = 2.466, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.30454336469985804;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3550135841583098;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5495998860855393;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5927673112071229;  // std dev = 0.209, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.04770452002295445;  // std dev = 4.263, 189.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.44683452893917286;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.030996848601397953;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.06044322185522941;  // std dev = 2.819, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.7575308049100866;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33447760361752854;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.33447760361752854;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.055635036950760657;  // std dev = 4.451, 189.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.34067146803286785;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12907089839169467;  // std dev = 0.753, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.054239513456029564;  // std dev = 2.556, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return -0.05193006064723359;  // std dev = 1.479, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26454461366357546;  // std dev = 2.11e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.37694386762739485;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.26874980067859544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.038542254747243966;  // std dev = 0.898, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.035299449367532515;  // std dev = 1.200, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.09787794699690883;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06320368289004419;  // std dev = 3.918, 153.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=46 */
%   | | | else return 0.04797960302504159;  // std dev = 3.088, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24004393320724365;  // std dev = 0.130, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.33492764386076584;  // std dev = 0.189, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.0023260086952356096;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5646456676372407;  // std dev = 1.092, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.19004814184488913;  // std dev = 1.017, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24594489931884334;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08708069970630174;  // std dev = 3.244, 88.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.07529898420049469;  // std dev = 0.875, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.22144480559141572;  // std dev = 0.080, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3946187599206345;  // std dev = 1.855, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.14226247359958857;  // std dev = 0.222, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.08335136790319794;  // std dev = 0.662, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.0163187856999943;  // std dev = 2.497, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1672801148380566;  // std dev = 0.014, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.19500870267782444;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1016681722936274;  // std dev = 0.676, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.0871427448121131;  // std dev = 0.325, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2360679052548016;  // std dev = 0.182, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.012373743024496803;  // std dev = 1.514, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16970102651347074;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.013287675222944714;  // std dev = 2.872, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | | else return 0.0021548766559079764;  // std dev = 2.537, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14558615658362162;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.143947072182445;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.33054471047781286;  // std dev = 0.660, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.16376114504235484;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.2410549506056965;  // std dev = 0.144, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.0018549110037131959;  // std dev = 1.600, 82.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.14711016637615093;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04043993520521226;  // std dev = 2.717, 93.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=31 */
%   | | | else return 0.015627365941986892;  // std dev = 2.514, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.713', 'seconds']
Parameter learned model CLL:-0.179482 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.248, 56, 13], 'false,false,true,false': [5.077, 76, 39], 'false,false,false,true': [2.426, 17, 9], 'false,false,false,false': [1.309, 4, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [2.11e-08, 0, 7], 'false,true,true': [0.0, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.997, 1, 52], 'false,false,true,false': [0.106, 128, 0], 'false,false,false,true': [2.825, 29, 11], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.0, 0, 4], 'false,true,true': [2.838, 62, 14], 'false,true,false,true': [1.003, 1, 42], 'false,true,false,false': [0.0, 80, 0], 'false,false,true,true': [0.746, 1, 3], 'false,false,true,false': [2.466, 22, 9], 'false,false,false,true': [1.227, 3, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.968, 1, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.209, 0, 6], 'false,true,false': [4.263, 140, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [2.819, 30, 11], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 6], 'false,true': [4.451, 133, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.753, 1, 2], 'false,false,false,true': [2.556, 25, 9], 'false,false,false,false': [1.479, 10, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [2.11e-08, 0, 9], 'true,true,false': [0.026, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.898, 1, 2], 'false,true': [1.2, 20, 5], 'false,false,true': [0.913, 1, 5], 'false,false,false,true': [3.918, 107, 46], 'false,false,false,false': [3.088, 34, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.13, 0, 13], 'true,true,true,false': [0.189, 0, 3], 'true,true,false,true': [0.874, 1, 3], 'true,true,false,false': [1.092, 1, 33], 'true,false': [1.017, 108, 0], 'false,true': [0.0, 0, 3], 'false,false,true': [3.244, 57, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.875, 1, 8], 'true,false': [0.08, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.855, 3, 56], 'false,true,false': [0.222, 135, 0], 'false,false,true,true': [0.662, 1, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.497, 33, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.014, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.676, 1, 5], 'false,true,true': [0.325, 19, 1], 'false,true,false,true': [0.182, 0, 6], 'false,true,false,false': [1.514, 47, 17], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [2.872, 76, 31], 'false,false,false,false': [2.537, 34, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.012, 0, 2], 'true,true,false,true': [0.66, 1, 1], 'true,true,false,false': [0.003, 0, 2], 'true,false': [0.144, 0, 3], 'false,true': [1.6, 58, 24], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [2.717, 62, 31], 'false,false,false,false': [2.514, 31, 12]}]
{'': [-2.3684757858670006e-16, 0.2164979272959187], 'false': [-2.5376526277146434e-16, 0.20794665420799047], 'false,false': [0.2027410207939516, 0.23140495867768548], 'false,false,false': [0.22633136094674564, 0.24489795918367335], 'false,false,true': [0.15290905272001626, 0.22412098298676816], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [2.3684757858670006e-16, 0.20760828354198302], 'false': [-6.344131569286608e-17, 0.20325365516544644], 'false,false': [0.20428407215182234, 0.1985221926400257], 'false,false,true': [0.01877090195626728, 8.698516316652666e-05], 'false,false,false': [0.19951623539628732, 0.18750000000000006], 'true': [1.1102230246251565e-16, 6.344131569286608e-17], 'false,true': [-6.344131569286608e-17, nan]}
{'': [-2.3684757858670006e-16, 0.15172632089515148], 'false': [0.1384677730939938, 0.21202632231522664], 'false,false': [0.20124499794076298, 0.25090176596742025], 'false,false,false': [0.25090176596742025, nan], 'false,false,true': [0.13928501789511283, 0.19621307042939712], 'false,true': [0.10600911727217836, 0.15388365665796794], 'false,true,false': [0.023406898566764072, -2.2204460492503132e-17], 'true': [-2.0185873175002846e-16, 0.0]}
{'': [0.05859375000000014, 0.12145314727336035], 'false': [0.10297296082167032, 0.19972182947513892], 'false,false': [0.16823024409717535, 0.20044245746638528], 'false,false,false': [0.19376150983407892, 0.0], 'false,false,true': [0.0, 0.24999999999999997], 'false,true': [0.00645922561985549, 0.09617579659833483], 'true': [0.05859375000000014, nan], 'false,true,true': [0.0, 0.007269559424360879]}
{'': [-1.0362081563168128e-16, 0.12226771397536504], 'false': [0.10483959442956634, 0.18658649246063264], 'false,false': [0.1501858256032638, 0.18774876276541305], 'false,false,false': [0.19209706054421127, 0.16822209446399336], 'false,false,true': [0.0, 0.18905406720290116], 'true': [-2.4671622769447922e-17, 0.0], 'true,true': [-2.4671622769447922e-17, nan]}
{'': [0.05933115689757109, 0.11803594861891951], 'false': [0.05760944994285954, 0.12434118739101833], 'false,false': [0.1388888888888889, 0.12386438718751168], 'false,false,false': [0.10034821431139182, 0.19864576430485217], 'true': [0.0027448917997671385, 0.21171293036322766], 'true,false': [0.0, 0.2690350286000364], 'true,true': [4.9343245538895844e-17, 0.00017456522427328203], 'true,false,true': [0.0, nan]}
{'': [0.11618258130802024, 0.11646340360223033], 'false': [0.0, 0.11960173040404301], 'false,false': [0.11960173040404301, nan], 'true': [0.07134506131986773, 0.009584632834621307], 'true,true': [0.004667371775609858, 0.08125234771260127], 'true,true,false': [0.19081271035881656, 0.03507832498546068], 'true,true,true': [0.0013047194191088385, 0.011923994000700489]}
{'': [0.05351567883442978, 0.09058048043761092], 'false': [0.07898739166810353, 0.1364791687156039], 'false,false': [0.10953566175926034, 0.13850734163606376], 'false,false,false': [0.13850734163606376, nan], 'false,false,true': [0.10953566175926034, nan], 'false,true': [0.05830762038527837, 0.00036415539148511116], 'false,true,true': [nan, 0.05830762038527849], 'true': [0.08507650343722511, 0.000923262649302703]}
{'': [0.028013917035107316, 0.07200440279346737], 'false': [0.032373725012592516, 0.09463149254761531], 'false,false': [0.0, 0.09599617726164432], 'false,false,false': [0.07706633456331449, 0.13994196101449932], 'false,true': [0.005278072592165841, 0.03806460840393597], 'false,true,false': [0.005498502109440612, 0.03582711636049625], 'true': [1.9594194885264037e-05, 0.06639819181768454], 'true,false': [0.0, 0.0762199207474315]}
{'': [0.05375101264317523, 0.07416352485623444], 'false': [0.031227391309869318, 0.09898695988838221], 'false,false': [0.0, 0.10088746470374169], 'false,false,false': [0.07936777860687945, 0.1470090363595108], 'true': [0.059209327440656476, 0.006898953442934276], 'true,true': [1.5544744949139155e-05, 0.16985029954907405], 'true,true,false': [0.2175255078300797, 5.9518673059741345e-06], 'true,true,true': [-3.469446951953614e-18, 7.557444660638915e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
3;false,false,false;location(A, J), interaction(A, K).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 4.031
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.034619523334806494;  // std dev = 3.144, 68.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=12 */
%   | | | else return 0.1893591261823139;  // std dev = 5.897, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then return 0.7432726872238381;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.49327268722383816;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7479265095154213;  // std dev = 2.141, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return -0.16023221694914805;  // std dev = 0.161, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.0607787987859722;  // std dev = 2.181, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.20850034431388215;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5699288238094847;  // std dev = 0.031, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.0062030350049522166;  // std dev = 1.457, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | | else return 0.14198944222394672;  // std dev = 2.198, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6543159869495806;  // std dev = 1.393, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14133309765523036;  // std dev = 0.064, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.38908684113008185;  // std dev = 0.834, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.05476955252393568;  // std dev = 2.482, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.2243290619483269;  // std dev = 1.551, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.36289040963835734;  // std dev = 0.246, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5510171920100033;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4798709344398879;  // std dev = 0.854, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.008689513493123842;  // std dev = 2.525, 90.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=16 */
%   | | | else return 0.10342217762798114;  // std dev = 3.453, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.5148684991261063;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.0767611461213604;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, K), interaction(A, L) )
%   | | | then return 0.04872410005028946;  // std dev = 2.885, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | | else return 0.043699482737371224;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3406711023985783;  // std dev = 0.026, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), interaction(F, G) )
%   | | | then return 0.07807624482271312;  // std dev = 3.231, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
%   | | | else return 0.2840948992902714;  // std dev = 0.782, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.03170677021512111;  // std dev = 1.486, 42.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
%   | | | else return 0.08835528793376952;  // std dev = 2.263, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return 0.3880831081811852;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16797530149435322;  // std dev = 0.757, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.0523373054048914;  // std dev = 2.600, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.3857761814626018;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.24643642811136093;  // std dev = 0.251, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(F, D), phenotype(F, G) )
%   | | then if ( interaction(F, A), interaction(A, H) )
%   | | | then return -0.07223586476420057;  // std dev = 1.121, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return 0.05659300467938607;  // std dev = 3.447, 121.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=38 */
%   | | else if ( interaction(A, I), location(I, E) )
%   | | | then return -0.06067589120986572;  // std dev = 0.908, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | | else return 0.03162307682218153;  // std dev = 2.154, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.7650336655221572;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1784012085671176;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.1945843837175483;  // std dev = 1.344, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.03265144365505063;  // std dev = 2.179, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2800749186212273;  // std dev = 0.075, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.42604194975782045;  // std dev = 1.123, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | | | else return 0.7252145295886189;  // std dev = 0.260, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.18199791965266127;  // std dev = 0.118, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2516807739713077;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, G), complex(A, H) )
%   | | then if ( complex(I, H), enzyme(I, J) )
%   | | | then return 0.059818069530058894;  // std dev = 1.068, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.09296172819166142;  // std dev = 0.953, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.01920007895866613;  // std dev = 2.084, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.0698830974731762;  // std dev = 2.179, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.08755728325972355;  // std dev = 0.274, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return -0.03460716395304039;  // std dev = 0.753, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.20036175123462863;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.43340790498161114;  // std dev = 0.188, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.14500183165132619;  // std dev = 0.043, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(I, I), phenotype(A, K) )
%   | | | then return -0.010253266288882318;  // std dev = 0.939, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.155376933096576;  // std dev = 1.418, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.145362069384215;  // std dev = 0.763, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.03697889218435062;  // std dev = 1.302, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17354559811076492;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.24150866320917594;  // std dev = 0.069, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.28132358181984357;  // std dev = 0.163, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.0940534551336431;  // std dev = 0.074, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( complex(A, I), location(A, J) )
%   | | | then return -0.026566208289609837;  // std dev = 0.907, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.03119807038426888;  // std dev = 1.324, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.17628699528155634;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.0048634790565995605;  // std dev = 2.735, 91.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=26 */
%   | | | else return 0.07532636456368852;  // std dev = 2.155, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15347126961261545;  // std dev = 0.019, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.23735401876663154;  // std dev = 0.119, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.31471974097084965;  // std dev = 0.155, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.09976347236422708;  // std dev = 0.059, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.06922831738430871;  // std dev = 0.011, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.0067946234429242846;  // std dev = 1.267, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1521295665034708;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return -0.03769488248532526;  // std dev = 1.973, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.03824241723788214;  // std dev = 2.886, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '26.174', 'seconds']
Refined model CLL: -0.176975


******************************************
Best model found
******************************************
Results 

CLL : -0.192953 

AUC ROC : 0.984407 

AUC PR : 0.214467 

Precision : 0.149739 

Recall : 0.911661 

F1 : 0.257228 

Total Learning Time : 4.031 

Total Inference Time : 3.316679000854492 

Total revision time: 12.005464338302613
Best scored revision CLL: -0.176975


Results 

CLL : -0.192953 

AUC ROC : 0.984407 

AUC PR : 0.214467 

Precision : 0.149739 

Recall : 0.911661 

F1 : 0.257228 

Total Learning Time : 12.019628070831299 

Total Inference Time : 3.316679000854492 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.131
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19667033587772242;  // std dev = 7.586, 257.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.21450570919958914;  // std dev = 4.584, 89.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=34 */
%   | | | else return 0.13534038014661792;  // std dev = 6.079, 175.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16861200021012201;  // std dev = 4.730, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
%   | | | else return 0.13924311095200906;  // std dev = 5.897, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.12210084736822129;  // std dev = 3.017, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.15828643551001223;  // std dev = 6.766, 196.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07837762996784836;  // std dev = 7.683, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04726710043567894;  // std dev = 7.772, 285.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7306950962609816;  // std dev = 0.025, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.26878554279646205;  // std dev = 0.032, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.06323458853511228;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.09533355146883726;  // std dev = 4.541, 90.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04153107665019983;  // std dev = 3.804, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   | | | else return 0.04661348250913571;  // std dev = 5.905, 158.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07468368934067185;  // std dev = 6.805, 231.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03745193694732263;  // std dev = 6.881, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.388', 'seconds']
Parameter learned model CLL:-0.34624 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.586, 170, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.584, 55, 34], 'false,false,false,false': [6.079, 122, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.73, 62, 35], 'false,false,false,false': [5.897, 105, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.017, 26, 14], 'false,false,false,false': [6.766, 123, 73]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.683, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.772, 198, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.025, 0, 35], 'true,false': [0.032, 62, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.636, 39, 20], 'false,false,false,false': [4.541, 58, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.804, 70, 35], 'false,false,false,false': [5.905, 106, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.805, 144, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.881, 165, 87]}]
{'': [nan, 0.22392466199336944], 'false': [nan, 0.22392466199336938], 'false,false': [nan, 0.22392466199336944], 'false,false,false': [nan, 0.22392466199336938]}
{'': [nan, 0.2209452479338841], 'false': [nan, 0.220945247933884], 'false,false': [nan, 0.2209452479338841], 'false,false,false': [0.23608130286579912, 0.21113469387755085]}
{'': [nan, 0.22522740727445945], 'false': [nan, 0.22522740727445945], 'false,false': [nan, 0.22522740727445975], 'false,false,false': [0.23068527011989945, 0.22152595987541632]}
{'': [nan, 0.23270565991663802], 'false': [nan, 0.23270565991663802], 'false,false': [nan, 0.2327056599166384], 'false,false,false': [0.22750000000000026, 0.23354610783228139]}
{'': [nan, 0.21861459379214376], 'false': [nan, 0.21861459379214376], 'false,false': [nan, 0.21861459379214415], 'false,false,false': [nan, 0.21861459379214415]}
{'': [nan, 0.21194010789488396], 'false': [nan, 0.21194010789488396], 'false,false': [nan, 0.2119401078948832], 'false,false,false': [nan, 0.21194010789488357]}
{'': [0.23040724735732765, 0.22737771916370578], 'true': [1.7233202852346658e-05, 1.608327659484029e-05], 'false': [nan, 0.22737771916370578], 'false,false': [nan, 0.22737771916370578], 'false,false,false': [0.22407354208560787, 0.22913580246913579], 'true,true': [nan, 1.7233202852346658e-05], 'true,true,false': [nan, 1.7233202852346658e-05]}
{'': [nan, 0.18761733186723928], 'false': [nan, 0.18761733186723928], 'false,false': [nan, 0.1876173318672399], 'false,false,false': [0.13780695017517489, 0.2207088551053455]}
{'': [nan, 0.2004459127596769], 'false': [nan, 0.20044591275967696], 'false,false': [nan, 0.20044591275967696], 'false,false,false': [nan, 0.20044591275967696]}
{'': [nan, 0.18787302307432913], 'false': [nan, 0.18787302307432913], 'false,false': [nan, 0.18787302307432913], 'false,false,false': [nan, 0.18787302307432913]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 13.245
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, E), interaction(F, A) )
%   | | then if ( phenotype(A, G), complex(F, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.27481560176617903;  // std dev = 3.819, 60.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=25 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.045648935099512344;  // std dev = 2.208, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | | else return 0.1539235829868356;  // std dev = 5.439, 142.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.21947341221095443;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13804726884092844;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8421007193887641;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06886993514418545;  // std dev = 2.623, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( complex(H, I) )
%   | | | then return 0.20815877147815984;  // std dev = 2.731, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.5050267282866998;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14526127642265482;  // std dev = 5.557, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5874838750972905;  // std dev = 0.052, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.583969510669801;  // std dev = 0.818, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.09117311821672346;  // std dev = 1.891, 48.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=4 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8118156759507371;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -9.295472161751905E-5;  // std dev = 3.376, 77.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=14 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( enzyme(J, K), enzyme(A, L) )
%   | | | then return 0.007872310985067993;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2938469026072442;  // std dev = 1.989, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.1183061890014228;  // std dev = 4.681, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
%   | | | else return 0.21395254663843916;  // std dev = 1.547, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.40972405790716326;  // std dev = 1.49e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14621574415553876;  // std dev = 0.162, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.06300737241867464;  // std dev = 0.433, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( location(E, G) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.5026853147496025;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12043111516961676;  // std dev = 3.301, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | else return 0.4843765429971909;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( phenotype(H, J), interaction(H, H) )
%   | | | then return 0.20489748450439424;  // std dev = 1.828, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.09366495309821038;  // std dev = 5.010, 122.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=38 */
%   | | else return 0.29939364661035406;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return 0.02724360569447017;  // std dev = 0.401, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(E, E), phenotype(D, F) )
%   | | then if ( complex(A, G), phenotype(E, F) )
%   | | | then return 0.08813152937300635;  // std dev = 1.341, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.3134591481458464;  // std dev = 1.689, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(E, E) )
%   | | | then return 0.029747722840715887;  // std dev = 2.791, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.11488829344912643;  // std dev = 4.279, 89.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=32 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7617431374321879;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.24011330738624292;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.21950580077154527;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.06287056244432578;  // std dev = 1.295, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3609458071709884;  // std dev = 0.072, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(D, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5207199972079716;  // std dev = 1.461, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return -0.2415422758224487;  // std dev = 0.301, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6740200006540243;  // std dev = 0.084, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2214843035492729;  // std dev = 0.417, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7103144719050589;  // std dev = 0.486, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.22858873109906977;  // std dev = 0.209, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.032966879385548056;  // std dev = 2.689, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0.09219135266568498;  // std dev = 4.512, 94.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.382167114584897;  // std dev = 0.252, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.5765434563932519;  // std dev = 0.149, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return -0.20346192279031777;  // std dev = 0.065, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( complex(G, H) )
%   | | | then return -0.22231045218102508;  // std dev = 0.533, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.42783639109916316;  // std dev = 0.513, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.18442024198321338;  // std dev = 0.526, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.0779085501052633;  // std dev = 4.629, 105.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=36 */
%   | else if ( interaction(A, I) )
%   | | then return 0.38664133802943007;  // std dev = 0.741, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.18834276028932134;  // std dev = 0.791, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), enzyme(D, E) )
%   | | then if ( interaction(F, D), interaction(F, A) )
%   | | | then return 0.5581998520232304;  // std dev = 0.950, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.224450414181898;  // std dev = 0.804, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( enzyme(D, G) )
%   | | | then return -0.16906902044172606;  // std dev = 1.081, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.3022390990348433;  // std dev = 3.097, 68.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=47 */
%   | else return -0.21641934903012935;  // std dev = 0.060, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( interaction(A, H) )
%   | | then if ( phenotype(I, J) )
%   | | | then return -0.11356490409277697;  // std dev = 0.582, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.1273548124319692;  // std dev = 0.529, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.06582510686636271;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else return -0.20194430950521028;  // std dev = 0.293, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then return 0.07151379924814848;  // std dev = 0.231, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else if ( recursion_proteinclass(D, B) )
%   | | then return 0.17544583939821976;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, F), phenotype(D, F) )
%   | | | then return 0.031314689043583095;  // std dev = 1.035, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.0550935534260363;  // std dev = 1.944, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   else if ( interaction(G, A), interaction(G, G) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.3130974709371735;  // std dev = 0.220, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return -0.16531746432114547;  // std dev = 0.067, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3410826570264507;  // std dev = 2.832, 51.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=38 */
%   | | | else return -0.20719429646732368;  // std dev = 0.288, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0.3808412034023847;  // std dev = 0.733, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return -0.05267019050898273;  // std dev = 0.230, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( complex(A, F), location(A, E) )
%   | | then if ( interaction(D, G), enzyme(G, H) )
%   | | | then return 0.1555041222698938;  // std dev = 0.572, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.01748477113662819;  // std dev = 1.271, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else if ( complex(D, I) )
%   | | | then return 0.30891060760440453;  // std dev = 0.852, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.05466432569902633;  // std dev = 1.488, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.25105263737233313;  // std dev = 1.403, 24.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | | else return -0.2127883057851832;  // std dev = 0.577, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.01929694350451445;  // std dev = 2.214, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0.07161631025631295;  // std dev = 2.320, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '9.938', 'seconds']
Refined model CLL: -0.219173


******************************************
Best model found
******************************************
Results 

CLL : -0.241664 

AUC ROC : 0.982306 

AUC PR : 0.329329 

Precision : 0.181343 

Recall : 0.737589 

F1 : 0.291113 

Total Learning Time : 13.245 

Total Inference Time : 9.706889152526855 

Total revision time: 25.848593545913694
Best scored revision CLL: -0.219173


Results 

CLL : -0.241664 

AUC ROC : 0.982306 

AUC PR : 0.329329 

Precision : 0.181343 

Recall : 0.737589 

F1 : 0.291113 

Total Learning Time : 25.8786216506958 

Total Inference Time : 9.706889152526855 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.144
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2106913079808688;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.13327111222425408;  // std dev = 4.797, 109.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=33 */
%   | | | else return 0.15178578697206702;  // std dev = 6.942, 221.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1816545743226266;  // std dev = 5.071, 110.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=41 */
%   | | | else return 0.10345057338762112;  // std dev = 6.667, 214.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.08918443056000538;  // std dev = 2.882, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0.12290039082852368;  // std dev = 7.822, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10053233659230831;  // std dev = 8.328, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07470187701138359;  // std dev = 8.374, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7256957357538211;  // std dev = 0.030, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2743248023665257;  // std dev = 0.044, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.045976791664674235;  // std dev = 3.822, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | | | else return 0.07677510505467108;  // std dev = 5.270, 124.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.036326064345079394;  // std dev = 4.125, 123.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
%   | | | else return 0.08451601489420155;  // std dev = 6.357, 176.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03406673555125925;  // std dev = 7.672, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.008911114183271625;  // std dev = 7.801, 335.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.218', 'seconds']
Parameter learned model CLL:-0.327656 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.206, 191, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.797, 76, 33], 'false,false,false,false': [6.942, 150, 71]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.071, 69, 41], 'false,false,false,false': [6.667, 151, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.882, 27, 12], 'false,false,false,false': [7.822, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.328, 207, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.374, 214, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.03, 0, 41], 'true,false': [0.044, 86, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.822, 48, 21], 'false,false,false,false': [5.27, 82, 42]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.125, 82, 41], 'false,false,false,false': [6.357, 113, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.672, 215, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.801, 231, 104]}]
{'': [nan, 0.2282562482045412], 'false': [nan, 0.2282562482045395], 'false,false': [nan, 0.2282562482045412], 'false,false,false': [nan, 0.2282562482045395]}
{'': [nan, 0.21583103764922418], 'false': [nan, 0.2158310376492189], 'false,false': [nan, 0.21583103764922418], 'false,false,false': [0.21109334231125323, 0.21805450338854546]}
{'': [nan, 0.21793266661769536], 'false': [nan, 0.21793266661769536], 'false,false': [nan, 0.21793266661769564], 'false,false,false': [0.23378779137529787, 0.20770646195627693]}
{'': [nan, 0.22141256865055428], 'false': [nan, 0.22141256865055428], 'false,false': [nan, 0.2214125686505558], 'false,false,false': [0.21301775147929, 0.22246191567983079]}
{'': [nan, 0.22300353791977473], 'false': [nan, 0.22300353791977473], 'false,false': [nan, 0.223003537919775], 'false,false,false': [nan, 0.223003537919775]}
{'': [nan, 0.22051670538962462], 'false': [nan, 0.22051670538962462], 'false,false': [nan, 0.2205167053896243], 'false,false,false': [nan, 0.22051670538962423]}
{'': [0.21864351366618348, 0.2198183384962124], 'false': [nan, 0.2198183384962124], 'false,false': [nan, 0.2198183384962124], 'false,false,false': [0.21172022684310063, 0.22398543184183153], 'true': [2.2156515198935823e-05, 2.2067994436672833e-05], 'true,true': [nan, 2.2156515198935823e-05], 'true,true,false': [nan, 2.2156515198935823e-05]}
{'': [nan, 0.1926061302068677], 'false': [nan, 0.1926061302068677], 'false,false': [nan, 0.19260613020686854], 'false,false,false': [0.13831390105551153, 0.22959367926552252]}
{'': [nan, 0.18452098041544876], 'false': [nan, 0.18452098041544862], 'false,false': [nan, 0.18452098041544862], 'false,false,false': [nan, 0.18452098041544862]}
{'': [nan, 0.18167320754970182], 'false': [nan, 0.18167320754970182], 'false,false': [nan, 0.18167320754970145], 'false,false,false': [nan, 0.18167320754970145]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 17.982
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.6763307532813305;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return 0.07848791815035908;  // std dev = 0.414, 118.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=26 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.13087620782678389;  // std dev = 5.326, 143.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=39 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( location(A, L) )
%   | | | then return 0.224815601766179;  // std dev = 2.639, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( enzyme(A, E), phenotype(C, F) )
%   | then if ( enzyme(C, G) )
%   | | then return 0.18165683285749282;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.48148371801383094;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A), interaction(H, C) )
%   | | then return 0.11649827943989521;  // std dev = 0.437, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | else return 0.2192571791632735;  // std dev = 0.475, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.7536971760658777;  // std dev = 0.106, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.21769976138072514;  // std dev = 2.211, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.10571125148465407;  // std dev = 3.203, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else if ( location(A, N) )
%   | | | then return 0.20047697594292466;  // std dev = 5.035, 110.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=40 */
%   | | | else return 0.5914589649401939;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.6725847028381132;  // std dev = 0.182, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, D), complex(C, D) )
%   | | then return -0.17359422409503997;  // std dev = 0.024, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( complex(C, E), enzyme(A, F) )
%   | | | then return 0.22753531572002975;  // std dev = 1.520, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.0794185736798816;  // std dev = 3.216, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5155613754047178;  // std dev = 0.364, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7968378841854725;  // std dev = 0.108, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.17511753726041893;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( location(A, J), complex(A, K) )
%   | | | then return 0.05796516673032396;  // std dev = 3.619, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | | | else return 0.13670501422586612;  // std dev = 5.334, 134.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=44 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.6442778876526465;  // std dev = 0.183, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(D, F) )
%   | | | then return 0.12413557861061267;  // std dev = 5.277, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   | | | else return -0.013345892765763102;  // std dev = 1.273, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | then return 0.7664423598705847;  // std dev = 0.102, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.2140454236782766;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5871030819653287;  // std dev = 0.136, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.5013390903442166;  // std dev = 0.197, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return -0.05084451374278747;  // std dev = 1.254, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.053404440639213666;  // std dev = 4.479, 109.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=29 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), interaction(F, F) )
%   | | then return 0.37793681046279815;  // std dev = 1.014, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7409729496373787;  // std dev = 0.070, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.2213639156045997;  // std dev = 0.257, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H) )
%   | | then return 0.49025527518773704;  // std dev = 0.079, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.34709167125374246;  // std dev = 0.189, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, A) )
%   | | | then return 0.3281443607347281;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5489372510803245;  // std dev = 0.123, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, K), location(A, L) )
%   | | | then return -0.009146295998243587;  // std dev = 3.482, 86.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=16 */
%   | | | else return 0.06755198057735527;  // std dev = 5.460, 159.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=46 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.20263363934936698;  // std dev = 1.376, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.6264819146864459;  // std dev = 2.350, 82.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=77 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.2218679690656186;  // std dev = 0.515, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0.40596637662533486;  // std dev = 1.031, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return -0.20396202486642376;  // std dev = 0.262, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return -0.315798673809142;  // std dev = 0.680, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.2584647897175537;  // std dev = 0.959, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.10540904735257976;  // std dev = 0.698, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06438419996205628;  // std dev = 1.237, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.25233534702396726;  // std dev = 0.054, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.37118886774071186;  // std dev = 0.094, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5961731593432711;  // std dev = 0.601, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.1822611781597233;  // std dev = 0.084, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.27625056781412605;  // std dev = 0.191, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.2116791633225744;  // std dev = 1.601, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return -0.0014864269778455692;  // std dev = 4.307, 165.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=40 */
%   | | else if ( interaction(K, A), interaction(A, L) )
%   | | | then return -0.00484208327633346;  // std dev = 0.380, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.17067967264088663;  // std dev = 1.631, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20954654512779905;  // std dev = 0.058, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( location(A, F), interaction(D, G) )
%   | | then if ( enzyme(E, H), complex(A, I) )
%   | | | then return 0.051861769392977985;  // std dev = 1.441, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.03413333997566603;  // std dev = 2.984, 116.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=25 */
%   | | else if ( phenotype(E, J), phenotype(D, J) )
%   | | | then return -0.19618114902721281;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.11904417209882832;  // std dev = 0.766, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | else if ( enzyme(A, K), interaction(L, A) )
%   | | then if ( location(A, M), phenotype(L, N) )
%   | | | then return 0.006287290147998974;  // std dev = 1.824, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return -0.05969575046798189;  // std dev = 1.635, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( phenotype(A, P), interaction(Q, A) )
%   | | | then return 0.12922823352847218;  // std dev = 2.633, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | | | else return 0.009776824025635986;  // std dev = 2.614, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( complex(C, F) )
%   | | then return 0.3322801715693461;  // std dev = 0.122, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.1454092998292004;  // std dev = 0.859, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, C) )
%   | | then return -0.18461215153954655;  // std dev = 0.169, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.010534250164408697;  // std dev = 0.297, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   else if ( complex(A, G), interaction(A, H) )
%   | then return -0.0017538039548442488;  // std dev = 0.279, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5273464285906337;  // std dev = 0.159, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.056723755864053906;  // std dev = 1.743, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.11205115716990381;  // std dev = 0.587, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.03986763207694589;  // std dev = 3.678, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.18018508410053768;  // std dev = 0.132, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(C, C) )
%   | | then return 0.03008558347009493;  // std dev = 0.274, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( interaction(D, D) )
%   | | | then return -0.1168897446675495;  // std dev = 1.093, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.035855461497608314;  // std dev = 2.656, 75.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.4437445881475552;  // std dev = 0.196, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | else return -0.2018467947269096;  // std dev = 0.075, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.13946208036367008;  // std dev = 0.135, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, H), interaction(I, A) )
%   | | | then return -0.04380592088230033;  // std dev = 0.890, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.019146262385624172;  // std dev = 2.866, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '54.437', 'seconds']
Refined model CLL: -0.20572


******************************************
Best model found
******************************************
Results 

CLL : -0.20071 

AUC ROC : 0.9898 

AUC PR : 0.445001 

Precision : 0.432796 

Recall : 0.607547 

F1 : 0.505495 

Total Learning Time : 17.982 

Total Inference Time : 15.358891725540161 

Total revision time: 36.46179158782959
Best scored revision CLL: -0.20572


Results 

CLL : -0.20071 

AUC ROC : 0.9898 

AUC PR : 0.445001 

Precision : 0.432796 

Recall : 0.607547 

F1 : 0.505495 

Total Learning Time : 36.49181969261169 

Total Inference Time : 15.358891725540161 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.157
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20015637004375036;  // std dev = 7.780, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.17128224341471082;  // std dev = 5.011, 112.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=38 */
%   | | | else return 0.16740025583706913;  // std dev = 5.991, 161.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1428087967346677;  // std dev = 5.406, 131.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
%   | | | else return 0.16004506802074334;  // std dev = 5.573, 136.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.10342740331590472;  // std dev = 4.040, 75.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
%   | | | else return 0.11858474452395042;  // std dev = 6.716, 202.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10047514421883165;  // std dev = 7.801, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.089279584915814;  // std dev = 7.758, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7285816007759626;  // std dev = 0.007, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2714944294206058;  // std dev = 0.010, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.13492191689726843;  // std dev = 2.870, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.08952511245753784;  // std dev = 4.644, 93.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.025712935767288617;  // std dev = 4.315, 140.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=44 */
%   | | | else return 0.040513188490986216;  // std dev = 5.639, 142.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.006798924387068155;  // std dev = 7.228, 299.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.031272145635695484;  // std dev = 7.074, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.323', 'seconds']
Parameter learned model CLL:-0.32829 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.78, 177, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.011, 74, 38], 'false,false,false,false': [5.991, 107, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.406, 87, 44], 'false,false,false,false': [5.573, 88, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.04, 51, 24], 'false,false,false,false': [6.716, 134, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.801, 180, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.758, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.007, 0, 44], 'true,false': [0.01, 88, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.87, 20, 14], 'false,false,false,false': [4.644, 59, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.315, 96, 44], 'false,false,false,false': [5.639, 94, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.228, 207, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.074, 181, 92]}]
{'': [nan, 0.2250383493871021], 'false': [nan, 0.22503834938710165], 'false,false': [nan, 0.2250383493871021], 'false,false,false': [nan, 0.22503834938710165]}
{'': [nan, 0.22342980584738562], 'false': [nan, 0.2234298058473896], 'false,false': [nan, 0.22342980584738562], 'false,false,false': [0.22417091836734632, 0.2229080668184121]}
{'': [nan, 0.22585030677158907], 'false': [nan, 0.22585030677158907], 'false,false': [nan, 0.2258503067715891], 'false,false,false': [0.22307810717226814, 0.22837482447672797]}
{'': [nan, 0.22177634905711732], 'false': [nan, 0.22177634905711732], 'false,false': [nan, 0.22177634905711716], 'false,false,false': [0.21759999999999963, 0.22326476838415937]}
{'': [nan, 0.22375974387031974], 'false': [nan, 0.22375974387031974], 'false,false': [nan, 0.22375974387031894], 'false,false,false': [nan, 0.22375974387031894]}
{'': [nan, 0.22626105833540275], 'false': [nan, 0.22626105833540275], 'false,false': [nan, 0.22626105833540322], 'false,false,false': [nan, 0.2262610583354036]}
{'': [0.22225725432085305, 0.23509053056627477], 'false': [nan, 0.23509053056627477], 'false,false': [nan, 0.23509053056627477], 'false,false,false': [0.2422145328719722, 0.2319343276679375], 'true': [1.233192701329115e-06, 1.2428270201062217e-06], 'true,true': [nan, 1.233192701329115e-06], 'true,true,false': [nan, 1.233192701329115e-06]}
{'': [nan, 0.17882509324615575], 'false': [nan, 0.17882509324615575], 'false,false': [nan, 0.17882509324615595], 'false,false,false': [0.13298062154971363, 0.22391512118191453]}
{'': [nan, 0.17474443994762376], 'false': [nan, 0.17474443994762343], 'false,false': [nan, 0.17474443994762343], 'false,false,false': [nan, 0.17474443994762343]}
{'': [nan, 0.18331753925895475], 'false': [nan, 0.18331753925895475], 'false,false': [nan, 0.18331753925895444], 'false,false,false': [nan, 0.18331753925895444]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 8.412
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, D), location(A, E) )
%   | then return 0.058148935099512376;  // std dev = 0.400, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.19148226843284566;  // std dev = 0.471, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   else if ( enzyme(A, F), interaction(G, A) )
%   | then if ( interaction(A, G) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, H), location(G, I) )
%   | | | then return 0.23314893509951234;  // std dev = 3.062, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return 0.3914822684328456;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.14800400756328025;  // std dev = 3.769, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | | else return 0.24775932470990064;  // std dev = 4.279, 77.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=30 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7434413363218892;  // std dev = 0.278, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( enzyme(C, F), enzyme(A, G) )
%   | | then return -0.04297021236115383;  // std dev = 0.347, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | else if ( location(A, D), phenotype(C, H) )
%   | | | then return 0.19357892932276294;  // std dev = 3.387, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | | else return 0.0846291082760177;  // std dev = 5.030, 133.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=35 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.8153422303415647;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.19860656274667343;  // std dev = 1.596, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.02523711938870381;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.4343880641761829;  // std dev = 1.550, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.1433423086202763;  // std dev = 2.614, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.681430213317897;  // std dev = 0.056, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7566422084378153;  // std dev = 0.144, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( enzyme(A, F) )
%   | | then return -0.17265324334176285;  // std dev = 0.109, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(G, E), interaction(A, H) )
%   | | | then return 0.2018446687218416;  // std dev = 1.371, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.06590466317136547;  // std dev = 1.503, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8216754863421697;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18393726385503467;  // std dev = 0.078, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(K, A), enzyme(A, L) )
%   | | | then return 0.20301440571696155;  // std dev = 3.434, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | | else return 0.13478678307337974;  // std dev = 5.518, 141.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=47 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.49676381627785143;  // std dev = 0.229, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(D, F), interaction(D, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.02113584568792682;  // std dev = 1.898, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.22728737287947373;  // std dev = 1.265, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( complex(D, I) )
%   | | | then return -0.14829836917178202;  // std dev = 0.931, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.036618698009962765;  // std dev = 0.705, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, J), phenotype(J, K) )
%   | | | then return -0.17795337874740744;  // std dev = 0.065, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.09414479527264785;  // std dev = 5.805, 166.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=52 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.2859780536631803;  // std dev = 2.229, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.0550389775966377;  // std dev = 2.066, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.4525677419794908;  // std dev = 0.073, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, D) )
%   | | then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | | then return 0.764404902172109;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.21464475858660972;  // std dev = 0.150, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( phenotype(A, F), interaction(A, G) )
%   | | | then return 0.4752319075811511;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.14633349417448135;  // std dev = 3.841, 65.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=25 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(I, J), phenotype(A, J) )
%   | | | then return 0.6265570722638057;  // std dev = 1.367, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0.2636359527185886;  // std dev = 3.559, 60.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=32 */
%   | | else return -0.22856557231275407;  // std dev = 0.039, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return -0.1174347441854624;  // std dev = 0.361, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.42120381456485084;  // std dev = 0.122, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( complex(A, F), phenotype(A, G) )
%   | | then if ( phenotype(E, G), complex(E, H) )
%   | | | then return -0.04968333347655332;  // std dev = 1.026, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.2146051888399455;  // std dev = 1.260, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( phenotype(E, I), interaction(E, J) )
%   | | | then return -0.002180000942633532;  // std dev = 2.468, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return -0.20226201730750049;  // std dev = 1.095, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | else if ( interaction(K, A), enzyme(A, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.6643378911709635;  // std dev = 0.244, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.2510355626085096;  // std dev = 0.324, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(N, A), recursion_proteinclass(N, B) )
%   | | | then return 0.31972319379407094;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07736989949789463;  // std dev = 4.876, 126.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=42 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2784196095960655;  // std dev = 0.071, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.5351562993486533;  // std dev = 0.266, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.6407770663885612;  // std dev = 0.491, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.21303388871274972;  // std dev = 0.071, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.3368543664447068;  // std dev = 0.255, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5248560977949702;  // std dev = 0.400, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.22694713619493703;  // std dev = 0.302, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.00783695054060156;  // std dev = 3.031, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.05780873850055654;  // std dev = 3.505, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.24872567348875632;  // std dev = 0.078, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.38734194252179666;  // std dev = 0.780, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.5562813422151528;  // std dev = 0.213, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.17663568820059952;  // std dev = 0.156, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.2451439488812032;  // std dev = 0.773, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( interaction(A, J), complex(A, K) )
%   | | then if ( interaction(J, J), enzyme(A, L) )
%   | | | then return 0.015491515389261645;  // std dev = 1.331, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.057366023324855124;  // std dev = 1.312, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.35918748711201065;  // std dev = 0.719, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0599379868243916;  // std dev = 4.147, 104.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=36 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20644180556661154;  // std dev = 0.069, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( enzyme(A, F), phenotype(D, G) )
%   | | then if ( interaction(H, D) )
%   | | | then return -0.08501896428618547;  // std dev = 0.869, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.040292126240159126;  // std dev = 1.519, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.0640501129665179;  // std dev = 1.215, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.0722853314605467;  // std dev = 2.515, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   | else if ( complex(A, K), interaction(L, A) )
%   | | then if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.3131827455051994;  // std dev = 0.667, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.01078959674225196;  // std dev = 1.249, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( interaction(P, A), phenotype(P, Q) )
%   | | | then return -0.07344664328849432;  // std dev = 2.104, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | | else return -0.010833682720218361;  // std dev = 3.505, 98.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3454212968492525;  // std dev = 0.146, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.14745351431271472;  // std dev = 0.049, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.05625770030097736;  // std dev = 0.417, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.4101135159779057;  // std dev = 0.401, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.26482388449127725;  // std dev = 0.457, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(A, J), phenotype(J, I) )
%   | | | then return -0.02687006047907515;  // std dev = 1.533, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.0651710480280981;  // std dev = 2.582, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | else if ( location(A, K) )
%   | | | then return -0.031538008246064134;  // std dev = 3.042, 76.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=21 */
%   | | | else return 0.1153039285547611;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '19.486', 'seconds']
Refined model CLL: -0.221105


******************************************
Best model found
******************************************
Results 

CLL : -0.228607 

AUC ROC : 0.969962 

AUC PR : 0.265149 

Precision : 0.245752 

Recall : 0.6787 

F1 : 0.360845 

Total Learning Time : 8.412 

Total Inference Time : 4.982481479644775 

Total revision time: 16.410421365737918
Best scored revision CLL: -0.221105


Results 

CLL : -0.228607 

AUC ROC : 0.969962 

AUC PR : 0.265149 

Precision : 0.245752 

Recall : 0.6787 

F1 : 0.360845 

Total Learning Time : 16.440449470520022 

Total Inference Time : 4.982481479644775 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.166
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1927792852940654;  // std dev = 7.565, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.14763190314445776;  // std dev = 4.381, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   | | | else return 0.20964853819480328;  // std dev = 6.013, 154.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1728917682989578;  // std dev = 4.208, 76.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=28 */
%   | | | else return 0.13829990723113195;  // std dev = 6.219, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.19267851389711044;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.12547241461737002;  // std dev = 7.099, 223.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=77 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09282686816503362;  // std dev = 7.557, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05741648500935805;  // std dev = 7.661, 270.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6860997438716312;  // std dev = 0.982, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.27951411923310854;  // std dev = 0.004, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.16214613645551293;  // std dev = 3.313, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | | else return 0.05281333370057774;  // std dev = 5.131, 120.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.057449951689041115;  // std dev = 3.354, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | | else return 0.05486698802271674;  // std dev = 6.185, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.056760782842125754;  // std dev = 6.947, 240.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.046098990653452424;  // std dev = 6.932, 239.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.483', 'seconds']
Parameter learned model CLL:-0.361145 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.565, 171, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.381, 61, 28], 'false,false,false,false': [6.013, 96, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.208, 48, 28], 'false,false,false,false': [6.219, 116, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.306, 13, 9], 'false,false,false,false': [7.099, 146, 77]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.557, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.661, 184, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.982, 1, 28], 'true,false': [0.004, 72, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.313, 26, 19], 'false,false,false,false': [5.131, 81, 39]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.354, 50, 28], 'false,false,false,false': [6.185, 112, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.947, 154, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.932, 153, 86]}]
{'': [nan, 0.22265287892322444], 'false': [nan, 0.22265287892322422], 'false,false': [nan, 0.22265287892322444], 'false,false,false': [nan, 0.22265287892322422]}
{'': [nan, 0.22865755558942435], 'false': [nan, 0.22865755558942522], 'false,false': [nan, 0.22865755558942435], 'false,false,false': [0.21562933972983347, 0.23477820880418113]}
{'': [nan, 0.22577444801937602], 'false': [nan, 0.22577444801937602], 'false,false': [nan, 0.22577444801937585], 'false,false,false': [0.23302717264363415, 0.2222428258438919]}
{'': [nan, 0.22776367271634793], 'false': [nan, 0.22776367271634793], 'false,false': [nan, 0.2277636727163482], 'false,false,false': [0.24173553719008264, 0.22597970488627497]}
{'': [nan, 0.223083402492815], 'false': [nan, 0.223083402492815], 'false,false': [nan, 0.22308340249281522], 'false,false,false': [nan, 0.22308340249281522]}
{'': [nan, 0.21739254105192513], 'false': [nan, 0.21739254105192513], 'false,false': [nan, 0.2173925410519252], 'false,false,false': [nan, 0.21739254105192507]}
{'': [0.2004045352548097, 0.22844841531048327], 'false': [nan, 0.22844841531048327], 'false,false': [nan, 0.22844841531048327], 'false,false,false': [0.24395061728395065, 0.21937499999999904], 'true': [0.033271558834060855, 2.6284360092147335e-07], 'true,true': [nan, 0.033271558834060855], 'true,true,false': [nan, 0.033271558834060855]}
{'': [nan, 0.19962408690656175], 'false': [nan, 0.19962408690656175], 'false,false': [nan, 0.19962408690656233], 'false,false,false': [0.1442206236805095, 0.22504240108790738]}
{'': [nan, 0.2010579737810349], 'false': [nan, 0.20105797378103546], 'false,false': [nan, 0.20105797378103546], 'false,false,false': [nan, 0.20105797378103546]}
{'': [nan, 0.2010758927721397], 'false': [nan, 0.2010758927721397], 'false,false': [nan, 0.20107589277213941], 'false,false,false': [nan, 0.20107589277213941]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 7.246
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995121;  // std dev = 4.21e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( complex(A, F), phenotype(A, G) )
%   | | | then return 0.06968739663797391;  // std dev = 2.945, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | | else return 0.16991364098186526;  // std dev = 6.040, 170.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=53 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( recursion_proteinclass(D, B) )
%   | | then return 0.700609782024674;  // std dev = 0.305, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.14014848554053058;  // std dev = 0.090, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.15141548236443356;  // std dev = 4.795, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7443356231566909;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then if ( location(A, G), location(F, G) )
%   | | | then return 0.040162748511923516;  // std dev = 1.795, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.3361814687528403;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(A, H), interaction(A, I) )
%   | | | then return 0.17393844626293273;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.3106155130634423;  // std dev = 2.992, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5645138699904461;  // std dev = 0.128, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.6820779979943351;  // std dev = 0.154, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.21328631310340534;  // std dev = 1.225, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.1258734715813792;  // std dev = 0.079, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.05574130387499419;  // std dev = 4.487, 112.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=28 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( enzyme(H, J) )
%   | | | then return 0.14980692554605116;  // std dev = 1.657, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.39343019352109043;  // std dev = 2.154, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.022495445718392834;  // std dev = 1.278, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.1892021765547874;  // std dev = 3.122, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.07404097685211608;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.4718557448375864;  // std dev = 0.079, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.08545856039181801;  // std dev = 0.170, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6404106401061845;  // std dev = 0.957, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.23458935989381546;  // std dev = 0.100, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J), enzyme(J, K) )
%   | | | then return 0.07085511257904763;  // std dev = 1.853, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.4054853947984823;  // std dev = 1.895, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.014527062211614863;  // std dev = 1.812, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.0977176334350428;  // std dev = 5.098, 123.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.37874124646853674;  // std dev = 0.195, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( enzyme(A, F), interaction(D, D) )
%   | | then if ( interaction(G, C) )
%   | | | then return 0.27615426221928996;  // std dev = 0.973, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08893167195861405;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.02276688746205473;  // std dev = 0.349, 88.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=17 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.4400209364789686;  // std dev = 0.113, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A), phenotype(A, J) )
%   | | then if ( interaction(K, I), interaction(K, A) )
%   | | | then return 0.19486244931319302;  // std dev = 1.440, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.022690834872514137;  // std dev = 3.292, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.09187199890066644;  // std dev = 2.560, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.18704860065864065;  // std dev = 2.745, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.24147524909523035;  // std dev = 0.074, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( complex(A, E) )
%   | | then return 0.36113402461072264;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.437446895848299;  // std dev = 0.161, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.3598976172690717;  // std dev = 0.146, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( phenotype(G, I) )
%   | | | then return 0.10045765966192315;  // std dev = 2.459, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.4016202952627138;  // std dev = 1.033, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.08979843970528209;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.03317397505425028;  // std dev = 5.686, 173.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=51 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5204974607116091;  // std dev = 0.297, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.22572027494977426;  // std dev = 0.093, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.35336521040868296;  // std dev = 0.136, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5757004127945383;  // std dev = 0.324, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.004424549806733662;  // std dev = 3.644, 88.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=22 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7248896500023044;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2950437372404556;  // std dev = 0.080, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.10673946385751382;  // std dev = 1.795, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return -0.01467545173472572;  // std dev = 3.016, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17459263955385323;  // std dev = 0.069, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), interaction(D, D) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.18407248184646155;  // std dev = 0.913, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.06760675606693495;  // std dev = 0.465, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( enzyme(A, H), phenotype(D, I) )
%   | | | then return -0.05038804971753728;  // std dev = 1.091, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.038222897448313545;  // std dev = 2.435, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | else if ( phenotype(A, J), complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.6261024543937349;  // std dev = 0.080, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.19156565191838787;  // std dev = 0.280, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.03990934441653778;  // std dev = 3.871, 95.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=30 */
%   | | | else return 0.1093748771058713;  // std dev = 3.013, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( phenotype(C, E), location(A, F) )
%   | then return 0.021398320778713124;  // std dev = 0.305, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | else return 0.2840886743663744;  // std dev = 0.670, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), enzyme(A, H) )
%   | then if ( phenotype(G, I), interaction(J, A) )
%   | | then return -0.09063289364827669;  // std dev = 0.301, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.11566734621114323;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.047537204918734886;  // std dev = 0.979, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( interaction(M, A), interaction(A, N) )
%   | | then if ( interaction(N, P), enzyme(P, Q) )
%   | | | then return -0.0029446335957627147;  // std dev = 1.269, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.16378263872612764;  // std dev = 1.836, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( interaction(R, A), complex(R, S) )
%   | | | then return -0.05211548402584684;  // std dev = 2.797, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return 0.013572390656709721;  // std dev = 3.866, 81.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=27 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( phenotype(E, D), interaction(E, E) )
%   | then if ( interaction(F, A), phenotype(F, D) )
%   | | then return -0.06003504945802929;  // std dev = 0.323, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( enzyme(G, C), recursion_proteinclass(G, B) )
%   | | | then return 0.5343863391086107;  // std dev = 0.755, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.2148652661858551;  // std dev = 0.200, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(H, D), interaction(H, I) )
%   | | then return -0.1468323448241771;  // std dev = 0.338, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | | else return 0.0076544646755116;  // std dev = 0.531, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.1896193420102033;  // std dev = 0.110, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then return -0.03902687056701587;  // std dev = 0.319, 95.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=20 */
%   | | else if ( interaction(M, A), phenotype(A, N) )
%   | | | then return 0.0036625672502273924;  // std dev = 2.801, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.07929508149086345;  // std dev = 2.822, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.425', 'seconds']
Refined model CLL: -0.266838


******************************************
Best model found
******************************************
Results 

CLL : -0.284334 

AUC ROC : 0.90133 

AUC PR : 0.179144 

Precision : 0.205167 

Recall : 0.477032 

F1 : 0.286929 

Total Learning Time : 7.246 

Total Inference Time : 2.9193031787872314 

Total revision time: 12.980430900573731
Best scored revision CLL: -0.266838


Results 

CLL : -0.284334 

AUC ROC : 0.90133 

AUC PR : 0.179144 

Precision : 0.205167 

Recall : 0.477032 

F1 : 0.286929 

Total Learning Time : 13.010459005355836 

Total Inference Time : 2.9193031787872314 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.234
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.16656015005278196;  // std dev = 4.777, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
%   | | | else return 0.13507201202258803;  // std dev = 5.102, 130.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.024815601766178853;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7413433124639606;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5515724396446856;  // std dev = 1.284, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7234939352173239;  // std dev = 2.821, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | | else return -0.16134571518957702;  // std dev = 0.026, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.2104964906247183;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.18843455085907243;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.6081049788703139;  // std dev = 0.056, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3595678198186947;  // std dev = 0.851, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09532165324052111;  // std dev = 4.253, 118.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6402886683150888;  // std dev = 1.666, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.13868277984432786;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01328683120467168;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.10048581712635447;  // std dev = 1.338, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4683328794168222;  // std dev = 0.100, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.47906824889928173;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.509660410118493;  // std dev = 1.563, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return 0.05343891510949038;  // std dev = 4.967, 216.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5304352852280179;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.05264387786431227;  // std dev = 1.488, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.31551686167891224;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.22260240716287288;  // std dev = 0.926, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.38400922811553545;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.06834379890988333;  // std dev = 5.291, 244.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39926142596795033;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1799583827801375;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.008130907259095849;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.29514046609361444;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.35885616447244695;  // std dev = 0.168, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3082345575432369;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.30835846054966254;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.00890188601262691;  // std dev = 2.242, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2879778069767233;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.08969614933313276;  // std dev = 2.780, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return 0.09190111622000537;  // std dev = 4.051, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.261170127245472;  // std dev = 0.172, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.14156770091538756;  // std dev = 0.549, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5609521487125321;  // std dev = 0.836, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.18464213425093542;  // std dev = 0.580, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23281096975635704;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04261522188269451;  // std dev = 4.043, 134.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.18515495799403567;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.08340719091675028;  // std dev = 0.972, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39685645835501276;  // std dev = 2.559, 80.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=71 */
%   | | else return -0.15633024483567473;  // std dev = 0.313, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.27396544292087777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.12619316412165774;  // std dev = 1.302, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18419061000520412;  // std dev = 0.096, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.2568658057092919;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.20097307994535618;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.04352497817216222;  // std dev = 1.458, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.32909376704397586;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.029385817706018856;  // std dev = 1.567, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1812236796591202;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.035896737421679446;  // std dev = 3.317, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
%   | | | else return 0.012565620158685351;  // std dev = 1.392, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1477195408339656;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2322232023391413;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.036509058361618926;  // std dev = 0.466, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.018210423106046085;  // std dev = 2.392, 104.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.15590898880557835;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.006793638493134819;  // std dev = 3.477, 138.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=40 */
%   | | | else return 0.04945589702127643;  // std dev = 1.343, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.737', 'seconds']
Parameter learned model CLL:-0.19937 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.943, 1, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.777, 74, 33], 'false,false,true,false': [5.102, 94, 36], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.291, 10, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 2], 'true,false': [1.284, 2, 9], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [2.821, 9, 69], 'false,false,true,false': [0.026, 148, 0], 'false,false,false,true': [1.367, 5, 3], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.056, 0, 8], 'true,false': [0.851, 1, 3], 'false,true,true': [4.253, 84, 34], 'false,true,false,true': [1.666, 3, 37], 'false,true,false,false': [0.0, 61, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.247, 7, 2], 'false,false,false,true': [1.338, 7, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.1, 0, 5], 'true,false': [0.031, 0, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.563, 3, 14], 'false,true,false': [4.967, 159, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.488, 9, 3], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.926, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.061, 0, 4], 'false,true': [5.291, 173, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.245, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.05, 0, 4], 'true,true,false': [0.168, 0, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [2.242, 41, 12], 'false,false,true': [0.04, 0, 3], 'false,false,false,true': [2.78, 41, 20], 'false,false,false,false': [4.051, 81, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.172, 0, 10], 'true,true,true,false': [0.549, 1, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.836, 1, 33], 'true,false': [0.58, 90, 0], 'false,true': [0.035, 0, 3], 'false,false,true': [4.043, 94, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.022, 0, 3], 'true,false': [0.972, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.559, 9, 71], 'false,true,false': [0.313, 167, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.302, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.096, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.035, 0, 3], 'false,true,true': [1.458, 40, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.567, 33, 17], 'false,false,true': [0.029, 0, 3], 'false,false,false,true': [3.317, 87, 40], 'false,false,false,false': [1.392, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.033, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.466, 1, 3], 'false,true': [2.392, 75, 29], 'false,false,true': [0.025, 0, 3], 'false,false,false,true': [3.477, 98, 40], 'false,false,false,false': [1.343, 8, 4]}]
{'': [0.07638888888888877, 0.20826961801087093], 'false': [1.4802973661668753e-16, 0.2048019096038205], 'false,false': [0.20637718314372724, 0.1799307958477507], 'false,false,true': [0.21329373744431968, 0.2002366863905337], 'false,false,false': [0.24000000000000005, 0.13888888888888892], 'true': [0.09876543209876527, 1.4802973661668753e-16], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0]}
{'': [0.13157347653174423, 0.214579509387848], 'false': [0.0, 0.2131969369289777], 'false,false': [0.21217976493933693, 0.2306119625468478], 'false,false,false': [0.23362537084506707, 0.2222222222222222], 'false,false,true': [0.10204613168664003, 4.519607869891185e-06], 'true': [0.0, 0.1499554677070759], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.07434173582291233, 0.16510548292581811], 'false': [0.1635967128239139, 0.17792275257383752], 'false,false': [0.17283950617283955, 0.17889593916042384], 'false,false,false': [0.17889593916042384, nan], 'false,false,true': [nan, 0.17283950617283955], 'false,true': [0.15330315377020753, 0.17263237685426253], 'false,true,false': [0.0694156868055031, -1.8200377452871417e-17], 'true': [0.00038951775625595264, 0.1810656923365922]}
{'': [0.0010332267684233737, 0.13478096347789886], 'false': [0.13045361501175975, 0.20098705162793154], 'false,false': [0.0, 0.20242262921540546], 'false,false,false': [0.18462132375803145, 0.25], 'false,true': [0.14364692009455554, 0.11422921487181278], 'false,true,true': [nan, 0.1436469200945556], 'true': [0.0020138043599820855, 0.00016369324912823835], 'false,false,true': [nan, 0.0]}
{'': [0.07755142154555546, 0.1194940569656216], 'false': [0.11473282406567127, 0.19643907109933723], 'false,false': [0.0, 0.20322083281460585], 'false,false,false': [0.24000000000000005, 0.17224343310464857], 'true': [0.10717490618655429, 0.0009363443635279911], 'true,true': [0.10717490618655429, nan], 'false,false,true': [nan, 0.0]}
{'': [0.003670784858038986, 0.12433807931255315], 'false': [0.09483895876874808, 0.130380033133291], 'false,false': [0.0005324611284324617, 0.13188392641478275], 'false,false,false': [0.12666283092399658, 0.13449285353385018], 'true': [0.004396570825591935, 3.8379887601358575e-09], 'true,true': [0.0006190217310571289, 0.005614303336818671], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}
{'': [0.11534889064759438, 0.12011729235170221], 'false': [0.00040023871857817567, 0.12200538425683924], 'false,false': [0.12200538425683924, nan], 'true': [0.05423358941091549, 0.0037339759317506585], 'true,true': [0.050129501387921105, 0.02056401965003897], 'true,true,true': [0.00296840909349948, 0.15077016433359086], 'true,true,false': [nan, 0.020564019650038654]}
{'': [0.08071280259775794, 0.09711971593634303], 'false': [0.09392118648634182, 0.15588344879666763], 'false,false': [0.0, 0.16948664400528765], 'false,false,false': [0.16948664400528765, nan], 'false,true': [0.0818523972263081, 0.0005883011765452318], 'false,true,true': [nan, 0.08185239722630808], 'true': [0.00016786802398357134, 0.10497296209604601], 'false,false,true': [0.0, nan]}
{'': [0.01608824565824361, 0.07292551014722726], 'false': [0.047314574778149196, 0.0903768008529037], 'false,false': [0.00027379011768305833, 0.09183974857976775], 'false,false,false': [0.08664308594541886, 0.13849060949013964], 'false,true': [0.041664678012444945, 0.0498607425846946], 'false,true,false': [0.0, 0.0490966857717539], 'true': [0.0011472128549499597, 0.039609747627884676], 'true,false': [0.0, 0.00040888553280707857]}
{'': [0.02199149576050402, 0.07687418525397204], 'false': [0.05499662946655763, 0.09134941273295376], 'false,false': [0.0002144250170048647, 0.09275585404578542], 'false,false,false': [0.08760048626842395, 0.15036812064693797], 'true': [0.000917128393179055, 0.0542543833428064], 'true,true': [0.000917128393179055, nan], 'true,true,true': [0.00015553813408911155, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 5.483
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.1572143556602586;  // std dev = 4.736, 107.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=32 */
%   | | | else return 0.2275183044688811;  // std dev = 5.085, 111.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=41 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.7561337978940016;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.487803605052478;  // std dev = 0.803, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.21947341221095448;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6539883879598362;  // std dev = 3.504, 84.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=69 */
%   | | | else return -0.16333385141648554;  // std dev = 0.170, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.08791362420109783;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.029005751295368812;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5850638471314413;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3683604958324548;  // std dev = 0.842, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.12217288655528744;  // std dev = 3.920, 92.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=29 */
%   | | | else return 0.0251710103084248;  // std dev = 1.659, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6663674049209352;  // std dev = 1.383, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.14723533225769056;  // std dev = 0.035, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.4922829560404253;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.06446807444825224;  // std dev = 0.669, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.1611529174778363;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.46587485250241334;  // std dev = 0.124, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.23657871345022377;  // std dev = 0.389, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( location(A, H), location(F, H) )
%   | | | then return -0.013748141903876195;  // std dev = 2.183, 45.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=8 */
%   | | | else return 0.11523603773484994;  // std dev = 2.112, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.1677104160584247;  // std dev = 2.723, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | | else return 0.09978915008526247;  // std dev = 3.628, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5712237399435226;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.07202177755409862;  // std dev = 0.889, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.11762559024520002;  // std dev = 1.417, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3610860039417266;  // std dev = 0.045, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.41561359898256334;  // std dev = 0.114, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.35466367572104146;  // std dev = 3.714, 100.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=68 */
%   | | | else return -0.15800550688340034;  // std dev = 0.512, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.04465346991560892;  // std dev = 0.769, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.11695315009022474;  // std dev = 0.738, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.42938077630898897;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.019061789581643496;  // std dev = 1.478, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.12296538366534245;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.16495439342095333;  // std dev = 0.300, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return -0.17451578338197793;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.3287688178085698;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.1332304876426148;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.03977981442256406;  // std dev = 1.659, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.33284331868980893;  // std dev = 0.613, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06442742688645264;  // std dev = 1.306, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.10469033808994146;  // std dev = 0.825, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.038089779517901295;  // std dev = 0.314, 216.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=61 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return -0.010985008282647191;  // std dev = 0.297, 101.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=27 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( enzyme(G, H) )
%   | | | then return 0.18679056740636815;  // std dev = 1.212, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.09665385547006358;  // std dev = 0.911, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.07544286364349345;  // std dev = 1.416, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.010000159065365872;  // std dev = 1.103, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.3189428901580785;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, K) )
%   | | then return 0.002124111874673947;  // std dev = 0.309, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.2029160580885585;  // std dev = 1.476, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.14176395072427841;  // std dev = 2.019, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.21804731167616367;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2674682945971736;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.3438122748229018;  // std dev = 1.935, 31.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | | else return 0.41992530496354896;  // std dev = 1.708, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.14776004760272157;  // std dev = 0.218, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.18229520634171664;  // std dev = 0.411, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.26259439917344984;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.06478817725953205;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.11881552705006761;  // std dev = 1.359, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.22274553224675397;  // std dev = 0.040, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.023228947448676457;  // std dev = 0.349, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.010964156309914999;  // std dev = 1.594, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.21492009523252414;  // std dev = 0.622, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.2132889793756689;  // std dev = 0.494, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.023271685044513185;  // std dev = 2.120, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.17572715113740334;  // std dev = 1.050, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.01791570719898548;  // std dev = 2.967, 112.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=37 */
%   | | | else return -0.049761266429499594;  // std dev = 1.899, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.18686550050796102;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2196637976667798;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( complex(A, I), interaction(G, J) )
%   | | | then return 0.015275023166830328;  // std dev = 1.548, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return -0.04258684577887541;  // std dev = 1.949, 56.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.17713238113416438;  // std dev = 0.635, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -3.3503888347579357E-4;  // std dev = 1.006, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return -0.0021888626331555694;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(M, A), complex(A, N) )
%   | | | then return -0.017852802007921813;  // std dev = 1.823, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return 0.02027880948723056;  // std dev = 2.954, 95.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=31 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '45.556', 'seconds']
Refined model CLL: -0.210236


******************************************
Best model found
******************************************
Results 

CLL : -0.205737 

AUC ROC : 0.986191 

AUC PR : 0.270111 

Precision : 0.169135 

Recall : 0.769504 

F1 : 0.277316 

Total Learning Time : 5.483 

Total Inference Time : 19.495994329452515 

Total revision time: 33.60562347602844
Best scored revision CLL: -0.19937


Results 

CLL : -0.205737 

AUC ROC : 0.986191 

AUC PR : 0.270111 

Precision : 0.169135 

Recall : 0.769504 

F1 : 0.277316 

Total Learning Time : 33.6294481678009 

Total Inference Time : 19.495994329452515 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.315
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.062096303520564014;  // std dev = 4.968, 152.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=31 */
%   | | | else return 0.19649479976116566;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7347337483847239;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6567650328816799;  // std dev = 0.973, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6948935710476464;  // std dev = 3.307, 89.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=76 */
%   | | | else return -0.15772162025378964;  // std dev = 0.118, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.07373365448410585;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.22373365448410584;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5758088040454944;  // std dev = 0.028, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5864043610840267;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08658738938930802;  // std dev = 4.353, 132.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6094697748595455;  // std dev = 2.124, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.1466367557720515;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7888683221574972;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.21533569629293287;  // std dev = 1.431, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4342479420015567;  // std dev = 0.026, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.43789753636029144;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.25979690557214874;  // std dev = 0.764, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.43083097391536934;  // std dev = 2.262, 29.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
%   | | else return 0.027367547893012562;  // std dev = 5.170, 248.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5017604818240897;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return -0.05078352195064369;  // std dev = 1.300, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.0404938251564109;  // std dev = 1.175, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.20717095391361484;  // std dev = 0.943, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24307083910309862;  // std dev = 0.945, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.060703182664817085;  // std dev = 5.845, 282.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.37878263530315137;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.12896238082763115;  // std dev = 1.543, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2835624994815433;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.28771029224773503;  // std dev = 1.095, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2912379122437093;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.010464166609053548;  // std dev = 2.912, 81.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.16807846377837526;  // std dev = 0.948, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.024383328465990818;  // std dev = 2.295, 59.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | | else return 0.07545315750189376;  // std dev = 4.642, 155.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2926807354317126;  // std dev = 0.371, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.23780723765367917;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.25544254750342676;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.511052730050766;  // std dev = 1.503, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.18234278487701205;  // std dev = 0.894, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.242242920280564;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05131603293223745;  // std dev = 4.465, 159.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1810232022150564;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.12678536990597575;  // std dev = 0.965, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40481211322710486;  // std dev = 3.002, 92.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=82 */
%   | | else return -0.14784515180289157;  // std dev = 0.396, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.19741236128575812;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.021136970708518776;  // std dev = 1.417, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18700153478591464;  // std dev = 0.179, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.2516163907187624;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2169439336292079;  // std dev = 0.138, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.04363255380936953;  // std dev = 1.897, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.14712699961723028;  // std dev = 0.723, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.04061987517723517;  // std dev = 1.355, 60.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.014369957436447053;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.022590402535406617;  // std dev = 3.818, 166.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=47 */
%   | | | else return -0.032024961085877476;  // std dev = 1.440, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13910228172452188;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.20907785951912464;  // std dev = 0.144, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17226427461640206;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.034318416166833725;  // std dev = 2.639, 149.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.17889993526045514;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.03217072248124519;  // std dev = 3.829, 147.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=47 */
%   | | | else return -0.02440318100771388;  // std dev = 1.439, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.955', 'seconds']
Parameter learned model CLL:-0.194711 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.968, 121, 31], 'false,false,true,false': [5.457, 88, 45], 'false,false,false,true': [1.549, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.973, 1, 13], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [3.307, 13, 76], 'false,false,true,false': [0.118, 176, 0], 'false,false,false,true': [1.225, 6, 2], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.028, 0, 11], 'true,false': [0.017, 0, 6], 'false,true,true': [4.353, 98, 34], 'false,true,false,true': [2.124, 5, 48], 'false,true,false,false': [0.0, 84, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.431, 5, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.026, 0, 10], 'true,false': [0.025, 0, 7], 'false,true,true,true': [0.764, 1, 3], 'false,true,true,false': [2.262, 8, 21], 'false,true,false': [5.17, 190, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.3, 9, 2], 'false,false,false,false': [1.175, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.943, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.945, 1, 10], 'false,true': [5.845, 200, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.543, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(J, A)'}, {'true,true,true': [0.006, 0, 5], 'true,true,false': [1.095, 1, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.005, 0, 2], 'false,true': [2.912, 62, 19], 'false,false,true': [0.948, 1, 8], 'false,false,false,true': [2.295, 48, 11], 'false,false,false,false': [4.642, 105, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.371, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [1.503, 3, 33], 'true,false': [0.894, 103, 0], 'false,true': [0.002, 0, 5], 'false,false,true': [4.465, 112, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.965, 1, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.002, 10, 82], 'false,true,false': [0.396, 185, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.417, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.179, 0, 9], 'true,false,true': [0.853, 2, 2], 'true,false,false': [0.138, 0, 5], 'false,true,true': [1.897, 47, 13], 'false,true,false,true': [0.723, 3, 8], 'false,true,false,false': [1.355, 49, 11], 'false,false,true': [0.913, 1, 5], 'false,false,false,true': [3.818, 119, 47], 'false,false,false,false': [1.44, 13, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.02, 0, 7], 'true,true,true,false': [0.144, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.083, 0, 3], 'false,true': [2.639, 117, 32], 'false,false,true': [0.002, 0, 5], 'false,false,false,true': [3.829, 100, 47], 'false,false,false,false': [1.439, 13, 4]}]
{'': [0.05246913580246885, 0.2050896890487265], 'false': [-2.5376526277146434e-16, 0.19764435507038317], 'false,false': [0.19555555555555595, 0.23999999999999985], 'false,false,false': [0.23999999999999985, nan], 'false,false,true': [0.16235283933518116, 0.2238679405280129], 'true': [0.07100591715976314, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.05365128171018638, 0.20716298937943067], 'false': [0.10937500000000006, 0.2039101869566116], 'false,false': [0.2034630347885915, 0.21301775147928984], 'false,false,false': [0.18750000000000006, 0.24000000000000005], 'false,false,true': [0.12285328138817013, 7.955490421018336e-05], 'false,true': [0.0, 0.1875], 'false,true,false': [0.22222222222222224, 0.0], 'true': [0.0, 0.06762930365340233]}
{'': [8.851180955523031e-05, 0.16076308508105183], 'false': [0.15715434279261103, 0.23440203024936598], 'false,false': [0.23440203024936598, nan], 'false,false,true': [0.0, 0.2275527329839631], 'false,true': [0.1435671556960052, 0.16852100147998506], 'false,true,false': [0.0850812906490592, -2.64338815386942e-18], 'true': [7.057963818009453e-05, 4.874486186941714e-05]}
{'': [7.905894315615235e-05, 0.13350649328047337], 'false': [0.13094774091313427, 0.159804958157849], 'false,false': [0.0, 0.15349952239258885], 'false,false,false': [0.15361387473536092, 0.15330152559502502], 'false,true': [0.1757917341077294, 0.10777787257426741], 'false,true,true': [0.14591511883209027, 0.17636687049481034], 'true': [6.518333802352227e-05, 9.104621327152682e-05], 'false,false,true': [nan, 0.0]}
{'': [0.09409612757843121, 0.12479592252672442], 'false': [0.12113335761839349, 0.20325525728910468], 'false,false': [0.0, 0.21653216132289943], 'false,false,false': [0.21653216132289943, nan], 'true': [0.11116614217138863, 0.08113891813961822], 'true,true': [0.11116614217138863, nan], 'false,false,true': [nan, 0.0]}
{'': [0.0705835851538445, 0.12121803844893773], 'false': [0.10467591914604558, 0.1267495641066667], 'false,false': [0.0998436933168695, 0.127298496586671], 'false,false,false': [0.08927434843345876, 0.1390242040705058], 'true': [0.07999045153821802, 1.0813532752576571e-05], 'true,true': [6.594343920296453e-06, 0.11997664540708981], 'true,false': [nan, 1.0813532752576571e-05]}
{'': [0.11013017169575956, 0.1226206247966977], 'false': [9.185717392612425e-07, 0.1253652161234354], 'false,false': [0.1253652161234354, nan], 'true': [0.05534988778653139, 0.00775155788811051], 'true,true': [0.008802057853179071, 0.06255980560110234], 'true,true,false': [-9.25185853854297e-18, 0.06274723308669013], 'true,true,true': [0.009200667912657974, 0.0]}
{'': [0.052227283646942964, 0.10209587982962456], 'false': [0.10084142755923758, 0.1207128462006275], 'false,false': [0.0, 0.12544776317551115], 'false,false,false': [0.12544776317551115, nan], 'false,true': [0.09792664941640078, 0.000848466511386221], 'false,true,true': [nan, 0.09792664941640102], 'true': [0.0, 0.06649564414368489], 'false,false,true': [0.0, nan]}
{'': [0.07835593149500772, 0.07500363238733011], 'true': [0.0035789394746396086, 0.13723629561546513], 'true,false': [0.18208158393241847, 0.0037828304938690716], 'false': [0.04825498340591173, 0.09276365030993548], 'false,false': [0.13886259301892215, 0.09125189518772489], 'false,false,false': [0.08783688106631234, 0.12189275995910273], 'false,true': [0.05999891913913737, 0.03785858061625276], 'false,true,false': [0.047566656089441745, 0.03061767130138913]}
{'': [0.0027338906323696142, 0.0760693192065666], 'false': [0.046735596895822656, 0.09994345810668936], 'false,false': [5.878054683827738e-07, 0.10230159740021859], 'false,false,false': [0.0997116362610427, 0.1218283073571279], 'true': [0.0028401481977177734, 0.0022728324449095144], 'true,true': [0.0028401481977177734, nan], 'true,true,true': [5.496962787642937e-05, 0.003452902394802939]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 7.885
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7129876447769319;  // std dev = 2.774, 62.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=53 */
%   | | | else return -0.14185106490048763;  // std dev = 8.30e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( location(A, J), complex(A, K) )
%   | | | then return 0.0010060779566551492;  // std dev = 2.070, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | | else return 0.12644161802634163;  // std dev = 4.012, 82.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.7641072739982948;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6434639779164663;  // std dev = 3.199, 89.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=76 */
%   | | | else return -0.14281960387137094;  // std dev = 0.348, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.1222078074065712;  // std dev = 1.300, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.02386070137781266;  // std dev = 0.817, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.6040520610480189;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5634807074632401;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08225908715434037;  // std dev = 3.624, 112.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=31 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5695561325401706;  // std dev = 2.129, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.12488351715262468;  // std dev = 0.246, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( recursion_proteinclass(J, B) )
%   | | then return 0.6919719737271774;  // std dev = 0.166, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.13895036521437223;  // std dev = 0.008, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4167247732070492;  // std dev = 0.000966, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( complex(A, E) )
%   | | then return -0.2176403728851254;  // std dev = 0.836, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.43578107549200706;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A) )
%   | then if ( location(A, G), interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.42509934510942066;  // std dev = 1.700, 30.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | | else return -0.07172423173655669;  // std dev = 1.868, 104.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=9 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.06631308984070053;  // std dev = 3.567, 122.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=35 */
%   | | | else return 0.12927037884915227;  // std dev = 2.072, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.3742028650269642;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.32286074109032875;  // std dev = 0.874, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.33826359280396373;  // std dev = 0.057, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.1880441107651087;  // std dev = 0.356, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.27064434392148407;  // std dev = 3.778, 117.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=76 */
%   | | | else return -0.1239932058430087;  // std dev = 0.396, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.08865044791348956;  // std dev = 0.820, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3450225164270415;  // std dev = 0.834, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.29143371016289643;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.06222450022573254;  // std dev = 0.758, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.12528929589650797;  // std dev = 1.047, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.28692069392726083;  // std dev = 0.043, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.25548453934231696;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, F), phenotype(F, G) )
%   | | then if ( interaction(A, F), phenotype(A, H) )
%   | | | then return -0.08220480767078737;  // std dev = 0.891, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return -0.0021262434161443224;  // std dev = 1.407, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( complex(A, I), enzyme(F, J) )
%   | | | then return 0.1613173418256805;  // std dev = 1.208, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.03156888971128092;  // std dev = 4.344, 220.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=66 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.30498182957908415;  // std dev = 0.880, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.19573805976039046;  // std dev = 0.220, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.21455906739314842;  // std dev = 0.170, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.17531858134837766;  // std dev = 0.220, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.23686885442237104;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3856216860553727;  // std dev = 1.346, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.13661702442138393;  // std dev = 0.087, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.12481098954760184;  // std dev = 0.902, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(G, H), complex(H, I) )
%   | | | then return 0.0657582301441016;  // std dev = 3.245, 115.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=40 */
%   | | | else return -0.05159090255469908;  // std dev = 0.863, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( location(A, J) )
%   | | | then return 0.16097415549481212;  // std dev = 0.743, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.14820616065242687;  // std dev = 0.681, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1750550118188503;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, E), enzyme(A, F) )
%   | | then return -0.0545802828303246;  // std dev = 0.672, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2248416140903805;  // std dev = 0.053, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.1524044877919335;  // std dev = 1.604, 29.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | | else return 0.3945659633908648;  // std dev = 1.672, 62.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=59 */
%   | | else return -0.11854993538223597;  // std dev = 0.037, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.16649590804849645;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.19063752488191957;  // std dev = 0.368, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.07372214559526978;  // std dev = 0.646, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.24183776785944402;  // std dev = 0.069, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.1645213910972949;  // std dev = 0.182, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( phenotype(F, H), enzyme(A, I) )
%   | | then return -0.004266420813864475;  // std dev = 0.182, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( phenotype(F, J), phenotype(A, J) )
%   | | | then return 0.29053955492454947;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11543077374619334;  // std dev = 0.913, 23.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | else if ( interaction(A, K) )
%   | | then if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | | then return 0.23549046353026037;  // std dev = 0.187, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.09807203226079798;  // std dev = 1.300, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | else if ( location(A, M) )
%   | | | then return 0.02392867822109578;  // std dev = 2.771, 117.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=40 */
%   | | | else return -0.023793877134854775;  // std dev = 0.990, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.16557868668496495;  // std dev = 0.117, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2001018611889255;  // std dev = 0.820, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return -0.10650347705167004;  // std dev = 0.748, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1399422641444483;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1424955327906958;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, I), interaction(J, A) )
%   | then return -0.005967443426722607;  // std dev = 0.200, 105.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=32 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2200746869462998;  // std dev = 0.113, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.018324601986225753;  // std dev = 2.780, 111.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=39 */
%   | | | else return -0.02436652823549298;  // std dev = 1.531, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.271', 'seconds']
Refined model CLL: -0.177202


******************************************
Best model found
******************************************
Results 

CLL : -0.153147 

AUC ROC : 0.991991 

AUC PR : 0.393474 

Precision : 0.257525 

Recall : 0.871698 

F1 : 0.39759 

Total Learning Time : 7.885 

Total Inference Time : 18.928144931793213 

Total revision time: 36.193935823440555
Best scored revision CLL: -0.177202


Results 

CLL : -0.153147 

AUC ROC : 0.991991 

AUC PR : 0.393474 

Precision : 0.257525 

Recall : 0.871698 

F1 : 0.39759 

Total Learning Time : 36.217760515213016 

Total Inference Time : 18.928144931793213 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.421
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.16584124279182005;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.13144086056534987;  // std dev = 5.655, 161.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16460054800273813;  // std dev = 3.630, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7374618873838701;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7728681067867951;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8036584266501988;  // std dev = 1.387, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15946895399886413;  // std dev = 0.023, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.032210585391385216;  // std dev = 1.956, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.16299492412897595;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5599422829219449;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5724286887056586;  // std dev = 0.055, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.03506919551240078;  // std dev = 2.117, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6366301560029809;  // std dev = 1.680, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.13847335097022648;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6230035136889627;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1594822625903785;  // std dev = 3.570, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.04625992143956755;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.42151397036116656;  // std dev = 0.046, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.43532873087835366;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5080874951056594;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4139168952492977;  // std dev = 0.657, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.04037259873325012;  // std dev = 4.385, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return -0.023476011618785375;  // std dev = 0.698, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5023751560150871;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.12843458465685864;  // std dev = 1.848, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.11408870226706143;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.31609954862295436;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23078485849107425;  // std dev = 0.970, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.06245799597753953;  // std dev = 4.353, 196.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.47571631777209833;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3792166523872672;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.11226361641085071;  // std dev = 3.541, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.17588969262204968;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2608632660920756;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.37353455550011827;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.4007758805647963;  // std dev = 0.057, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.24843407992919408;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.3456540119060792;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.09341070161905023;  // std dev = 1.058, 34.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.29203802353810593;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.05811996925810276;  // std dev = 2.791, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
%   | | | else return 0.08135714901276067;  // std dev = 4.667, 142.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24320789928845352;  // std dev = 0.162, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.25123823006931534;  // std dev = 0.032, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2120894641977139;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6417832930861329;  // std dev = 0.645, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19413740815659625;  // std dev = 0.849, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2402170226177998;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07382416734438156;  // std dev = 3.361, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1751290150236844;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.09334267311140612;  // std dev = 0.896, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4560121051602814;  // std dev = 0.717, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1411689956359479;  // std dev = 0.232, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.20708258573399213;  // std dev = 0.028, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.008761474929243143;  // std dev = 3.085, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16311858004830082;  // std dev = 0.062, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.07548349851843678;  // std dev = 0.348, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.1664762358840337;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07347698490456636;  // std dev = 0.427, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.22226957303387673;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.02751357769069381;  // std dev = 1.273, 68.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1846662550867229;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.028461509463367136;  // std dev = 2.715, 117.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=36 */
%   | | | else return 0.014518287655740505;  // std dev = 3.073, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13099537579721496;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16259979686642032;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.13650007751466464;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15577992861983533;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.016547655267362477;  // std dev = 1.380, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15846251523555688;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03751494603077145;  // std dev = 2.650, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
%   | | | else return 0.03495887747446991;  // std dev = 3.013, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.800', 'seconds']
Parameter learned model CLL:-0.179952 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.913, 1, 5], 'false,true,true': [0.707, 1, 1], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.353, 18, 8], 'false,false,true,false': [5.655, 117, 44], 'false,false,false,true': [3.63, 43, 19], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.048, 0, 9], 'false,true,true': [0.066, 0, 4], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [1.387, 2, 52], 'false,false,true,false': [0.023, 158, 0], 'false,false,false,true': [1.956, 20, 5], 'false,false,false,false': [3.179, 31, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.035, 0, 6], 'true,false': [0.055, 0, 8], 'false,true,true': [2.117, 29, 8], 'false,true,false,true': [1.68, 3, 48], 'false,true,false,false': [0.0, 111, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.57, 38, 20], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.046, 0, 9], 'true,false': [0.043, 0, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.657, 1, 3], 'false,true,false': [4.385, 162, 52], 'false,false,true,true': [0.698, 1, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.848, 9, 5], 'false,false,false,false': [3.179, 31, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.008, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.97, 1, 9], 'false,true': [4.353, 140, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.541, 37, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.016, 0, 6], 'true,true,false': [0.0, 0, 1], 'true,false,true,true': [0.057, 0, 2], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.062, 0, 3], 'false,true': [1.058, 31, 3], 'false,false,true': [0.03, 0, 6], 'false,false,false,true': [2.791, 58, 23], 'false,false,false,false': [4.667, 96, 46]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.162, 0, 12], 'true,true,true,false': [0.032, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.645, 0, 36], 'true,false': [0.849, 92, 0], 'false,true': [0.003, 0, 5], 'false,false,true': [3.361, 75, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.012, 0, 5], 'true,false': [0.896, 1, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.717, 0, 56], 'false,true,false': [0.232, 130, 0], 'false,false,true,true': [0.028, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.085, 49, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.062, 0, 9], 'true,false,true': [0.348, 1, 1], 'true,false,false': [0.012, 0, 4], 'false,true,true': [0.427, 11, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.273, 54, 14], 'false,false,true': [0.002, 0, 5], 'false,false,false,true': [2.715, 81, 36], 'false,false,false,false': [3.073, 46, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.008, 0, 5], 'true,true,true,false': [0.033, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.03, 0, 4], 'false,true': [1.38, 56, 17], 'false,false,true': [0.002, 0, 5], 'false,false,false,true': [2.65, 72, 36], 'false,false,false,false': [3.013, 40, 20]}]
{'': [0.06222222222222188, 0.21092482422931377], 'false': [0.1874999999999999, 0.20505600000000138], 'false,false': [0.20074923503674763, 0.2166792642983115], 'false,false,false': [0.21253902185223675, 0.0], 'false,false,true': [0.21301775147929003, 0.19860344894101395], 'false,true': [0.25, 0.1388888888888887], 'false,true,false': [0.22222222222222224, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.1388888888888887]}
{'': [0.00024070779516855673, 0.194106695447707], 'false': [0.001348782757637501, 0.18911103330404563], 'false,false': [0.18516949674808506, 0.20015612707511585], 'false,false,false': [0.1530137580470011, 0.21975425330812873], 'false,false,true': [0.03561704318371836, 3.2333923453128735e-06], 'false,true': [0.00107284300017374, 0.0], 'true': [0.0, 0.000258868191237364], 'false,true,false': [nan, 0.0]}
{'': [0.00034034219043827766, 0.16221833070668995], 'false': [0.14296458016921884, 0.22038221031874028], 'false,false': [0.2195792938349701, 0.22222222222222224], 'false,false,false': [0.22222222222222224, nan], 'false,false,true': [0.0, 0.21972358525037147], 'false,true': [0.12116897560627847, 0.14701921825394612], 'false,true,false': [0.05535293525714965, -2.800562584640034e-17], 'true': [0.00020584334475344987, 0.00037439761210372735]}
{'': [0.00032535280622411226, 0.12360538972132036], 'false': [0.09322896228297252, 0.22542233793284158], 'false,false': [0.223705513527414, 0.22545192156414773], 'false,false,false': [0.24401504821969586, 0.21975425330812828], 'false,false,true': [0.2433851201238187, 0.0], 'false,true': [0.08764031894691762, 0.08984445080785372], 'false,true,true': [0.0, 0.10777677830818569], 'true': [0.00023629927081706784, 0.0003629614218622956]}
{'': [0.06432392064601831, 0.12644958838522294], 'false': [0.096678775871801, 0.22071657119401092], 'false,false': [0.0023280463548460695, 0.22498139164089548], 'false,false,false': [0.2239482741353697, 0.25], 'true': [1.1317338913341412e-05, 0.09405402351547124], 'false,false,true': [0.0, 0.0], 'true,true': [1.1317338913341412e-05, nan]}
{'': [0.0038191369847908607, 0.12119614657796772], 'false': [0.032941367898295736, 0.13047187687855102], 'false,false': [0.00014819626036538525, 0.13272033128309768], 'false,false,false': [0.09616492316467921, 0.1533762285197556], 'true': [0.0015912358751874228, 0.004441473326549887], 'true,false': [0.00661060072900331, 0.0012961253230204066], 'true,false,true': [0.0016171893475578347, 0.0], 'true,true': [4.2896217689482784e-05, 0.0]}
{'': [0.13839426055086754, 0.09851367576830423], 'true': [0.041874671038351095, 0.007837897863995585], 'false': [1.4354121235515827e-06, 0.10175777690513496], 'false,false': [0.10175777690513496, nan], 'true,true': [0.0019679088014331603, 0.01611289066873902], 'true,true,false': [0.0, 0.011570287543882538], 'true,true,true': [0.00219924358645369, 0.0005246261949242575]}
{'': [0.05506388397524538, 0.09396698656395466], 'false': [0.07810102548716202, 0.13510469824488186], 'false,false': [0.00039941611443283787, 0.13790127627504908], 'false,false,false': [0.13790127627504908, nan], 'false,true': [0.009191044866112932, 0.00041427665796378577], 'true': [2.6803720285212274e-05, 0.0803527555282614], 'false,true,true': [nan, 0.009191044866112932], 'false,false,true': [0.00039941611443283787, nan]}
{'': [0.014960066426784586, 0.07065831756690406], 'false': [0.023803566819268443, 0.09014701405999272], 'false,false': [9.765861294475098e-07, 0.09191863158723546], 'false,false,false': [0.06298376906273763, 0.14308795440324526], 'false,true': [0.015173923723240376, 0.024870307286373967], 'false,true,false': [0.0, 0.02381916912998972], 'true': [0.0004242185503550402, 0.03317907339735276], 'true,false': [0.06043981253484412, 3.386613790238788e-05]}
{'': [0.0003259891295791041, 0.07415560235281789], 'false': [0.026094401399576302, 0.09348270237794616], 'false,false': [7.659589210784468e-07, 0.09583571299733055], 'false,false,false': [0.06503386111018412, 0.15127484629575266], 'true': [0.0003094825854278255, 0.00022318053843999736], 'true,true': [0.0003787964612257319, 0.0], 'true,true,true': [1.2221589986904924e-05, 0.000365479935507317], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,false;interaction(A, J), interaction(J, K).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 2.715
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.04276431971489699;  // std dev = 3.128, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
%   | | | else return 0.15226658215833455;  // std dev = 5.314, 136.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=40 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.16460054800273813;  // std dev = 3.630, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, E), phenotype(A, F) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H), complex(G, H) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8418795485996241;  // std dev = 0.043, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15761993465388016;  // std dev = 0.079, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.11815796760723624;  // std dev = 2.543, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.20332780251552396;  // std dev = 2.639, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462844;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5753897189581847;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.05822539176026723;  // std dev = 0.807, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.07725303291302384;  // std dev = 1.908, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6875289892720229;  // std dev = 0.217, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1375881093759738;  // std dev = 0.059, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13731214492628133;  // std dev = 3.626, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | else return 0.053006160492750976;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.42651111568219296;  // std dev = 0.028, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3857644973621821;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6130853950777373;  // std dev = 0.138, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, G), complex(A, H) )
%   | | | then return 0.0890463711113988;  // std dev = 2.212, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return 0.028701492655025213;  // std dev = 3.586, 158.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=36 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return -0.041200139261698354;  // std dev = 0.649, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5212535623390733;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.00950596740744715;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.19092728307449572;  // std dev = 3.094, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.31875485323639774;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.33175832274278805;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( enzyme(F, G) )
%   | | | then return -0.06821741997681692;  // std dev = 0.646, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.06670929873023695;  // std dev = 1.537, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12742038419356605;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.09822328287233244;  // std dev = 3.701, 135.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=47 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.410107843571011;  // std dev = 0.017, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.017657038188892756;  // std dev = 1.942, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.14634608385951106;  // std dev = 3.038, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.2771540340956832;  // std dev = 0.065, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3137785933141621;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( enzyme(A, G) )
%   | | then if ( interaction(H, A), enzyme(H, G) )
%   | | | then return -0.11661070151212574;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.009235850570032508;  // std dev = 0.786, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return -0.03990455290169529;  // std dev = 0.462, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.03119716208548884;  // std dev = 0.906, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2488818427658388;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return -0.0033211091775519988;  // std dev = 2.559, 64.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | | else return 0.07193281285566447;  // std dev = 4.709, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.19092984984758457;  // std dev = 0.187, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.24385679740921629;  // std dev = 0.781, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.612485860930399;  // std dev = 1.159, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.19647978171847644;  // std dev = 0.078, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.06795305288973448;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4344076916722647;  // std dev = 0.988, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return -0.15570102751706133;  // std dev = 0.075, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.14168726020273087;  // std dev = 1.250, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.01747686836137427;  // std dev = 1.936, 56.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17372357809129857;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.24529624759171434;  // std dev = 0.166, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.010480521039899715;  // std dev = 0.890, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.3508988524358966;  // std dev = 0.344, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.4355767146578489;  // std dev = 0.462, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.13219701676738008;  // std dev = 0.027, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2180042715961651;  // std dev = 0.017, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return -0.017679466588013133;  // std dev = 2.192, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.06658314835903939;  // std dev = 2.155, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.155885354452704;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.19740098608741807;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.08126471717428242;  // std dev = 0.008, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.007282497687666117;  // std dev = 0.385, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.19678052074587465;  // std dev = 9.45e-05, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.007424927587950033;  // std dev = 1.370, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20458982718215032;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.016789269906592404;  // std dev = 2.277, 109.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=27 */
%   | | | else return 0.005475874497210545;  // std dev = 3.290, 99.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.13744649384585256;  // std dev = 0.016, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.17388934737345796;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.28622702253187576;  // std dev = 0.147, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.09116955908497622;  // std dev = 0.085, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.049340383610396485;  // std dev = 0.236, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.05844546678330403;  // std dev = 0.806, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.17336965277204247;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, K), interaction(A, L) )
%   | | | then return 0.14697655097682263;  // std dev = 1.454, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.005827063972019588;  // std dev = 3.618, 166.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=51 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.606', 'seconds']
Refined model CLL: -0.167437


******************************************
Best model found
******************************************
Results 

CLL : -0.184066 

AUC ROC : 0.982666 

AUC PR : 0.232622 

Precision : 0.136583 

Recall : 0.920578 

F1 : 0.237873 

Total Learning Time : 2.715 

Total Inference Time : 2.9511027336120605 

Total revision time: 9.853827796936034
Best scored revision CLL: -0.167437


Results 

CLL : -0.184066 

AUC ROC : 0.982666 

AUC PR : 0.232622 

Precision : 0.136583 

Recall : 0.920578 

F1 : 0.237873 

Total Learning Time : 9.877652488708495 

Total Inference Time : 2.9511027336120605 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.493
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07848791815035983;  // std dev = 3.184, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | | else return 0.15585885876363392;  // std dev = 5.233, 131.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.11529179224236952;  // std dev = 2.586, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.636140078877621;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8217379420434084;  // std dev = 0.994, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15802101442671265;  // std dev = 0.058, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.03543696851796573;  // std dev = 2.010, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.10209689381920131;  // std dev = 2.277, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.41569291589335583;  // std dev = 1.292, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.37583801773649855;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.022890559700016855;  // std dev = 2.821, 74.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.686232913639753;  // std dev = 0.205, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.14158807087614805;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3338506761455702;  // std dev = 0.935, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.053151199323635566;  // std dev = 2.587, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.3320167134372498;  // std dev = 1.221, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.45872482053974134;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4769514101277499;  // std dev = 0.015, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.549707041084879;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4876024865839102;  // std dev = 0.701, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.0553133753394857;  // std dev = 4.228, 182.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.503368517759325;  // std dev = 0.044, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6032981321399677;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.138305473067281;  // std dev = 1.846, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.034175199482257695;  // std dev = 2.312, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3512233671897462;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.36417401311063213;  // std dev = 0.009, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.057704860735124076;  // std dev = 4.328, 196.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.35095556955724105;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4319498236406598;  // std dev = 0.031, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.15842799930543683;  // std dev = 2.415, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.06665436740407964;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.27110834473880613;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.32065182541116316;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2757190193142657;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.30739932591584707;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3600132489408312;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.057545107908013614;  // std dev = 1.258, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2851273274614938;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.05694766259889256;  // std dev = 2.178, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0.056952763537311026;  // std dev = 4.525, 160.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24832001952479804;  // std dev = 0.152, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.24569995455287222;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2536936692816157;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5264924649986307;  // std dev = 1.897, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.18220058772579242;  // std dev = 0.875, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.019637087201266695;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06759221706156131;  // std dev = 3.228, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17906547789431726;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.12284378433447067;  // std dev = 0.938, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3420431405518701;  // std dev = 2.471, 64.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=56 */
%   | | else return -0.14009573038365977;  // std dev = 0.224, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.18433994560960354;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10032864413074738;  // std dev = 0.767, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.08217279108838829;  // std dev = 2.456, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16203831722326614;  // std dev = 0.030, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.21099473815488323;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.05011700146925931;  // std dev = 0.853, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.08473954279879443;  // std dev = 0.320, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.27289991493756804;  // std dev = 0.191, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.02572140814783306;  // std dev = 1.524, 80.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.21202372626636803;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.018152457434350004;  // std dev = 3.005, 103.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=31 */
%   | | | else return 0.027297358905514702;  // std dev = 2.507, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1389513611255055;  // std dev = 0.013, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1503643699308097;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.16447936641829408;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17458599005448766;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.21722359874370814;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.013007888770687086;  // std dev = 1.773, 93.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1787584430014135;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01727552325649538;  // std dev = 2.923, 106.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
%   | | | else return 0.0241200129401477;  // std dev = 2.509, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.905', 'seconds']
Parameter learned model CLL:-0.176928 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.184, 46, 13], 'false,false,true,false': [5.233, 92, 39], 'false,false,false,true': [2.586, 26, 9], 'false,false,false,false': [1.477, 8, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.957, 1, 11], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [0.994, 1, 52], 'false,false,true,false': [0.058, 137, 0], 'false,false,false,true': [2.01, 21, 5], 'false,false,false,false': [2.277, 20, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [1.292, 2, 11], 'true,false': [0.894, 1, 4], 'false,true,true': [2.821, 60, 14], 'false,true,false,true': [0.205, 0, 42], 'false,true,false,false': [0.0, 85, 0], 'false,false,true,true': [0.935, 2, 3], 'false,false,true,false': [2.587, 31, 9], 'false,false,false,true': [1.221, 3, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.024, 0, 6], 'true,false': [0.015, 0, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.701, 1, 6], 'false,true,false': [4.228, 133, 49], 'false,false,true,true': [0.044, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.846, 11, 5], 'false,false,false,false': [2.312, 24, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.024, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.009, 0, 6], 'false,true': [4.328, 140, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.031, 0, 2], 'false,false,false,true': [2.415, 17, 9], 'false,false,false,false': [1.449, 7, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.013, 0, 5], 'true,true,false': [0.096, 0, 3], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.064, 0, 3], 'true,false,false': [0.077, 0, 4], 'false,true': [1.258, 28, 5], 'false,false,true': [0.007, 0, 5], 'false,false,false,true': [2.178, 32, 13], 'false,false,false,false': [4.525, 113, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.152, 0, 13], 'true,true,true,false': [0.036, 0, 3], 'true,true,false,true': [0.053, 0, 3], 'true,true,false,false': [1.897, 2, 33], 'true,false': [0.875, 119, 0], 'false,true': [0.864, 1, 3], 'false,false,true': [3.228, 68, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.938, 1, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.471, 8, 56], 'false,true,false': [0.224, 129, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.767, 1, 2], 'false,false,false,true': [2.456, 24, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.03, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.853, 1, 5], 'false,true,true': [0.32, 14, 1], 'false,true,false,true': [0.191, 0, 6], 'false,true,false,false': [1.524, 63, 17], 'false,false,true': [0.005, 0, 3], 'false,false,false,true': [3.005, 72, 31], 'false,false,false,false': [2.507, 31, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.013, 0, 8], 'true,true,true,false': [0.018, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.005, 0, 2], 'true,false': [0.024, 0, 3], 'false,true': [1.773, 69, 24], 'false,false,true': [0.005, 0, 3], 'false,false,false,true': [2.923, 75, 31], 'false,false,false,false': [2.509, 30, 12]}]
{'': [-2.3684757858670006e-16, 0.20681129231655102], 'false': [-2.5376526277146434e-16, 0.19764435507038333], 'false,false': [0.19878116343490385, 0.19281663516067998], 'false,false,true': [0.1717897155989653, 0.20907872501602526], 'false,false,false': [0.19102040816326543, 0.1983471074380164], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.05859375000000017, 0.19830466829542504], 'false': [0.10937500000000006, 0.19360474250550944], 'false,false': [0.19828915638427067, 0.1751653823874832], 'false,false,true': [0.01862593377172719, 2.462527739050993e-05], 'false,false,false': [0.15531998970204805, 0.19209590795032788], 'false,true': [0.0, 0.13888888888888892], 'false,true,false': [0.0, 0.1875], 'true': [0.0, 0.07638888888888906]}
{'': [0.13744491003523523, 0.1491059895000468], 'false': [0.13841895811810756, 0.19085557585591162], 'false,false': [0.17595684364395994, 0.24846923849433403], 'false,false,false': [0.24846923849433403, nan], 'false,false,true': [0.1747532705532015, 0.16735260180384826], 'false,true': [0.10754238174040225, 0.15201271400024205], 'false,true,false': [0.001000448992220457, -7.314410515177502e-17], 'true': [0.12832864962587673, 0.16]}
{'': [0.0001325058659445766, 0.12238121347246685], 'false': [0.10452258750253748, 0.18979536488584267], 'false,false': [0.0028683858901817536, 0.1886384750072571], 'false,false,false': [0.21294256141437753, 0.17240315760087943], 'false,true': [0.06191035639859102, 0.09824214011703766], 'false,true,true': [0.0, 0.07027257106574068], 'false,false,true': [0.0009739362251845463, 0.0], 'true': [9.532185759397738e-05, 2.441177764107078e-05]}
{'': [8.254282583862368e-05, 0.115886655585568], 'false': [0.09556314049788678, 0.21031400113155746], 'false,false': [0.0017852219589860237, 0.22199963554045055], 'false,false,false': [0.22432343380094752, 0.209874915970894], 'false,false,true': [0.0, 0.000491143206969219], 'true': [6.202569314196616e-05, 1.2686987022854831e-05], 'true,true': [6.202569314196616e-05, nan]}
{'': [0.002416093505981709, 0.11301697191140185], 'false': [0.047956502724103345, 0.1212875012751147], 'false,false': [1.0449536612466836e-05, 0.12300585570379344], 'false,false,false': [0.10543214175589832, 0.12794846274592742], 'true': [0.0017580288465409016, 0.002271792454581978], 'true,false': [0.0012120735671680566, 0.0014993287836464197], 'true,true': [3.1541090034736816e-05, 0.0031014106425102383], 'true,false,true': [0.0, 0.0013651876329648742]}
{'': [0.11102847532836212, 0.10869959268073552], 'true': [0.08476781124984448, 0.006428373919296609], 'false': [0.1866307874556314, 0.10525536427531829], 'false,false': [0.10525536427531829, nan], 'true,true': [0.001521000355653404, 0.1002296855642429], 'true,true,false': [0.00093085857597384, 0.10286581493828335], 'true,true,true': [0.001771643287292077, 0.00042930338359783066]}
{'': [0.05555529137867508, 0.09833889961933062], 'false': [0.08342352179261747, 0.1681295357452129], 'false,false': [0.16212462862478383, 0.1675572152838446], 'false,false,false': [0.1675572152838446, nan], 'false,false,true': [0.0, 0.19590712000352173], 'false,true': [0.09541362230328097, 0.0003904628495490828], 'false,true,true': [nan, 0.09541362230328099], 'true': [0.0, 0.07328350213154915]}
{'': [0.046093418255517576, 0.07425434132898798], 'false': [0.030090333384231584, 0.10349718455716865], 'false,false': [9.776102190171368e-06, 0.10488775240469146], 'false,false,false': [0.08764327754171694, 0.1461352865176431], 'true': [8.764381920610687e-05, 0.1071629490861301], 'true,false': [0.0, 0.12132606257747237], 'false,true': [0.006836111109474856, 0.03319931663481501], 'false,true,false': [0.006057585039301168, 0.02901345618345929]}
{'': [0.0009417076299596851, 0.07429536872022542], 'false': [0.0337966893845068, 0.09876074793565165], 'false,false': [7.541487677601803e-06, 0.10025680956925154], 'false,false,false': [0.08058060585801007, 0.14988224727906432], 'true': [0.00022063689465269009, 0.0001901321043478362], 'true,true': [7.022371865721965e-05, 3.0483808597473832e-05], 'true,true,true': [2.2329264473885252e-05, 0.00015759611939856685], 'true,true,false': [0.0, 1.1677765788319777e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.416
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, F) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return 0.0967852987358757;  // std dev = 3.999, 88.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=21 */
%   | | | else return 0.1967316122648657;  // std dev = 5.333, 127.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7324548349452548;  // std dev = 0.021, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8189476756350804;  // std dev = 0.997, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15846048262777354;  // std dev = 0.127, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.10833676078864364;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.2769191362675711;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5651564978460101;  // std dev = 0.024, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.10906654411310913;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.0643407682415812;  // std dev = 2.758, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.601124802070553;  // std dev = 1.905, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | | else return -0.14150621139357367;  // std dev = 0.060, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(A, J), interaction(H, J) )
%   | | | then return 0.07435796836804441;  // std dev = 1.719, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.1967302323648898;  // std dev = 1.482, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.1501506625960637;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.45690278364359554;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4251454870927879;  // std dev = 0.024, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5394271952418348;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6116178374344269;  // std dev = 0.143, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.12734022118216207;  // std dev = 0.295, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.08923532965060982;  // std dev = 4.160, 154.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5527081570584416;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5982117751427563;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.021871416756290826;  // std dev = 2.671, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return 0.2932750698721691;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32161307055604255;  // std dev = 0.017, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.18731926564556645;  // std dev = 0.357, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( phenotype(G, H), location(F, I) )
%   | | | then return 0.05515300726669999;  // std dev = 3.664, 140.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=39 */
%   | | | else return -0.09009933748685987;  // std dev = 0.807, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.13286840708714837;  // std dev = 1.802, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.058950483683442384;  // std dev = 1.072, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4271597956198519;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.06671328030781458;  // std dev = 1.451, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -9.112589741549706E-4;  // std dev = 2.627, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.278213371724742;  // std dev = 0.050, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.30325440544110716;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04511737340213989;  // std dev = 0.833, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.37057839605082366;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then if ( interaction(A, I), interaction(I, I) )
%   | | then return -0.06927086256127113;  // std dev = 0.104, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else return 0.006474838320965688;  // std dev = 0.248, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.12608427811259876;  // std dev = 0.876, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.20798475473056247;  // std dev = 1.577, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.028071697654568933;  // std dev = 4.839, 192.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=53 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.25241274164270594;  // std dev = 0.050, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2829950973448266;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6015138411238521;  // std dev = 0.741, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.16650824499034023;  // std dev = 0.084, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2508076782227818;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), interaction(H, I) )
%   | | | then return 0.028640694578254227;  // std dev = 2.364, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.18355591604102292;  // std dev = 0.880, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( location(A, J) )
%   | | | then return 0.12971669143011738;  // std dev = 1.812, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.012202705708491163;  // std dev = 0.565, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16518232054656878;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.20485289461436995;  // std dev = 0.025, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.34474637917792955;  // std dev = 0.271, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.47724760947172945;  // std dev = 0.986, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else if ( location(A, I), complex(A, J) )
%   | | | then return -0.1375221106796249;  // std dev = 0.377, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.14836641287761645;  // std dev = 0.418, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.21068880998172498;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, L) )
%   | | | then return -0.004149109253572014;  // std dev = 2.437, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return 0.04598268592499011;  // std dev = 0.684, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1575873757084098;  // std dev = 0.025, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.23908440207363113;  // std dev = 0.638, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.19239944302848783;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), complex(H, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.024144777514722392;  // std dev = 0.967, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.05859673703970354;  // std dev = 0.628, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else return 0.025103403286587236;  // std dev = 0.176, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.1750906196866422;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.01703470146955969;  // std dev = 2.313, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | | | else return 0.05609074224888432;  // std dev = 2.738, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15013698820620172;  // std dev = 0.037, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.16773148667938964;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( phenotype(A, G), complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2703148496160754;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12370732612082401;  // std dev = 0.417, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.030889077623255438;  // std dev = 1.128, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return -0.017457638919113883;  // std dev = 1.105, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.09877951188119405;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return -0.03981405297977998;  // std dev = 2.127, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | | else return -0.00955581203408642;  // std dev = 3.174, 120.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '32.683', 'seconds']
Refined model CLL: -0.177199


******************************************
Best model found
******************************************
Results 

CLL : -0.185902 

AUC ROC : 0.982551 

AUC PR : 0.219739 

Precision : 0.145586 

Recall : 0.780919 

F1 : 0.245419 

Total Learning Time : 3.416 

Total Inference Time : 3.383746862411499 

Total revision time: 11.45579274559021
Best scored revision CLL: -0.176928


Results 

CLL : -0.185902 

AUC ROC : 0.982551 

AUC PR : 0.219739 

Precision : 0.145586 

Recall : 0.780919 

F1 : 0.245419 

Total Learning Time : 11.479617437362672 

Total Inference Time : 3.383746862411499 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.208
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.12427796735757547;  // std dev = 4.921, 124.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=33 */
%   | | | else return 0.17957750652808255;  // std dev = 4.943, 112.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7121551271912492;  // std dev = 2.948, 79.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | | | else return -0.1619392523575779;  // std dev = 0.046, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.07414081288940375;  // std dev = 1.518, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.17305206306823115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.28263916401901157;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.11976505893114688;  // std dev = 4.230, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5898531232866508;  // std dev = 2.096, 42.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=37 */
%   | | | else return -0.1440117512466745;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03447910345195977;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2168342203376911;  // std dev = 1.203, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4579689414290257;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4737015803676374;  // std dev = 0.062, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6245768187039917;  // std dev = 0.965, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.07466892147879244;  // std dev = 4.925, 196.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5013858545390613;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.06037412968000109;  // std dev = 1.517, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.030100219018149528;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.24551130283220918;  // std dev = 0.936, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13507629530651782;  // std dev = 0.858, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.06307706006221431;  // std dev = 5.370, 237.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3785182113101342;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.4876254725966374;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1160574867094748;  // std dev = 1.151, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3084580199747885;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3621662965712474;  // std dev = 0.154, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31443317712854024;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2943477556960278;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.0019552663652840046;  // std dev = 2.237, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3021727994140902;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.057357881721122696;  // std dev = 2.997, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0.06698109674302577;  // std dev = 4.207, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.26620743225798005;  // std dev = 0.153, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.14812134242146496;  // std dev = 0.545, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.7491168284215282;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5549712758954461;  // std dev = 0.856, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.2008304978135103;  // std dev = 0.703, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24267687185774942;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0788495019126445;  // std dev = 3.896, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.20691287032219438;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.12220026585671483;  // std dev = 0.640, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3436763055625047;  // std dev = 3.189, 85.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=71 */
%   | | else return -0.15860174592729528;  // std dev = 0.298, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.2649130667132664;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.015605786078335866;  // std dev = 1.421, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18894891136759973;  // std dev = 0.084, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.6146713217861113;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.18908689498248674;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.02011526866074526;  // std dev = 1.456, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.09406351395038143;  // std dev = 0.590, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.0028048427724650295;  // std dev = 1.752, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1821541276011295;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03636467828085601;  // std dev = 3.493, 120.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=40 */
%   | | | else return -0.0022108988641141416;  // std dev = 1.436, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.07341931121704622;  // std dev = 0.586, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.23216396731557543;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.012027723403260582;  // std dev = 0.520, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.0179307971891114;  // std dev = 2.424, 110.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1566324083930951;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.020068745243949224;  // std dev = 3.389, 136.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=40 */
%   | | | else return -0.05751899388266248;  // std dev = 1.519, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.696', 'seconds']
Parameter learned model CLL:-0.196597 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.921, 91, 33], 'false,false,true,false': [4.943, 76, 36], 'false,false,false,true': [1.225, 6, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 9], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [2.948, 10, 69], 'false,false,true,false': [0.046, 154, 0], 'false,false,false,true': [1.518, 10, 3], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [1.477, 3, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.23, 75, 34], 'false,true,false,true': [2.096, 5, 37], 'false,true,false,false': [0.0, 77, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.265, 8, 2], 'false,false,false,true': [1.203, 4, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.074, 0, 5], 'true,false': [0.062, 0, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.965, 1, 14], 'false,true,false': [4.925, 139, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.517, 9, 3], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.936, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.858, 1, 4], 'false,true': [5.37, 166, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.816, 1, 2], 'false,false,false,false': [1.151, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.029, 0, 4], 'true,true,false': [0.154, 0, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [2.237, 32, 12], 'false,false,true': [0.049, 0, 3], 'false,false,false,true': [2.997, 42, 20], 'false,false,false,false': [4.207, 88, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.153, 0, 10], 'true,true,true,false': [0.545, 1, 1], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.856, 1, 33], 'true,false': [0.703, 80, 0], 'false,true': [0.043, 0, 3], 'false,false,true': [3.896, 78, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.002, 0, 3], 'true,false': [0.64, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.189, 14, 71], 'false,true,false': [0.298, 172, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.421, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.084, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.037, 0, 3], 'false,true,true': [1.456, 28, 11], 'false,true,false,true': [0.59, 1, 1], 'false,true,false,false': [1.752, 47, 17], 'false,false,true': [0.035, 0, 3], 'false,false,false,true': [3.493, 80, 40], 'false,false,false,false': [1.436, 11, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.586, 1, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.52, 1, 3], 'false,true': [2.424, 81, 29], 'false,false,true': [0.031, 0, 3], 'false,false,false,true': [3.389, 96, 40], 'false,false,false,false': [1.519, 15, 4]}]
{'': [-1.6148698540002277e-16, 0.20968441936883891], 'false': [1.4802973661668753e-16, 0.20625069443342298], 'false,false': [0.20689097960356248, 0.1955555555555554], 'false,false,true': [0.19530437044745186, 0.21811224489796036], 'false,false,false': [0.18750000000000003, 0.20408163265306126], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [2.4223047810003414e-16, 0.20886817064722474], 'false': [0.0, 0.20727246114890788], 'false,false': [0.2085382896402916, 0.18720849095353095], 'false,false,true': [0.11004076850007083, 1.3716202865349176e-05], 'false,false,false': [0.17729400498255604, 0.2222222222222222], 'true': [0.0, -9.868649107779169e-17], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.16836734693877548, 0.1637192482579505], 'true': [0.1983471074380165, 0.0], 'false': [0.16195352018975895, 0.1873454409435924], 'false,false': [0.1600000000000001, 0.20684953972176118], 'false,false,false': [0.20684953972176118, nan], 'false,true': [0.16418855081981293, 0.15989544947966416], 'false,false,true': [nan, 0.1600000000000001], 'false,true,false': [0.10455862481128814, -2.0185873175002847e-17]}
{'': [0.0009017277861713892, 0.14325064116196493], 'false': [0.1393242812880746, 0.19087777102064535], 'false,false': [0.0, 0.19097091417432144], 'false,false,false': [0.19189875814907142, 0.18749999999999997], 'false,true': [0.06205354228182263, 0.12374032066298309], 'false,true,true': [nan, 0.062053542281822756], 'true': [0.0010910906212674653, 0.0006314181836039046], 'false,false,true': [nan, 0.0]}
{'': [0.1269052781625163, 0.12741490290589977], 'false': [0.12167418588571138, 0.2285768701535577], 'false,false': [0.0, 0.2520531730720503], 'false,false,false': [0.2222222222222222, 0.22094772578488345], 'true': [0.10960709657970194, 0.1470772050721272], 'true,true': [0.10960709657970194, nan], 'false,false,true': [nan, 0.0]}
{'': [0.0030005255667938558, 0.13458087457148893], 'false': [0.11369121312945746, 0.1384258028137004], 'false,false': [0.000804573059917213, 0.13970913101594934], 'false,false,false': [0.14487446972752188, 0.13719650445039086], 'true': [0.0034358816797250094, 0.00010085603853041136], 'true,true': [0.00020575279562085047, 0.004737949687025278], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}
{'': [0.12917841752629372, 0.1261378460651753], 'true': [0.08317713391328341, 0.006180389686488907], 'false': [0.0006175167429086267, 0.12866360103192934], 'false,false': [0.12866360103192934, nan], 'true,true': [0.05052508419742413, 0.06813602216447566], 'true,true,false': [0.0, 0.021550143278628267], 'true,true,true': [0.0023413832088632013, 0.14838664453408693]}
{'': [0.03543283155240171, 0.09815887453795993], 'false': [0.09576690366730961, 0.13856463349026987], 'false,false': [0.0, 0.14431849929916454], 'false,false,false': [0.14431849929916454, nan], 'false,true': [0.11966260721824742, 0.0005179979661769188], 'false,true,true': [nan, 0.11966260721824741], 'true': [1.4766017346438491e-06, 0.04544922686379285], 'false,false,true': [0.0, nan]}
{'': [0.050044919905575073, 0.08245789865590394], 'false': [0.052928782511661804, 0.10399887010279343], 'false,false': [0.00040992292962346394, 0.10581122294388828], 'false,false,false': [0.1016934068853145, 0.13743101794397414], 'false,true': [0.054364217508457546, 0.05200199247362872], 'false,true,false': [0.17384616456762966, 0.04794199406341363], 'true': [0.0008921549808189114, 0.1214696025908905], 'true,false': [0.0, 0.00045265236542818094]}
{'': [0.05030467981929425, 0.07422828752852606], 'false': [0.053401197802530886, 0.08832701529688981], 'false,false': [0.0003236873512697386, 0.08962515863533828], 'false,false,false': [0.08443665166389168, 0.1214820061025956], 'true': [0.040692724684211506, 0.06760761721387046], 'true,true': [0.040692724684211506, nan], 'true,true,true': [0.04297933017642236, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 4.6
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( complex(G, I), enzyme(G, J) )
%   | | | then return 0.1914822684328457;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.06814893509951236;  // std dev = 4.073, 100.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=21 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.1771144523408902;  // std dev = 5.020, 116.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=37 */
%   | | | else return 0.24703782398840118;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7353395955528769;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7641072739982948;  // std dev = 0.063, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6907667704252186;  // std dev = 3.198, 81.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | | else return -0.1600448203131764;  // std dev = 0.092, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.3253411503953212;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.02534115039532119;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.35830353053184194;  // std dev = 0.404, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.5919392378865646;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( location(A, G) )
%   | | | then return 0.10523123384600214;  // std dev = 4.220, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   | | | else return -0.022267500388988712;  // std dev = 0.814, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6420031455828228;  // std dev = 1.674, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.1405082715117853;  // std dev = 0.061, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return 0.023401926901267495;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.09268285122037341;  // std dev = 0.995, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.22165797519267047;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.46553738858036214;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4628030183129699;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14076062589169624;  // std dev = 0.019, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.05952709431595224;  // std dev = 4.508, 153.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=41 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.1515650347695538;  // std dev = 3.074, 71.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=27 */
%   | | | else return 0.07598954751430662;  // std dev = 1.022, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5212524223820705;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.07857071375033968;  // std dev = 0.904, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.012202272737823278;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.34528837239791865;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3726859853671223;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( interaction(A, F), phenotype(F, G) )
%   | | | then return -0.12433982597549709;  // std dev = 0.017, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.1678380039151869;  // std dev = 0.104, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.04561104619381519;  // std dev = 3.520, 99.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=26 */
%   | | | else return 0.13394202189856463;  // std dev = 4.098, 114.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=45 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3926488359099699;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2690103976643031;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.010871679818443062;  // std dev = 1.241, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.31832681524659956;  // std dev = 0.109, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2903959324420242;  // std dev = 0.013, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(I, G), interaction(A, I) )
%   | | | then return -0.11169682142932201;  // std dev = 1.177, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.08418444514134091;  // std dev = 1.229, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.0693133503249161;  // std dev = 1.440, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.3022782532560401;  // std dev = 1.008, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.29061730895392235;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.03688718099075741;  // std dev = 4.958, 192.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=57 */
%   | | | else return -0.030982034790881175;  // std dev = 1.756, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.25277428738940994;  // std dev = 0.093, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6003501438587564;  // std dev = 0.882, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1749110631366252;  // std dev = 0.055, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.23463711698009793;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.558336929376118;  // std dev = 0.234, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.16603576730774622;  // std dev = 0.107, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return 0.044118089179327476;  // std dev = 3.053, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   | | | else return -0.04787810591942007;  // std dev = 0.844, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17913518099156353;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, E) )
%   | | then return -0.0577334486480601;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.1797033659504945;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.3659618445797629;  // std dev = 1.142, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return 0.39606072572607826;  // std dev = 2.296, 52.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | | else return -0.15220601439112263;  // std dev = 0.031, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.20229520790766764;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.058033395299930755;  // std dev = 0.719, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.1618827129074279;  // std dev = 1.106, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18205140279657417;  // std dev = 0.074, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.6742976579024891;  // std dev = 0.194, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.011502774341600894;  // std dev = 0.533, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( phenotype(A, H) )
%   | | then return -0.025435976695384808;  // std dev = 0.222, 71.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.04601064647880341;  // std dev = 0.940, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.06450225534245885;  // std dev = 1.255, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.19304788901592726;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.008288412034028907;  // std dev = 1.958, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | | else return 0.10648222427089904;  // std dev = 2.562, 58.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=26 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.1318480786650384;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3358510218712263;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.16361246856710687;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.07848843671253927;  // std dev = 0.040, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.12626161693907428;  // std dev = 0.807, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.019450771998463966;  // std dev = 2.252, 102.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=24 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1648809810203301;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.002933096043158042;  // std dev = 3.161, 117.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=37 */
%   | | | else return 0.1518623634553893;  // std dev = 1.357, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.188', 'seconds']
Refined model CLL: -0.19668


******************************************
Best model found
******************************************
Results 

CLL : -0.194894 

AUC ROC : 0.985347 

AUC PR : 0.241664 

Precision : 0.18509 

Recall : 0.765957 

F1 : 0.298137 

Total Learning Time : 4.6 

Total Inference Time : 6.4080400466918945 

Total revision time: 19.418302925109863
Best scored revision CLL: -0.196597


Results 

CLL : -0.194894 

AUC ROC : 0.985347 

AUC PR : 0.241664 

Precision : 0.18509 

Recall : 0.765957 

F1 : 0.298137 

Total Learning Time : 24.94138851928711 

Total Inference Time : 6.4080400466918945 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.276
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09299741994799608;  // std dev = 4.870, 132.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=31 */
%   | | | else return 0.19396983062189962;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.22178529873587596;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7347337483847239;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7288643883178895;  // std dev = 0.027, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.21947341221095448;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.683342876969095;  // std dev = 3.428, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.16026677357256383;  // std dev = 0.089, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.017202318634826606;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.22895152751901957;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.3518696714163122;  // std dev = 1.524, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else return 0.4264129320900275;  // std dev = 0.923, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07077743251493514;  // std dev = 4.411, 137.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5641488306235961;  // std dev = 2.606, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | | else return -0.1478680447140776;  // std dev = 0.180, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7940091400167522;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.06967811674538253;  // std dev = 1.613, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.47265750058929284;  // std dev = 0.027, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.34536425930012127;  // std dev = 0.941, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.45619541221107324;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.48061262808094984;  // std dev = 2.074, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | else return 0.025277572942757235;  // std dev = 5.244, 254.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5381008790870375;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.1547153425638997;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.0912082306754362;  // std dev = 1.075, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.2586382184682366;  // std dev = 0.921, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2728166679080917;  // std dev = 0.937, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.05879507882376027;  // std dev = 5.891, 286.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.404824822147955;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.014682455611512654;  // std dev = 1.715, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.30672381560759704;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.30914390754328275;  // std dev = 0.894, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3159608123955743;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.0151567365169457;  // std dev = 2.834, 77.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.18978163916217547;  // std dev = 0.941, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return 0.030793574195988657;  // std dev = 2.232, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.08936945055940575;  // std dev = 4.595, 154.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.29641968974504795;  // std dev = 0.344, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.24858243698663973;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.25506871757203986;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5260358222792986;  // std dev = 1.431, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.16845860395906825;  // std dev = 0.489, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2666059697749675;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05725586469340569;  // std dev = 4.506, 152.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.0016464567246760264;  // std dev = 0.876, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.06189637379349162;  // std dev = 1.878, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31562833282535824;  // std dev = 3.908, 104.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=82 */
%   | | else return -0.14752411467049265;  // std dev = 0.267, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.20509172465348136;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.05254683616930542;  // std dev = 1.559, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.14521347251724032;  // std dev = 0.719, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.1522492826888272;  // std dev = 0.727, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.13051972112198004;  // std dev = 0.641, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.025077801759446922;  // std dev = 1.781, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.12806249965191632;  // std dev = 1.033, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.03705334103789084;  // std dev = 1.453, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.22855358757302674;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04318342556703529;  // std dev = 4.011, 144.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=47 */
%   | | | else return 0.05416361308981013;  // std dev = 1.407, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.18801255452877216;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1887903649374417;  // std dev = 0.094, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10552172394504891;  // std dev = 0.524, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.012461224578277584;  // std dev = 2.656, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1907835993561693;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.038921574564684175;  // std dev = 3.846, 150.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=47 */
%   | | | else return 0.011401534064448104;  // std dev = 1.484, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.817', 'seconds']
Parameter learned model CLL:-0.19804 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.87, 101, 31], 'false,false,true,false': [5.467, 89, 45], 'false,false,false,true': [1.595, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.027, 0, 13], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.707, 1, 1], 'false,false,true,true': [3.428, 14, 76], 'false,false,true,false': [0.089, 170, 0], 'false,false,false,true': [1.301, 11, 2], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [1.524, 3, 11], 'true,false': [0.923, 1, 6], 'false,true,true': [4.411, 103, 34], 'false,true,false,true': [2.606, 8, 48], 'false,true,false,false': [0.18, 97, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.613, 11, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.027, 0, 10], 'true,false': [0.941, 1, 7], 'false,true,true,true': [0.1, 0, 3], 'false,true,true,false': [2.074, 6, 21], 'false,true,false': [5.244, 196, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.075, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.921, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.937, 1, 10], 'false,true': [5.891, 204, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.715, 15, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(J, A)'}, {'true,true,true': [0.016, 0, 5], 'true,true,false': [0.894, 1, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.005, 0, 2], 'false,true': [2.834, 58, 19], 'false,false,true': [0.941, 1, 8], 'false,false,false,true': [2.232, 32, 11], 'false,false,false,false': [4.595, 104, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.344, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [1.431, 2, 33], 'true,false': [0.489, 98, 0], 'false,true': [0.025, 0, 5], 'false,false,true': [4.506, 105, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.876, 1, 4], 'true,false': [1.878, 5, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.908, 22, 82], 'false,true,false': [0.267, 196, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.559, 15, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.719, 1, 9], 'true,false,true': [0.727, 1, 2], 'true,false,false': [0.641, 1, 5], 'false,true,true': [1.781, 43, 13], 'false,true,false,true': [1.033, 2, 8], 'false,true,false,false': [1.453, 45, 11], 'false,false,true': [0.023, 0, 5], 'false,false,false,true': [4.011, 97, 47], 'false,false,false,false': [1.407, 9, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.039, 0, 7], 'true,true,true,false': [0.094, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.524, 1, 3], 'false,true': [2.656, 81, 32], 'false,false,true': [0.02, 0, 5], 'false,false,false,true': [3.846, 103, 47], 'false,false,false,false': [1.484, 10, 4]}]
{'': [0.05246913580246885, 0.21249504066653493], 'false': [-2.5376526277146434e-16, 0.2053982197083252], 'false,false': [0.20408163265306153, 0.2314049586776858], 'false,false,false': [0.2314049586776858, nan], 'false,false,true': [0.179694674012857, 0.22304522165293053], 'true': [0.07100591715976314, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [4.8348344665030523e-05, 0.20781923494627094], 'false': [0.10937500000000006, 0.20452722053644085], 'false,false': [0.20630058523631634, 0.17283950617283939], 'false,false,true': [0.1305648696866024, 4.614934970788804e-05], 'false,false,false': [0.13017751479289943, 0.24000000000000005], 'false,true': [0.0, 0.1875], 'false,true,false': [0.0, 0.25], 'true': [0.0, 5.511902015076231e-05]}
{'': [0.1524367387119442, 0.15527368945482975], 'false': [0.15314249980189165, 0.19344144045794173], 'false,false': [0.19344144045794173, nan], 'false,false,true': [0.0, 0.17354657203388685], 'false,true': [0.1420435059105155, 0.1622489836652697], 'false,true,false': [0.12129816641317083, 0.00033376630101659245], 'true': [0.16594273200947174, 0.12172028697564323]}
{'': [0.053214134262796704, 0.13488865287772964], 'false': [0.13140481786655803, 0.20460226599188872], 'false,false': [0.0, 0.20839549589418982], 'false,false,false': [0.22222222222222218, 0.19255219293595038], 'false,true': [0.14379917802635625, 0.10827411724600759], 'false,true,true': [0.0033319098643432112, 0.1593470322234964], 'true': [7.203807077238444e-05, 0.11063977157065871], 'false,false,true': [nan, 0.0]}
{'': [0.090872531614074, 0.12375863504219771], 'false': [0.12136097007876168, 0.15546892806219947], 'false,false': [0.0, 0.15485218541870993], 'false,false,false': [0.15485218541870993, nan], 'true': [0.10599031956189708, 0.07979313319408013], 'true,true': [0.10599031956189708, nan], 'false,false,true': [nan, 0.0]}
{'': [0.04706445112805018, 0.12540663159434118], 'false': [0.10431231139139191, 0.13209277873659514], 'false,false': [0.09834426111623527, 0.13307476564858522], 'false,false,false': [0.1158626337655761, 0.13713182295371606], 'true': [0.053330906912652985, 1.4750999448989721e-05], 'true,true': [4.868986002602993e-05, 0.0799700631573074], 'true,false': [nan, 1.4750999448989721e-05]}
{'': [0.10585750487887002, 0.1306767446300273], 'false': [0.0001248851125886685, 0.13357543450527734], 'false,false': [0.13357543450527734, nan], 'true': [0.05322016286321095, 0.0024426791218024454], 'true,true': [0.0075108548528940305, 0.05924803079211847], 'true,true,false': [-9.25185853854297e-18, 0.058529867234066654], 'true,true,true': [0.007868553337786643, 0.0]}
{'': [0.18735129443150336, 0.1014555923722116], 'true': [0.15336610597263603, 0.19591386557847504], 'false': [0.09972997452542418, 0.12473612020642685], 'false,false': [0.0, 0.12798229776351802], 'false,false,false': [0.12798229776351802, nan], 'false,true': [0.14684854549423, 0.00036475140519785814], 'false,true,true': [nan, 0.14684854549423015], 'false,false,true': [0.0, nan]}
{'': [0.0880160192493771, 0.08854351750372716], 'false': [0.05401384836345743, 0.11257216935469308], 'false,false': [0.00010159258983412078, 0.11510385426678937], 'false,false,false': [0.11173940616249801, 0.152261005645553], 'true': [0.051676273828785944, 0.12214608193000845], 'true,false': [0.1761867601176049, 0.06847297299749143], 'false,true': [0.056662697929794226, 0.05168826366664521], 'false,true,false': [0.1067740108510882, 0.03772072903031259]}
{'': [0.017988859494995905, 0.08640828052653873], 'false': [0.06241667179149186, 0.1012989576873528], 'false,false': [7.792151949962966e-05, 0.10368138133785812], 'false,false,false': [0.09862149706168408, 0.15720172657858053], 'true': [0.0007956275015424653, 0.06861785142847732], 'true,true': [0.0007956275015424653, nan], 'true,true,true': [0.00021846593435770334, 0.0014686568999331545]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 6.073
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( complex(A, E) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6581489350995119;  // std dev = 2.000, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | | else return -0.038077479994827315;  // std dev = 3.140, 106.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=11 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.12130682983635448;  // std dev = 3.325, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return 0.20158327853385438;  // std dev = 4.725, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7347337483847239;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.670607588833332;  // std dev = 0.261, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7641072739982947;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.26410727399829476;  // std dev = 0.644, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7250291672178731;  // std dev = 2.667, 84.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=76 */
%   | | | else return -0.15293364046002297;  // std dev = 0.224, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.34963344554697484;  // std dev = 1.380, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.13727882432086513;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then return 0.327962407756526;  // std dev = 0.434, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0.5973795552295145;  // std dev = 0.138, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.09873537040319397;  // std dev = 3.555, 91.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=27 */
%   | | | else return -0.02059422714384296;  // std dev = 1.837, 45.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6247860050003021;  // std dev = 1.928, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.13975407379068938;  // std dev = 0.157, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.1066655098703733;  // std dev = 0.712, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.43725706782546264;  // std dev = 1.102, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.17636280238030205;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.46808956314155814;  // std dev = 0.115, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3433731035063953;  // std dev = 0.326, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5103753080259752;  // std dev = 2.038, 59.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=52 */
%   | | | else return -0.14840495641023607;  // std dev = 0.582, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.012103055404811528;  // std dev = 3.362, 112.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=26 */
%   | | | else return 0.18320001822219148;  // std dev = 1.043, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.43548335927189885;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.17335193986043276;  // std dev = 1.423, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.10417068833299127;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.35884399933196204;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.2941920377448162;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.3714763849789401;  // std dev = 0.163, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), phenotype(A, G) )
%   | | then return -0.011075811975709495;  // std dev = 0.263, 103.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=23 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.06299038660772369;  // std dev = 4.094, 164.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=50 */
%   | | | else return 0.007159978286523547;  // std dev = 1.773, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3329224699548837;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.3595315045068331;  // std dev = 1.133, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.11728056517077755;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.29643673367084056;  // std dev = 0.289, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.26977664097679;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), phenotype(A, G) )
%   | then if ( phenotype(F, G), location(F, H) )
%   | | then return -0.018308985374703327;  // std dev = 0.255, 87.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=18 */
%   | | else if ( complex(A, I), complex(F, J) )
%   | | | then return -0.01687310556364205;  // std dev = 0.806, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.11936351176451437;  // std dev = 1.256, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( location(A, K), interaction(L, A) )
%   | | then if ( complex(L, M), phenotype(L, N) )
%   | | | then return 0.08410712312606897;  // std dev = 3.416, 111.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=39 */
%   | | | else return 0.1591209609023519;  // std dev = 1.791, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | else if ( interaction(P, A), interaction(Q, P) )
%   | | | then return -0.017894643026401414;  // std dev = 1.325, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.11841320010074992;  // std dev = 0.734, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.29519550761458824;  // std dev = 0.091, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.28531147375919186;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4331197342468554;  // std dev = 1.389, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.13065844870457208;  // std dev = 0.482, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2769920559592828;  // std dev = 0.154, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( enzyme(G, I), interaction(J, G) )
%   | | | then return 0.14373745933208446;  // std dev = 1.804, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.04051744365334361;  // std dev = 2.857, 81.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=27 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.09423309200804143;  // std dev = 0.847, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return -0.01976676959013904;  // std dev = 1.408, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.036705432615459;  // std dev = 0.893, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.20111203912833955;  // std dev = 0.152, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.2094721389295367;  // std dev = 3.515, 92.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=67 */
%   | | | else return 0.446166381473684;  // std dev = 0.217, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.1360629828262648;  // std dev = 0.495, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.16897750640260156;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.09217053354464437;  // std dev = 1.200, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.013226579644535951;  // std dev = 0.642, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1722390398277805;  // std dev = 0.125, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.049873990828869286;  // std dev = 0.424, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.24204943441242013;  // std dev = 0.087, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, I), interaction(A, I) )
%   | | | then return -0.05074499923458935;  // std dev = 1.830, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | | | else return 0.03974445852111998;  // std dev = 1.485, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | else return -0.08649014295704356;  // std dev = 0.108, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20451537165460482;  // std dev = 0.132, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.018489291739158014;  // std dev = 3.256, 137.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=43 */
%   | | | else return -0.06251686368945081;  // std dev = 1.813, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.14937494288054967;  // std dev = 0.112, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( phenotype(A, F) )
%   | | | then return -0.15112615225434106;  // std dev = 0.777, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.21999917190008955;  // std dev = 0.153, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.03905384330746166;  // std dev = 0.496, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( phenotype(A, I) )
%   | | then return 0.039861685402757634;  // std dev = 0.201, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | else return -0.03460430425156406;  // std dev = 0.260, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.0016805437092671238;  // std dev = 0.950, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.029885991617137862;  // std dev = 2.978, 102.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
%   | | | else return -0.009788571664121086;  // std dev = 2.081, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.514', 'seconds']
Refined model CLL: -0.183681


******************************************
Best model found
******************************************
Results 

CLL : -0.161455 

AUC ROC : 0.985724 

AUC PR : 0.385551 

Precision : 0.268135 

Recall : 0.781132 

F1 : 0.399229 

Total Learning Time : 6.073 

Total Inference Time : 13.521844863891602 

Total revision time: 28.99310901069641
Best scored revision CLL: -0.183681


Results 

CLL : -0.161455 

AUC ROC : 0.985724 

AUC PR : 0.385551 

Precision : 0.268135 

Recall : 0.781132 

F1 : 0.399229 

Total Learning Time : 34.51619460487366 

Total Inference Time : 13.521844863891602 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.386
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.12481560176617904;  // std dev = 2.422, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.12644161802634063;  // std dev = 5.674, 164.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15502393509951232;  // std dev = 3.655, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6083623010998432;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7385128322212614;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7670719622367217;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8420829221984365;  // std dev = 0.000562, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15789258241933987;  // std dev = 0.001, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | | else if ( location(A, K) )
%   | | | then return 0.12015573649353088;  // std dev = 3.575, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | | else return 0.03821089466672971;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5644469591288815;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.575797612107128;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.029104364123629163;  // std dev = 2.112, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6868899821649718;  // std dev = 0.232, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13806551274183795;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.550660127024114;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2182223693203297;  // std dev = 3.434, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.19459609272291886;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4259019586207737;  // std dev = 0.042, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4415829832595353;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38141378279560456;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.58766530466983;  // std dev = 0.126, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.05516849378493499;  // std dev = 4.205, 193.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41403200502403614;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5585096818268913;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.06185994501063381;  // std dev = 3.598, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | else return 0.1336928410494059;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3211201129667201;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3329712588401033;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.046313251646565114;  // std dev = 4.253, 207.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.31835239220556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.419848871682441;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.12196952099020172;  // std dev = 3.527, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | | else return 0.13766394222741263;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2529648536956812;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.36790500377577445;  // std dev = 0.104, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2535616022789824;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.27018951088086174;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3222954640695046;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.09201629981133981;  // std dev = 0.967, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.26805569683509556;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.11705338403004291;  // std dev = 3.712, 130.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=49 */
%   | | | else return 0.036086543826670106;  // std dev = 3.769, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2358140059186726;  // std dev = 0.158, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.23243593025114617;  // std dev = 0.034, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.21938776248259406;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6082695536864439;  // std dev = 1.174, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.20100284887154837;  // std dev = 0.756, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.21870488923443143;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06297446626785841;  // std dev = 3.243, 110.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1700088253155642;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.005443369348476357;  // std dev = 1.128, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4318102778967351;  // std dev = 0.735, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1408133354636275;  // std dev = 0.229, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return -0.1329729239772122;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.009966293999618587;  // std dev = 3.223, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15817125189625816;  // std dev = 0.050, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.12490182279543904;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.20533902928240147;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.058909789685947365;  // std dev = 0.396, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.19193951601740067;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.028915919897161555;  // std dev = 1.342, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18281712096524752;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.026841298726672434;  // std dev = 2.686, 109.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=36 */
%   | | | else return 0.03166620864354352;  // std dev = 3.116, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13540463617177423;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.17209380771043914;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.1268333829303253;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15124524146858384;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.023111358093134624;  // std dev = 1.353, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15706994423095796;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03818017489680286;  // std dev = 2.556, 102.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=36 */
%   | | | else return 0.04367320893008628;  // std dev = 3.052, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.460', 'seconds']
Parameter learned model CLL:-0.179735 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [2.422, 22, 8], 'false,false,true,false': [5.674, 120, 44], 'false,false,false,true': [3.655, 45, 19], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.943, 1, 8], 'false,true,true': [0.052, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.000562, 0, 52], 'false,false,true,false': [0.001, 131, 0], 'false,false,false,true': [3.575, 45, 18], 'false,false,false,false': [1.265, 8, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.031, 0, 6], 'true,false': [0.033, 0, 8], 'false,true,true': [2.112, 32, 8], 'false,true,false,true': [0.232, 0, 48], 'false,true,false,false': [0.0, 97, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.434, 30, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.042, 0, 11], 'true,false': [0.002, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.126, 0, 3], 'false,true,false': [4.205, 141, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.598, 46, 18], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.019, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.03, 0, 9], 'false,true': [4.253, 151, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.527, 36, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.018, 0, 7], 'true,true,false': [0.104, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.967, 30, 3], 'false,false,true': [0.003, 0, 6], 'false,false,false,true': [3.712, 81, 49], 'false,false,false,false': [3.769, 50, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.158, 0, 12], 'true,true,true,false': [0.034, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.174, 1, 36], 'true,false': [0.756, 109, 0], 'false,true': [0.002, 0, 5], 'false,false,true': [3.243, 74, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.004, 0, 6], 'true,false': [1.128, 2, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.735, 0, 56], 'false,true,false': [0.229, 119, 0], 'false,false,true,true': [0.801, 1, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.223, 58, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.05, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.04, 0, 4], 'false,true,true': [0.396, 8, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.342, 48, 14], 'false,false,true': [0.002, 0, 5], 'false,false,false,true': [2.686, 73, 36], 'false,false,false,false': [3.116, 46, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.027, 0, 5], 'true,true,true,false': [0.041, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.047, 0, 4], 'false,true': [1.353, 59, 17], 'false,false,true': [0.002, 0, 5], 'false,false,false,true': [2.556, 66, 36], 'false,false,false,false': [3.052, 42, 20]}]
{'': [-2.5376526277146434e-16, 0.20724744191305397], 'false': [0.12244897959183662, 0.20071257136894338], 'false,false': [0.19619513232011984, 0.21301775147928947], 'false,false,false': [0.2087402343749995, 0.0], 'false,false,true': [0.19555555555555568, 0.196311719214754], 'false,true': [0.0, 0.1388888888888887], 'false,true,false': [0.0, 0.18750000000000006], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [0.062222222222222415, 0.2059150609934188], 'false': [0.0005664054911388808, 0.20186914917571097], 'false,false': [0.20340011813294565, 0.19781672469524997], 'false,false,true': [6.08161698778531e-09, 9.147023837261107e-09], 'false,false,false': [0.20289952227151886, 0.16], 'true': [7.401486830834377e-17, 0.09876543209876568], 'false,true': [0.0005437492714934322, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.00018173950546960884, 0.16652863160194753], 'false': [0.1444283126810485, 0.23401075611405237], 'false,false': [0.23334943634704022, 0.25], 'false,false,false': [0.25, nan], 'false,false,true': [0.0, 0.23584946698090023], 'false,true': [0.11152459179785848, 0.15107951462986477], 'false,true,false': [0.0011205016952115325, -2.518031602242623e-17], 'true': [0.00016491177348176844, 0.00013914430887518314]}
{'': [0.00016746856581512887, 0.12382134982156233], 'false': [0.09460325064264574, 0.20360703022241794], 'false,false': [0.005218449773587569, 0.20441593550608736], 'false,false,false': [0.2023043134161654, 0.22222222222222224], 'false,true': [0.011967211005322942, 0.09161951984560078], 'false,true,true': [0.0, 0.005321358771572138], 'false,false,true': [0.0, 0.0], 'true': [0.00015997555058211432, 1.740107078910628e-06]}
{'': [0.00012110769555224403, 0.11832563299688491], 'false': [0.08736535169843125, 0.2213838504934883], 'false,false': [0.0025753838365502324, 0.2270002589171927], 'false,false,false': [0.2261552620694042, 0.24999999999999997], 'false,false,true': [0.0, 0.0], 'true': [7.062678881950558e-05, 9.899205141134577e-05], 'true,true': [7.062678881950558e-05, nan]}
{'': [0.003412859884075914, 0.12713996629230145], 'false': [0.028312470835098132, 0.1381970229027123], 'false,false': [1.264550659583567e-06, 0.14140610664911257], 'false,false,false': [0.10599718070164102, 0.20290438156342275], 'true': [0.004075014287731887, 0.000857317939867569], 'true,true': [4.491075452213643e-05, 0.0027205439523907138], 'true,false': [6.91218361181245e-05, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.12911337540614243, 0.09246906520467225], 'true': [0.05570533909351004, 0.005244846255377011], 'false': [1.073106376486832e-06, 0.09561772250949273], 'false,false': [0.09561772250949273, nan], 'true,true': [0.0018660363429010324, 0.040122357622621695], 'true,true,false': [0.0, 0.03722703388937339], 'true,true,true': [0.002080873800767787, 0.0005672303998014092]}
{'': [0.08585810529927243, 0.0950544961217038], 'false': [0.07474248346670781, 0.1367215038843121], 'false,false': [0.21367799662346162, 0.1332012450375363], 'false,false,true': [0.21367799662346162, nan], 'false,false,false': [0.1332012450375363, nan], 'true': [2.3696405724767575e-06, 0.1272158757078716], 'false,true': [0.00965971905009961, 0.0004423698966612274], 'false,true,true': [nan, 0.009659719050099673]}
{'': [0.0008852693264276687, 0.07622654671837496], 'false': [0.028255476140672284, 0.09465977794061432], 'false,false': [8.198443481877149e-07, 0.09670420526456766], 'false,false,false': [0.06617197920765071, 0.1471141392449263], 'false,true': [0.01745190063456202, 0.02960689923211654], 'false,true,false': [0.0, 0.029037675386012096], 'true': [0.000278348644239189, 0.001356734724187858], 'true,false': [0.0, 0.000401889567749579]}
{'': [0.0005774295030267733, 0.07337928239093561], 'false': [0.02407651135008796, 0.09416573549509256], 'false,false': [6.43663393951055e-07, 0.09663291509219825], 'false,false,false': [0.06404962187335904, 0.15021892140989895], 'true': [0.0005736966888349071, 0.0005561346297015823], 'true,true': [0.0006173978270033569, 0.0], 'true,true,true': [0.00014301322525442085, 0.0005667292622972506], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,false;interaction(A, J), interaction(J, K).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 2.79
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, A), interaction(A, I) )
%   | | | then return 0.01604367194161748;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.15156210875220716;  // std dev = 5.884, 167.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=49 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.18573514199606403;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7298326667716779;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7401919213324014;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8026152720307879;  // std dev = 1.389, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.1578192068303722;  // std dev = 0.081, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.06477189496868253;  // std dev = 2.631, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.2279810328033412;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5795817495614637;  // std dev = 0.091, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4425483676308162;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.03069435223700507;  // std dev = 0.804, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.09148915100845807;  // std dev = 1.934, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6888166404637031;  // std dev = 0.281, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13986724100717313;  // std dev = 0.045, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1203207100524417;  // std dev = 3.670, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | else return 0.14545720592736675;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.44038684557575136;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.38545943300622065;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6262154569976031;  // std dev = 0.131, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, G), interaction(A, H) )
%   | | | then return -0.010523585588446904;  // std dev = 1.773, 51.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else return 0.10423564082438629;  // std dev = 3.689, 125.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=43 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5254921131533234;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.06171887920627952;  // std dev = 2.594, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.2391231336891839;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3379168520310539;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.24026126261212738;  // std dev = 0.287, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.12148205080938357;  // std dev = 0.029, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.002331230725829936;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.05073126584178477;  // std dev = 2.635, 74.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
%   | | | else return 0.08907990615408602;  // std dev = 2.911, 88.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=31 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3582034420374025;  // std dev = 0.037, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.13998202976615398;  // std dev = 2.366, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.042202734989442;  // std dev = 2.813, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26989251813201726;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.17995377654382932;  // std dev = 0.684, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.2890763290672412;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return -0.10190855147170831;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.08003340776025177;  // std dev = 0.728, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.03706360637392873;  // std dev = 0.474, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2836230688238145;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.09364708192228813;  // std dev = 2.684, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return 0.04906114551082827;  // std dev = 4.685, 188.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=56 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.19777721153146516;  // std dev = 0.178, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2305584821873875;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5881634853205161;  // std dev = 1.448, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.20197271724162286;  // std dev = 0.070, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2295181681086434;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5124158753167694;  // std dev = 0.225, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.15845804455731008;  // std dev = 0.095, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.019882299277501157;  // std dev = 0.938, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.07418543929675049;  // std dev = 2.246, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1863663812876338;  // std dev = 0.051, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.19520705740065136;  // std dev = 0.010, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.310133895013335;  // std dev = 0.830, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.44129151381621184;  // std dev = 0.404, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.11089986972896188;  // std dev = 0.120, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return -0.15368886810685264;  // std dev = 0.153, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.20775074439342206;  // std dev = 2.451, 37.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   | | | else return -0.22258600718166904;  // std dev = 0.178, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0.3097364413904443;  // std dev = 0.677, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1675189157821387;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.18653507873747216;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.08319451021795941;  // std dev = 0.032, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.04621903258086587;  // std dev = 0.365, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.21033125948408166;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.016133732138976523;  // std dev = 1.309, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1630688378244587;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.046683352082594366;  // std dev = 2.185, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | | | else return -0.01512717669525354;  // std dev = 3.135, 138.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14692858862722127;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.10552947060426872;  // std dev = 0.961, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(A, G), location(G, I) )
%   | | | then return -0.08436392833954931;  // std dev = 0.730, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | | else return 0.012347336716410924;  // std dev = 1.251, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.15443743058007742;  // std dev = 0.331, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.022118792344747694;  // std dev = 0.336, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.024102434576976344;  // std dev = 0.910, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.03682949265962268;  // std dev = 1.904, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.007072598030870663;  // std dev = 3.237, 154.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=47 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.043', 'seconds']
Refined model CLL: -0.167726


******************************************
Best model found
******************************************
Results 

CLL : -0.187077 

AUC ROC : 0.983786 

AUC PR : 0.206416 

Precision : 0.144593 

Recall : 0.859206 

F1 : 0.24753 

Total Learning Time : 2.79 

Total Inference Time : 3.1627869606018066 

Total revision time: 10.024230123519898
Best scored revision CLL: -0.167726


Results 

CLL : -0.187077 

AUC ROC : 0.983786 

AUC PR : 0.206416 

Precision : 0.144593 

Recall : 0.859206 

F1 : 0.24753 

Total Learning Time : 15.547315717697144 

Total Inference Time : 3.1627869606018066 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.61
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09451257146314873;  // std dev = 3.151, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | | else return 0.14491364098186474;  // std dev = 5.274, 136.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.05814893509951238;  // std dev = 2.683, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7347337483847239;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7435532612534506;  // std dev = 0.048, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.753613994397588;  // std dev = 2.134, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return -0.15830582100082802;  // std dev = 0.037, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.1439006334527662;  // std dev = 1.878, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.1194080408199621;  // std dev = 2.258, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5729659526108423;  // std dev = 0.039, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5893043085975158;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.10753057020334907;  // std dev = 2.711, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6158701647670168;  // std dev = 1.907, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | | else return -0.14022864965450846;  // std dev = 4.21e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.64862155022115;  // std dev = 0.228, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16882539668711452;  // std dev = 2.366, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.12742878411965494;  // std dev = 1.448, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4275475559923056;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.33692768491644176;  // std dev = 0.966, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.610206524514449;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6137391209955115;  // std dev = 0.148, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.03308542160756852;  // std dev = 4.492, 212.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.39502360992295593;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.013384865344537866;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.19075967180259357;  // std dev = 1.755, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.09841718352524838;  // std dev = 2.201, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3360795574021959;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3606399075257534;  // std dev = 0.059, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.06373549057004087;  // std dev = 4.534, 194.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.30549466950044435;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.06912153280772904;  // std dev = 0.842, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.0274099714206558;  // std dev = 2.587, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.016728185552825018;  // std dev = 1.522, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2574651715811192;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.33108641934240485;  // std dev = 0.138, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.24475912453590065;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3097602954968154;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.40611165669532;  // std dev = 0.156, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.08309172966206958;  // std dev = 1.249, 40.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2884546753517701;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.020484031884045698;  // std dev = 2.409, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return 0.06736358645224501;  // std dev = 4.570, 162.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24972535531775236;  // std dev = 0.208, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2700153393530397;  // std dev = 0.151, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.23384252338471512;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.611435718549639;  // std dev = 0.737, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1699020648947458;  // std dev = 0.660, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24572063004679368;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08040896748821225;  // std dev = 3.349, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1736834993119991;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.03907948936797618;  // std dev = 1.261, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4221382559252883;  // std dev = 1.740, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.1420902831483706;  // std dev = 0.266, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.162256080040034;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2517001320250145;  // std dev = 0.112, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04349027966443854;  // std dev = 2.445, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1611851672149402;  // std dev = 0.044, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.2264070001865015;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19569516045267435;  // std dev = 0.111, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.11614013106732193;  // std dev = 0.512, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.23472165146875015;  // std dev = 0.139, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.015742444444706932;  // std dev = 1.552, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19680805836628482;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.023039092138051005;  // std dev = 2.818, 111.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=31 */
%   | | | else return 0.07870357166262004;  // std dev = 2.368, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1399447576595569;  // std dev = 0.026, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14316619701198907;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return -0.36753209283665444;  // std dev = 0.716, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.1911061998186004;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.08106826280165877;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.012063420642604144;  // std dev = 1.646, 93.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.167538876223155;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.017326427448842392;  // std dev = 2.859, 110.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=31 */
%   | | | else return -0.003804595128737551;  // std dev = 2.481, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.882', 'seconds']
Parameter learned model CLL:-0.179342 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.151, 42, 13], 'false,false,true,false': [5.274, 97, 39], 'false,false,false,true': [2.683, 36, 9], 'false,false,false,false': [1.5, 9, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.048, 0, 11], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [0.0, 0, 3], 'false,false,true,true': [2.134, 5, 52], 'false,false,true,false': [0.037, 145, 0], 'false,false,false,true': [1.878, 12, 5], 'false,false,false,false': [2.258, 19, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.039, 0, 11], 'true,false': [0.042, 0, 4], 'false,true,true': [2.711, 34, 14], 'false,true,false,true': [1.907, 4, 42], 'false,true,false,false': [4.21e-08, 91, 0], 'false,false,true,true': [0.228, 0, 3], 'false,false,true,false': [2.366, 17, 9], 'false,false,false,true': [1.448, 7, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.002, 0, 6], 'true,false': [0.966, 1, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.148, 0, 6], 'false,true,false': [4.492, 163, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [1.755, 8, 5], 'false,false,false,false': [2.201, 17, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.028, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.059, 0, 6], 'false,true': [4.534, 138, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.842, 1, 2], 'false,false,false,true': [2.587, 28, 9], 'false,false,false,false': [1.522, 10, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.006, 0, 5], 'true,true,false': [0.138, 0, 3], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.086, 0, 3], 'true,false,false': [0.156, 0, 4], 'false,true': [1.249, 35, 5], 'false,false,true': [0.04, 0, 5], 'false,false,false,true': [2.409, 40, 13], 'false,false,false,false': [4.57, 115, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.208, 0, 13], 'true,true,true,false': [0.151, 0, 3], 'true,true,false,true': [0.048, 0, 3], 'true,true,false,false': [0.737, 0, 33], 'true,false': [0.66, 113, 0], 'false,true': [0.002, 0, 3], 'false,false,true': [3.349, 65, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.261, 2, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.74, 3, 56], 'false,true,false': [0.266, 138, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.112, 0, 2], 'false,false,false,true': [2.445, 29, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.044, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.111, 0, 5], 'false,true,true': [0.512, 19, 1], 'false,true,false,true': [0.139, 0, 6], 'false,true,false,false': [1.552, 51, 17], 'false,false,true': [0.002, 0, 3], 'false,false,false,true': [2.818, 80, 31], 'false,false,false,false': [2.368, 22, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.026, 0, 8], 'true,true,true,false': [0.029, 0, 2], 'true,true,false,true': [0.716, 1, 1], 'true,true,false,false': [0.003, 0, 2], 'true,false': [0.868, 1, 3], 'false,true': [1.646, 69, 24], 'false,false,true': [0.002, 0, 3], 'false,false,false,true': [2.859, 79, 31], 'false,false,false,false': [2.481, 33, 12]}]
{'': [0.10380622837370206, 0.200907343329489], 'false': [-2.5376526277146434e-16, 0.19146722164412194], 'false,false': [0.19813053370247607, 0.16620498614958396], 'false,false,true': [0.1804958677685945, 0.204530709342561], 'false,false,false': [0.16000000000000017, 0.1874999999999999], 'true': [0.07100591715976314, 0.18750000000000006], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.000167321612021946, 0.19755898233114544], 'false': [0.10937500000000006, 0.19284087253835527], 'false,false': [0.1909885380710395, 0.20079687675752142], 'false,false,false': [0.2075291744518059, 0.19615782513854418], 'false,false,true': [0.07987306113085063, 9.644253500729444e-06], 'false,true': [0.0, 0.13888888888888892], 'false,true,false': [0.22222222222222224, 0.0], 'true': [0.0, 0.00020742348597778783]}
{'': [0.00027162454754385833, 0.16563278906495085], 'false': [0.15379892355949337, 0.21606991805806097], 'false,false': [0.21613448618827238, 0.20972084872946745], 'false,false,true': [0.017393032378420086, 0.21525194940268197], 'false,false,false': [0.20972084872946745, nan], 'false,true': [0.15308164984800532, 0.15404053426778763], 'false,true,false': [0.07904024617581831, 1.9520404828574182e-17], 'true': [0.00013991420058849386, 0.0004380706256835176]}
{'': [0.06025755640815142, 0.12077653864514584], 'false': [0.10266201113055715, 0.21124854893922224], 'false,false': [0.16141203284084774, 0.21611148947657818], 'false,false,false': [0.23695738504182018, 0.20182394225703826], 'false,false,true': [0.0, 0.24999999999999997], 'false,true': [0.003144758057323457, 0.09518991988924486], 'true': [1.034993023988721e-06, 0.09333198386955058], 'false,true,true': [0.0, 0.003667101651939545]}
{'': [0.0004282471529850914, 0.1225476175350089], 'false': [0.10594462489591185, 0.18142265456447065], 'false,false': [0.18772764478058385, 0.18012349582952164], 'false,false,true': [0.0, 0.23633546143662354], 'false,false,false': [0.1808131904675455, 0.17807608437633807], 'true': [8.640114872106154e-05, 0.000579089680466216], 'true,true': [8.640114872106154e-05, nan]}
{'': [0.006646401357803963, 0.11269615782898942], 'false': [0.03898803087581922, 0.12289921719096221], 'false,false': [0.00031835371876616226, 0.12451982509844257], 'false,false,false': [0.10947080497473884, 0.12890151316426224], 'true': [0.0036563515644520705, 0.007540966882716452], 'true,false': [0.0026328379776002636, 0.006109529552963511], 'true,true': [6.452081545538224e-06, 0.006351962293090874], 'true,false,true': [0.0, 0.002454162580227811]}
{'': [0.10691292735706552, 0.11412464092469014], 'false': [2.043364335078494e-06, 0.11686285252942447], 'false,false': [0.11686285252942447, nan], 'true': [0.04202938833959109, 0.003853305434212697], 'true,true': [0.004182754296031349, 0.02606149832079563], 'true,true,false': [0.0007758092369796096, 0.01647881224217738], 'true,true,true': [0.003322046891675846, 0.007577993576698111]}
{'': [0.09677107539581263, 0.09283146258101319], 'true': [0.0, 0.12228367572739049], 'false': [0.08251842382047922, 0.13832954403146325], 'false,false': [0.005937076224698625, 0.1458469225850454], 'false,false,false': [0.1458469225850454, nan], 'false,true': [0.0513165308034617, 0.0005138112332614665], 'false,true,true': [nan, 0.0513165308034617], 'false,false,true': [0.0, 0.0062388681918839894]}
{'': [0.001304412421959715, 0.07099749235691373], 'false': [0.03472973513750029, 0.09261227588938548], 'false,false': [1.4871434683936628e-06, 0.09400478359363497], 'false,false,false': [0.07153605601681583, 0.16498658926775003], 'false,true': [0.01312869358760776, 0.037467888823836754], 'false,true,false': [0.003199290954841042, 0.03540518890539517], 'true': [0.0001906514028429951, 0.002179162931670008], 'true,false': [0.0, 0.0024577926680312834]}
{'': [0.10022484715771296, 0.06839226596235592], 'true': [0.0696639043940861, 0.18819084814384565], 'true,true': [0.00015238311155487406, 0.20604959934252357], 'true,true,false': [0.2560572512406841, 3.576433973917492e-06], 'false': [0.029139674789530834, 0.09124184146831164], 'false,false': [1.158044586909342e-06, 0.09254365474430203], 'false,false,false': [0.07432957042298236, 0.1367500867311677], 'true,true,true': [8.602070778050003e-05, 0.000409530589451243]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.361
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, F), interaction(F, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.09344305274657114;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.22579599392304064;  // std dev = 3.976, 68.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=25 */
%   | | | else return 0.12532450761859593;  // std dev = 5.064, 131.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=35 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.31947341221095443;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.765886086941351;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8168688601594652;  // std dev = 0.999, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.16142520376850733;  // std dev = 0.142, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.026408716893980933;  // std dev = 2.390, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | | else return 0.34219819057819156;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.51671460636717;  // std dev = 0.227, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), location(A, G) )
%   | | | then return -0.03492373198282042;  // std dev = 1.542, 36.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | | | else return 0.12483124070593662;  // std dev = 2.169, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6400364590298797;  // std dev = 1.386, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14192591225954118;  // std dev = 0.050, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.04227834588009582;  // std dev = 1.876, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.11609456640186329;  // std dev = 1.440, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.1719899958991614;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.30310175137584283;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.2982922663663836;  // std dev = 0.315, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.36672195006547115;  // std dev = 0.284, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6705975024725075;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.420065763947369;  // std dev = 0.916, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.01695764106178571;  // std dev = 2.638, 102.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=18 */
%   | | | else return 0.10380581937677938;  // std dev = 3.269, 92.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5455734274282183;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.0373579912518625;  // std dev = 2.469, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.23175796084798034;  // std dev = 1.500, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3491295798377279;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.390390942700284;  // std dev = 0.110, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.45324407081143725;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( location(A, G), complex(A, H) )
%   | | | then return 0.002157618669638198;  // std dev = 2.175, 56.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | | | else return 0.07794392523726432;  // std dev = 3.675, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return 0.4096350845872955;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4111259467558777;  // std dev = 0.043, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.31796686689171955;  // std dev = 1.794, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.06172382227514547;  // std dev = 1.874, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.27889475383032847;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.11623598351753887;  // std dev = 0.682, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.30838644968527595;  // std dev = 0.031, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4734249118760271;  // std dev = 0.273, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.13092915196984548;  // std dev = 0.021, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.1107246573479266;  // std dev = 0.007, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.30917645037924146;  // std dev = 0.092, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return -0.01713694142663218;  // std dev = 3.017, 78.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=17 */
%   | | | else return 0.04650391001870242;  // std dev = 4.119, 146.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=43 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24800778697365425;  // std dev = 0.038, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.20123159972216353;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5549135802019951;  // std dev = 1.369, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.15162452593281053;  // std dev = 0.059, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return -0.12046639979019765;  // std dev = 1.088, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( location(A, I), location(G, I) )
%   | | | then return 0.03884242742093676;  // std dev = 2.498, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | | else return 0.14726190914639076;  // std dev = 1.525, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.13876814197585;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.03905045325371586;  // std dev = 1.151, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.18714616886312374;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E) )
%   | | then return 0.18032851142105766;  // std dev = 0.013, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.05150110890305171;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), location(A, I) )
%   | | | then return 0.3178155974979582;  // std dev = 0.821, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return 0.47860942535635426;  // std dev = 1.067, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | else return -0.14534342979468487;  // std dev = 0.042, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.2097730395825338;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.07735021401039789;  // std dev = 1.889, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.09658458128912771;  // std dev = 1.651, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16141497445322522;  // std dev = 0.032, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.25067561808695416;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17368893294021673;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.16530293818600877;  // std dev = 0.488, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.01918334075806315;  // std dev = 1.418, 85.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=18 */
%   | | else return 0.20880450012372975;  // std dev = 0.422, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2907671730858824;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return 0.08854510940204886;  // std dev = 1.227, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.008125502915919576;  // std dev = 3.473, 123.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14638908885253324;  // std dev = 0.020, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.15399589158583757;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.0335501408122071;  // std dev = 0.625, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return -0.07429019478362633;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.05432542172933657;  // std dev = 1.093, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return -0.015144497601422668;  // std dev = 0.957, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2346158840978596;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.03945702276625778;  // std dev = 1.884, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.03322272381322045;  // std dev = 3.078, 103.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=37 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '27.363', 'seconds']
Refined model CLL: -0.183351


******************************************
Best model found
******************************************
Results 

CLL : -0.189931 

AUC ROC : 0.982341 

AUC PR : 0.215617 

Precision : 0.147727 

Recall : 0.780919 

F1 : 0.248454 

Total Learning Time : 3.361 

Total Inference Time : 4.146970987319946 

Total revision time: 12.27252416229248
Best scored revision CLL: -0.179342


Results 

CLL : -0.189931 

AUC ROC : 0.982341 

AUC PR : 0.215617 

Precision : 0.147727 

Recall : 0.780919 

F1 : 0.248454 

Total Learning Time : 17.795609756469727 

Total Inference Time : 4.146970987319946 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.221
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.16370449065506648;  // std dev = 4.787, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   | | | else return 0.197771576608945;  // std dev = 4.876, 106.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.024815601766178853;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6561644532450843;  // std dev = 3.507, 84.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=69 */
%   | | | else return -0.16562785730292764;  // std dev = 0.030, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.2796611062308025;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.8551012175257391;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.44425532563517334;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07488506200185442;  // std dev = 4.394, 132.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6411990099989883;  // std dev = 1.666, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.1458091239782438;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1417829885262283;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.16446587481210237;  // std dev = 1.236, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4338596510308287;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.44021645481458577;  // std dev = 0.025, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7022838620022454;  // std dev = 0.131, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.048919694881152706;  // std dev = 5.086, 218.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5144738995131075;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.2180194417345254;  // std dev = 1.305, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.06959855190537238;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.34067748318494095;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.008689671443767921;  // std dev = 1.149, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.0737734566933915;  // std dev = 5.361, 230.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3878017003560209;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.03223955043841621;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.018812194138077533;  // std dev = 1.216, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.28168419602205574;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.33584507947792847;  // std dev = 0.209, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2683968386856821;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.30061650939323004;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.022683396857378118;  // std dev = 2.178, 56.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.08064768877416167;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.06425781534073303;  // std dev = 2.998, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | | else return 0.08600596091665125;  // std dev = 4.115, 123.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24725759460744615;  // std dev = 0.203, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2414071400109672;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5447661461986856;  // std dev = 1.104, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.19168593740659265;  // std dev = 0.704, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3093117830386768;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05997596533339595;  // std dev = 3.955, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.178363769034691;  // std dev = 0.000760, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2060207906674208;  // std dev = 0.101, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39946545829784963;  // std dev = 2.606, 80.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=71 */
%   | | else return -0.15600883606016716;  // std dev = 0.234, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.19998510277197556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.014733374113438747;  // std dev = 1.427, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16478246636282423;  // std dev = 0.121, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.29098508440530146;  // std dev = 0.177, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.17740322387009333;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.06677351641338573;  // std dev = 1.633, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.3116622567656746;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.014948808991780721;  // std dev = 1.624, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.21108787242993834;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.024032253645156328;  // std dev = 3.543, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
%   | | | else return 0.06603087546945341;  // std dev = 1.338, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12903201251361945;  // std dev = 0.012, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.17462510152435828;  // std dev = 0.594, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15298121102506593;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.005559776898546911;  // std dev = 2.312, 99.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.06933683892517933;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.028161613875454516;  // std dev = 3.428, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
%   | | | else return -0.08139803886306811;  // std dev = 1.499, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.092', 'seconds']
Parameter learned model CLL:-0.198627 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.787, 75, 33], 'false,false,true,false': [4.876, 70, 36], 'false,false,false,true': [1.247, 7, 2], 'false,false,false,false': [1.291, 10, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 9], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [3.507, 15, 69], 'false,false,true,false': [0.03, 168, 0], 'false,false,false,true': [1.308, 4, 3], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.943, 1, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.394, 98, 34], 'false,true,false,true': [1.666, 3, 37], 'false,true,false,false': [0.0, 63, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.155, 4, 2], 'false,false,false,true': [1.236, 4, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.03, 0, 5], 'true,false': [0.025, 0, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.131, 0, 14], 'false,true,false': [5.086, 161, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.305, 4, 3], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.002, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.149, 2, 4], 'false,true': [5.361, 159, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.216, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.043, 0, 4], 'true,true,false': [0.209, 0, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [2.178, 44, 12], 'false,false,true': [0.853, 1, 3], 'false,false,false,true': [2.998, 44, 20], 'false,false,false,false': [4.115, 82, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.203, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.104, 1, 33], 'true,false': [0.704, 110, 0], 'false,true': [0.02, 0, 3], 'false,false,true': [3.955, 91, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.00076, 0, 3], 'true,false': [0.101, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.606, 9, 71], 'false,true,false': [0.234, 141, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.427, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.121, 0, 8], 'true,false,true': [0.177, 2, 0], 'true,false,false': [0.01, 0, 3], 'false,true,true': [1.633, 37, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.624, 42, 17], 'false,false,true': [0.016, 0, 3], 'false,false,false,true': [3.543, 85, 40], 'false,false,false,false': [1.338, 7, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.012, 0, 7], 'true,true,true,false': [0.594, 1, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.009, 0, 3], 'false,true': [2.312, 70, 29], 'false,false,true': [0.857, 1, 3], 'false,false,false,true': [3.428, 87, 40], 'false,false,false,false': [1.499, 15, 4]}]
{'': [-1.6148698540002277e-16, 0.21735753124779333], 'false': [1.4802973661668753e-16, 0.21414214576731685], 'false,false': [0.21846886190933723, 0.15419501133786834], 'false,false,true': [0.21219135802469272, 0.22427910288358974], 'false,false,false': [0.17283950617283952, 0.13888888888888892], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [-8.074349270001139e-17, 0.20403057962003818], 'false': [0.0, 0.20222772279342788], 'false,false': [0.19888954675809997, 0.25001232078363866], 'false,false,false': [0.24433695139898162, 0.0], 'false,false,true': [0.14642938065849545, 5.429249286994403e-06], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0], 'true': [0.0, -9.868649107779169e-17]}
{'': [0.0763888888888888, 0.16346657911320892], 'false': [0.160238060882219, 0.22016604232688225], 'false,false': [0.22222222222222218, 0.21816613472570245], 'false,false,true': [nan, 0.22222222222222218], 'false,false,false': [0.21816613472570245, nan], 'false,true': [0.14627223500339048, 0.17408343806725537], 'false,true,false': [0.06941967258028736, -3.52451753849256e-18], 'true': [0.0987654320987654, 0.0]}
{'': [0.00014721427118507597, 0.14077606152720112], 'false': [0.1357780774792831, 0.23414931293780095], 'false,false': [0.0, 0.2420326688845126], 'false,false,false': [0.2431126993193987, 0.18750000000000003], 'false,true': [0.001233911945087675, 0.11865824275150531], 'false,true,true': [nan, 0.0012339119450877384], 'true': [0.0001781292681338753, 0.00010308406720712278], 'false,false,true': [nan, 0.0]}
{'': [0.13191869915332394, 0.12935779809813797], 'true': [4.164280591784879e-07, 0.2201001422456056], 'false': [0.12495122528827352, 0.19082266848199855], 'false,false': [0.0, 0.1943861803124121], 'false,false,false': [0.2040816326530612, 0.18468639522300248], 'true,true': [4.164280591784879e-07, nan], 'false,false,true': [nan, 0.0]}
{'': [0.004891673742319752, 0.12899129021787867], 'false': [0.08471797714701082, 0.13964587867684822], 'false,false': [0.18186403322086392, 0.1387427255111412], 'false,false,false': [0.14048394936305852, 0.13767484672010277], 'true': [0.005785860834722668, 0.0002595267951257113], 'true,true': [0.00046556569152363114, 0.008738363039628227], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}
{'': [0.10681197165377707, 0.1181202696081167], 'false': [0.0001345961161216732, 0.11943040286534651], 'false,false': [0.11943040286534651, nan], 'true': [0.044393903343716325, 0.00449960711252862], 'true,true': [0.0037596254438529483, 0.03582675507824723], 'true,true,false': [nan, 0.035826755078247334], 'true,true,true': [0.004132476368330473, 0.0]}
{'': [0.0010742560475471739, 0.10424707217764853], 'false': [0.10224353042955578, 0.12991499788565533], 'false,false': [0.0, 0.1356944962249495], 'false,false,false': [0.1356944962249495, nan], 'false,true': [0.08490400696032223, 0.00038863786013375675], 'false,true,true': [nan, 0.08490400696032237], 'true': [1.9259455207495021e-07, 0.001268417793622162], 'false,false,true': [0.0, nan]}
{'': [0.03101617840752637, 0.08179419644167772], 'false': [0.05176813264052172, 0.10402989821867197], 'false,false': [8.23739035876736e-05, 0.1055948617471254], 'false,false,false': [0.10042983064237775, 0.16266717990046253], 'false,true': [0.05558225258326874, 0.04537849706749978], 'false,true,false': [0.0, 0.044680309634942565], 'true': [0.001832576827048269, 0.05892091417547651], 'true,false': [0.015622166484387912, 3.170303790107446e-05]}
{'': [0.04296149282095595, 0.08160749403108554], 'false': [0.054005227673532614, 0.09970676583206621], 'false,false': [0.18370182418565875, 0.09722075769172164], 'false,false,false': [0.09251246670587757, 0.11825072391820632], 'true': [0.055183869465974346, 2.497708398972731e-05], 'true,true': [0.055183869465974346, nan], 'true,true,true': [2.085968289342242e-05, 0.1765373481133005]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
1;false,false,false;complex(A, K).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 7.72
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, G) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), enzyme(K, L) )
%   | | | then return 0.16800809002908926;  // std dev = 3.897, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | | else return 0.02888064241658548;  // std dev = 2.409, 41.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.23745927992709853;  // std dev = 5.226, 116.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=44 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7332857516252526;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7641072739982948;  // std dev = 0.063, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.2641072739982947;  // std dev = 0.770, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.664143467860165;  // std dev = 3.409, 83.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=69 */
%   | | | else return -0.1639889228189137;  // std dev = 0.140, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.1600509608597583;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.826717627526425;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5929049549707504;  // std dev = 0.116, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5519531368012172;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.022561781776095757;  // std dev = 1.996, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | | else return 0.15265237312190566;  // std dev = 3.716, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6220820538086187;  // std dev = 1.922, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.14735675336155202;  // std dev = 0.068, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( phenotype(A, I) )
%   | | then return 0.4025786785139771;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.08946410201762878;  // std dev = 0.703, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12391819284152712;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4432918709169935;  // std dev = 0.087, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.43412185192654823;  // std dev = 0.092, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.7268470305573529;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6682910037580627;  // std dev = 0.108, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.03849947570575173;  // std dev = 4.056, 135.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=34 */
%   | | | else return 0.0773309267446477;  // std dev = 3.008, 76.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.6429703291645963;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.12907435914038487;  // std dev = 0.909, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.04541809763427821;  // std dev = 1.435, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3492328101516241;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3111917646260892;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.3623526191803004;  // std dev = 3.558, 97.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=68 */
%   | | | else return -0.15229081881454723;  // std dev = 0.387, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.007430472558229417;  // std dev = 0.607, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.0489071276977786;  // std dev = 0.899, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4863307468968243;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.026951433257571746;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.20027695134702028;  // std dev = 1.015, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.31629076543900025;  // std dev = 0.087, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), phenotype(F, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1262899281331186;  // std dev = 0.112, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.031105323627262167;  // std dev = 3.503, 118.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=36 */
%   | | else if ( location(A, H), location(D, H) )
%   | | | then return -0.11113091264342097;  // std dev = 1.024, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.029804339074709762;  // std dev = 1.141, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( complex(A, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.07688296701289458;  // std dev = 1.630, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.06775710522424148;  // std dev = 1.168, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.08258869955404058;  // std dev = 2.496, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   | | | else return 0.012805762151820537;  // std dev = 1.058, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.25416856278769084;  // std dev = 0.078, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A), interaction(A, E) )
%   | | | then return 0.39689957358851297;  // std dev = 0.687, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.5477772839230225;  // std dev = 0.391, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.17121062300698509;  // std dev = 0.070, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2392799121174136;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), enzyme(I, J) )
%   | | | then return 0.06351669019866858;  // std dev = 2.104, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return -0.042828136112786935;  // std dev = 1.964, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.06106364162907291;  // std dev = 2.219, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | | else return -0.02087619852964383;  // std dev = 0.770, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.18170778348769814;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.18090643023955244;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.17110340184799647;  // std dev = 1.194, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.4016701017237784;  // std dev = 1.852, 63.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=59 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.12805054097887741;  // std dev = 0.402, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return -0.15831155745037642;  // std dev = 0.324, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.24759494050907804;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.07497629017212813;  // std dev = 0.760, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.20103309812682318;  // std dev = 0.930, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15809632532386925;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.21556198177756983;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.08098383526731782;  // std dev = 1.048, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | | else return -3.2596163918530407E-4;  // std dev = 1.163, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.38396620195012754;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.0029492006640713143;  // std dev = 1.574, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.07889678384813895;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.01582838489936201;  // std dev = 2.960, 123.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=37 */
%   | | | else return -0.023010829527080952;  // std dev = 1.654, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.13825676696609837;  // std dev = 0.023, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.18221586108883167;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), location(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then if ( location(G, F) )
%   | | | then return 0.3071993242727851;  // std dev = 0.151, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.06602947517880123;  // std dev = 0.619, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, H), location(H, I) )
%   | | | then return -0.059136067206963405;  // std dev = 1.744, 85.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=15 */
%   | | | else return -0.00860478297764421;  // std dev = 3.071, 151.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=40 */
%   | else if ( interaction(J, A) )
%   | | then return 0.21245074757339621;  // std dev = 0.394, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.07201587667141128;  // std dev = 1.111, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.07992495593940581;  // std dev = 0.634, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.832', 'seconds']
Refined model CLL: -0.188824


******************************************
Best model found
******************************************
Results 

CLL : -0.197249 

AUC ROC : 0.983996 

AUC PR : 0.23932 

Precision : 0.164427 

Recall : 0.911348 

F1 : 0.278591 

Total Learning Time : 7.72 

Total Inference Time : 11.68779468536377 

Total revision time: 27.687355533599852
Best scored revision CLL: -0.188824


Results 

CLL : -0.197249 

AUC ROC : 0.983996 

AUC PR : 0.23932 

Precision : 0.164427 

Recall : 0.911348 

F1 : 0.278591 

Total Learning Time : 27.70104385948181 

Total Inference Time : 11.68779468536377 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.353
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1277141524908154;  // std dev = 4.759, 115.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=31 */
%   | | | else return 0.18661608838418303;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.124815601766179;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7473839334745775;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7491026773390487;  // std dev = 0.008, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.777989695240652;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7743504509060085;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7670719622367217;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6818805249929467;  // std dev = 3.432, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.1619613071784419;  // std dev = 0.053, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.17559914592443404;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.24226581259110072;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5018887789905322;  // std dev = 0.959, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5840853549459378;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09909737117702423;  // std dev = 4.306, 118.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6172570306480789;  // std dev = 2.121, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.14487885744212128;  // std dev = 5.58e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.005536072435248267;  // std dev = 0.982, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.05210651490680289;  // std dev = 1.657, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4517480080568079;  // std dev = 0.036, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3306559298593404;  // std dev = 0.933, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5130485547396312;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5087227159108155;  // std dev = 1.794, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | else return 0.0272898026459542;  // std dev = 5.136, 248.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6094707740197138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.09633512716154526;  // std dev = 1.194, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.08694189431834566;  // std dev = 1.198, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3624661477025213;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2626385894407001;  // std dev = 0.950, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.052866547885410745;  // std dev = 5.826, 285.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return -0.538291091784555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.45899664343733226;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.05706025747648494;  // std dev = 1.715, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.27376828438849216;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.396803859906871;  // std dev = 0.309, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.3622627807625464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.3250872537291112;  // std dev = 0.034, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return 0.03736180725142473;  // std dev = 2.724, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18921020990132828;  // std dev = 0.919, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return -0.024321472638209055;  // std dev = 2.312, 57.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
%   | | | else return 0.0742691133957159;  // std dev = 4.651, 160.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.27630152187974455;  // std dev = 0.325, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.21503403292630757;  // std dev = 0.699, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.24010998218561164;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.41569641275994523;  // std dev = 2.398, 39.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=33 */
%   | else return -0.17517297359813724;  // std dev = 0.699, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2710765999566969;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06396065632402415;  // std dev = 4.383, 152.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return -0.004106233754967348;  // std dev = 0.815, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.13683014503790172;  // std dev = 0.862, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return -0.5952734950191243;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3769615540228342;  // std dev = 3.279, 95.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=82 */
%   | | else return -0.14921191120692454;  // std dev = 0.327, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.3244419522657702;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.019940206126170746;  // std dev = 1.541, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18962860677047322;  // std dev = 0.133, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1498160708309425;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.22553168696527665;  // std dev = 0.123, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.022238716443719022;  // std dev = 1.764, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2768711239729858;  // std dev = 0.179, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.037612294908941135;  // std dev = 1.368, 66.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19831584631951504;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.022215059236221673;  // std dev = 3.940, 154.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=47 */
%   | | | else return 0.14925733665759355;  // std dev = 1.378, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14498003890377817;  // std dev = 0.023, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.05615099160813757;  // std dev = 0.854, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.5040168147649301;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.17905987773343782;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.016890037648051782;  // std dev = 2.504, 117.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16867040442104778;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0011801180822952108;  // std dev = 3.923, 181.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=47 */
%   | | | else return 0.040463575629460506;  // std dev = 1.465, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.861', 'seconds']
Parameter learned model CLL:-0.199999 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.309, 2, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [0.866, 1, 3], 'false,true,false,false': [0.816, 1, 2], 'false,false,true,true': [4.759, 84, 31], 'false,false,true,false': [5.497, 92, 45], 'false,false,false,true': [1.713, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.008, 0, 13], 'false,true,true': [0.013, 0, 4], 'false,true,false,true': [0.01, 0, 2], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [3.432, 14, 76], 'false,false,true,false': [0.053, 177, 0], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.959, 1, 11], 'true,false': [0.005, 0, 6], 'false,true,true': [4.306, 84, 34], 'false,true,false,true': [2.121, 5, 48], 'false,true,false,false': [5.58e-08, 83, 0], 'false,false,true,true': [0.982, 2, 1], 'false,false,true,false': [1.657, 12, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.036, 0, 10], 'true,false': [0.933, 1, 7], 'false,true,true,true': [0.105, 0, 3], 'false,true,true,false': [1.794, 5, 21], 'false,true,false': [5.136, 190, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.194, 5, 2], 'false,false,false,false': [1.198, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.036, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.95, 1, 10], 'false,true': [5.826, 203, 82], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.715, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.003, 0, 5], 'true,true,false': [0.309, 0, 9], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.034, 0, 2], 'false,true': [2.724, 45, 19], 'false,false,true': [0.919, 1, 8], 'false,false,false,true': [2.312, 46, 11], 'false,false,false,false': [4.651, 110, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.325, 0, 15], 'true,true,true,false': [0.699, 1, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [2.398, 6, 33], 'true,false': [0.699, 97, 0], 'false,true': [0.024, 0, 5], 'false,false,true': [4.383, 105, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.815, 1, 4], 'true,false': [0.862, 1, 13], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [3.279, 13, 82], 'false,true,false': [0.327, 172, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.541, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.133, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.123, 0, 5], 'false,true,true': [1.764, 44, 13], 'false,true,false,true': [0.179, 0, 8], 'false,true,false,false': [1.368, 55, 11], 'false,false,true': [0.02, 0, 5], 'false,false,false,true': [3.94, 107, 47], 'false,false,false,false': [1.378, 6, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.023, 0, 7], 'true,true,true,false': [0.854, 1, 6], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.103, 0, 3], 'false,true': [2.504, 85, 32], 'false,false,true': [0.017, 0, 5], 'false,false,false,true': [3.923, 134, 47], 'false,false,false,false': [1.465, 9, 4]}]
{'': [0.12749999999999959, 0.21543353881843946], 'false': [0.20999999999999988, 0.2098500469918231], 'false,true': [0.22222222222222224, 0.20408163265306106], 'false,false': [0.21063240110859185, 0.1955555555555554], 'false,false,true': [0.19689981096408443, 0.2205764824977368], 'false,true,false': [0.18750000000000006, 0.22222222222222224], 'false,false,false': [0.1955555555555554, nan], 'true': [0.1224489795918365, 0.1388888888888887]}
{'': [4.145934392241202e-06, 0.20970836586780728], 'false': [5.189524634349344e-05, 0.20462275468653732], 'false,false': [0.20324400003725085, 0.23140495867768598], 'false,false,false': [0.22222222222222218, 0.24], 'false,false,true': [0.13088001860881276, 1.59736890026402e-05], 'false,true': [3.9732297981598386e-05, 4.7090130941285224e-05], 'false,true,false': [5.297639730894588e-05, 0.0], 'true': [0.0, 4.7265287548452325e-06]}
{'': [0.052620245420141015, 0.16791627174959925], 'false': [0.16536906269912632, 0.19559905974662736], 'false,false': [0.19559905974662736, nan], 'false,false,true': [0.3214573238408674, 0.17165819215864214], 'false,true': [0.15710002078254648, 0.17123709774344548], 'false,true,false': [0.08491083775645383, 3.7453306854824555e-17], 'true': [0.07667595881184519, 4.633904204132122e-06]}
{'': [0.05201795921705707, 0.13279829802587872], 'false': [0.12864122332658554, 0.20734143281948378], 'false,false': [0.0, 0.20427485163750278], 'false,false,false': [0.20351019901041914, 0.20499538785296326], 'false,true': [0.11135719365311808, 0.10635167809734712], 'false,true,true': [0.0037028403605507596, 0.12377691398692531], 'true': [0.00012642622017144944, 0.10873610246195183], 'false,false,true': [nan, 0.0]}
{'': [0.052544197527066676, 0.12384315940480031], 'false': [0.11910005849483656, 0.2033111513302722], 'false,false': [0.24864570670600034, 0.19616626900482956], 'false,false,true': [0.0, 0.0], 'false,false,false': [0.19616626900482956, nan], 'true': [0.0001870900700676906, 0.08198686850012754], 'true,true': [0.0001870900700676906, nan]}
{'': [0.03667145719043538, 0.12357705314602348], 'false': [0.115944804434894, 0.125677446561396], 'false,false': [0.09390210969702399, 0.1262054128387778], 'false,false,false': [0.09378737783531889, 0.1352011308580353], 'true': [0.010304312527733974, 0.10537054120575036], 'true,false': [0.0, 0.0005724551700645591], 'true,true': [1.6082960457075578e-06, 0.010621696799773131], 'true,false,true': [nan, 0.0]}
{'': [0.11457173609887132, 0.12367386601059688], 'false': [0.00011799580013099886, 0.12637205690038936], 'false,false': [0.12637205690038936, nan], 'true': [0.1232019453616844, 0.005031512866463123], 'true,true': [0.06000370211015841, 0.13895725960694624], 'true,true,false': [0.0, 0.14744409424800886], 'true,true,true': [0.007034854048850736, 0.24426068543769724]}
{'': [0.07788715493570302, 0.10758921289893142], 'false': [0.10522648874753922, 0.14483226447277447], 'false,false': [0.0, 0.14843008609631902], 'false,false,false': [0.14843008609631902, nan], 'false,true': [0.12173544865493985, 0.0006198900959616135], 'false,true,true': [0.0, 0.11317061411165469], 'true': [0.13288717344762954, 0.053017169374273254], 'false,false,true': [0.0, nan]}
{'': [0.002611689333145824, 0.07867612753342132], 'false': [0.04374458693925873, 0.104802532530461], 'false,false': [7.651521486644053e-05, 0.10715684350960235], 'false,false,false': [0.10080199858655901, 0.18986584557525685], 'false,true': [0.05458093275290819, 0.03524674079187527], 'false,true,false': [0.004025116492858208, 0.028339307587153473], 'true': [0.001958847088382762, 0.0033365136725601757], 'true,false': [0.0, 0.0030331607054123076]}
{'': [0.06354088371285202, 0.07594997191387451], 'false': [0.05357776840691527, 0.08887493616515746], 'false,false': [5.955704288991837e-05, 0.09048112489604207], 'false,false,false': [0.08502523625287378, 0.16500410176340125], 'true': [0.07318878915245002, 0.003540185988026819], 'true,true': [0.05404857355463071, 0.0], 'true,true,true': [7.73708033394874e-05, 0.10407447648419633], 'true,true,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(F, E), interaction(A, F).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 10.418
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, G), interaction(A, H) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.15814893509951236;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return -0.016851064900487763;  // std dev = 2.291, 48.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
%   | | else if ( location(A, J), phenotype(A, K) )
%   | | | then return 0.23429572409033744;  // std dev = 5.057, 109.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=41 */
%   | | | else return 0.11901850031690363;  // std dev = 4.212, 92.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7580193346218546;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7307744171862892;  // std dev = 0.080, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6711278747884093;  // std dev = 3.524, 91.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=76 */
%   | | | else return -0.16115101098686466;  // std dev = 0.166, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.34367910344920705;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.13981214937855654;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.590294637535683;  // std dev = 0.033, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3287364940081145;  // std dev = 0.412, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.09486606309483496;  // std dev = 3.803, 92.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=27 */
%   | | | else return 0.012587337358590705;  // std dev = 1.995, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.542739183020895;  // std dev = 2.879, 58.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   | | | else return -0.1395670706689425;  // std dev = 0.098, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return -0.02758025421485083;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.1377347445142535;  // std dev = 1.405, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.04597014549357946;  // std dev = 0.588, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.448937413579752;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2522416588031271;  // std dev = 0.414, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.04404738172146785;  // std dev = 4.085, 141.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=35 */
%   | | | else return -0.13315572406236761;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.03827058175079566;  // std dev = 1.985, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.10175408008721801;  // std dev = 4.032, 124.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5439878621662317;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.22641029572943422;  // std dev = 1.478, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.12890300949745634;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.36740523532077446;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2852130696074132;  // std dev = 0.282, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5247089097377826;  // std dev = 2.054, 59.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=52 */
%   | | | else return -0.1636457132373637;  // std dev = 0.662, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.16850117073159956;  // std dev = 0.120, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.036244867090396767;  // std dev = 3.681, 121.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=30 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.4091258222416799;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.1782940610139975;  // std dev = 1.272, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.0019476549691838027;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.27139566557749173;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return -0.00988644701550332;  // std dev = 1.178, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.46431459839984673;  // std dev = 0.136, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3284340605007566;  // std dev = 0.013, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then if ( complex(A, I), interaction(A, G) )
%   | | then return 0.24038880480824365;  // std dev = 0.751, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.012609337400500745;  // std dev = 0.307, 124.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=32 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then return -1.1172718890954049E-4;  // std dev = 0.299, 47.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.22164615228413992;  // std dev = 1.094, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.08455954021673132;  // std dev = 3.521, 106.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=37 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.0891212809840955;  // std dev = 1.063, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.31583066564867707;  // std dev = 0.196, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5161632545467334;  // std dev = 0.227, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.15691389697558308;  // std dev = 0.074, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.30645247508730533;  // std dev = 0.157, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( location(A, G), phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.36757741202019895;  // std dev = 1.579, 32.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | | | else return -0.15187483461216955;  // std dev = 0.100, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.017071106411999756;  // std dev = 2.449, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return 0.09488268289205241;  // std dev = 1.163, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.2258376242492523;  // std dev = 0.044, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, F) )
%   | | then return -0.3099309955527958;  // std dev = 1.035, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.24665720291969065;  // std dev = 0.138, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3136881801893773;  // std dev = 3.086, 95.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=82 */
%   | | else return -0.13765607405838598;  // std dev = 0.052, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.19450942169606011;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.19337552265796687;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.05955727975764671;  // std dev = 1.005, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.20237891524695323;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.12342817626581556;  // std dev = 0.262, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( location(A, G), complex(A, H) )
%   | | then if ( location(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.05206736781764625;  // std dev = 1.607, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return -0.1179653418964099;  // std dev = 0.543, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.041415703350047996;  // std dev = 1.567, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return -0.06677119350969964;  // std dev = 0.440, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.05235202644710111;  // std dev = 0.842, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(M, A), location(A, N) )
%   | | | then return 0.02691141523041948;  // std dev = 2.855, 137.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=43 */
%   | | | else return -0.04343488556513406;  // std dev = 1.888, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.042135769850018295;  // std dev = 0.927, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.05691372668103098;  // std dev = 1.252, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return -0.5255170201024667;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.20452401238489823;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.18962367238760136;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.004191154552499004;  // std dev = 0.229, 111.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=29 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.0354203579446033;  // std dev = 0.889, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.019847782905130493;  // std dev = 3.312, 151.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=42 */
%   | | | else return 0.0804803990658339;  // std dev = 1.632, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '27.240', 'seconds']
Refined model CLL: -0.183662


******************************************
Best model found
******************************************
Results 

CLL : -0.165435 

AUC ROC : 0.985476 

AUC PR : 0.341523 

Precision : 0.318253 

Recall : 0.769811 

F1 : 0.450331 

Total Learning Time : 10.418 

Total Inference Time : 52.946165800094604 

Total revision time: 72.90779122924805
Best scored revision CLL: -0.183662


Results 

CLL : -0.165435 

AUC ROC : 0.985476 

AUC PR : 0.341523 

Precision : 0.318253 

Recall : 0.769811 

F1 : 0.450331 

Total Learning Time : 72.92147955513 

Total Inference Time : 52.946165800094604 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.532
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1005731775237548;  // std dev = 2.462, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.1402002171507934;  // std dev = 5.620, 156.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10173867868925592;  // std dev = 3.791, 78.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=19 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8410186222022316;  // std dev = 0.014, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.1587227261756865;  // std dev = 0.024, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.05350083717112133;  // std dev = 1.989, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.1578075170381939;  // std dev = 3.211, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462844;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07439283141443401;  // std dev = 2.051, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6844551944249733;  // std dev = 0.224, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1396112546240845;  // std dev = 5.58e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6040520610480189;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13489054612794948;  // std dev = 3.678, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.3373103276082141;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2508469174916433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4348530711756551;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.40748447252514425;  // std dev = 0.626, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.06341560393764273;  // std dev = 4.162, 182.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.45470590928508814;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5713808240151661;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.060783934278418036;  // std dev = 1.942, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.16020806686401146;  // std dev = 3.105, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33564729916703684;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.333158057165889;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.05250691581994346;  // std dev = 4.245, 194.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.34606523123960387;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4294994389859139;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.07195606179117087;  // std dev = 3.677, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | | else return 0.025608565686184886;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25257897732458806;  // std dev = 0.000576, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.35939290920299427;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.3395080756189638;  // std dev = 0.095, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2850632481773422;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.3363954308955169;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.050807479907199915;  // std dev = 0.994, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.26919238641100857;  // std dev = 0.040, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.055800238665194415;  // std dev = 2.693, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
%   | | | else return 0.05938375338094663;  // std dev = 4.739, 157.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23806285243733227;  // std dev = 0.134, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.23487957240849766;  // std dev = 0.034, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.20540436332831657;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6487412090494608;  // std dev = 0.792, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18018674827442102;  // std dev = 0.464, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22252678601569253;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04897769758228454;  // std dev = 3.344, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1713917929625568;  // std dev = 0.000387, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.1844441319414398;  // std dev = 0.034, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4228359227178286;  // std dev = 1.218, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.14016876485629454;  // std dev = 0.184, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.19542908984232293;  // std dev = 0.030, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04092010072936369;  // std dev = 3.117, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15772307230476593;  // std dev = 0.050, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1484598961403799;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.009017068321270184;  // std dev = 0.792, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07039858064633171;  // std dev = 0.425, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2064538047173834;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.01496821489150475;  // std dev = 1.210, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16008907738430417;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.027301040511365074;  // std dev = 2.747, 114.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
%   | | | else return 0.037863442364644125;  // std dev = 3.095, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1351506133669379;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16428651660305785;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.1297222123860865;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.010258922033902019;  // std dev = 0.741, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.018029298340331807;  // std dev = 1.506, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.13973145537696083;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.021216715211070408;  // std dev = 2.734, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
%   | | | else return -0.004917953852800674;  // std dev = 3.183, 76.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.540', 'seconds']
Parameter learned model CLL:-0.172163 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.462, 25, 8], 'false,false,true,false': [5.62, 112, 44], 'false,false,false,true': [3.791, 59, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 9], 'false,true,true': [0.894, 1, 4], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [0.014, 0, 52], 'false,false,true,false': [0.024, 128, 0], 'false,false,false,true': [1.989, 19, 5], 'false,false,false,false': [3.211, 33, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.051, 24, 8], 'false,true,false,true': [0.224, 0, 48], 'false,true,false,false': [5.58e-08, 124, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.678, 44, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [3.33e-08, 0, 9], 'true,false': [0.913, 1, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.626, 1, 3], 'false,true,false': [4.162, 130, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.942, 15, 5], 'false,false,false,false': [3.105, 27, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.041, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.053, 0, 9], 'false,true': [4.245, 138, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.677, 47, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.000576, 0, 6], 'true,true,false': [0.0, 0, 1], 'true,false,true,true': [0.095, 0, 2], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.029, 0, 3], 'false,true': [0.994, 17, 3], 'false,false,true': [0.04, 0, 6], 'false,false,false,true': [2.693, 55, 23], 'false,false,false,false': [4.739, 111, 46]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.134, 0, 12], 'true,true,true,false': [0.034, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.792, 0, 36], 'true,false': [0.464, 91, 0], 'false,true': [0.031, 0, 5], 'false,false,true': [3.344, 84, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.000387, 0, 5], 'true,false': [0.034, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.218, 1, 56], 'false,true,false': [0.184, 134, 0], 'false,false,true,true': [0.03, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.117, 47, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.05, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.792, 1, 4], 'false,true,true': [0.425, 9, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.21, 42, 14], 'false,false,true': [0.024, 0, 5], 'false,false,false,true': [2.747, 78, 36], 'false,false,false,false': [3.095, 46, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.016, 0, 5], 'true,true,true,false': [0.044, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.741, 1, 4], 'false,true': [1.506, 46, 17], 'false,false,true': [0.022, 0, 5], 'false,false,false,true': [2.734, 80, 36], 'false,false,false,false': [3.183, 56, 20]}]
{'': [-2.5376526277146434e-16, 0.20229639380156203], 'false': [-1.4802973661668753e-16, 0.19509538268814555], 'false,false': [0.19943450631281395, 0.18441403926234334], 'false,false,true': [0.1836547291092747, 0.20249835634451097], 'false,false,false': [0.18425378040762605, 0.18750000000000003], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [3.1720657846433045e-16, 0.20708107115779523], 'false': [0.12244897959183687, 0.20399444748617665], 'false,false': [0.2053300488873142, 0.20061991381686617], 'false,false,true': [3.5862893636653744e-06, 4.459261410239002e-06], 'false,false,false': [0.16491898580733652, 0.21484375000000025], 'false,true': [0.16000000000000006, 0.0], 'true': [0.0, -1.9737298215558337e-16], 'false,true,false': [nan, 0.0]}
{'': [-1.9032394707859825e-16, 0.155938503482425], 'false': [0.13609086892179156, 0.2136529727441288], 'false,false': [0.21139717621333687, 0.25], 'false,false,false': [0.25, nan], 'false,false,true': [0.0, 0.21131391052117648], 'false,true': [0.13143418131216705, 0.1369172332806237], 'false,true,false': [0.0010468095059984102, 2.5069552168955147e-17], 'true': [0.0, -1.1102230246251565e-16]}
{'': [0.06222222222222236, 0.128952774163759], 'false': [0.09791058019608032, 0.21626949029807915], 'false,false': [0.0034032589318178097, 0.2185063347660728], 'false,false,false': [0.18853038318202242, 0.22959183673469333], 'false,true': [0.07847472358827276, 0.09517768681812974], 'false,true,true': [0.0, 0.09794359644692244], 'true': [1.2335811384723962e-16, 0.13888888888888887], 'false,false,true': [0.0, 0.0]}
{'': [0.0003200908067363236, 0.1223151123452732], 'false': [0.09288920485134142, 0.20112185046661632], 'false,false': [0.0017403167555636034, 0.20400107305983473], 'false,false,false': [0.2048783900711812, 0.18750000000000003], 'false,false,true': [0.0, 0.0], 'true': [0.00033460158997506985, 0.00030981628701392476], 'true,true': [0.00033460158997506985, nan]}
{'': [0.002433800389103045, 0.11953411703871412], 'false': [0.04936152323024463, 0.12435724877186598], 'false,false': [0.00026825349517277847, 0.12641709223468778], 'false,false,false': [0.09294597633816469, 0.14304179196154895], 'true': [0.0013970941832703865, 0.0019700654355582848], 'true,false': [0.0029923502085329595, 0.0002748585223885103], 'true,false,true': [0.004502580799491909, 0.0], 'true,true': [5.520762618356952e-08, 0.0]}
{'': [0.13397514813977057, 0.0906258556103499], 'true': [0.048145491799448284, 0.0023637539739074305], 'false': [0.000195451572456784, 0.0931890176680861], 'false,false': [0.0931890176680861, nan], 'true,true': [0.0013741769609806886, 0.022107419178328855], 'true,true,false': [0.0, 0.0174094179724249], 'true,true,true': [0.0015026449750702904, 0.0005946832149497719]}
{'': [0.00012019455110492168, 0.09219477357562728], 'false': [0.07431315823411311, 0.1414668874434947], 'false,false': [0.0004548647070662312, 0.14498422973715425], 'false,false,false': [0.14498422973715425, nan], 'false,true': [0.026039902389503565, 0.00025288626631566463], 'false,true,true': [nan, 0.026039902389503596], 'false,false,true': [0.0004548647070662312, nan], 'true': [3.000307948197722e-08, 0.00012610850733424384]}
{'': [0.04811837039889585, 0.07555595341938547], 'false': [0.026086610309601653, 0.09303290050909271], 'false,false': [0.00011751312683854764, 0.09516471815419339], 'false,false,false': [0.06619199710448737, 0.14513785164738796], 'true': [0.0002793792798695744, 0.10803372204751284], 'true,false': [0.0, 0.1255073007343394], 'false,true': [0.018039420503183225, 0.02688916405023153], 'false,true,false': [0.0, 0.026158880621612927]}
{'': [0.04208359581215364, 0.07708250571402424], 'false': [0.035998053114082114, 0.08997039732595295], 'false,false': [9.377568545917148e-05, 0.0918894920706506], 'false,false,false': [0.06445784669484367, 0.1333461870622111], 'true': [0.00041805037458237103, 0.10979550016313133], 'true,true': [0.00046906991931649003, 0.0], 'true,true,true': [4.88918207192518e-05, 0.00063880371444656], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 2.833
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.09990717685775369;  // std dev = 4.084, 91.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=22 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.17014893509951123;  // std dev = 5.180, 125.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=39 */
%   | | | else return 0.2812258581764354;  // std dev = 2.519, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8195863878587475;  // std dev = 0.993, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.1591779265890124;  // std dev = 0.105, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | else if ( location(A, I) )
%   | | | then return 0.10606130045288814;  // std dev = 3.618, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | | | else return 0.4870245624770692;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462844;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10899684889283331;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.1514850527572014;  // std dev = 1.913, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.683841208157463;  // std dev = 0.271, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1413910121005848;  // std dev = 0.036, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.1932744955105235;  // std dev = 0.512, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.1456372974862618;  // std dev = 3.598, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | else return 0.05419347735508773;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4175135841583098;  // std dev = 1.29e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3866386853022511;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41147582107097486;  // std dev = 0.630, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, G), interaction(A, H) )
%   | | | then return -0.006137418776992463;  // std dev = 1.770, 51.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else return 0.06052914549670187;  // std dev = 3.821, 149.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=43 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.5072752757925694;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5191756791285986;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.21884208974873323;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.052779786383299256;  // std dev = 2.790, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F) )
%   | | then if ( complex(G, F), phenotype(G, H) )
%   | | | then return 0.06952630973097441;  // std dev = 2.707, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | | | else return -0.04111842052924215;  // std dev = 1.174, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | else return 0.07991636313043607;  // std dev = 0.311, 89.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=29 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return 0.3826838456011312;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3911608335488258;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, K) )
%   | | | then return 0.07822207192889827;  // std dev = 3.537, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return -0.10294089296277924;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.26927721528009624;  // std dev = 0.035, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.2948058244105217;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3140778700973519;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(A, H), enzyme(H, I) )
%   | | then return -0.1119122256801909;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.06590748153141125;  // std dev = 0.749, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.04341130533750757;  // std dev = 0.535, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.041879761916297054;  // std dev = 3.958, 172.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=48 */
%   | | | else return 0.1314419243994432;  // std dev = 3.575, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2317125962011228;  // std dev = 0.036, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.637028828546876;  // std dev = 0.661, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18778485771413247;  // std dev = 0.068, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.043091048965868885;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.44600025952353173;  // std dev = 0.993, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return -0.15320987836131916;  // std dev = 0.071, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.13452914656213238;  // std dev = 1.249, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.013207139925172676;  // std dev = 1.914, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17190241723617583;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.18879086594911496;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.5266758123394469;  // std dev = 0.195, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3506133905713561;  // std dev = 1.424, 51.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=49 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.11384835149667233;  // std dev = 0.215, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.14521952795263732;  // std dev = 0.237, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return -0.11053366519335621;  // std dev = 0.762, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.040463341504451585;  // std dev = 1.910, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.04300436441925594;  // std dev = 2.427, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16072770302703457;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1756819645312296;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.02713291030375268;  // std dev = 0.341, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.07287696642953968;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.22627449636431163;  // std dev = 0.028, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.011359518180242998;  // std dev = 1.276, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1738952646762768;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), enzyme(A, K) )
%   | | | then return 0.0023897465336773613;  // std dev = 2.215, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | | else return 0.023345721907826533;  // std dev = 3.236, 118.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=37 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14535424906985142;  // std dev = 0.027, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.14203338340297775;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.07268291414717339;  // std dev = 0.016, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.01884306371781853;  // std dev = 0.490, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return -0.01950198567988037;  // std dev = 0.627, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.036275249542404096;  // std dev = 1.039, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.15031103596577522;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.036911637710841605;  // std dev = 2.152, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.04308862975269828;  // std dev = 3.195, 134.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=47 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25.524', 'seconds']
Refined model CLL: -0.173467


******************************************
Best model found
******************************************
Results 

CLL : -0.193972 

AUC ROC : 0.98192 

AUC PR : 0.218841 

Precision : 0.134921 

Recall : 0.797834 

F1 : 0.230809 

Total Learning Time : 2.833 

Total Inference Time : 2.95993709564209 

Total revision time: 10.184846868515015
Best scored revision CLL: -0.172163


Results 

CLL : -0.193972 

AUC ROC : 0.98192 

AUC PR : 0.218841 

Precision : 0.134921 

Recall : 0.797834 

F1 : 0.230809 

Total Learning Time : 10.198535194396973 

Total Inference Time : 2.95993709564209 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.655
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07848791815035983;  // std dev = 3.184, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | | else return 0.1367203636709404;  // std dev = 5.304, 140.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951237;  // std dev = 2.598, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7281936043102514;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.6056318776577896;  // std dev = 0.951, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8054813670766134;  // std dev = 1.391, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15648239131046435;  // std dev = 0.044, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else if ( location(A, I) )
%   | | | then return 0.13693685647763115;  // std dev = 2.775, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return -0.02459219754769833;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5692527820673249;  // std dev = 0.017, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5626751728358972;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06971513225130828;  // std dev = 2.780, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6706472851661223;  // std dev = 1.000, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.13946243020753166;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6640553390888159;  // std dev = 0.198, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09100568038866372;  // std dev = 2.500, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0664395934881683;  // std dev = 1.481, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4266015255541593;  // std dev = 0.027, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6827641658969655;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5976989997145646;  // std dev = 0.177, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.0512129229822505;  // std dev = 4.310, 187.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4187672137027987;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5609980333150628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.05783801142187628;  // std dev = 2.841, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.3021844707664806;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32935880526668476;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32320382769327183;  // std dev = 0.021, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.06636448009264594;  // std dev = 4.350, 189.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.321561860463103;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.05498957560841777;  // std dev = 0.779, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.06160706072041922;  // std dev = 2.557, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.1362595021106181;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26119662248812087;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4177489703597954;  // std dev = 0.100, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25575216401341927;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04213094846806675;  // std dev = 0.779, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.04124683860165602;  // std dev = 1.205, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.25559304877971706;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06414321507959916;  // std dev = 3.959, 152.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=46 */
%   | | | else return 0.13521885182721644;  // std dev = 2.888, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24716761351417252;  // std dev = 0.201, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.03153941813558914;  // std dev = 0.950, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.23539946089013894;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5416999846734738;  // std dev = 1.350, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.1801132597581327;  // std dev = 0.585, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2047925004843055;  // std dev = 0.000874, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0879489529382593;  // std dev = 3.211, 89.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1751531562442531;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.18353548621937596;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40140556006206424;  // std dev = 1.776, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.1444792163515569;  // std dev = 0.287, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2966074777389421;  // std dev = 0.131, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04870978406646434;  // std dev = 2.429, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1550682333068248;  // std dev = 0.027, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.2594274079067411;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2141059099280131;  // std dev = 0.136, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.10234804187297238;  // std dev = 0.304, 28.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.23782858295624956;  // std dev = 0.156, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.020066880914439412;  // std dev = 1.559, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.10145125567358215;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.013851980874330748;  // std dev = 2.743, 112.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=31 */
%   | | | else return -0.01258779872505411;  // std dev = 2.527, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13241663299867124;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14947849454761275;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.12625518420225923;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.18151780102675175;  // std dev = 0.044, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.2093920389088628;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.023572124190267538;  // std dev = 1.772, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16199180493583243;  // std dev = 0.000729, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.002117665989970935;  // std dev = 2.959, 111.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=31 */
%   | | | else return 0.06664238967256858;  // std dev = 2.383, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.881', 'seconds']
Parameter learned model CLL:-0.180881 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.707, 1, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.184, 46, 13], 'false,false,true,false': [5.304, 101, 39], 'false,false,false,true': [2.598, 27, 9], 'false,false,false,false': [1.225, 3, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.02, 0, 7], 'false,true,true': [0.951, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.391, 2, 52], 'false,false,true,false': [0.044, 140, 0], 'false,false,false,true': [2.775, 26, 11], 'false,false,false,false': [0.913, 5, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.017, 0, 11], 'true,false': [0.019, 0, 4], 'false,true,true': [2.78, 43, 14], 'false,true,false,true': [1.0, 1, 42], 'false,true,false,false': [0.0, 84, 0], 'false,false,true,true': [0.198, 0, 3], 'false,false,true,false': [2.5, 24, 9], 'false,false,false,true': [1.481, 8, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.027, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.177, 0, 6], 'false,true,false': [4.31, 138, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.841, 32, 11], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.001, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.021, 0, 6], 'false,true': [4.35, 133, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.779, 1, 2], 'false,false,false,true': [2.557, 25, 9], 'false,false,false,false': [1.367, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.002, 0, 9], 'true,true,false': [0.1, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.779, 1, 2], 'false,true': [1.205, 19, 5], 'false,false,true': [0.017, 0, 5], 'false,false,false,true': [3.959, 106, 46], 'false,false,false,false': [2.888, 24, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.201, 0, 13], 'true,true,true,false': [0.95, 1, 3], 'true,true,false,true': [0.043, 0, 3], 'true,true,false,false': [1.35, 2, 33], 'true,false': [0.585, 105, 0], 'false,true': [0.000874, 0, 3], 'false,false,true': [3.211, 58, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [7.45e-09, 0, 8], 'true,false': [0.047, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.776, 3, 56], 'false,true,false': [0.287, 127, 0], 'false,false,true,true': [0.131, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.429, 27, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.027, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.136, 0, 5], 'false,true,true': [0.304, 27, 1], 'false,true,false,true': [0.156, 0, 6], 'false,true,false,false': [1.559, 49, 17], 'false,false,true': [0.867, 1, 3], 'false,false,false,true': [2.743, 81, 31], 'false,false,false,false': [2.527, 37, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.012, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.044, 0, 2], 'true,false': [0.091, 0, 3], 'false,true': [1.772, 70, 24], 'false,false,true': [0.000729, 0, 3], 'false,false,false,true': [2.959, 80, 31], 'false,false,false,false': [2.383, 23, 12]}]
{'': [0.05859374999999978, 0.20383542200932284], 'false': [0.10937499999999978, 0.19503796422238034], 'false,false': [0.1930254286507925, 0.2040816326530607], 'false,false,false': [0.1875000000000001, 0.24999999999999992], 'false,false,true': [0.1717897155989653, 0.2009693877551027], 'false,true': [0.25, -1.4802973661668753e-16], 'true': [0.07100591715976314, 1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [3.7260457621949665e-05, 0.20185665997622318], 'false': [0.11303619581960628, 0.19689321219694855], 'false,false': [0.1958595515525367, 0.2015487504488797], 'false,false,false': [0.20806911578334797, 0.13888888888888892], 'false,false,true': [0.03581232371972963, 1.3647983058495683e-05], 'false,true': [0.11303619581960628, nan], 'true': [-2.220446049250313e-16, 5.703131268651264e-05]}
{'': [5.1483267664368766e-05, 0.16012195211606], 'false': [0.1497683724406343, 0.20061407974253878], 'false,false': [0.19978099323466392, 0.19933442257869058], 'false,false,true': [0.01305195165747349, 0.1893908680394088], 'false,false,false': [0.19933442257869058, nan], 'false,true': [0.13554048041228034, 0.1548407914154352], 'false,true,false': [0.02324700390665256, -9.780536169316855e-17], 'true': [2.610354836572106e-05, 8.954987072146148e-05]}
{'': [4.696484594832739e-05, 0.12348032629587458], 'false': [0.10679395777138616, 0.19052703348827468], 'false,false': [0.004495468010572545, 0.19305475919541956], 'false,false,false': [0.18775257924652144, 0.25], 'false,true': [0.005353189763991953, 0.09933070675942472], 'false,true,true': [0.0, 0.005211661986899226], 'false,false,true': [0.0, 0.0], 'true': [4.696484594832739e-05, nan]}
{'': [3.770280246593316e-05, 0.11932912859669875], 'false': [0.10013399081527097, 0.19805071912030017], 'false,false': [0.16497169046711418, 0.20101865094369098], 'false,false,false': [0.1923220601187435, 0.2334676962785855], 'false,false,true': [0.0, 0.2021970581929904], 'true': [2.0646697657728592e-07, 7.121705634251703e-05], 'true,true': [2.0646697657728592e-07, nan]}
{'': [0.05054921456386521, 0.1191924958476334], 'false': [0.06054003837510628, 0.12472214880346788], 'false,false': [5.4977929063515504e-05, 0.12719742431019132], 'false,false,false': [0.10311895257426792, 0.21946991434262308], 'true': [0.005990279961342783, 0.1604007935954416], 'true,false': [0.0, 0.20245921886115367], 'true,true': [5.955428937159329e-07, 0.0024995515476836927], 'true,false,true': [0.0, nan]}
{'': [0.11027633416537333, 0.11252432873680372], 'false': [2.546530425603007e-07, 0.11587208762152267], 'false,false': [0.11587208762152267, nan], 'true': [0.07960672171907539, 0.0032559961115773807], 'true,true': [0.06382817092489276, 0.054799284734409516], 'true,true,true': [0.003122069124438456, 0.22556760516760932], 'true,true,false': [0.0006070657325112269, 0.05203748911401266]}
{'': [0.0001644157916991462, 0.09376530842608316], 'false': [0.081935497866814, 0.1449925971599896], 'false,false': [0.005750580817402891, 0.1513140024563109], 'false,false,false': [0.1513140024563109, nan], 'false,true': [0.05344489505201881, 0.0006475200585119602], 'false,true,true': [nan, 0.05344489505201884], 'false,false,true': [0.005750580817402891, nan], 'true': [6.938893903907228e-18, 0.00031484571054138377]}
{'': [0.002353326985243001, 0.06761565294618246], 'false': [0.031285040550306564, 0.08927537225176405], 'false,false': [0.1877081598859622, 0.08655095414934155], 'false,false,false': [0.06719818213080196, 0.13029955765836637], 'false,true': [0.0032938139108305503, 0.0391552756130556], 'false,true,false': [0.004063517366787016, 0.0368029295965357], 'true': [7.558457123496287e-05, 0.0033780669310078393], 'true,false': [0.0, 0.003711340620703407]}
{'': [0.0016007857216276712, 0.0734961232830671], 'false': [0.03340208044503421, 0.09814292835254386], 'false,false': [1.769134200616899e-07, 0.0997207668391167], 'false,false,false': [0.07886664164847762, 0.16226360157980693], 'true': [0.00048568540514101115, 0.0027560714636950348], 'true,true': [6.1004879670950585e-05, 0.001329333580616728], 'true,true,false': [0.0, 0.000976014764828198], 'true,true,true': [0.0, 7.213870274254408e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.69
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.25208832903890627;  // std dev = 2.807, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.10938046219310743;  // std dev = 6.180, 203.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=51 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A), interaction(I, H) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.8021628039969114;  // std dev = 1.396, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15619069524937831;  // std dev = 0.169, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.1624874359320889;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.3443056177502705;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5660455205926314;  // std dev = 0.027, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.10928729748511298;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.12409698760085654;  // std dev = 2.613, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6687334254968484;  // std dev = 0.997, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.13989964411462535;  // std dev = 0.069, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6810254743294295;  // std dev = 0.945, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.17826714597267743;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.030289645058169678;  // std dev = 1.127, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.07363458649326061;  // std dev = 1.802, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.42591846483733764;  // std dev = 0.028, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6062590104209477;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5913293481077463;  // std dev = 0.161, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.0139821386391715;  // std dev = 2.481, 87.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=16 */
%   | | | else return 0.101628104167657;  // std dev = 3.453, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.5499751313546696;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3873066471306488;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.21219345504730244;  // std dev = 1.118, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.04845975239123259;  // std dev = 2.458, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2635767936133401;  // std dev = 0.246, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( phenotype(A, F), interaction(G, E) )
%   | | | then return 0.008816187512973696;  // std dev = 1.565, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.13965264943262323;  // std dev = 3.341, 96.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=40 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.02162866960750412;  // std dev = 0.751, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.09765798744454877;  // std dev = 1.593, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return 0.4262157371637605;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0682110118272652;  // std dev = 0.695, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.05048223420916649;  // std dev = 2.202, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return -0.027413325357876734;  // std dev = 1.673, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2701800636605676;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4135935747527267;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.33250460574858703;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( interaction(A, H), phenotype(H, G) )
%   | | | then return -0.0799116558574624;  // std dev = 0.626, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.02557772546664171;  // std dev = 0.903, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return -0.10563180916270129;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2624713258693192;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.005556831778644205;  // std dev = 2.401, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | | else return 0.05174314944645289;  // std dev = 4.203, 162.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2530481842231195;  // std dev = 0.049, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.00810558237564804;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5344430494619332;  // std dev = 1.397, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else if ( interaction(F, A) )
%   | | then return -0.13576239092774972;  // std dev = 0.051, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.21032941537524621;  // std dev = 0.040, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2149006482713518;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.32154026415053466;  // std dev = 2.154, 41.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=30 */
%   | | | else return -0.17531487405795515;  // std dev = 0.368, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.07141972229219938;  // std dev = 0.567, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17416507129917136;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.25511975455872127;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1890286906613449;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.37264967796542103;  // std dev = 1.185, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | | else return 0.244046368220325;  // std dev = 1.415, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | else return -0.13863628212658075;  // std dev = 0.036, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then if ( interaction(K, M), interaction(M, K) )
%   | | | then return 0.15728855488937207;  // std dev = 1.118, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.04667744061397499;  // std dev = 1.402, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return 0.3458693349314726;  // std dev = 0.908, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17674151709494434;  // std dev = 0.032, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( complex(D, F), enzyme(A, G) )
%   | | then if ( complex(E, H) )
%   | | | then return 0.03855703882798273;  // std dev = 0.744, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.01915075523336491;  // std dev = 0.670, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.08482599053940278;  // std dev = 0.997, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | | else return -0.03472818975225969;  // std dev = 1.255, 62.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=13 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3145869988974896;  // std dev = 1.275, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | | else return -0.15152602798621742;  // std dev = 0.304, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.013328824728968857;  // std dev = 1.005, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.12412910738851199;  // std dev = 1.768, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14820272144030716;  // std dev = 0.026, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.1718158553658322;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(A, G), complex(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.32804947724176853;  // std dev = 0.096, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11724934460868508;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.017610604076573607;  // std dev = 1.400, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | | else return -0.045144605676985444;  // std dev = 0.796, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.11786366016958941;  // std dev = 0.816, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.04308005863394901;  // std dev = 1.384, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.01843139759702833;  // std dev = 2.576, 119.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21.751', 'seconds']
Refined model CLL: -0.168721


******************************************
Best model found
******************************************
Results 

CLL : -0.187789 

AUC ROC : 0.987633 

AUC PR : 0.273906 

Precision : 0.15424 

Recall : 0.957597 

F1 : 0.265686 

Total Learning Time : 3.69 

Total Inference Time : 3.6359670162200928 

Total revision time: 12.272790880203248
Best scored revision CLL: -0.168721


Results 

CLL : -0.187789 

AUC ROC : 0.987633 

AUC PR : 0.273906 

Precision : 0.15424 

Recall : 0.957597 

F1 : 0.265686 

Total Learning Time : 12.286479206085206 

Total Inference Time : 3.6359670162200928 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.113
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21037565574728564;  // std dev = 7.507, 247.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1513179613516026;  // std dev = 4.806, 106.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
%   | | | else return 0.14050476483830843;  // std dev = 6.048, 171.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1425757051240863;  // std dev = 4.830, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   | | | else return 0.14906610379992868;  // std dev = 5.859, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.1851155863008739;  // std dev = 2.898, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.11456103519773765;  // std dev = 6.999, 222.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10903145863073915;  // std dev = 7.545, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07632919545453917;  // std dev = 7.620, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7258597602775517;  // std dev = 0.047, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2744822831456868;  // std dev = 0.061, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.128953310071633;  // std dev = 3.464, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | | | else return 0.09063505040415537;  // std dev = 4.527, 89.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04497009309099272;  // std dev = 3.773, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   | | | else return 0.0415411775520035;  // std dev = 5.895, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06431379086738423;  // std dev = 6.807, 236.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02506760105450647;  // std dev = 6.957, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.528', 'seconds']
Parameter learned model CLL:-0.348603 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.507, 160, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.806, 72, 34], 'false,false,false,false': [6.048, 118, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.83, 70, 35], 'false,false,false,false': [5.859, 101, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.898, 21, 14], 'false,false,false,false': [6.999, 149, 73]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.545, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.62, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.047, 0, 35], 'true,false': [0.061, 57, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.464, 30, 20], 'false,false,false,false': [4.527, 57, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.773, 67, 35], 'false,false,false,false': [5.895, 104, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.807, 149, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.957, 167, 87]}]
{'': [nan, 0.2281630579094897], 'false': [nan, 0.22816305790948957], 'false,false': [nan, 0.2281630579094897], 'false,false,false': [nan, 0.22816305790948957]}
{'': [nan, 0.21543353881843816], 'false': [nan, 0.21543353881843783], 'false,false': [nan, 0.21543353881843816], 'false,false,false': [0.21787112851548668, 0.2138777743579199]}
{'': [nan, 0.22349623708324665], 'false': [nan, 0.22349623708324665], 'false,false': [nan, 0.22349623708324728], 'false,false,false': [0.2221910519233158, 0.2243748083818268]}
{'': [nan, 0.2238729889745459], 'false': [nan, 0.2238729889745459], 'false,false': [nan, 0.2238729889745461], 'false,false,false': [0.23999999999999985, 0.22065251198172864]}
{'': [nan, 0.2259140699274091], 'false': [nan, 0.2259140699274091], 'false,false': [nan, 0.22591406992740848], 'false,false,false': [nan, 0.22591406992740848]}
{'': [nan, 0.22247122875294612], 'false': [nan, 0.22247122875294612], 'false,false': [nan, 0.22247122875294612], 'false,false,false': [nan, 0.22247122875294567]}
{'': [0.23592939669559063, 0.2341107078971141], 'true': [6.33520903809272e-05, 6.434653685946694e-05], 'false': [nan, 0.2341107078971141], 'false,false': [nan, 0.2341107078971141], 'false,false,false': [0.24000000000000032, 0.23027395530867295], 'true,true': [nan, 6.33520903809272e-05], 'true,true,false': [nan, 6.33520903809272e-05]}
{'': [nan, 0.1898735505159708], 'false': [nan, 0.1898735505159708], 'false,false': [nan, 0.18987355051597052], 'false,false,false': [0.13955588703620914, 0.22276891295389684]}
{'': [nan, 0.1963214979121011], 'false': [nan, 0.19632149791210088], 'false,false': [nan, 0.19632149791210088], 'false,false,false': [nan, 0.19632149791210088]}
{'': [nan, 0.19057138895810613], 'false': [nan, 0.19057138895810613], 'false,false': [nan, 0.1905713889581056], 'false,false,false': [nan, 0.1905713889581056]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 18.364
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( phenotype(C, E), interaction(A, F) )
%   | then return 0.25814893509951237;  // std dev = 0.490, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | else return 0.09695490524876609;  // std dev = 0.426, 67.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=16 */
%   else if ( interaction(G, A), phenotype(G, H) )
%   | then if ( complex(A, I), interaction(J, G) )
%   | | then if ( recursion_proteinclass(J, B), complex(J, I) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.13314893509951237;  // std dev = 2.824, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.31968739663797385;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, N), interaction(P, A) )
%   | | | then return 0.043334120284697505;  // std dev = 2.018, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.19148226843284571;  // std dev = 3.742, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( complex(A, E), phenotype(A, F) )
%   | then if ( phenotype(A, D) )
%   | | then return 0.18694188033924514;  // std dev = 0.456, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else if ( location(A, G), location(C, G) )
%   | | | then return 0.4255029463743468;  // std dev = 1.524, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.2069630295659291;  // std dev = 1.596, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else return 0.12290919468983635;  // std dev = 0.459, 119.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=36 */
%   else if ( interaction(H, A), location(H, I) )
%   | then if ( enzyme(A, J), location(A, I) )
%   | | then if ( location(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.8396680180792124;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.15602363068901173;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.16674907639949613;  // std dev = 1.966, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.27161916615295956;  // std dev = 2.782, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | else return 0.14300906601993815;  // std dev = 0.457, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then return 0.7780742414835546;  // std dev = 0.110, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7207082046821986;  // std dev = 0.166, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( enzyme(A, F), location(A, G) )
%   | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.535709949404346;  // std dev = 0.977, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7756947487448358;  // std dev = 0.261, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.1885807570975264;  // std dev = 0.199, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.742726952757476;  // std dev = 0.199, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.029600505955840916;  // std dev = 5.040, 148.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=33 */
%   | | else return 0.30669496334294216;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, C) )
%   | then return 0.2648258371366435;  // std dev = 0.999, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.6184775963975918;  // std dev = 0.070, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then return -0.03238352680913345;  // std dev = 0.323, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6838677672579401;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.17571021451953175;  // std dev = 0.087, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6119132908016803;  // std dev = 1.713, 32.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | | | else return -0.18729018515478274;  // std dev = 0.259, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.19225056687165457;  // std dev = 2.945, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | | else return 0.11556577373088876;  // std dev = 3.237, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.5118629603099764;  // std dev = 0.120, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return 0.05110467615502664;  // std dev = 0.561, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.478174063719906;  // std dev = 0.268, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then if ( phenotype(A, G), enzyme(A, H) )
%   | | then return -0.16247783261003138;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.2104038959929766;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6859484568680673;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07791510880853915;  // std dev = 2.660, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.02525270875579059;  // std dev = 3.582, 94.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=27 */
%   | | | else return 0.08663715212823055;  // std dev = 3.921, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( interaction(A, E) )
%   | then if ( interaction(E, F), phenotype(F, G) )
%   | | then if ( complex(D, H), complex(F, I) )
%   | | | then return 0.07556088831894155;  // std dev = 1.285, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.3173119173032508;  // std dev = 0.775, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return -0.0028535515839417064;  // std dev = 0.315, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else return -0.008685163227858438;  // std dev = 0.305, 65.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   else if ( interaction(J, A), interaction(A, J) )
%   | then return -0.0016074970978836398;  // std dev = 0.303, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | else if ( interaction(K, A), complex(A, L) )
%   | | then if ( phenotype(A, M), phenotype(K, N) )
%   | | | then return 0.09548597460930272;  // std dev = 1.866, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.3533242545304516;  // std dev = 1.303, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(A, P), location(A, Q) )
%   | | | then return 0.07064846073189746;  // std dev = 1.978, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.1253141584099407;  // std dev = 3.483, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5302291127701521;  // std dev = 0.120, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2132928548647546;  // std dev = 0.054, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( phenotype(A, E), interaction(A, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.4177033673563793;  // std dev = 0.176, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(F, G) )
%   | | | then return -0.04331376876278362;  // std dev = 0.905, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.21883115129360187;  // std dev = 1.091, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.49275350698042525;  // std dev = 0.330, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.2015413802084368;  // std dev = 0.412, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.39003132121799816;  // std dev = 0.183, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.02847891728618251;  // std dev = 3.946, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), location(A, E) )
%   | | then return 0.21820651108408717;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3956885932685137;  // std dev = 0.065, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else return -0.16826587964129763;  // std dev = 0.048, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, A) )
%   | | then return 0.23737462018663924;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3106272066477345;  // std dev = 0.172, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), location(G, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13867135751341916;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.06432563839124744;  // std dev = 4.370, 123.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.03546792944429792;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0939943260752119;  // std dev = 1.150, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.2617470763098068;  // std dev = 0.786, 32.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | | else return 0.45900188500887007;  // std dev = 2.028, 53.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=49 */
%   | | else if ( interaction(A, G), interaction(D, G) )
%   | | | then return 0.3484183148769165;  // std dev = 0.397, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.21611914919384645;  // std dev = 0.385, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.1810668600187641;  // std dev = 0.064, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then if ( interaction(A, A) )
%   | | then return -0.07881302062711791;  // std dev = 0.408, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.09542514008071774;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, J), interaction(J, A) )
%   | | then return -0.03486507882629698;  // std dev = 0.567, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.012091806747384415;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, F) )
%   | | then if ( interaction(A, G), interaction(D, G) )
%   | | | then return 0.24733656021909758;  // std dev = 0.494, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.002924892053222272;  // std dev = 0.887, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( enzyme(D, H) )
%   | | | then return 0.08458694991062486;  // std dev = 1.148, 23.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | | | else return 0.34670739623420155;  // std dev = 2.084, 43.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=32 */
%   | else if ( phenotype(A, I) )
%   | | then return -0.13584403659712005;  // std dev = 0.039, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.12651681380804555;  // std dev = 0.188, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.2342869877123019;  // std dev = 0.199, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( interaction(K, A), interaction(L, K) )
%   | then return 0.22868165203457397;  // std dev = 0.838, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.073573341844089;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '55.032', 'seconds']
Refined model CLL: -0.19017


******************************************
Best model found
******************************************
Results 

CLL : -0.197214 

AUC ROC : 0.993526 

AUC PR : 0.508019 

Precision : 0.364842 

Recall : 0.780142 

F1 : 0.497175 

Total Learning Time : 18.364 

Total Inference Time : 14.155069828033447 

Total revision time: 35.35393619728089
Best scored revision CLL: -0.19017


Results 

CLL : -0.197214 

AUC ROC : 0.993526 

AUC PR : 0.508019 

Precision : 0.364842 

Recall : 0.780142 

F1 : 0.497175 

Total Learning Time : 35.38362240982056 

Total Inference Time : 14.155069828033447 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.114
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2106913079808688;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.15725149191359905;  // std dev = 4.714, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
%   | | | else return 0.1532460913735479;  // std dev = 6.934, 220.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14374136567316115;  // std dev = 5.217, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   | | | else return 0.1445328473326877;  // std dev = 6.463, 187.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.09965146395156828;  // std dev = 2.865, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0.10044521794084427;  // std dev = 7.932, 291.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08002093666676173;  // std dev = 8.451, 332.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08764596025208601;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7356087984074463;  // std dev = 0.002, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2643558541608284;  // std dev = 0.002, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.0225293276031369;  // std dev = 3.868, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | | | else return 0.049070615006820854;  // std dev = 5.370, 134.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03803542457492918;  // std dev = 4.150, 127.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=41 */
%   | | | else return 0.04411451145049509;  // std dev = 6.561, 199.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05407240862456751;  // std dev = 7.618, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04787537575601705;  // std dev = 7.580, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.205', 'seconds']
Parameter learned model CLL:-0.331692 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.206, 191, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.714, 68, 33], 'false,false,false,false': [6.934, 149, 71]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.217, 81, 41], 'false,false,false,false': [6.463, 124, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.865, 26, 12], 'false,false,false,false': [7.932, 199, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.451, 228, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.313, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.002, 0, 41], 'true,false': [0.002, 72, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.868, 52, 21], 'false,false,false,false': [5.37, 92, 42]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.15, 86, 41], 'false,false,false,false': [6.561, 136, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.618, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.58, 197, 104]}]
{'': [nan, 0.2282562482045412], 'false': [nan, 0.22825624820453944], 'false,false': [nan, 0.2282562482045412], 'false,false,false': [nan, 0.22825624820453944]}
{'': [nan, 0.2190196135518918], 'false': [nan, 0.2190196135518865], 'false,false': [nan, 0.2190196135518918], 'false,false,false': [0.2199784334869131, 0.21857438016528818]}
{'': [nan, 0.22328780307631535], 'false': [nan, 0.22328780307631535], 'false,false': [nan, 0.2232878030763178], 'false,false,false': [0.22311629507601516, 0.22339944866273329]}
{'': [nan, 0.21618404646770606], 'false': [nan, 0.21618404646770606], 'false,false': [nan, 0.21618404646770528], 'false,false,false': [0.21606648199445985, 0.21619932575830222]}
{'': [nan, 0.2151330778977052], 'false': [nan, 0.2151330778977052], 'false,false': [nan, 0.21513307789770442], 'false,false,false': [nan, 0.21513307789770442]}
{'': [nan, 0.22293687836579457], 'false': [nan, 0.22293687836579457], 'false,false': [nan, 0.222936878365794], 'false,false,false': [nan, 0.22293687836579396]}
{'': [0.23116863182629369, 0.21172953645411144], 'true': [8.082152200611234e-08, 7.041450166155192e-08], 'false': [nan, 0.21172953645411144], 'false,false': [nan, 0.21172953645411144], 'false,false,false': [0.20491649465190442, 0.21519269325016654], 'true,true': [nan, 8.082152200611234e-08], 'true,true,false': [nan, 8.082152200611234e-08]}
{'': [nan, 0.18489924362154683], 'false': [nan, 0.18489924362154683], 'false,false': [nan, 0.1848992436215474], 'false,false,false': [0.1356350090941016, 0.21632483579527104]}
{'': [nan, 0.1896519781683605], 'false': [nan, 0.1896519781683606], 'false,false': [nan, 0.1896519781683606], 'false,false,false': [nan, 0.1896519781683606]}
{'': [nan, 0.19086542407565074], 'false': [nan, 0.19086542407565074], 'false,false': [nan, 0.1908654240756502], 'false,false,false': [nan, 0.1908654240756502]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 10.493
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( enzyme(C, D) )
%   | | | then return 0.124815601766179;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.31968739663797385;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   else if ( enzyme(A, E) )
%   | then return 0.14116780302403936;  // std dev = 0.450, 106.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=30 */
%   | else if ( location(A, F), complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.1340110040650296;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.1744754657117561;  // std dev = 4.604, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.7587014386899692;  // std dev = 0.052, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( enzyme(D, E), location(A, F) )
%   | | then return 0.03983623498906001;  // std dev = 0.397, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | else return 0.29649356355087203;  // std dev = 0.458, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   else if ( interaction(G, A), interaction(G, G) )
%   | then if ( interaction(A, H) )
%   | | then return 0.5384845430998738;  // std dev = 0.443, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( location(A, I), location(G, I) )
%   | | | then return 0.2498029869887185;  // std dev = 1.654, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.07085040787096439;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.05892494987890604;  // std dev = 0.422, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( location(A, L), interaction(M, A) )
%   | | | then return 0.1416778551350742;  // std dev = 5.706, 157.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=48 */
%   | | | else return 0.262752487566083;  // std dev = 1.850, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(A, E), interaction(C, D) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.5456598441823857;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.729524956093584;  // std dev = 0.168, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.22507711984059894;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.7519997584135064;  // std dev = 0.071, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( complex(A, G), phenotype(A, H) )
%   | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.7583610042442258;  // std dev = 0.069, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.17040318171600605;  // std dev = 0.103, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( interaction(A, A) )
%   | | then return -0.15234788309082525;  // std dev = 0.078, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( location(A, J), complex(A, K) )
%   | | | then return 0.02981954121474334;  // std dev = 2.229, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.09028905770610943;  // std dev = 6.471, 208.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.44950184374538366;  // std dev = 0.280, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(F, A), interaction(F, D) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.5621458665422635;  // std dev = 0.175, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.01829204329625787;  // std dev = 3.281, 83.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=16 */
%   | | else if ( phenotype(D, G), phenotype(A, H) )
%   | | | then return 0.04891230934776318;  // std dev = 2.096, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.25641957403357973;  // std dev = 1.619, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.7999812787206458;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16019202729356852;  // std dev = 1.568, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.16465556121211342;  // std dev = 4.055, 79.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=29 */
%   | | | else return 0.05769815371892645;  // std dev = 3.628, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.5895098829462627;  // std dev = 0.288, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, C) )
%   | | then return -0.22203505683533495;  // std dev = 0.155, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.5069896547772016;  // std dev = 0.175, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05388041759899204;  // std dev = 4.140, 100.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=29 */
%   else if ( phenotype(A, F), complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5035939822765441;  // std dev = 0.134, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.15955058748489911;  // std dev = 0.141, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5083127456814815;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.16557637810134132;  // std dev = 4.541, 90.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=35 */
%   | | | else return 0.021914121570231378;  // std dev = 1.752, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.2375451312599196;  // std dev = 0.274, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.3779109867556025;  // std dev = 0.125, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), complex(A, F) )
%   | then if ( enzyme(A, G), interaction(E, A) )
%   | | then return 0.3409519634729668;  // std dev = 0.569, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.04737789152294792;  // std dev = 1.850, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return -0.032989922761645814;  // std dev = 1.862, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.021458254700182706;  // std dev = 2.640, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return -0.1994737738382813;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, K), interaction(A, L) )
%   | | | then return 0.14307819598265686;  // std dev = 2.446, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.061584606092639035;  // std dev = 5.338, 150.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2362751388007767;  // std dev = 0.067, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.608675999851449;  // std dev = 0.315, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.45845892079772765;  // std dev = 0.587, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.16254525508675086;  // std dev = 0.407, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.3692075405727293;  // std dev = 0.198, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(A, K), interaction(I, I) )
%   | | | then return -0.13828410786783513;  // std dev = 0.921, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.11266318473788042;  // std dev = 5.156, 120.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=44 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.21021028475592407;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.013266970860006177;  // std dev = 2.775, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), complex(A, D) )
%   | then return 0.18602297017994165;  // std dev = 0.157, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2927173373475838;  // std dev = 0.065, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.22002334666223877;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.41447342763977757;  // std dev = 0.598, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.15196656184902751;  // std dev = 0.463, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( location(A, G), interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5650563367948904;  // std dev = 0.874, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.11548527194887558;  // std dev = 2.596, 52.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=8 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.0706407571225575;  // std dev = 4.663, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   | | | else return 0.23020145148790613;  // std dev = 1.762, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( complex(A, E), recursion_proteinclass(C, B) )
%   | then return 0.16806523699262058;  // std dev = 0.049, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then return -0.030237243285382468;  // std dev = 0.292, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | else if ( complex(A, D), location(C, G) )
%   | | | then return -0.0743548523393023;  // std dev = 0.460, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.036995024268126675;  // std dev = 5.263, 156.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=54 */
%   else if ( complex(A, H) )
%   | then return -0.0018365910225603566;  // std dev = 0.242, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6927190920589008;  // std dev = 0.199, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.28604437083168754;  // std dev = 0.103, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.0052630874659910015;  // std dev = 1.356, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.23939461880450807;  // std dev = 1.416, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( enzyme(A, D) )
%   | then return -0.09678450296321156;  // std dev = 0.279, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | else return -0.032799278568781176;  // std dev = 0.269, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   else if ( phenotype(A, E), location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(G, E) )
%   | | | then return 0.4365187048564933;  // std dev = 2.178, 48.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=42 */
%   | | | else return -0.23702430275026243;  // std dev = 0.376, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.233208588402153;  // std dev = 0.086, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H) )
%   | | | then return -0.002614458383396863;  // std dev = 3.257, 72.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | | | else return -0.2212517131889117;  // std dev = 0.855, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.10754276498077397;  // std dev = 1.255, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.04831812937329635;  // std dev = 1.822, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.343', 'seconds']
Refined model CLL: -0.242261


******************************************
Best model found
******************************************
Results 

CLL : -0.230987 

AUC ROC : 0.945203 

AUC PR : 0.43494 

Precision : 0.332589 

Recall : 0.562264 

F1 : 0.417952 

Total Learning Time : 10.493 

Total Inference Time : 7.850811004638672 

Total revision time: 21.58927858543396
Best scored revision CLL: -0.242261


Results 

CLL : -0.230987 

AUC ROC : 0.945203 

AUC PR : 0.43494 

Precision : 0.332589 

Recall : 0.562264 

F1 : 0.417952 

Total Learning Time : 21.618964797973632 

Total Inference Time : 7.850811004638672 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.173
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2161255887960106;  // std dev = 7.685, 257.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1386956188541613;  // std dev = 5.124, 123.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=38 */
%   | | | else return 0.18736842346300212;  // std dev = 5.890, 151.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14643868751621614;  // std dev = 5.388, 129.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
%   | | | else return 0.1440556629724044;  // std dev = 5.629, 141.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.13856404486064164;  // std dev = 3.941, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
%   | | | else return 0.1429189168081811;  // std dev = 6.579, 187.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06740143861357628;  // std dev = 7.959, 295.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07429734297145991;  // std dev = 7.843, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7299193823643534;  // std dev = 0.035, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2694277642435752;  // std dev = 0.052, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.08429134107813532;  // std dev = 3.017, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.09425250092807926;  // std dev = 4.630, 92.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06325698347270704;  // std dev = 4.169, 122.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=44 */
%   | | | else return 0.026797841874445852;  // std dev = 5.723, 151.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.013197211211780496;  // std dev = 7.181, 296.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03265712592723258;  // std dev = 7.043, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.359', 'seconds']
Parameter learned model CLL:-0.327041 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.685, 165, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.124, 85, 38], 'false,false,false,false': [5.89, 97, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.388, 85, 44], 'false,false,false,false': [5.629, 93, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.941, 44, 24], 'false,false,false,false': [6.579, 119, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.959, 203, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.843, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.035, 0, 44], 'true,false': [0.052, 102, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.017, 26, 14], 'false,false,false,false': [4.63, 58, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.169, 78, 44], 'false,false,false,false': [5.723, 103, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.181, 204, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.043, 183, 92]}]
{'': [nan, 0.229829369104757], 'false': [nan, 0.22982936910475638], 'false,false': [nan, 0.229829369104757], 'false,false,false': [nan, 0.22982936910475638]}
{'': [nan, 0.22302733230326718], 'false': [nan, 0.2230273323032663], 'false,false': [nan, 0.22302733230326718], 'false,false,false': [0.213497256923789, 0.22972676636989636]}
{'': [nan, 0.2248718369316237], 'false': [nan, 0.2248718369316237], 'false,false': [nan, 0.22487183693162413], 'false,false,false': [0.22505761683327413, 0.22469915487813383]}
{'': [nan, 0.23062421892004184], 'false': [nan, 0.23062421892004184], 'false,false': [nan, 0.23062421892004017], 'false,false,false': [0.22837370242214552, 0.23143753124639174]}
{'': [nan, 0.21475312448605413], 'false': [nan, 0.21475312448605413], 'false,false': [nan, 0.21475312448605463], 'false,false,false': [nan, 0.21475312448605463]}
{'': [nan, 0.22125849277839432], 'false': [nan, 0.22125849277839432], 'false,false': [nan, 0.22125849277839355], 'false,false,false': [nan, 0.22125849277839388]}
{'': [0.2102976645176217, 0.23134506722132067], 'false': [nan, 0.23134506722132067], 'false,false': [nan, 0.23134506722132067], 'false,false,false': [0.22750000000000012, 0.23298676748582342], 'true': [2.7149188201650272e-05, 2.6101910788673836e-05], 'true,true': [nan, 2.7149188201650272e-05], 'true,true,false': [nan, 2.7149188201650272e-05]}
{'': [nan, 0.18396457403262811], 'false': [nan, 0.18396457403262811], 'false,false': [nan, 0.18396457403262817], 'false,false,false': [0.14244659321579708, 0.21691487060142062]}
{'': [nan, 0.17420552034462292], 'false': [nan, 0.17420552034462425], 'false,false': [nan, 0.17420552034462425], 'false,false,false': [nan, 0.17420552034462425]}
{'': [nan, 0.18040072719755418], 'false': [nan, 0.18040072719755418], 'false,false': [nan, 0.18040072719755448], 'false,false,false': [nan, 0.18040072719755448]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 8.598
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8181489350995119;  // std dev = 0.196, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(H, F), phenotype(H, G) )
%   | | then if ( interaction(I, H), interaction(I, F) )
%   | | | then return 0.17814893509951235;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.4945125714631487;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( location(A, J), location(F, J) )
%   | | | then return 0.11901850031690367;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.1914822684328457;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( complex(K, L), complex(A, L) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.24703782398840118;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else return 0.14643722338780069;  // std dev = 0.453, 111.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=32 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7428431968413554;  // std dev = 0.100, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, D) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(E, C) )
%   | | | then return 0.32787432341633754;  // std dev = 1.538, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.03937198866739127;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.729069561572994;  // std dev = 0.298, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, G), location(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.15696554588720568;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.0949281563840397;  // std dev = 4.517, 114.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=30 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.14057204087838268;  // std dev = 4.350, 93.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
%   | | | else return 0.23954111559113367;  // std dev = 2.493, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then return 0.5594691394809529;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7641953059364146;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1462714461235559;  // std dev = 0.043, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( complex(F, G) )
%   | | | then return 0.13787125214768356;  // std dev = 2.432, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0.02652078875195053;  // std dev = 1.938, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.718399485554069;  // std dev = 0.250, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1490039366277871;  // std dev = 0.055, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.08240681039590757;  // std dev = 3.086, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return 0.1761587980958834;  // std dev = 4.772, 100.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=37 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then return 0.41358145556015086;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6214119640511905;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( enzyme(F, G) )
%   | | then return -0.119598570733305;  // std dev = 0.036, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.12726762227931712;  // std dev = 0.973, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.05904857464953167;  // std dev = 0.924, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( complex(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.589269172441239;  // std dev = 0.394, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.13882046479679788;  // std dev = 0.134, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.3387030622263786;  // std dev = 1.795, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.15360716471174723;  // std dev = 5.503, 134.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=50 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.34577548515681517;  // std dev = 0.103, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5695179516367338;  // std dev = 0.316, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(A, G) )
%   | | | then return 0.6562305960116767;  // std dev = 0.830, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0.2581655263513931;  // std dev = 3.760, 70.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=36 */
%   | | else if ( complex(A, H), enzyme(A, I) )
%   | | | then return -0.11829999558461586;  // std dev = 0.134, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.23615937623534825;  // std dev = 0.411, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else return -0.0779950197766378;  // std dev = 0.370, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.36434503039048144;  // std dev = 0.095, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(D, A) )
%   | | then return -0.14855119803771116;  // std dev = 0.115, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( phenotype(D, C), interaction(D, D) )
%   | | | then return -0.09216491351050729;  // std dev = 0.530, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.01438279023376017;  // std dev = 2.389, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.3630085283398501;  // std dev = 0.128, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( phenotype(G, I), interaction(G, J) )
%   | | | then return 0.07980433475616974;  // std dev = 1.673, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.05784065182730589;  // std dev = 1.033, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.04197165132821565;  // std dev = 3.026, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return 0.11074334542798922;  // std dev = 3.595, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.2995836331757838;  // std dev = 0.091, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return 0.5559264973595206;  // std dev = 0.169, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.17351780235130285;  // std dev = 0.092, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(F, A), phenotype(A, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.449983108591047;  // std dev = 0.170, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.19800410963568074;  // std dev = 0.062, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(I, A) )
%   | | then if ( complex(I, J), interaction(I, I) )
%   | | | then return 0.1781508158274935;  // std dev = 1.045, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.03565959000001329;  // std dev = 3.441, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.14294472123077284;  // std dev = 1.353, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.07346172896952542;  // std dev = 2.240, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.1740396611939182;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, D) )
%   | | then return 0.010192870926772266;  // std dev = 0.224, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( location(A, E), location(C, E) )
%   | | | then return -0.14095570034027857;  // std dev = 0.832, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.0035518538029873617;  // std dev = 1.446, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.22330580359567737;  // std dev = 0.095, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, G), enzyme(A, H) )
%   | | then if ( interaction(I, A), enzyme(I, H) )
%   | | | then return -0.093508752527104;  // std dev = 0.065, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.018253213428420192;  // std dev = 1.614, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.02709005199663448;  // std dev = 2.418, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return 0.06563314257438065;  // std dev = 3.897, 95.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), enzyme(A, F) )
%   | then return 0.021359635092482752;  // std dev = 0.257, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | else if ( complex(A, D), recursion_proteinclass(C, B) )
%   | | then return 0.17373430040196494;  // std dev = 0.131, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, D), interaction(C, C) )
%   | | | then return -0.17434488456382013;  // std dev = 0.385, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06400448749434223;  // std dev = 2.482, 69.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=15 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22156332826071376;  // std dev = 0.212, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.02163415688196201;  // std dev = 1.559, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return -0.03980116882013793;  // std dev = 1.369, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.08557988308077027;  // std dev = 3.434, 66.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=26 */
%   | | | else return -0.007073514915967326;  // std dev = 1.756, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B), complex(D, C) )
%   | then return 0.14018995483408023;  // std dev = 0.039, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.04316697312708271;  // std dev = 0.234, 68.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( phenotype(E, G) )
%   | | then if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4463548426042651;  // std dev = 0.350, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2247606159866248;  // std dev = 0.284, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.14579394748666744;  // std dev = 0.581, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.04907792593015467;  // std dev = 0.940, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.04054338923915513;  // std dev = 1.139, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(A, K), enzyme(A, L) )
%   | | | then return 0.1338854463312574;  // std dev = 1.463, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.038995441084091434;  // std dev = 4.217, 133.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=47 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.378', 'seconds']
Refined model CLL: -0.236362


******************************************
Best model found
******************************************
Results 

CLL : -0.242067 

AUC ROC : 0.981797 

AUC PR : 0.310066 

Precision : 0.253968 

Recall : 0.577617 

F1 : 0.352811 

Total Learning Time : 8.598 

Total Inference Time : 5.6857218742370605 

Total revision time: 17.34855184173584
Best scored revision CLL: -0.236362


Results 

CLL : -0.242067 

AUC ROC : 0.981797 

AUC PR : 0.310066 

Precision : 0.253968 

Recall : 0.577617 

F1 : 0.352811 

Total Learning Time : 17.378238054275513 

Total Inference Time : 5.6857218742370605 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.053
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2120584001200888;  // std dev = 7.454, 243.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.14850812165740548;  // std dev = 4.369, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | | | else return 0.13720461035389414;  // std dev = 6.340, 189.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16845980729260682;  // std dev = 4.237, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | | else return 0.1568529936101804;  // std dev = 6.153, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.17221372658320713;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.11712892440924977;  // std dev = 7.165, 231.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=77 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09394919053178889;  // std dev = 7.580, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10446664980097418;  // std dev = 7.419, 239.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7201453066686713;  // std dev = 0.033, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2818754444140386;  // std dev = 0.049, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.06381397405782688;  // std dev = 3.543, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.057287033818687924;  // std dev = 5.110, 118.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.038286745072778475;  // std dev = 3.383, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
%   | | | else return 0.07213353790459681;  // std dev = 6.102, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05390839896910402;  // std dev = 6.960, 237.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02127629897785793;  // std dev = 7.062, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.480', 'seconds']
Parameter learned model CLL:-0.355147 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.454, 157, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.369, 60, 28], 'false,false,false,false': [6.34, 131, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.237, 50, 28], 'false,false,false,false': [6.153, 109, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.341, 14, 9], 'false,false,false,false': [7.165, 154, 77]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.58, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.419, 153, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.033, 0, 28], 'true,false': [0.049, 53, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.543, 37, 19], 'false,false,false,false': [5.11, 79, 39]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.383, 54, 28], 'false,false,false,false': [6.102, 104, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.96, 151, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.062, 169, 86]}]
{'': [nan, 0.22865755558942658], 'false': [nan, 0.2286575555894263], 'false,false': [nan, 0.22865755558942658], 'false,false,false': [nan, 0.2286575555894263]}
{'': [nan, 0.21407811909447627], 'false': [nan, 0.21407811909447627], 'false,false': [nan, 0.21407811909447627], 'false,false,false': [0.21694214876033147, 0.21270401164581149]}
{'': [nan, 0.22781692207071733], 'false': [nan, 0.22781692207071733], 'false,false': [nan, 0.2278169220707168], 'false,false,false': [0.23015950530667767, 0.22667989154595586]}
{'': [nan, 0.22394899777020422], 'false': [nan, 0.22394899777020422], 'false,false': [nan, 0.22394899777020472], 'false,false,false': [0.23818525519848793, 0.2222567722522826]}
{'': [nan, 0.2218396748568645], 'false': [nan, 0.2218396748568645], 'false,false': [nan, 0.22183967485686445], 'false,false,false': [nan, 0.22183967485686445]}
{'': [nan, 0.23026914182435212], 'false': [nan, 0.23026914182435212], 'false,false': [nan, 0.2302691418243529], 'false,false,false': [nan, 0.2302691418243526]}
{'': [0.22714320444429226, 0.22221470561392181], 'true': [3.9442439116640517e-05, 4.506402891919545e-05], 'false': [nan, 0.22221470561392181], 'false,false': [nan, 0.22221470561392181], 'false,false,false': [0.22417091836734745, 0.2212726228095387], 'true,true': [nan, 3.9442439116640517e-05], 'true,true,false': [nan, 3.9442439116640517e-05]}
{'': [nan, 0.19974694810520682], 'false': [nan, 0.19974694810520682], 'false,false': [nan, 0.19974694810520588], 'false,false,false': [0.139588461016951, 0.22981254180403868]}
{'': [nan, 0.20437777590074152], 'false': [nan, 0.20437777590074188], 'false,false': [nan, 0.20437777590074188], 'false,false,false': [nan, 0.20437777590074188]}
{'': [nan, 0.19558751557187334], 'false': [nan, 0.19558751557187334], 'false,false': [nan, 0.19558751557187387], 'false,false,false': [nan, 0.19558751557187387]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 12.896
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(C, D), interaction(A, F) )
%   | | | then return -0.10959300038435867;  // std dev = 1.391, 62.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=2 */
%   | | | else return 0.14661047356105067;  // std dev = 4.620, 104.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=30 */
%   else if ( interaction(G, A), phenotype(A, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.7812258581764353;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.0803711573217346;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.24703782398840118;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, C) )
%   | then return 0.7208607154994788;  // std dev = 0.015, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4725270151813329;  // std dev = 0.432, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( complex(A, F), interaction(E, E) )
%   | | then return -0.08603390708658741;  // std dev = 0.220, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5315941189336068;  // std dev = 0.806, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07758419787183067;  // std dev = 2.996, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | else if ( interaction(H, A), location(A, I) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.7978743930783823;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.12506508855381548;  // std dev = 5.225, 144.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=42 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.18141435609293344;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.5753411503953212;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.6245996488346798;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(C, A) )
%   | | | then return -0.13991440389606977;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.16443270809599148;  // std dev = 2.000, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.785635854656866;  // std dev = 0.123, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1541816450670144;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5196763177391062;  // std dev = 0.248, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return -0.040076745319802425;  // std dev = 0.332, 48.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=7 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.037585225811789275;  // std dev = 2.267, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.12601604267951574;  // std dev = 5.105, 134.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=42 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then return 0.4812872943925002;  // std dev = 0.136, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4216398632118515;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5877149884683109;  // std dev = 0.257, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), interaction(A, H) )
%   | | then return 0.11935956888890191;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5166058967376947;  // std dev = 0.161, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( enzyme(J, K), location(A, L) )
%   | | | then return -0.027047451153197122;  // std dev = 2.814, 78.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=12 */
%   | | | else return 0.06486282378032587;  // std dev = 3.112, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | else if ( enzyme(A, M), complex(A, N) )
%   | | | then return 0.2943506650464267;  // std dev = 1.232, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.10675187600376429;  // std dev = 4.591, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.4206979177158602;  // std dev = 1.197, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.6424648482994574;  // std dev = 1.832, 53.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=50 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.18214827810013604;  // std dev = 0.259, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0.44909609139377843;  // std dev = 1.775, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then return -0.1474955669410743;  // std dev = 0.197, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return -0.1694039183647643;  // std dev = 0.212, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.21040044480885461;  // std dev = 0.223, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( interaction(A, M) )
%   | then return 0.11922831515008347;  // std dev = 1.076, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return -0.1552771491112306;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), enzyme(E, C) )
%   | | then return 0.2590629596109722;  // std dev = 0.624, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, F), interaction(G, A) )
%   | | | then return 0.5283226627257299;  // std dev = 0.601, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.6148284590994009;  // std dev = 0.155, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.15644275707536623;  // std dev = 0.035, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.260222036816758;  // std dev = 0.044, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( interaction(K, A), complex(A, L) )
%   | | | then return -0.07999097231951004;  // std dev = 0.936, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.003624102783539216;  // std dev = 2.769, 78.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=16 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.02277788933200844;  // std dev = 2.376, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.09828999165006605;  // std dev = 2.551, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4252165751520178;  // std dev = 0.302, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.17695295201302372;  // std dev = 0.072, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( interaction(E, A), location(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(G, H) )
%   | | | then return -0.006467751827954893;  // std dev = 0.626, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2990148236728284;  // std dev = 0.836, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( interaction(A, I), location(I, F) )
%   | | | then return -0.01042759201836553;  // std dev = 2.028, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | | else return 0.12233206744496762;  // std dev = 2.682, 62.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=26 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.02260924813083384;  // std dev = 0.232, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.0540005529180449;  // std dev = 2.019, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return -0.10963200615870305;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then return 0.13816360231225552;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2123437266953355;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return -0.08633821922356527;  // std dev = 0.038, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.395713084842222;  // std dev = 0.156, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11350191654015258;  // std dev = 0.060, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.3984324563470323;  // std dev = 0.553, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.13785379257598038;  // std dev = 0.203, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.0047200263027821565;  // std dev = 2.777, 72.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=16 */
%   | | | else return 0.07355677403492503;  // std dev = 3.303, 84.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=32 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.14748839142544906;  // std dev = 0.045, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(E, F) )
%   | | | then return 0.24104187101812258;  // std dev = 1.102, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return 0.45444320333254395;  // std dev = 1.195, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return -0.11578963626617483;  // std dev = 0.225, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.17626141160818157;  // std dev = 0.252, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4813606507240216;  // std dev = 0.139, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.18072124925735883;  // std dev = 0.581, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.12583523701095237;  // std dev = 0.967, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.014166319787607944;  // std dev = 2.637, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), interaction(C, E) )
%   | then return -0.03066660306050308;  // std dev = 0.229, 82.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=23 */
%   | else if ( complex(A, F), location(A, G) )
%   | | then if ( interaction(H, C), phenotype(H, D) )
%   | | | then return -0.015242990894509522;  // std dev = 0.560, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.26913442868811577;  // std dev = 0.502, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, C), recursion_proteinclass(I, B) )
%   | | | then return 0.13770128698542664;  // std dev = 0.700, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.008476203013983575;  // std dev = 2.580, 88.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=26 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.13222961668741942;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.07381329567400619;  // std dev = 0.039, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.01623274593773677;  // std dev = 2.187, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return 0.09263118095524318;  // std dev = 1.310, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '7.890', 'seconds']
Refined model CLL: -0.176383


******************************************
Best model found
******************************************
Results 

CLL : -0.198663 

AUC ROC : 0.986006 

AUC PR : 0.385361 

Precision : 0.314103 

Recall : 0.69258 

F1 : 0.432194 

Total Learning Time : 12.896 

Total Inference Time : 7.3973000049591064 

Total revision time: 23.02265655899048
Best scored revision CLL: -0.176383


Results 

CLL : -0.198663 

AUC ROC : 0.986006 

AUC PR : 0.385361 

Precision : 0.314103 

Recall : 0.69258 

F1 : 0.432194 

Total Learning Time : 23.052342771530153 

Total Inference Time : 7.3973000049591064 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.266
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1724346493852252;  // std dev = 4.757, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
%   | | | else return 0.17119241336038063;  // std dev = 4.973, 115.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.28881117365523334;  // std dev = 0.609, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.743818012605292;  // std dev = 2.521, 76.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=69 */
%   | | | else return -0.16408857407288882;  // std dev = 0.000976, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.11933203853157144;  // std dev = 1.461, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.11496227290862866;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462843;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06869982236637086;  // std dev = 4.344, 128.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6552869115966489;  // std dev = 1.376, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.14271801264121695;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.44463356325371556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.05036464115493142;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.16017434415752188;  // std dev = 1.231, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.27465644130116706;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6834690863553032;  // std dev = 0.131, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.042934640875642444;  // std dev = 5.008, 219.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5155458149004657;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return -0.0037077209633005043;  // std dev = 1.561, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.0644013062073699;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.34348662832715593;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3286830205686019;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.06179255811245582;  // std dev = 5.285, 239.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.38856634973770154;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.8214000840745167;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.05107944199845005;  // std dev = 1.244, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25851329923025257;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.36429777924126255;  // std dev = 0.236, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27865725403563013;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.30113290920776614;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.02540533437872389;  // std dev = 2.144, 55.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.017651410665602996;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.07267378617058037;  // std dev = 2.850, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0.07966318213997622;  // std dev = 4.028, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25156584898795387;  // std dev = 0.242, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24176232704128486;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5586816392367235;  // std dev = 0.393, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.21037199530397568;  // std dev = 0.764, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.1330156678541764;  // std dev = 1.075, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04417367086571301;  // std dev = 3.950, 136.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17436992733714188;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.21630403700646325;  // std dev = 0.155, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.38709157458734206;  // std dev = 2.607, 80.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=71 */
%   | | else return -0.15064722788205467;  // std dev = 0.263, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.20023854960910925;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.0405550684207276;  // std dev = 1.331, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16457493614174162;  // std dev = 0.123, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18638036991844864;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.04398060264881059;  // std dev = 1.425, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.4111759445198169;  // std dev = 0.809, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.007218546854769143;  // std dev = 1.712, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.24391228557694358;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.09066304318898133;  // std dev = 3.051, 100.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=40 */
%   | | | else return -0.0640735051369416;  // std dev = 1.414, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.009875690014243557;  // std dev = 0.890, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.24627486535431087;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16006766898368888;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.012125921665059708;  // std dev = 2.277, 103.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20180273737815088;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.008583915090103889;  // std dev = 3.448, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
%   | | | else return 0.03581886948033337;  // std dev = 1.321, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.971', 'seconds']
Parameter learned model CLL:-0.199528 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.757, 72, 33], 'false,false,true,false': [4.973, 79, 36], 'false,false,false,true': [1.225, 6, 2], 'false,false,false,false': [0.816, 1, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 9], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 2, 0], 'false,true,false,false': [0.609, 1, 1], 'false,false,true,true': [2.521, 7, 69], 'false,false,true,false': [0.000976, 133, 0], 'false,false,false,true': [1.461, 7, 3], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.344, 94, 34], 'false,true,false,true': [1.376, 2, 37], 'false,true,false,false': [0.0, 71, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [1.247, 7, 2], 'false,false,false,true': [1.231, 4, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [1.49e-08, 0, 5], 'true,false': [0.926, 1, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.131, 0, 14], 'false,true,false': [5.008, 162, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.561, 11, 3], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.038, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.028, 0, 4], 'false,true': [5.285, 168, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [1.244, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.023, 0, 4], 'true,true,false': [0.236, 0, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [2.144, 43, 12], 'false,false,true': [0.85, 1, 3], 'false,false,false,true': [2.85, 42, 20], 'false,false,false,false': [4.028, 83, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.242, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.393, 0, 33], 'true,false': [0.764, 76, 0], 'false,true': [1.075, 2, 3], 'false,false,true': [3.95, 96, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.017, 0, 3], 'true,false': [0.155, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.607, 9, 71], 'false,true,false': [0.263, 158, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.331, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.123, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.078, 0, 3], 'false,true,true': [1.425, 35, 11], 'false,true,false,true': [0.809, 4, 1], 'false,true,false,false': [1.712, 46, 17], 'false,false,true': [0.022, 0, 3], 'false,false,false,true': [3.051, 60, 40], 'false,false,false,false': [1.414, 12, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.89, 1, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.069, 0, 3], 'false,true': [2.277, 74, 29], 'false,false,true': [0.019, 0, 3], 'false,false,false,true': [3.448, 87, 40], 'false,false,false,false': [1.321, 7, 4]}]
{'': [-1.6148698540002277e-16, 0.21930016801811683], 'false': [1.4802973661668753e-16, 0.2161503719945292], 'false,false': [0.2152685950413225, 0.2314049586776858], 'false,false,false': [0.18750000000000003, 0.22222222222222224], 'false,false,true': [0.21551020408163402, 0.2150472589792073], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [2.4223047810003414e-16, 0.22041866026359333], 'false': [0.18546996371782487, 0.2209484273507484], 'false,false': [0.2211547349438199, 0.21548638119120894], 'false,false,true': [0.08362454574419527, 7.165144454365633e-09], 'false,false,false': [0.21346122237768966, 0.2222222222222222], 'false,true': [0.0, 0.13910247278836865], 'false,true,false': [0.0, 0.18546996371782487], 'true': [0.0, -9.868649107779169e-17]}
{'': [-8.074349270001139e-17, 0.15889269084423457], 'false': [0.15588973530911335, 0.19977181853596146], 'false,false': [0.17760764556865616, 0.21650579085745075], 'false,false,false': [0.21650579085745075, nan], 'false,false,true': [0.0, 0.1728395061728395], 'false,true': [0.1474546042619358, 0.16295485497989448], 'false,true,false': [0.048583148575057834, -3.752866562113205e-17], 'true': [1.1102230246251565e-16, 0.0]}
{'': [0.07638888888888899, 0.1350034120363056], 'false': [0.1308750670935196, 0.18656856596423754], 'false,false': [0.0, 0.18324948577986888], 'false,false,false': [0.1740795663638617, 0.22222222222222224], 'false,true': [0.001226948015567521, 0.11451079461206158], 'true': [4.4408920985006264e-17, 0.12244897959183679], 'false,true,true': [nan, 0.0012269480155674575], 'false,false,true': [nan, 0.0]}
{'': [0.0002520579392037375, 0.12291279983831709], 'false': [0.11686614668710461, 0.23878511967127125], 'false,false': [0.0, 0.2539121585875292], 'false,false,false': [0.0, 0.1719333511878169], 'true': [0.00020747626288199404, 0.00019061881652282509], 'true,true': [0.00020747626288199404, nan], 'false,false,true': [nan, 0.0]}
{'': [0.007514507552005293, 0.12297307918937396], 'false': [0.08360239845937456, 0.13205791377187212], 'false,false': [0.18070015110907864, 0.13093685598583335], 'false,false,false': [0.13102588172549365, 0.13087605923066561], 'true': [0.009019957910231049, 0.00012628876885419082], 'true,true': [0.0001365591621564216, 0.01115318525926865], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}
{'': [0.12438637707044942, 0.11995886218629419], 'true': [0.022633895312564958, 0.007685913762030504], 'false': [0.23130416066239085, 0.11475194951317556], 'false,false': [0.11475194951317556, nan], 'true,true': [0.005342388309986235, 0.004680649962209014], 'true,true,true': [0.005867889955297701, 0.0], 'true,true,false': [nan, 0.004680649962208853]}
{'': [0.0025567272611908276, 0.09647336116740338], 'false': [0.09336210126074913, 0.16319392521838708], 'false,false': [0.0, 0.17719524372527667], 'false,false,false': [0.17719524372527667, nan], 'false,true': [0.08492438781693587, 0.0004367075579399899], 'false,true,true': [nan, 0.08492438781693583], 'true': [9.677532452522415e-05, 0.002999626631869888], 'false,false,true': [0.0, nan]}
{'': [0.0020182062992992844, 0.08090058423123256], 'false': [0.05588985205826637, 0.09855850321082892], 'false,false': [0.000157800960936492, 0.1003348840497108], 'false,false,false': [0.09310518339193949, 0.12487965161955676], 'false,true': [0.04411868560494003, 0.06383259157743547], 'false,true,false': [0.13084764214027161, 0.046515291246720186], 'true': [0.0018838721140470374, 0.002030629380803247], 'true,false': [nan, 0.002030629380803247]}
{'': [0.07339053304758598, 0.07778261897893185], 'false': [0.05033584040060958, 0.09752589886465286], 'false,false': [0.00012084897780563486, 0.09886681893245454], 'false,false,false': [0.09362624022396406, 0.15868906388392576], 'true': [0.09348003670801058, 0.001603892761593409], 'true,true': [0.09348003670801058, nan], 'true,true,true': [0.09895564461857148, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 8.861
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.14847151574467365;  // std dev = 3.574, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.2914822684328457;  // std dev = 2.714, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.1624967611864679;  // std dev = 5.405, 138.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6765140820529879;  // std dev = 3.302, 82.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=69 */
%   | | | else return -0.16234735795364671;  // std dev = 0.170, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.2500347859163001;  // std dev = 1.317, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.0038615830026757225;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.47203310341295107;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.06503095113576608;  // std dev = 3.019, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | | else return 0.13582057249299967;  // std dev = 3.043, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.688393447402578;  // std dev = 1.019, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.14302697244779816;  // std dev = 0.035, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11209817811320862;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.016342533124587902;  // std dev = 0.622, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.31842784355126913;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4379083062503245;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.4379083062503244;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.18790830625032443;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6819157123767946;  // std dev = 0.036, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( location(A, H) )
%   | | | then return 0.05812026860346109;  // std dev = 4.869, 201.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=55 */
%   | | | else return 0.007429904302007548;  // std dev = 0.887, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5513273357627784;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.11775310221472478;  // std dev = 1.383, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.055585576556982375;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.35107421329646965;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3490118424583965;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.46371466154428614;  // std dev = 2.413, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | | else return -0.1503527396410985;  // std dev = 0.248, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.003335270645398891;  // std dev = 1.604, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.031224827547719537;  // std dev = 2.655, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4145245099990642;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.06998386296339082;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.05208931406935283;  // std dev = 1.263, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.300074073756809;  // std dev = 0.072, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, D) )
%   | | | then return 0.3797337327446324;  // std dev = 1.940, 40.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=36 */
%   | | | else return 0.15299523677621357;  // std dev = 1.246, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( phenotype(D, H) )
%   | | | then return -0.14606848296494193;  // std dev = 0.580, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | | else return -0.20453187146141286;  // std dev = 0.559, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.04304501950229127;  // std dev = 0.914, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.023788582527492188;  // std dev = 1.610, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.09623640620747448;  // std dev = 2.831, 75.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
%   | | | else return -0.02277804152441739;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2423789558871773;  // std dev = 0.066, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A), phenotype(E, F) )
%   | | | then return 0.2998653137177027;  // std dev = 1.507, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | | else return 0.6272539238844749;  // std dev = 0.336, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.16285205694119645;  // std dev = 0.122, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( interaction(G, A), phenotype(G, H) )
%   | then if ( interaction(I, G), complex(I, J) )
%   | | then return -8.832458541942794E-4;  // std dev = 0.265, 87.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=23 */
%   | | else return 0.09107756226692093;  // std dev = 0.267, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.4272373723106579;  // std dev = 1.430, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return -0.14974018609261108;  // std dev = 0.080, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0.1045225494854385;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1834203363127543;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return -0.1529303027150379;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20563308699562585;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( location(A, I) )
%   | | | then return 0.20957062339864224;  // std dev = 3.342, 87.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=68 */
%   | | | else return 0.34389843411117976;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.11832034472083308;  // std dev = 0.017, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.21378326859913555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.07606333537012691;  // std dev = 1.160, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.0790444447245276;  // std dev = 0.782, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18317936689414466;  // std dev = 0.060, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.17435989897260215;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then if ( location(A, I), location(G, I) )
%   | | | then return -0.07174463212260856;  // std dev = 1.497, 55.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=10 */
%   | | | else return 0.007736311469580307;  // std dev = 0.939, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( location(A, J) )
%   | | | then return 0.03078606252244922;  // std dev = 1.112, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.1652260320651368;  // std dev = 0.337, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.1940651248670714;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.006351813922706947;  // std dev = 2.195, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return 0.045897611518431726;  // std dev = 2.391, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15791245007927981;  // std dev = 0.055, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.15071500858180584;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, I), complex(I, J) )
%   | | | then return -0.017599223010089107;  // std dev = 1.168, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return -0.05380748566098196;  // std dev = 1.494, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( location(A, K) )
%   | | | then return 0.006571349592833107;  // std dev = 0.812, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.06337461243428258;  // std dev = 0.354, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.16577109987344754;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.04169293577006255;  // std dev = 2.062, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   | | | else return 0.07839282416258293;  // std dev = 2.135, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '22.170', 'seconds']
Refined model CLL: -0.177184


******************************************
Best model found
******************************************
Results 

CLL : -0.17668 

AUC ROC : 0.984299 

AUC PR : 0.266223 

Precision : 0.15627 

Recall : 0.861702 

F1 : 0.264562 

Total Learning Time : 8.861 

Total Inference Time : 20.606827974319458 

Total revision time: 38.111769344329836
Best scored revision CLL: -0.177184


Results 

CLL : -0.17668 

AUC ROC : 0.984299 

AUC PR : 0.266223 

Precision : 0.15627 

Recall : 0.861702 

F1 : 0.264562 

Total Learning Time : 38.13619008255005 

Total Inference Time : 20.606827974319458 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.249
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.0894922186816008;  // std dev = 4.881, 134.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=31 */
%   | | | else return 0.16849376268571836;  // std dev = 5.571, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7473839334745775;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6047470930533698;  // std dev = 1.303, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6494777532936485;  // std dev = 3.809, 94.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=76 */
%   | | | else return -0.1583348113095818;  // std dev = 0.075, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.11891977694583408;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.08320549123154837;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5087343401683214;  // std dev = 0.968, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.4699884324552491;  // std dev = 0.921, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08439715772143266;  // std dev = 4.411, 127.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6234268987151086;  // std dev = 2.125, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.14309221248846826;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8213194034071188;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0848334188096646;  // std dev = 1.639, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.38689718137745754;  // std dev = 0.930, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.35686805569583396;  // std dev = 0.925, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4455203487357789;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5492764759550959;  // std dev = 1.681, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else return 0.022786046809977395;  // std dev = 5.224, 263.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5343319500182715;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return -0.04321498612879912;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.15274624934413478;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.38143684556172613;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.38910736925945544;  // std dev = 0.063, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.05900503988129881;  // std dev = 5.824, 290.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4020843696831128;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1367442575534839;  // std dev = 1.576, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2882292534815155;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.14551137289379676;  // std dev = 1.394, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3170728469499688;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.03594238383715822;  // std dev = 2.685, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2968802280124325;  // std dev = 0.046, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.01459908233200798;  // std dev = 2.318, 58.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | | else return 0.07912228042716302;  // std dev = 4.618, 164.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2985731054700054;  // std dev = 0.316, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.24676423134445546;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2567533427103744;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5481647080312686;  // std dev = 0.935, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.20139847293565985;  // std dev = 1.079, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22818752022259936;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06137895447190397;  // std dev = 4.426, 161.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17849954314785754;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.07696805002799798;  // std dev = 1.282, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3650046749064808;  // std dev = 3.376, 97.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=82 */
%   | | else return -0.14842948974613945;  // std dev = 0.687, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.20380034492189558;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.0476147903331435;  // std dev = 1.343, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.11183562626268614;  // std dev = 0.850, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.13525750352810184;  // std dev = 0.705, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2230372516524363;  // std dev = 0.118, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.043179969272487614;  // std dev = 1.769, 63.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2604294911768683;  // std dev = 0.164, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.027516398706676666;  // std dev = 1.301, 59.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17891768787339088;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03790004881723688;  // std dev = 3.883, 154.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=47 */
%   | | | else return -0.017332370186749328;  // std dev = 1.401, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1646711835287369;  // std dev = 0.076, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.19608079566510753;  // std dev = 0.119, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19843659886693163;  // std dev = 0.092, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.007318227235438219;  // std dev = 2.362, 117.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.012452653134476077;  // std dev = 0.912, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.04986490372175389;  // std dev = 3.812, 140.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | | | else return 0.05760234384209512;  // std dev = 1.327, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.636', 'seconds']
Parameter learned model CLL:-0.199256 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.309, 2, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.881, 103, 31], 'false,false,true,false': [5.571, 100, 45], 'false,false,false,true': [1.633, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.303, 2, 13], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [3.809, 18, 76], 'false,false,true,false': [0.075, 201, 0], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.968, 1, 11], 'true,false': [0.921, 1, 6], 'false,true,true': [4.411, 93, 34], 'false,true,false,true': [2.125, 5, 48], 'false,true,false,false': [0.0, 84, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.639, 9, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.93, 1, 10], 'true,false': [0.925, 1, 7], 'false,true,true,true': [0.109, 0, 3], 'false,true,true,false': [1.681, 4, 21], 'false,true,false': [5.224, 205, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.301, 11, 2], 'false,false,false,false': [1.081, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.053, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.063, 0, 10], 'false,true': [5.824, 208, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.576, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(J, A)'}, {'true,true,true': [0.033, 0, 5], 'true,true,false': [1.394, 3, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.01, 0, 2], 'false,true': [2.685, 52, 19], 'false,false,true': [0.046, 0, 8], 'false,false,false,true': [2.318, 47, 11], 'false,false,false,false': [4.618, 114, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.316, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [0.935, 1, 33], 'true,false': [1.079, 87, 0], 'false,true': [0.01, 0, 5], 'false,false,true': [4.426, 114, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.282, 2, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.376, 15, 82], 'false,true,false': [0.687, 196, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.343, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.85, 1, 9], 'true,false,true': [0.705, 1, 2], 'true,false,false': [0.118, 0, 5], 'false,true,true': [1.769, 50, 13], 'false,true,false,true': [0.164, 0, 8], 'false,true,false,false': [1.301, 48, 11], 'false,false,true': [0.008, 0, 5], 'false,false,false,true': [3.883, 107, 47], 'false,false,false,false': [1.401, 13, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.076, 0, 7], 'true,true,true,false': [0.119, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.092, 0, 3], 'false,true': [2.362, 85, 32], 'false,false,true': [0.912, 1, 5], 'false,false,false,true': [3.812, 93, 47], 'false,false,false,false': [1.327, 8, 4]}]
{'': [0.09418282548476423, 0.20671366154677767], 'false': [-2.5376526277146434e-16, 0.19933633282554636], 'false,false': [0.19819889261443238, 0.22222222222222207], 'false,false,false': [0.22222222222222207, nan], 'false,false,true': [0.1778235687235476, 0.21403091557669557], 'true': [0.1224489795918365, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.09278758830618321, 0.19520120819166575], 'false': [-6.344131569286608e-17, 0.19111065969846197], 'false,false': [0.19088461689961117, 0.19555555555555573], 'false,false,false': [0.20408163265306123, 0.1875], 'false,false,true': [0.15436715299429837, 2.7699854304645147e-05], 'true': [0.0, 0.1132477308203906], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 0.0]}
{'': [0.09428755670635978, 0.16751346526081418], 'false': [0.16430029357455758, 0.22782339910952237], 'false,false': [0.22782339910952237, nan], 'false,false,true': [0.0, 0.20660458985635233], 'false,true': [0.15317371108412953, 0.1723212513599491], 'false,true,false': [0.08518359396636346, -7.665825646221319e-17], 'true': [0.07803869007572835, 0.12119460167752627]}
{'': [0.09078681606325363, 0.12951684127862106], 'false': [0.12670886154902092, 0.17146196844869316], 'false,false': [0.0, 0.1665851342889627], 'false,false,false': [0.1301775147928995, 0.2335110296728924], 'false,true': [0.10233437808635497, 0.10374688265008991], 'false,true,true': [0.0039533966014621, 0.11298666722859017], 'true': [0.07866397353104405, 0.10693365968813509], 'false,false,true': [nan, 0.0]}
{'': [0.0004123154519003012, 0.12114962158814632], 'false': [0.11697925249946793, 0.2123595071878481], 'false,false': [0.0, 0.22579780234011756], 'false,false,false': [0.22579780234011756, nan], 'true': [0.0004082225134613347, 0.00039095353606732886], 'true,true': [0.0004082225134613347, nan], 'false,false,true': [nan, 0.0]}
{'': [0.10775868092227099, 0.11553093296793152], 'false': [0.10151592569948731, 0.1196838160225205], 'false,false': [0.00026786762035224676, 0.12194597989239807], 'false,false,false': [0.09261992636917295, 0.13002255013474462], 'true': [0.11866309848075032, 4.632169880552928e-05], 'true,true': [0.00021183148750814063, 0.16202708910848837], 'true,false': [nan, 4.632169880552928e-05]}
{'': [0.12262741810687534, 0.11880446871085262], 'true': [0.033916033055104364, 0.013388191335999878], 'false': [2.0087555469117113e-05, 0.12165531929772255], 'false,false': [0.12165531929772255, nan], 'true,true': [0.006402569908637065, 0.029954600206608246], 'true,true,false': [0.0, 0.025712200422378022], 'true,true,true': [0.006661647937661404, 0.0]}
{'': [0.0881878065358522, 0.10038725829511948], 'false': [0.09888857699340424, 0.1304300865630417], 'false,false': [0.0, 0.1387207467546573], 'false,false,false': [0.1387207467546573, nan], 'false,true': [0.11749858517577363, 0.0024067805619346965], 'false,true,true': [nan, 0.11749858517577358], 'true': [0.0, 0.10953431408327635], 'false,false,true': [0.0, nan]}
{'': [0.0820356684555772, 0.07492484119444197], 'true': [0.07226094415365245, 0.09395610993819115], 'true,false': [0.1656775763151613, 0.0027825557658033963], 'false': [0.04241260873812469, 0.09770262715278989], 'false,false': [1.3996209787531244e-05, 0.09994922542742553], 'false,false,false': [0.09793033767143675, 0.11549063124812137], 'false,true': [0.049682732433995416, 0.034362793850969235], 'false,true,false': [0.003359919368739764, 0.028666533381979834]}
{'': [0.0020307341440321744, 0.08338107651123754], 'false': [0.04767283589633797, 0.10851726413322813], 'false,false': [0.13875161587094614, 0.10717342372383239], 'false,false,false': [0.10377877466084183, 0.1467225212318827], 'true': [0.0017761657700125415, 0.0028321973894538804], 'true,true': [0.0017761657700125415, nan], 'true,true,true': [0.0008242057286210469, 0.0023555591920025507]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 5.833
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.14185106490048763;  // std dev = 8.30e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.05045662740720463;  // std dev = 2.010, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.20746400359266204;  // std dev = 5.761, 146.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=51 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.5735252546657348;  // std dev = 0.938, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6510285929207927;  // std dev = 3.320, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.15152632391602597;  // std dev = 0.277, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.3266273954625671;  // std dev = 1.166, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.08578487415644509;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.5970466845063519;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3120408641502514;  // std dev = 0.422, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12433502613258961;  // std dev = 0.133, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.09174508430123432;  // std dev = 4.007, 117.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.654150242906152;  // std dev = 1.065, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.1437105338756762;  // std dev = 0.461, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.1813601151575735;  // std dev = 1.025, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.46110710248202846;  // std dev = 0.746, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.1640368830657393;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.44250625259717796;  // std dev = 0.086, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.26540147624583565;  // std dev = 0.916, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.4720927779367042;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.09817114628953384;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.059002650688593956;  // std dev = 5.211, 233.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=67 */
%   | | | else return 0.10326902100065148;  // std dev = 2.074, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.44059948157337236;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.07428179621420253;  // std dev = 0.882, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.16185571921509193;  // std dev = 1.079, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.37996074539218166;  // std dev = 0.094, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return -0.3274718653978782;  // std dev = 0.815, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.35263812184521254;  // std dev = 0.015, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10519320663087549;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.1401303590805392;  // std dev = 2.687, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | | | else return 0.0550576402251028;  // std dev = 4.811, 209.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=64 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.33641109461533636;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.17033310402440754;  // std dev = 0.918, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.031661100456854566;  // std dev = 1.002, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.11503388550509043;  // std dev = 0.731, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return -0.009948074687416403;  // std dev = 1.400, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.4644998209244404;  // std dev = 0.114, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.27597976520778333;  // std dev = 0.014, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.09990710531623632;  // std dev = 0.033, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.048293153333008;  // std dev = 0.339, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2995795898189342;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return -0.04921497768996299;  // std dev = 2.063, 66.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=10 */
%   | | | else return 0.06405825596361026;  // std dev = 4.401, 155.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=51 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.30329839389554386;  // std dev = 0.084, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.11893490551364927;  // std dev = 0.829, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.5006827931079216;  // std dev = 1.296, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.14725148428577584;  // std dev = 0.052, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.25850617278438026;  // std dev = 0.132, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), interaction(I, I) )
%   | | | then return 0.055288867091444004;  // std dev = 2.678, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return -0.0027928533230506293;  // std dev = 2.655, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.11997567150776432;  // std dev = 0.475, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04925396277881332;  // std dev = 1.827, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17664381433596643;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.3244318802377339;  // std dev = 0.138, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20789051505146877;  // std dev = 0.029, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.25905514827463433;  // std dev = 1.238, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | | else return 0.4327362937331763;  // std dev = 2.350, 62.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=55 */
%   | | else return -0.14718292082682283;  // std dev = 0.037, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.168679044353075;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.08394952895274813;  // std dev = 0.994, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.15829610423183246;  // std dev = 0.560, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.27212258921851207;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.05775250487470294;  // std dev = 0.548, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.1948631819702709;  // std dev = 0.044, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.19871603913547697;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.012511915228921252;  // std dev = 2.066, 106.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=24 */
%   | | | else return -0.08005055072294497;  // std dev = 1.315, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.17606574945517053;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.058046259087574076;  // std dev = 2.998, 85.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
%   | | | else return -0.013470018498038574;  // std dev = 2.156, 71.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.17978612489375154;  // std dev = 0.045, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.1555196459665217;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, E), interaction(A, F) )
%   | then if ( complex(F, G) )
%   | | then if ( phenotype(F, H), interaction(F, F) )
%   | | | then return -0.057863510568567006;  // std dev = 0.913, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return -0.0010058522894313192;  // std dev = 1.094, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | else return 0.14118049762938314;  // std dev = 0.457, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.17277795679194058;  // std dev = 1.277, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.041552557659698744;  // std dev = 2.790, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.07161483467569148;  // std dev = 0.772, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.011645968484631218;  // std dev = 2.447, 92.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.712', 'seconds']
Refined model CLL: -0.193201


******************************************
Best model found
******************************************
Results 

CLL : -0.166787 

AUC ROC : 0.992597 

AUC PR : 0.368099 

Precision : 0.312834 

Recall : 0.883019 

F1 : 0.461994 

Total Learning Time : 5.833 

Total Inference Time : 9.655242681503296 

Total revision time: 24.83071325492859
Best scored revision CLL: -0.193201


Results 

CLL : -0.166787 

AUC ROC : 0.992597 

AUC PR : 0.368099 

Precision : 0.312834 

Recall : 0.883019 

F1 : 0.461994 

Total Learning Time : 24.855133993148804 

Total Inference Time : 9.655242681503296 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.461
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.058148935099512376;  // std dev = 2.530, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | | else return 0.1680080900290887;  // std dev = 5.511, 142.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.18573514199606403;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6083623010998434;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8386699746651443;  // std dev = 0.038, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.16109304162405474;  // std dev = 0.065, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else if ( location(A, K) )
%   | | | then return 0.1554027651648831;  // std dev = 3.495, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | | else return 0.3340026641994516;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5644469591288815;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.575797612107128;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07419489912812911;  // std dev = 2.071, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6774460247085212;  // std dev = 0.255, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14269491571374857;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.05536643674628447;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.07114831107284789;  // std dev = 3.793, 75.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.8104773674763418;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4259019586207735;  // std dev = 0.042, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.44158298325953527;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3881563931344174;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5846712453303802;  // std dev = 0.137, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.04786958501237207;  // std dev = 4.233, 194.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5416560238925399;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5377354443481849;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.10807394920572694;  // std dev = 3.498, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | | else return 0.1701421232535665;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3211201129667201;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.33297125884010326;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.06337161538661834;  // std dev = 4.155, 186.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.4074191508109307;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.40455866752266123;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1007158427318001;  // std dev = 3.586, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | | else return -0.03611978629939402;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2529648536956812;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.1874165108666323;  // std dev = 0.701, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.31387522626152653;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.27018951088086174;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.31194008833353926;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07855231846367954;  // std dev = 0.945, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.12561136558257738;  // std dev = 0.923, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.04830154723768218;  // std dev = 3.974, 172.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=49 */
%   | | | else return 0.08683556901977536;  // std dev = 3.642, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24072088627455765;  // std dev = 0.164, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.24983941985517955;  // std dev = 0.000936, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.24475334714159525;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6092578428069775;  // std dev = 1.163, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.19655715638132923;  // std dev = 0.621, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2440160291442628;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.09303538747801614;  // std dev = 3.179, 99.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16931756819574773;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.09065805664407416;  // std dev = 0.903, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4184289451022427;  // std dev = 1.212, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.14275386392880124;  // std dev = 0.275, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20598356563983583;  // std dev = 0.000817, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.08948525530818599;  // std dev = 2.951, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1577960759847065;  // std dev = 0.051, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.22218859151318754;  // std dev = 0.523, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.18384772676282135;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07929510684629452;  // std dev = 0.409, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.06649625723893858;  // std dev = 0.291, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.02619425287237608;  // std dev = 1.287, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1876339161690171;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.00423787327499878;  // std dev = 2.845, 125.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=36 */
%   | | | else return 0.009620660809729682;  // std dev = 3.085, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13272769191920988;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15810501444995398;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.12640867533695688;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1650878772112442;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.015175174947779636;  // std dev = 1.366, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16069160297053048;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.016517661329498876;  // std dev = 2.684, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | | else return -0.019054340109615313;  // std dev = 3.163, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.793', 'seconds']
Parameter learned model CLL:-0.177745 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.53, 32, 8], 'false,false,true,false': [5.511, 98, 44], 'false,false,false,true': [3.574, 39, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.943, 1, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.038, 0, 52], 'false,false,true,false': [0.065, 141, 0], 'false,false,false,true': [3.495, 38, 18], 'false,false,false,false': [1.0, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.031, 0, 6], 'true,false': [0.033, 0, 8], 'false,true,true': [2.071, 25, 8], 'false,true,false,true': [0.255, 0, 48], 'false,true,false,false': [0.0, 110, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [3.793, 55, 20], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.042, 0, 11], 'true,false': [0.002, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.137, 0, 3], 'false,true,false': [4.233, 142, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.498, 40, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.019, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.03, 0, 9], 'false,true': [4.155, 130, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.586, 40, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.018, 0, 7], 'true,true,false': [0.701, 1, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.945, 23, 3], 'false,false,true': [0.923, 1, 6], 'false,false,false,true': [3.974, 123, 49], 'false,false,false,false': [3.642, 41, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.164, 0, 12], 'true,true,true,false': [0.000936, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.163, 1, 36], 'true,false': [0.621, 99, 0], 'false,true': [0.003, 0, 5], 'false,false,true': [3.179, 63, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.004, 0, 6], 'true,false': [0.903, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.212, 1, 56], 'false,true,false': [0.275, 133, 0], 'false,false,true,true': [0.000817, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.951, 32, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.051, 0, 9], 'true,false,true': [0.523, 1, 1], 'true,false,false': [0.024, 0, 4], 'false,true,true': [0.409, 15, 1], 'false,true,false,true': [0.291, 1, 2], 'false,true,false,false': [1.287, 51, 14], 'false,false,true': [0.002, 0, 5], 'false,false,false,true': [2.845, 89, 36], 'false,false,false,false': [3.085, 46, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.017, 0, 5], 'true,true,true,false': [0.017, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.024, 0, 4], 'false,true': [1.366, 56, 17], 'false,false,true': [0.002, 0, 5], 'false,false,false,true': [2.684, 85, 36], 'false,false,false,false': [3.163, 53, 20]}]
{'': [-2.5376526277146434e-16, 0.21512556249092815], 'false': [-1.4802973661668753e-16, 0.20850480109739508], 'false,false': [0.20408163265306198, 0.2203708680462237], 'false,false,false': [0.22027348394768081, 0.22222222222222224], 'false,false,true': [0.16000000000000017, 0.21384645903590652], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [0.06222222222222248, 0.2067948514462725], 'false': [7.401486830834377e-17, 0.20343697730097088], 'false,false': [0.19677320327287237, 0.22221338522153225], 'false,false,false': [0.21810209876072637, 0.25], 'false,false,true': [2.7293258458763822e-05, 2.9612719288680606e-05], 'true': [7.401486830834377e-17, 0.09876543209876548], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.00018173950546948196, 0.15728544742056835], 'false': [0.14063699296823814, 0.19774961000443916], 'false,false': [0.19330222584164933, 0.0], 'false,false,true': [0.25, 0.1917838159102251], 'false,true': [0.1300124175868657, 0.14267616451074053], 'false,true,false': [0.001354856890639855, -4.4408920985006264e-17], 'true': [0.00016491177348173144, 0.00013914430887507212], 'false,false,false': [0.0, nan]}
{'': [0.000167468565815224, 0.12521666575260296], 'false': [0.09544303322827044, 0.2123886934498573], 'false,false': [3.842735990966517e-06, 0.21352893877118204], 'false,false,false': [0.21094120008106945, 0.23999999999999994], 'false,true': [0.011900416253315782, 0.09236101790830985], 'false,true,true': [0.0, 0.006212699887687467], 'true': [0.00015997555058217488, 1.740107078910628e-06], 'false,false,true': [0.0, 0.0]}
{'': [0.00012110769555224403, 0.12442628262674962], 'false': [0.09281706463079054, 0.21507204327923526], 'false,false': [2.0455911605987698e-06, 0.21896984895742538], 'false,false,false': [0.21789847455989658, 0.22222222222222224], 'true': [7.062678881950558e-05, 9.899205141133343e-05], 'true,true': [7.062678881950558e-05, nan], 'false,false,true': [0.0, 0.0]}
{'': [0.0345462552038889, 0.11787130286958085], 'false': [0.034343638069152825, 0.1250342547312665], 'false,false': [0.12174340893642797, 0.12500132500175548], 'false,false,false': [0.09183507259654564, 0.21742315477685475], 'true': [0.04201503818052729, 0.0004061441338614191], 'true,true': [4.491075452213643e-05, 0.09826687518248109], 'true,false': [0.0004771104320801106, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.13182499098623585, 0.09823194399673361], 'true': [0.054174865460505414, 0.0039007604325393516], 'false': [1.2511927478309203e-06, 0.10209716922496656], 'false,false': [0.10209716922496656, nan], 'true,true': [0.0019402785270022768, 0.038982455105257004], 'true,true,false': [0.0, 0.036539626358223144], 'true,true,true': [0.002251706977543483, 4.3840547424983667e-07]}
{'': [0.0558736180992266, 0.09442254191553118], 'false': [0.0742578442440845, 0.16175064003718825], 'false,false': [3.3386387723183253e-07, 0.16746914431441906], 'false,false,false': [0.16746914431441906, nan], 'false,true': [0.02575436982519142, 0.0005672040208755982], 'true': [2.354301134395905e-06, 0.0906461997949356], 'false,true,true': [nan, 0.02575436982519139], 'false,false,true': [3.3386387723183253e-07, nan]}
{'': [0.03596963500853033, 0.07092833733664966], 'false': [0.023504659140469446, 0.09067914936878622], 'false,false': [8.535267602194363e-07, 0.09221222962161553], 'false,false,false': [0.06476236849581736, 0.14418164066118938], 'true': [0.0002872538743361248, 0.08232612736770352], 'true,false': [0.13677964448457824, 0.00014420488955403654], 'false,true': [0.0104631474039305, 0.02595025732802079], 'false,true,false': [0.028195844094106942, 0.025467576744333604]}
{'': [0.0003349108035992881, 0.0708849231294183], 'false': [0.02554733832291056, 0.08738323802039527], 'false,false': [6.679483968319299e-07, 0.0890116242188823], 'false,false,false': [0.05953033465574739, 0.13708864737693877], 'true': [0.0002191353995864842, 0.00014109124747015492], 'true,true': [0.0002237665580574269, 0.0], 'true,true,true': [5.578796196731295e-05, 0.00010122557310591103], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.411
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.02270589712482878;  // std dev = 3.296, 79.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=13 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.08891816586874314;  // std dev = 2.631, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.19872864524443873;  // std dev = 5.567, 138.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=47 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7609104304538484;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7944736979119448;  // std dev = 1.403, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15880547324076327;  // std dev = 0.124, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.1532439846666946;  // std dev = 2.489, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.22927615691160172;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5536573883844657;  // std dev = 0.009, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5729767917114176;  // std dev = 0.031, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.17590415614154384;  // std dev = 1.339, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.017269064889679695;  // std dev = 1.428, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6819498112371688;  // std dev = 0.363, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1392879383615003;  // std dev = 0.102, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.10173125415546849;  // std dev = 3.144, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return 0.14503096577912017;  // std dev = 2.002, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.1310356498736259;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4280508922071824;  // std dev = 0.027, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.413017045618336;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38708732465167595;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.09553698568588502;  // std dev = 0.825, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.018587679345652967;  // std dev = 2.045, 54.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | | else return 0.08254596294172613;  // std dev = 3.630, 130.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=41 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5301250679085023;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return -0.030352542801231383;  // std dev = 0.922, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.13041624836031568;  // std dev = 3.544, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.31765037714539035;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.33047763272798836;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( enzyme(A, G), location(F, H) )
%   | | | then return -0.10377058406941313;  // std dev = 0.771, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.015742296063980615;  // std dev = 1.732, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.1539777150047773;  // std dev = 1.653, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.0623759988414658;  // std dev = 3.291, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.3990371330411897;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.06385077666131829;  // std dev = 2.550, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.2596402061368424;  // std dev = 2.349, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2857453037282008;  // std dev = 0.040, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( enzyme(A, F), interaction(E, E) )
%   | | then if ( phenotype(A, G), interaction(H, A) )
%   | | | then return 0.05415457861978008;  // std dev = 0.777, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1612994478119021;  // std dev = 1.424, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( complex(E, D), interaction(E, I) )
%   | | | then return -0.14579865382758422;  // std dev = 1.064, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | | else return -0.017346004355543294;  // std dev = 1.773, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5358752943436199;  // std dev = 0.573, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.16314869337647497;  // std dev = 0.252, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return -0.022707389019945963;  // std dev = 1.700, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | | else return 0.06067059181292286;  // std dev = 3.752, 98.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.1811318392771346;  // std dev = 0.191, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.3100500453274274;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5702653245148523;  // std dev = 1.403, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.17287533930867638;  // std dev = 0.070, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2298534063560874;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( complex(G, I), phenotype(H, J) )
%   | | | then return 0.07133938467567089;  // std dev = 1.671, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.002598004345972852;  // std dev = 2.257, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.047532934857400545;  // std dev = 0.777, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.14022480010736296;  // std dev = 0.987, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1744374232986812;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.2113643571112629;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.009729444949296062;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.33894624113742844;  // std dev = 0.447, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.4493927854056583;  // std dev = 0.507, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.13784559539363028;  // std dev = 0.025, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2183354666094467;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.13613975113455562;  // std dev = 1.823, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.002394924444490816;  // std dev = 2.256, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15818586554139819;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.18619661130291587;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.09237057864707902;  // std dev = 0.054, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.005168923537080004;  // std dev = 0.413, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.006224799517934538;  // std dev = 0.853, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.03814279955653317;  // std dev = 1.020, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17947617408349723;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.026381362730468323;  // std dev = 2.693, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   | | | else return 0.018061054199878628;  // std dev = 2.954, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.14291492274770762;  // std dev = 0.015, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.1291350569043056;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.16036424849073175;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08921473868509097;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.008202236187455882;  // std dev = 1.161, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return -0.03519652144643916;  // std dev = 0.835, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15463971530758824;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.03545486324528185;  // std dev = 3.141, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | | else return 0.017038104719160948;  // std dev = 2.429, 114.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.704', 'seconds']
Refined model CLL: -0.170289


******************************************
Best model found
******************************************
Results 

CLL : -0.189889 

AUC ROC : 0.984752 

AUC PR : 0.230183 

Precision : 0.143779 

Recall : 0.884477 

F1 : 0.24735 

Total Learning Time : 3.411 

Total Inference Time : 2.9808335304260254 

Total revision time: 10.705436012268066
Best scored revision CLL: -0.170289


Results 

CLL : -0.189889 

AUC ROC : 0.984752 

AUC PR : 0.230183 

Precision : 0.143779 

Recall : 0.884477 

F1 : 0.24735 

Total Learning Time : 10.729856750488281 

Total Inference Time : 2.9808335304260254 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.528
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1130508958838261;  // std dev = 3.112, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return 0.16523554927274012;  // std dev = 5.198, 127.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.12285481745245355;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.07243464938522651;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.5194734122109544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.636140078877621;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7670179922678056;  // std dev = 1.931, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.16100592553415458;  // std dev = 0.039, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.10637609404867913;  // std dev = 1.921, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.10324641773537889;  // std dev = 2.278, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5860976698497787;  // std dev = 0.045, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.37583801773649855;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.03677381882423436;  // std dev = 2.804, 68.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6950825079028277;  // std dev = 0.220, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.14236671456339256;  // std dev = 8.94e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6665504983214323;  // std dev = 0.203, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07923501150846952;  // std dev = 2.532, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.08524629417230563;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.44956044339585505;  // std dev = 0.033, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4535218425541121;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5462682110333352;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.49447653198335134;  // std dev = 0.696, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.053561797873390174;  // std dev = 4.299, 183.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.42117792446164987;  // std dev = 0.043, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.597038996718249;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.09481572412944828;  // std dev = 1.902, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.13081293764598942;  // std dev = 2.158, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3364224184923781;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.35625692513867574;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.03859996303116503;  // std dev = 4.513, 214.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.2962226300542703;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.40002068092002574;  // std dev = 0.070, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.09513274362459566;  // std dev = 2.481, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.055632075339958155;  // std dev = 1.499, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.27362241422228345;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.30405646943060166;  // std dev = 0.119, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.23838150771461963;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2910341578483419;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3509318708360056;  // std dev = 0.111, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.0692839146496312;  // std dev = 1.289, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2848752647859735;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.041396018974833935;  // std dev = 2.233, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return 0.046498013014101475;  // std dev = 4.606, 171.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24462018894319687;  // std dev = 0.175, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.22631724595320282;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.24837135334292149;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.554564517807357;  // std dev = 1.521, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.16850041182152933;  // std dev = 0.514, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.021198614142072053;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06903622981302328;  // std dev = 3.292, 102.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.18725509141896657;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.19416997085005408;  // std dev = 0.097, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40073937945374244;  // std dev = 1.986, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | else return -0.1372938356710478;  // std dev = 0.171, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.1643416789605705;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20192905217374468;  // std dev = 0.047, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.03740949676164896;  // std dev = 2.521, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15310377501024766;  // std dev = 0.042, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.17098913311286412;  // std dev = 0.533, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.1741642788568071;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.11610940057305005;  // std dev = 0.465, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.26544388781403705;  // std dev = 0.181, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.027901482526074904;  // std dev = 1.603, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19704446742274637;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.029846079665239274;  // std dev = 2.793, 106.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
%   | | | else return 0.03715380209677286;  // std dev = 2.516, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13216841663747927;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14288000252944033;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.12209050374137875;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.19268781530459045;  // std dev = 0.060, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.07014598192735394;  // std dev = 0.800, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.008054147432753466;  // std dev = 1.681, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1677525510913801;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.025208734244920077;  // std dev = 2.837, 102.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=31 */
%   | | | else return 0.027975450731240414;  // std dev = 2.504, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.663', 'seconds']
Parameter learned model CLL:-0.176212 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.112, 38, 13], 'false,false,true,false': [5.198, 88, 39], 'false,false,false,true': [2.572, 25, 9], 'false,false,false,false': [1.535, 11, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.894, 1, 4], 'true,false': [0.957, 1, 11], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [1.931, 4, 52], 'false,false,true,false': [0.039, 145, 0], 'false,false,false,true': [1.921, 14, 5], 'false,false,false,false': [2.278, 20, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.045, 0, 11], 'true,false': [0.894, 1, 4], 'false,true,true': [2.804, 54, 14], 'false,true,false,true': [0.22, 0, 42], 'false,true,false,false': [8.94e-08, 105, 0], 'false,false,true,true': [0.203, 0, 3], 'false,false,true,false': [2.532, 26, 9], 'false,false,false,true': [1.5, 9, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.033, 0, 6], 'true,false': [0.078, 0, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.696, 1, 6], 'false,true,false': [4.299, 134, 49], 'false,false,true,true': [0.043, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.902, 13, 5], 'false,false,false,false': [2.158, 15, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.04, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.055, 0, 6], 'false,true': [4.513, 158, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.07, 0, 2], 'false,false,false,true': [2.481, 21, 9], 'false,false,false,false': [1.499, 9, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.024, 0, 5], 'true,true,false': [0.119, 0, 3], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.087, 0, 3], 'true,false,false': [0.111, 0, 4], 'false,true': [1.289, 30, 5], 'false,false,true': [0.037, 0, 5], 'false,false,false,true': [2.233, 38, 13], 'false,false,false,false': [4.606, 124, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.175, 0, 13], 'true,true,true,false': [0.063, 0, 3], 'true,true,false,true': [0.026, 0, 3], 'true,true,false,false': [1.521, 2, 33], 'true,false': [0.514, 109, 0], 'false,true': [0.856, 1, 3], 'false,false,true': [3.292, 71, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.097, 0, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.986, 4, 56], 'false,true,false': [0.171, 106, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.047, 0, 2], 'false,false,false,true': [2.521, 32, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.042, 0, 10], 'true,false,true': [0.533, 1, 1], 'true,false,false': [0.065, 0, 5], 'false,true,true': [0.465, 20, 1], 'false,true,false,true': [0.181, 0, 6], 'false,true,false,false': [1.603, 57, 17], 'false,false,true': [0.027, 0, 3], 'false,false,false,true': [2.793, 75, 31], 'false,false,false,false': [2.516, 30, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.025, 0, 8], 'true,true,true,false': [0.025, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.06, 0, 2], 'true,false': [0.8, 1, 3], 'false,true': [1.681, 66, 24], 'false,false,true': [0.023, 0, 3], 'false,false,false,true': [2.837, 71, 31], 'false,false,false,false': [2.504, 31, 12]}]
{'': [-2.3684757858670006e-16, 0.21186612389250148], 'false': [-2.5376526277146434e-16, 0.2029916203304892], 'false,false': [0.20679207170811836, 0.18749999999999947], 'false,false,true': [0.18992695117262537, 0.2127844255688518], 'false,false,false': [0.19463667820069216, 0.1683673469387754], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.10380622837370257, 0.19679759640611943], 'false': [0.10937500000000006, 0.19192266371467442], 'false,false': [0.19164781937339043, 0.19308384073072488], 'false,false,false': [0.19423770769579116, 0.19226781456507117], 'false,false,true': [0.06656745206427583, 1.0491230995912265e-05], 'false,true': [0.0, 0.13888888888888892], 'false,true,false': [0.0, 0.1875], 'true': [0.16, 0.07638888888888899]}
{'': [0.05962469489848221, 0.14660756547293882], 'false': [0.13544050948181732, 0.1934524943283479], 'false,false': [0.19494135597820722, 0.18750004124670053], 'false,false,true': [0.013699365289533342, 0.18324431945807365], 'false,false,false': [0.18750004124670053, nan], 'false,true': [0.11563777087850491, 0.14345739044305114], 'false,true,false': [0.0011571521154804558, 7.612957883143931e-17], 'true': [0.0001842058075995306, 0.16000000000000006]}
{'': [0.00047989422284106333, 0.12542382858623746], 'false': [0.10735315498024789, 0.20194005181304864], 'false,false': [0.0074900487546266286, 0.20721965647354904], 'false,false,false': [0.20094577669508312, 0.21176972111631917], 'false,true': [0.0609167545184352, 0.1009996372222676], 'false,true,true': [0.0, 0.06928385076871676], 'false,false,true': [0.0009260342201930782, 0.0], 'true': [0.00018434813822088003, 0.0006706478726046732]}
{'': [0.0003991487124703023, 0.11263117214123998], 'false': [0.09518491329662017, 0.19221152782501408], 'false,false': [0.004006750324369294, 0.20036911323957338], 'false,false,false': [0.20515402202658098, 0.18729233927567365], 'false,false,true': [0.0, 0.0024187803653772932], 'true': [0.00017740878573434415, 0.0004957140102331651], 'true,true': [0.00017740878573434415, nan]}
{'': [0.003299736915330212, 0.10910180148579282], 'false': [0.047451083259377684, 0.11668739945070497], 'false,false': [0.00027702507802614964, 0.1180452925660597], 'false,false,false': [0.09780292824056756, 0.12407650900013531], 'true': [0.0020678587986176777, 0.004100426766837334], 'true,false': [0.002430899548575935, 0.0031010082191443578], 'true,false,true': [0.0, 0.0025481240065752067], 'true,true': [0.00011330176557085014, 0.004746559030931315]}
{'': [0.10670444571260274, 0.10942492282121491], 'false': [0.18324378462889943, 0.10622280787038182], 'true': [0.06575862232227594, 0.002419580587505232], 'false,false': [0.10622280787038182, nan], 'true,true': [0.002226407544794008, 0.06772729012186007], 'true,true,false': [0.00022352281176074573, 0.06611167569107285], 'true,true,true': [0.0023691218931419277, 0.001335793052750861]}
{'': [0.0006319918793930086, 0.10088629957725878], 'false': [0.09073794486902458, 0.1366504742027289], 'false,false': [0.0010361582825222971, 0.1444223671027218], 'false,false,false': [0.1444223671027218, nan], 'false,true': [0.06570494090286942, 0.0002763382214844667], 'false,true,true': [nan, 0.06570494090286948], 'false,false,true': [0.0, 0.0010833005487612887], 'true': [0.0, 0.0008490562929174272]}
{'': [0.028544538318610965, 0.07127866223003118], 'false': [0.03464822612220345, 0.09413735347427711], 'false,false': [0.0002348138530011238, 0.09549907223580145], 'false,false,false': [0.07359849427807176, 0.1507337115059901], 'false,true': [0.01031535750617408, 0.03851020148115154], 'false,true,false': [0.0054386590940392705, 0.03473781491841915], 'true': [0.00017485898504471242, 0.06553456912915377], 'true,false': [0.14218580501945538, 0.0008366811175172462]}
{'': [0.0464310033421912, 0.07260869086836547], 'false': [0.03140692296154301, 0.09714735791313298], 'false,false': [0.00018203756537783777, 0.09874639832467584], 'false,false,false': [0.07889125088355914, 0.14583927034579675], 'true': [0.000861128535611245, 0.1600025655207108], 'true,true': [0.00014099196099097157, 0.0023276228332208965], 'true,true,false': [0.0, 0.0018301074498469558], 'true,true,true': [7.54999712581153e-05, 0.00031116946206573987]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.296
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.04564893509951237;  // std dev = 3.122, 64.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=12 */
%   | | | else return 0.1622425023509733;  // std dev = 6.016, 171.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then if ( complex(A, D) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7677098960216014;  // std dev = 1.924, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.1556842457004948;  // std dev = 0.154, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.028890588469649054;  // std dev = 2.025, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return 0.16096454680685324;  // std dev = 2.181, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3553664367462845;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( complex(A, G), interaction(A, H) )
%   | | | then return -0.07541012789995458;  // std dev = 1.111, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.09979783880904354;  // std dev = 2.485, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6743798531653449;  // std dev = 1.015, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14012881381013256;  // std dev = 0.054, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.28744395810157447;  // std dev = 1.471, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.11117334560011186;  // std dev = 2.398, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.42737121099656006;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.1998649483171059;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.20447968480174805;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5055041802644379;  // std dev = 0.243, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.06452488059129895;  // std dev = 0.321, 175.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=49 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.13471189351341584;  // std dev = 1.850, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.02378556797116099;  // std dev = 2.328, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3197590761964432;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4004190998162301;  // std dev = 0.151, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.10828107749600784;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.12639542105684629;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.12696429040227528;  // std dev = 2.639, 58.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=22 */
%   | | | else return 0.0466175931959299;  // std dev = 3.421, 120.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=34 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.03859029731870807;  // std dev = 2.450, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.24420327556598995;  // std dev = 1.485, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.2732254287649946;  // std dev = 0.055, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10807483032670621;  // std dev = 0.636, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.09823140772471348;  // std dev = 0.949, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then if ( interaction(I, A), interaction(I, I) )
%   | | then return -0.09111342870050124;  // std dev = 0.131, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | | else return 0.041743194878172574;  // std dev = 0.272, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.15763783986960336;  // std dev = 0.921, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.04408325430641682;  // std dev = 3.812, 132.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=39 */
%   | | | else return 0.09423288548100739;  // std dev = 3.301, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4606150796826661;  // std dev = 0.215, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | else return -0.16256703575085105;  // std dev = 0.054, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(F, G) )
%   | | | then return 0.3034109091786348;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6462094068807487;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.18468032803894938;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4604951037703635;  // std dev = 1.070, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return -0.15269346875727316;  // std dev = 0.085, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.05189078220444135;  // std dev = 0.717, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.012575590909288411;  // std dev = 0.847, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.14135247007483498;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.20700921399921876;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.055494786097135984;  // std dev = 0.890, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.41667884431836494;  // std dev = 0.514, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0.2738575043428335;  // std dev = 1.338, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | else return -0.13397894264423377;  // std dev = 0.038, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.15702827624867008;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.005989919079757482;  // std dev = 1.888, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.1591856964157555;  // std dev = 1.616, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1420394417026753;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.2172672748024197;  // std dev = 0.568, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.16007799497769365;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3008959038348687;  // std dev = 0.079, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.11390430756866436;  // std dev = 0.020, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.02552628786931638;  // std dev = 0.167, 78.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=16 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.2890680744311494;  // std dev = 1.175, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( location(A, L) )
%   | | | then return 0.037152887628470764;  // std dev = 3.236, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
%   | | | else return 0.18781502488837803;  // std dev = 0.639, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.13470360520066102;  // std dev = 0.032, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.14131904032123513;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.006417065742768419;  // std dev = 0.640, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return -0.07075420651924041;  // std dev = 0.379, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return -0.06141784064728384;  // std dev = 0.673, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.03645699736776234;  // std dev = 1.309, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.23646787827946247;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.003494664423821056;  // std dev = 2.195, 95.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=27 */
%   | | | else return 0.049574342342845246;  // std dev = 2.609, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25.609', 'seconds']
Refined model CLL: -0.173802


******************************************
Best model found
******************************************
Results 

CLL : -0.192155 

AUC ROC : 0.983056 

AUC PR : 0.236137 

Precision : 0.149527 

Recall : 0.893993 

F1 : 0.256203 

Total Learning Time : 3.296 

Total Inference Time : 3.4458611011505127 

Total revision time: 11.47638356590271
Best scored revision CLL: -0.173802


Results 

CLL : -0.192155 

AUC ROC : 0.983056 

AUC PR : 0.236137 

Precision : 0.149527 

Recall : 0.893993 

F1 : 0.256203 

Total Learning Time : 11.500804304122925 

Total Inference Time : 3.4458611011505127 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.24
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11799145478455035;  // std dev = 4.942, 127.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=33 */
%   | | | else return 0.1854216623722384;  // std dev = 4.921, 110.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.058148935099512175;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7413433124639606;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.6347823423880588;  // std dev = 0.942, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.29701438684128156;  // std dev = 0.597, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7120836554291439;  // std dev = 2.950, 79.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | | | else return -0.16139181453283502;  // std dev = 0.058, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.09715685228483832;  // std dev = 1.499, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.10092203251355424;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.39251856423612586;  // std dev = 1.270, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.1815452106385517;  // std dev = 1.105, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.1013750878257481;  // std dev = 4.274, 120.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6836825245606567;  // std dev = 0.987, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.14480145226930058;  // std dev = 6.83e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11698980698383456;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.3814068791300046;  // std dev = 1.019, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.5056893206792671;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5105690943235164;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.627779983547417;  // std dev = 0.967, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.05933140918821563;  // std dev = 4.902, 208.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.46032627152526706;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.06176442378327138;  // std dev = 1.505, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.05438949517688171;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3743293105942614;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19115303506045517;  // std dev = 0.936, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.07670701199860545;  // std dev = 5.221, 226.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.34992804753948203;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.2047011445123695;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.023455854057400107;  // std dev = 1.268, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.30945600849264426;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3690254791916704;  // std dev = 0.198, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.29749875454334596;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.275023329818467;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return 0.006935406038807927;  // std dev = 2.154, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.08683565600490539;  // std dev = 0.895, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.04550010479680527;  // std dev = 2.922, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | | else return 0.09899948682831522;  // std dev = 3.978, 115.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.26831736211645163;  // std dev = 0.207, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.22368720157230237;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.7629087141371331;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5397758557016807;  // std dev = 1.134, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.18344637617989;  // std dev = 0.477, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3255494810360479;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08967769659445277;  // std dev = 3.809, 108.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.18181993405958796;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.22249895350647042;  // std dev = 0.109, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.36092453564377186;  // std dev = 2.847, 82.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=71 */
%   | | else return -0.15925220381992847;  // std dev = 0.278, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.18724769587647183;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.02929687970320668;  // std dev = 1.523, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16909003143555623;  // std dev = 0.105, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.2971472652118136;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.2058596044209523;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.028873782919501847;  // std dev = 1.375, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.060068176261137265;  // std dev = 0.371, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.014282256898402623;  // std dev = 1.730, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.03766819592861112;  // std dev = 0.887, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03660885816765713;  // std dev = 3.239, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
%   | | | else return 0.028750578146328747;  // std dev = 1.461, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13430072499295728;  // std dev = 0.012, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.23462215376313422;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1752187029624684;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.17441405953182507;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.02335258564402664;  // std dev = 2.280, 118.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=29 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.22481543434584683;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.037507314479816804;  // std dev = 3.278, 113.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=40 */
%   | | | else return -0.016994093476643324;  // std dev = 1.507, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.908', 'seconds']
Parameter learned model CLL:-0.200997 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.943, 1, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.942, 94, 33], 'false,false,true,false': [4.921, 74, 36], 'false,false,false,true': [1.225, 6, 2], 'false,false,false,false': [1.265, 8, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.942, 1, 9], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.597, 1, 1], 'false,false,true,true': [2.95, 10, 69], 'false,false,true,false': [0.058, 160, 0], 'false,false,false,true': [1.499, 9, 3], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [1.27, 2, 8], 'true,false': [1.105, 2, 3], 'false,true,true': [4.274, 86, 34], 'false,true,false,true': [0.987, 1, 37], 'false,true,false,false': [6.83e-08, 70, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.195, 5, 2], 'false,false,false,true': [1.019, 2, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.075, 0, 5], 'true,false': [0.023, 0, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.967, 1, 14], 'false,true,false': [4.902, 151, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.505, 8, 3], 'false,false,false,false': [0.913, 5, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.028, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.936, 1, 4], 'false,true': [5.221, 155, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.268, 8, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.091, 0, 4], 'true,true,false': [0.198, 0, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [2.154, 35, 12], 'false,false,true': [0.895, 1, 3], 'false,false,false,true': [2.922, 49, 20], 'false,false,false,false': [3.978, 74, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.207, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [1.134, 1, 33], 'true,false': [0.477, 74, 0], 'false,true': [0.037, 0, 3], 'false,false,true': [3.809, 68, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.012, 0, 3], 'true,false': [0.109, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.847, 11, 71], 'false,true,false': [0.278, 172, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.523, 15, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.105, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.057, 0, 3], 'false,true,true': [1.375, 35, 11], 'false,true,false,true': [0.371, 1, 1], 'false,true,false,false': [1.73, 33, 17], 'false,false,true': [0.887, 1, 3], 'false,false,false,true': [3.239, 83, 40], 'false,false,false,false': [1.461, 11, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.012, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.05, 0, 3], 'false,true': [2.28, 89, 29], 'false,false,true': [0.029, 0, 3], 'false,false,false,true': [3.278, 73, 40], 'false,false,false,false': [1.507, 14, 4]}]
{'': [0.07638888888888877, 0.20733143513066318], 'false': [0.18750000000000006, 0.20432141484044727], 'false,false': [0.20637718314372724, 0.17283950617283936], 'false,false,true': [0.19232438464877055, 0.22016528925619955], 'false,true': [0.0, 1.4802973661668753e-16], 'false,false,false': [0.18750000000000003, 0.16000000000000003], 'true': [0.09876543209876527, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0]}
{'': [0.07556732289571537, 0.20531492244776225], 'false': [0.13385372108722043, 0.204173397092406], 'false,false': [0.20524880823300826, 0.18730854662305577], 'false,false,true': [0.11013264723846049, 2.0813002731701057e-05], 'false,false,false': [0.18724118468520234, 0.18750000000000003], 'false,true': [0.0, 0.178471628116294], 'false,true,false': [nan, 0.178471628116294], 'true': [0.0, 0.08878824741760569]}
{'': [0.19891667693696882, 0.16272594099553547], 'true': [0.1613303951587115, 0.24441606987467868], 'false': [0.15903441613190325, 0.2225268248434614], 'false,false': [0.20408163265306117, 0.20756553421864915], 'false,false,false': [0.20756553421864915, nan], 'false,false,true': [nan, 0.20408163265306117], 'false,true': [0.1521988991234101, 0.16554809592147937], 'false,true,false': [0.025625494441991886, 6.661338147750939e-17]}
{'': [0.0005584844360882923, 0.1363493609660679], 'false': [0.1321973664081032, 0.18524930552817923], 'false,false': [0.0, 0.1854123977967811], 'false,false,false': [0.2060270691223324, 0.13888888888888892], 'false,true': [0.06228847864944923, 0.11550341656929566], 'false,true,true': [nan, 0.062288478649449114], 'true': [0.001112136565460986, 8.628393851151106e-05], 'false,false,true': [nan, 0.0]}
{'': [0.08126122765614673, 0.1253126677431297], 'false': [0.1206201793500573, 0.19156553504899024], 'false,false': [0.0, 0.19881119185832524], 'false,false,false': [0.24, 0.16086491578869938], 'true': [0.00011439868397692241, 0.17529388526476283], 'true,true': [0.00011439868397692241, nan], 'false,false,true': [nan, 0.0]}
{'': [0.005525490310750164, 0.1281736222019655], 'false': [0.09875880820814496, 0.13448562783526177], 'false,false': [0.20008388470999805, 0.13305825142566202], 'false,false,false': [0.1237436004874197, 0.1375737230344493], 'true': [0.006149228967675767, 0.00012628617914092755], 'true,true': [0.002073214936401238, 0.007832919375201119], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}
{'': [0.12420999279206052, 0.13217208317484058], 'false': [0.00045361678308090497, 0.13432726733659076], 'false,false': [0.13432726733659076, nan], 'true': [0.07508604213053523, 0.003075056281773187], 'true,true': [0.004049872427298141, 0.0838326523700975], 'true,true,false': [0.0, 0.037812973230672835], 'true,true,true': [0.004273782285464656, 0.0]}
{'': [0.0014310022056613107, 0.0933912389229365], 'false': [0.09137940667976935, 0.11825826494530564], 'false,false': [0.0, 0.12213780649230417], 'false,false,false': [0.12213780649230417, nan], 'false,true': [0.09887811475211179, 0.0004506030030848906], 'false,true,true': [nan, 0.09887811475211192], 'true': [5.19056361285806e-05, 0.0014968590674652102], 'false,false,true': [0.0, nan]}
{'': [0.018758148127797258, 0.07747656763847922], 'false': [0.051786582701080955, 0.09459387465793088], 'false,false': [0.19680644191425742, 0.09147933461244792], 'false,false,false': [0.08528414148344944, 0.14222487794065636], 'false,true': [0.0411197413996705, 0.06027562596217258], 'false,true,false': [0.06872532129561956, 0.05985700928683891], 'true': [0.001375441775647232, 0.04824501281471118], 'true,false': [0.0, 0.0010727060285096457]}
{'': [0.009388724099146628, 0.07376064727051689], 'false': [0.04406920498065555, 0.09834614463384911], 'false,false': [0.00028162477296456156, 0.09974236376245987], 'false,false,false': [0.09511756774372881, 0.1262135490079427], 'true': [0.011239846162510976, 0.0008247229186059505], 'true,true': [0.0011201169136876958, 0.0], 'true,true,true': [2.2084981831871353e-05, 0.0], 'true,true,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 5.32
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.11253490001179196;  // std dev = 4.650, 114.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=29 */
%   | | | else return 0.2510060779566547;  // std dev = 5.169, 112.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=44 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.729067469875128;  // std dev = 2.675, 77.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=69 */
%   | | | else return -0.16223522892555622;  // std dev = 0.157, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.19976837542024542;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.032374481722611655;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then return 0.5553664367462844;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.22203310341295113;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.01223602371315759;  // std dev = 1.985, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | | else return 0.09475838290504283;  // std dev = 3.840, 96.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=28 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6474393755788576;  // std dev = 1.394, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.14661673926247615;  // std dev = 0.079, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7940029857083098;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.20599701429169032;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.04514425586545687;  // std dev = 0.380, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4670571160543;  // std dev = 0.090, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4312756763516405;  // std dev = 0.075, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( recursion_proteinclass(G, B), interaction(G, H) )
%   | | | then return 0.5704249861610557;  // std dev = 1.191, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.06864512368532609;  // std dev = 2.030, 73.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=8 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return 0.029564237470117827;  // std dev = 1.679, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.09125632068238028;  // std dev = 4.225, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.5441927290786983;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.2305065832354618;  // std dev = 0.810, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.005258920800795161;  // std dev = 1.152, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.31551957341316783;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.18879838129188747;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(H, F), enzyme(H, I) )
%   | | | then return 0.07285122210230721;  // std dev = 3.245, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   | | | else return 0.020935742227936132;  // std dev = 2.647, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.17564539122677036;  // std dev = 1.650, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.08078415769916138;  // std dev = 2.638, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4092759579109262;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.12132928624884924;  // std dev = 0.741, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.009074841878184846;  // std dev = 1.370, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.20435018641206906;  // std dev = 0.234, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.25354688843224005;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.010849338120643204;  // std dev = 0.430, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5798586028872259;  // std dev = 0.085, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return -0.17179239147671505;  // std dev = 0.066, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( interaction(A, K) )
%   | | | then return -0.07122967046438783;  // std dev = 1.399, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.07134592497457883;  // std dev = 1.333, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( location(A, L), interaction(M, A) )
%   | | | then return 0.04261841803282408;  // std dev = 3.537, 118.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=35 */
%   | | | else return 0.11829666258140449;  // std dev = 1.204, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.26574770890729943;  // std dev = 0.084, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4759444266107961;  // std dev = 1.101, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1514422859483035;  // std dev = 0.068, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2635661337596156;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), phenotype(H, I) )
%   | | | then return -0.0068087066035407;  // std dev = 1.845, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return 0.08558897347452595;  // std dev = 0.653, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.05557426579770011;  // std dev = 2.997, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | | | else return 0.17684612017836973;  // std dev = 0.660, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17169771105988807;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then return 0.17335509850507974;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.22347385347465507;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.16747215564755755;  // std dev = 1.812, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | | | else return 0.3930268978622075;  // std dev = 2.124, 56.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=51 */
%   | | else return -0.13763569849696938;  // std dev = 0.031, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.2586815853517378;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.03178122996274843;  // std dev = 0.430, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.10972109407280597;  // std dev = 0.882, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1789960419524906;  // std dev = 0.078, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.20533668133874064;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), phenotype(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.312989497386107;  // std dev = 0.199, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.46340105412625643;  // std dev = 0.256, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return -0.11453071706205514;  // std dev = 0.149, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.2118482541956852;  // std dev = 0.301, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.09142500129529266;  // std dev = 0.029, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.03744845392723175;  // std dev = 1.675, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return 0.00278690881115872;  // std dev = 3.172, 155.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=48 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.012165687543196912;  // std dev = 0.867, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.34496686760397854;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.045364250120639965;  // std dev = 0.445, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(A, H), enzyme(H, I) )
%   | | then return -0.023603028860523945;  // std dev = 0.199, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | else return 0.03432096045751422;  // std dev = 0.212, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.05295415239064302;  // std dev = 0.774, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return -0.030666636148415593;  // std dev = 1.363, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.03972240134654026;  // std dev = 2.881, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.381', 'seconds']
Refined model CLL: -0.175281


******************************************
Best model found
******************************************
Results 

CLL : -0.169696 

AUC ROC : 0.991296 

AUC PR : 0.35892 

Precision : 0.234856 

Recall : 0.893617 

F1 : 0.371956 

Total Learning Time : 5.32 

Total Inference Time : 7.7820963859558105 

Total revision time: 21.91128140449524
Best scored revision CLL: -0.175281


Results 

CLL : -0.169696 

AUC ROC : 0.991296 

AUC PR : 0.35892 

Precision : 0.234856 

Recall : 0.893617 

F1 : 0.371956 

Total Learning Time : 27.43420153617859 

Total Inference Time : 7.7820963859558105 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.301
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09299741994799608;  // std dev = 4.870, 132.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=31 */
%   | | | else return 0.20430278125335766;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7347337483847239;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7288643883178896;  // std dev = 0.027, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.2194734122109545;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.21947341221095448;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6820399869098484;  // std dev = 3.438, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.1621311675690319;  // std dev = 0.105, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.22373365448410584;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.22373365448410584;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.564568480270223;  // std dev = 0.029, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.31724210194356883;  // std dev = 1.233, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06130056233797593;  // std dev = 4.497, 142.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5624060947121935;  // std dev = 2.606, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | | else return -0.14910579018753972;  // std dev = 0.179, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7888683221574972;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.03996819646341643;  // std dev = 1.625, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4519964387063496;  // std dev = 0.108, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4412022966366891;  // std dev = 0.075, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.497035812228443;  // std dev = 0.199, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5472873437991381;  // std dev = 1.676, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else return 0.031100970618476845;  // std dev = 5.239, 246.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5454763386151019;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.03213456700444875;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.06452569690406056;  // std dev = 1.124, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.326211303087646;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.26425114290105634;  // std dev = 0.930, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.07388875195000619;  // std dev = 5.740, 270.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4102173634574975;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.12341338447135679;  // std dev = 1.539, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2704852525142866;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.30625458813591183;  // std dev = 0.944, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32017639494440503;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.023505150005042483;  // std dev = 2.734, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1788839501879277;  // std dev = 0.928, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.013604054479516636;  // std dev = 2.327, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | | else return 0.08021953194943897;  // std dev = 4.551, 160.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2885521153553942;  // std dev = 0.479, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2509671774773976;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.058195386351891115;  // std dev = 0.784, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4833513666406273;  // std dev = 1.729, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.17014739560470207;  // std dev = 0.525, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.06552843759241238;  // std dev = 0.922, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07144986766100171;  // std dev = 4.367, 148.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16551220260421318;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.08183045176317441;  // std dev = 1.356, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return -0.7686242046242898;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.36620833921309087;  // std dev = 3.343, 97.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=82 */
%   | | else return -0.15051239987965204;  // std dev = 0.305, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.20678284845762784;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.0025684626840258374;  // std dev = 1.391, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18096595281883854;  // std dev = 0.237, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.17566153564724205;  // std dev = 0.618, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.25290974423509516;  // std dev = 0.189, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.01492140201674049;  // std dev = 1.732, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.27666559641851285;  // std dev = 0.154, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.041344363364653254;  // std dev = 1.509, 58.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2083094761454035;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.00796585795485118;  // std dev = 4.151, 157.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=47 */
%   | | | else return -0.06862020437310574;  // std dev = 1.473, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12606662838856272;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.20399052081998917;  // std dev = 0.188, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -3.131480437706391E-4;  // std dev = 0.779, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.021960933209723317;  // std dev = 2.312, 145.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.01453994684805652;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.06686946513469309;  // std dev = 3.634, 133.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=47 */
%   | | | else return -0.03488489911856303;  // std dev = 1.473, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.165', 'seconds']
Parameter learned model CLL:-0.201395 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.87, 101, 31], 'false,false,true,false': [5.424, 85, 45], 'false,false,false,true': [1.549, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.027, 0, 13], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [1.0, 2, 2], 'false,true,false,false': [0.707, 1, 1], 'false,false,true,true': [3.438, 14, 76], 'false,false,true,false': [0.105, 198, 0], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.029, 0, 11], 'true,false': [1.233, 2, 6], 'false,true,true': [4.497, 108, 34], 'false,true,false,true': [2.606, 8, 48], 'false,true,false,false': [0.179, 88, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.625, 11, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.108, 0, 10], 'true,false': [0.075, 0, 7], 'false,true,true,true': [0.199, 0, 3], 'false,true,true,false': [1.676, 4, 21], 'false,true,false': [5.239, 188, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.225, 6, 2], 'false,false,false,false': [1.124, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.005, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.93, 1, 10], 'false,true': [5.74, 188, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.539, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(J, A)'}, {'true,true,true': [0.058, 0, 5], 'true,true,false': [0.944, 1, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.006, 0, 2], 'false,true': [2.734, 53, 19], 'false,false,true': [0.928, 1, 8], 'false,false,false,true': [2.327, 40, 11], 'false,false,false,false': [4.551, 110, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.479, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.784, 1, 3], 'true,true,false,false': [1.729, 3, 33], 'true,false': [0.525, 107, 0], 'false,true': [0.922, 1, 5], 'false,false,true': [4.367, 101, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.356, 2, 13], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [3.343, 15, 82], 'false,true,false': [0.305, 175, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.391, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.237, 0, 9], 'true,false,true': [0.618, 2, 2], 'true,false,false': [0.189, 0, 5], 'false,true,true': [1.732, 36, 13], 'false,true,false,true': [0.154, 0, 8], 'false,true,false,false': [1.509, 47, 11], 'false,false,true': [0.039, 0, 5], 'false,false,false,true': [4.151, 110, 47], 'false,false,false,false': [1.473, 16, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.009, 0, 7], 'true,true,true,false': [0.188, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.779, 1, 3], 'false,true': [2.312, 113, 32], 'false,false,true': [0.885, 1, 5], 'false,false,false,true': [3.634, 86, 47], 'false,false,false,false': [1.473, 13, 4]}]
{'': [0.05246913580246885, 0.21459128222915996], 'false': [-2.5376526277146434e-16, 0.20761245674740592], 'false,false': [0.20593205524153635, 0.23999999999999985], 'false,false,false': [0.23999999999999985, nan], 'false,false,true': [0.179694674012857, 0.2263313609467468], 'true': [0.07100591715976314, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [4.8348344665343993e-05, 0.19974211564209923], 'false': [0.21000000000000013, 0.19620273306484928], 'false,true': [0.0, 0.25000000000000006], 'false,true,false': [0.25000000000000006, 0.25], 'false,false': [0.1941820291995985, 0.2399999999999999], 'false,false,false': [0.24000000000000005, 0.24000000000000005], 'false,false,true': [0.13133107232575764, 5.535281849513259e-05], 'true': [0.0, 5.511902015062567e-05]}
{'': [0.09492728546512608, 0.15844669917808735], 'false': [0.15623218927848906, 0.19797189639965684], 'false,false': [0.19797189639965684, nan], 'false,false,true': [0.0, 0.17611681043476252], 'false,true': [0.142384889383884, 0.1677051697778505], 'false,true,false': [0.12129660564008089, 0.0003632181623657506], 'true': [7.618539592261926e-05, 0.1899331421877564]}
{'': [0.0010477536926296997, 0.13794614544833134], 'false': [0.1345517999415883, 0.19993446027530676], 'false,false': [0.0, 0.1975848164488442], 'false,false,false': [0.18750000000000006, 0.21043170392568042], 'false,true': [0.10201120651089608, 0.11159235493800825], 'false,true,true': [0.013197679879287513, 0.1123982708039891], 'true': [0.0011700513498446251, 0.0008045053990336345], 'false,false,true': [nan, 0.0]}
{'': [0.04897366520570304, 0.12572535382902114], 'false': [0.12203693955064086, 0.20355286358380686], 'false,false': [0.0, 0.21520295916729604], 'false,false,false': [0.21520295916729604, nan], 'true': [3.287876386085361e-06, 0.07864366425528452], 'true,true': [3.287876386085361e-06, nan], 'false,false,true': [nan, 0.0]}
{'': [0.05298681168233258, 0.11992085837831701], 'false': [0.10381172010179872, 0.12481788658370754], 'false,false': [0.09568157587787048, 0.1254583254641163], 'false,false,false': [0.10619647885545604, 0.12947033227493945], 'true': [0.05997054648253678, 1.9424367538156684e-05], 'true,true': [0.0006691677979405064, 0.08919475403456409], 'true,false': [nan, 1.9424367538156684e-05]}
{'': [0.10334352610976244, 0.12935241416685955], 'false': [0.14154304816497273, 0.12885683317111982], 'false,false': [0.12885683317111982, nan], 'true': [0.08498183785428691, 0.0025801477621357665], 'true,true': [0.014438701799349488, 0.10636729925299751], 'true,true,false': [0.15358176939900095, 0.08304548625702493], 'true,true,true': [0.015312992697100307, 0.0]}
{'': [0.09788346723172649, 0.10609147804387943], 'false': [0.10467506911366692, 0.13166702487128829], 'false,false': [0.0, 0.1382915780049686], 'false,false,false': [0.1382915780049686, nan], 'false,true': [0.127077344070063, 0.000531297594650777], 'false,true,true': [0.0, 0.11524614526628461], 'true': [0.0, 0.12251148612359283], 'false,false,true': [0.0, nan]}
{'': [0.05251712522680366, 0.08668587897333374], 'false': [0.052323378820998724, 0.10833283671826517], 'false,false': [0.00030257116985898393, 0.11018454139823593], 'false,false,false': [0.10974507425916408, 0.1084316933776021], 'true': [0.0062546443653083705, 0.09175464910794492], 'true,false': [0.09546783391099892, 0.007151504847730805], 'false,true': [0.061256127972058066, 0.04562886128662447], 'false,true,false': [0.002951815270051991, 0.039257128026141515]}
{'': [0.04369020917039079, 0.07342262653364713], 'false': [0.03685890738697163, 0.1046454763108285], 'false,false': [0.13068251817010174, 0.10353997831574369], 'false,false,false': [0.09929229428081417, 0.12759135639003338], 'true': [0.004223392749239428, 0.151802938456454], 'true,true': [0.004223392749239428, nan], 'true,true,true': [1.247614038725277e-05, 0.005866518709696285]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(F, E), interaction(A, F).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 8.019
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( interaction(A, A), recursion_proteinclass(E, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.7152917922423694;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then if ( complex(H, I) )
%   | | | then return 0.06802547830938892;  // std dev = 3.665, 81.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=17 */
%   | | | else return 0.21529179224236947;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.24590403714032863;  // std dev = 3.411, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return 0.15360348055405665;  // std dev = 5.242, 132.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=39 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.5465989732739114;  // std dev = 0.773, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( phenotype(A, E) )
%   | | then if ( interaction(A, F), phenotype(F, E) )
%   | | | then return 0.5904708470950422;  // std dev = 0.827, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.07141375972003651;  // std dev = 0.828, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7264510425268602;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.5944734122109543;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7215474047486595;  // std dev = 2.969, 86.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=76 */
%   | | | else return -0.16135452211968304;  // std dev = 0.121, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.33195398191755604;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07711689226110617;  // std dev = 1.222, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5259243341806591;  // std dev = 0.236, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.4914881077929399;  // std dev = 0.314, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.07171924179112017;  // std dev = 3.878, 104.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=27 */
%   | | | else return -0.007362564770549942;  // std dev = 2.031, 41.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6662841630817087;  // std dev = 1.390, 50.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   | | | else return -0.1401810246355723;  // std dev = 0.074, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.11104538694021794;  // std dev = 1.159, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.7380710764644461;  // std dev = 0.186, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.19751516552603363;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.48111730333408265;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.5101988703392363;  // std dev = 0.179, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.18603201770814554;  // std dev = 0.831, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.15166880201887528;  // std dev = 0.137, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( phenotype(A, G), location(A, H) )
%   | | | then return 0.11452901321355044;  // std dev = 4.580, 151.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=51 */
%   | | | else return 0.06754534677636055;  // std dev = 3.512, 103.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=31 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.40355038419707157;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.2865244698914422;  // std dev = 0.949, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.026181554243170733;  // std dev = 1.149, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3738632714816533;  // std dev = 0.069, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), phenotype(A, F) )
%   | | then return 0.4251486588952134;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.10230434866557811;  // std dev = 0.384, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H), enzyme(J, K) )
%   | | | then return 0.11195226185955576;  // std dev = 4.157, 110.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=39 */
%   | | | else return 0.05246802713437011;  // std dev = 3.182, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
%   | | else return 0.027835633163063984;  // std dev = 0.308, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.31125816869775214;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, M), phenotype(A, N) )
%   | | | then return 0.014639375624021563;  // std dev = 1.158, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.10251959118712868;  // std dev = 1.232, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3630239549096621;  // std dev = 0.107, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( location(F, E), interaction(F, G) )
%   | | | then return 0.5158377724572701;  // std dev = 1.478, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return -0.031203574099123457;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.1806667147671754;  // std dev = 0.603, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.050889202255871124;  // std dev = 2.539, 71.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=14 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5106951353599515;  // std dev = 0.903, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.18099087701569025;  // std dev = 0.210, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.0059800583686820214;  // std dev = 1.792, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.0684870995785251;  // std dev = 3.492, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2874254428909981;  // std dev = 0.097, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), enzyme(A, F) )
%   | | | then return 0.2519964042668278;  // std dev = 1.429, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.49401498668120714;  // std dev = 1.264, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return -0.16459059148754165;  // std dev = 0.080, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.3212508189145299;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, A), phenotype(A, I) )
%   | | | then return 0.08133427515813033;  // std dev = 2.418, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.003466323641414356;  // std dev = 3.164, 107.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=28 */
%   | else if ( location(A, J) )
%   | | then return 0.1795279523847646;  // std dev = 0.815, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.07868415469835972;  // std dev = 0.771, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16299613283369985;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.23037747384876578;  // std dev = 0.167, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32660684110123805;  // std dev = 3.360, 97.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=82 */
%   | | else return -0.14762851978618746;  // std dev = 0.564, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.1472981269982524;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.06899113992552584;  // std dev = 0.923, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.039023313756579824;  // std dev = 1.032, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then return 0.135870602945306;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.21888163568882543;  // std dev = 0.066, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( phenotype(F, H), interaction(F, A) )
%   | | | then return -0.09227221551806342;  // std dev = 1.380, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return -0.028009007515267026;  // std dev = 1.435, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.18060625327330235;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.013317976201941254;  // std dev = 1.626, 66.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=15 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.21474718813631063;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.04503318445933355;  // std dev = 1.609, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.03910444818235858;  // std dev = 3.547, 128.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=44 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1584825826201879;  // std dev = 0.057, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.19111300631442016;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A), phenotype(A, G) )
%   | | | then return -0.12832028956964478;  // std dev = 0.675, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3485281768996222;  // std dev = 0.607, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return -0.1234876139785641;  // std dev = 0.049, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(A, J), interaction(H, J) )
%   | | | then return -0.039426921956904414;  // std dev = 1.693, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | else return 0.015548284941996029;  // std dev = 3.235, 117.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=39 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.047445732863448276;  // std dev = 1.284, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.2424569068557121;  // std dev = 0.719, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.681', 'seconds']
Refined model CLL: -0.187258


******************************************
Best model found
******************************************
Results 

CLL : -0.163889 

AUC ROC : 0.992112 

AUC PR : 0.377119 

Precision : 0.280362 

Recall : 0.818868 

F1 : 0.417709 

Total Learning Time : 8.019 

Total Inference Time : 18.039669513702393 

Total revision time: 35.43457586288452
Best scored revision CLL: -0.187258


Results 

CLL : -0.163889 

AUC ROC : 0.992112 

AUC PR : 0.377119 

Precision : 0.280362 

Recall : 0.818868 

F1 : 0.417709 

Total Learning Time : 40.95749599456787 

Total Inference Time : 18.039669513702393 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.594
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09344305274657119;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.12005369700427329;  // std dev = 5.699, 168.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16962434493557788;  // std dev = 3.617, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7505511758931249;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return -0.28052658778904555;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7889233434043496;  // std dev = 1.683, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.15628236956443034;  // std dev = 0.018, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.09600118706604241;  // std dev = 1.920, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.13033874031448633;  // std dev = 3.254, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.016344887337540574;  // std dev = 2.220, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6774734372536191;  // std dev = 1.015, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.13749793164779509;  // std dev = 4.71e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6282305288604311;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16523283496281563;  // std dev = 3.562, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.05030416436787488;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3807953952676705;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6058616970191608;  // std dev = 0.129, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.06612485832698367;  // std dev = 4.310, 184.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4741238120356046;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5065163945291962;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.12476924142420992;  // std dev = 1.796, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.20830084230036966;  // std dev = 2.958, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.048055088374180516;  // std dev = 4.371, 207.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.35945713265531154;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3821460256339998;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.04755416373252869;  // std dev = 3.679, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | | else return 0.6838203777948828;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.36140396287227505;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.3575547308365306;  // std dev = 0.108, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.3147247378657606;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.0783912730312148;  // std dev = 0.976, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.04684993359519655;  // std dev = 2.842, 84.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=23 */
%   | | | else return 0.06638029580760815;  // std dev = 4.742, 145.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23568042620238291;  // std dev = 0.154, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -6.523270326522964E-4;  // std dev = 0.554, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5954781193078736;  // std dev = 1.280, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.20162133166932533;  // std dev = 0.802, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.043091048965868885;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05735453473673105;  // std dev = 3.423, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17335026262841635;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.19007429627391692;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.459476418540404;  // std dev = 0.784, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1381928104800404;  // std dev = 0.210, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.22540739309973978;  // std dev = 0.014, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.038818542388546776;  // std dev = 3.067, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1594927122948101;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.12731552452881933;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1701451820299621;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09810481790882991;  // std dev = 0.506, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.1951432310189778;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.01707746969497183;  // std dev = 1.288, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17371096975126465;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.044439926849809616;  // std dev = 2.681, 109.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=36 */
%   | | | else return 0.030121507246680355;  // std dev = 3.064, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12993035961378144;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.17155838789930491;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.1306856633182374;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13297776771964231;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.007281446142290621;  // std dev = 1.402, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15017071094800993;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.011169624960135634;  // std dev = 2.749, 128.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=36 */
%   | | | else return 0.052815184266768116;  // std dev = 2.959, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.362', 'seconds']
Parameter learned model CLL:-0.181853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.473, 26, 8], 'false,false,true,false': [5.699, 124, 44], 'false,false,false,true': [3.617, 42, 19], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 9], 'false,true,true': [0.062, 0, 4], 'false,true,false,true': [0.0, 2, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [1.683, 3, 52], 'false,false,true,false': [0.018, 149, 0], 'false,false,false,true': [1.92, 12, 5], 'false,false,false,false': [3.254, 36, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.22, 34, 8], 'false,true,false,true': [1.015, 1, 48], 'false,true,false,false': [4.71e-08, 115, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.562, 37, 20], 'false,false,false,true': [0.866, 3, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [3.33e-08, 0, 9], 'true,false': [1.49e-08, 0, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.129, 0, 3], 'false,true,false': [4.31, 132, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.796, 10, 5], 'false,false,false,false': [2.958, 21, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 9], 'false,true': [4.371, 151, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.679, 47, 19], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [7.45e-09, 0, 6], 'true,true,false': [0.0, 0, 1], 'true,false,true,true': [0.108, 0, 2], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.058, 0, 3], 'false,true': [0.976, 25, 3], 'false,false,true': [7.45e-09, 0, 6], 'false,false,false,true': [2.842, 61, 23], 'false,false,false,false': [4.742, 99, 46]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.154, 0, 12], 'true,true,true,false': [0.554, 1, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.28, 2, 36], 'true,false': [0.802, 93, 0], 'false,true': [0.913, 1, 5], 'false,false,true': [3.423, 85, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.042, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.784, 0, 56], 'false,true,false': [0.21, 157, 0], 'false,false,true,true': [0.014, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.067, 41, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.061, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.036, 0, 4], 'false,true,true': [0.506, 12, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.288, 48, 14], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.681, 73, 36], 'false,false,false,false': [3.064, 41, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.002, 0, 5], 'true,true,true,false': [0.02, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.027, 0, 4], 'false,true': [1.402, 48, 17], 'false,false,true': [3.73e-09, 0, 5], 'false,false,false,true': [2.749, 92, 36], 'false,false,false,false': [2.959, 36, 20]}]
{'': [-2.5376526277146434e-16, 0.20498086899688253], 'false': [0.12244897959183662, 0.19834710743801787], 'false,false': [0.19115772963435043, 0.2185223725286156], 'false,false,false': [0.21445847890352004, 0.0], 'false,false,true': [0.179930795847751, 0.19331065759637273], 'false,true': [0.0, 0.1388888888888887], 'false,true,false': [0.22222222222222224, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [6.344131569286608e-17, 0.1990543760436933], 'false': [0.19599381146715636, 0.1950043491055884], 'false,true': [0.0009658273954848973, 0.25000000000000006], 'false,true,false': [0.0, 0.0], 'false,false': [0.18981893159942329, 0.21015685731208814], 'false,false,false': [0.2169057583338213, 0.2076124567474047], 'false,false,true': [0.051507275900692276, 2.191223800996013e-06], 'true': [0.0, -1.9737298215558337e-16]}
{'': [-2.5376526277146434e-16, 0.16091170205225866], 'false': [0.14102490330705064, 0.22310426749069232], 'false,false': [0.22233643973546693, 0.1875], 'false,false,true': [0.0, 0.22254109860571797], 'false,false,false': [0.1875, nan], 'false,true': [0.11739308649768077, 0.14543814462465407], 'false,true,false': [0.021037759616418496, 1.9308226515220113e-17], 'true': [-3.700743415417188e-17, -1.1102230246251565e-16]}
{'': [1.2688263138573217e-16, 0.13428310700158655], 'false': [0.10397991567440491, 0.23074721915948085], 'false,false': [0.00026231985015104375, 0.23623883055265016], 'false,false,false': [0.2149533764198432, 0.24305555555555497], 'false,true': [0.013659968659910704, 0.10097012692275292], 'false,true,true': [0.0, 0.005549581500524352], 'false,false,true': [0.0, 0.0], 'true': [1.2335811384723962e-16, 4.4408920985006264e-17]}
{'': [-3.172065784643304e-17, 0.12044694823797346], 'false': [0.09228141498834086, 0.20469811692804035], 'false,false': [0.00012869646614960262, 0.20795134417708871], 'false,false,false': [0.2050598132362219, 0.0], 'false,false,true': [0.0, 0.0], 'true': [-2.2204460492503132e-17, -3.700743415417188e-17], 'true,true': [-2.2204460492503132e-17, nan]}
{'': [0.0029048429474146653, 0.12270180668826208], 'false': [0.034025958794478436, 0.13110219661084804], 'false,false': [9.25185853854297e-18, 0.13355679572055187], 'false,false,false': [0.09612166444276417, 0.15510343949025815], 'true': [0.0013818585794068852, 0.003643799687696934], 'true,false': [0.005514935258575701, 0.00110900339071196], 'true,false,true': [0.00578878356527604, 0.0], 'true,true': [9.25185853854297e-18, 0.0]}
{'': [0.13776387944337706, 0.09884449925746241], 'true': [0.07325094676860963, 0.0069153963446151375], 'false': [0.13888888888888887, 0.09684921537379827], 'false,false': [0.09684921537379827, nan], 'true,true': [0.030949681738930025, 0.04570200631012898], 'true,true,false': [0.0, 0.04308981299923791], 'true,true,true': [0.0019732112251265588, 0.10217302759282214]}
{'': [0.00019314995016160376, 0.09024596590540684], 'false': [0.07231856381790072, 0.15034391386309165], 'false,false': [0.00010494925947573952, 0.15416453078645082], 'false,false,false': [0.15416453078645082, nan], 'false,true': [0.010989727873036774, 0.0002798436483907792], 'false,true,true': [nan, 0.010989727873036743], 'true': [0.0, 0.00020056501325210752], 'false,false,true': [0.00010494925947573952, nan]}
{'': [0.00046704516249781606, 0.07541203207398496], 'false': [0.027085696605959123, 0.09524657883679702], 'false,false': [0.0, 0.09753178499548863], 'false,false,false': [0.06593091843974842, 0.15386745503545612], 'false,true': [0.019690295328299887, 0.027290564603535857], 'false,true,false': [0.0, 0.026763479590588304], 'true': [0.0004195173339623073, 0.0005497964841294001], 'true,false': [0.0, 0.00032036969282871544]}
{'': [0.0003559575617483284, 0.07273978383427691], 'false': [0.03022049747393876, 0.08705879606370348], 'false,false': [2.7755575615628915e-18, 0.08900234572971284], 'false,false,false': [0.05903089566000067, 0.1563020111541744], 'true': [0.00040075555453672197, 0.000178242839389494], 'true,true': [0.00045680900874699865, 0.0], 'true,true,true': [8.557255289476374e-07, 0.00013367318560605448], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,false;interaction(A, J), interaction(J, K).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
4;false,false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 2.518
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.1362238014096732;  // std dev = 6.127, 187.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=52 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.17481560176617897;  // std dev = 3.603, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7518526675222027;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8218763372109166;  // std dev = 0.991, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.1570602123041324;  // std dev = 0.103, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.1569374526481655;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.31366960339402683;  // std dev = 2.395, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5608441807988545;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5717996689039943;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10920268432964601;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.15811139787713688;  // std dev = 1.924, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6869069677412423;  // std dev = 0.275, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13933354055293998;  // std dev = 7.60e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.05536643674628447;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.1284874403991289;  // std dev = 3.618, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | else return 0.28496665468353954;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4217202317141034;  // std dev = 0.013, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4348683059933144;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3859118959883101;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5806417988335686;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, H), interaction(A, I) )
%   | | | then return -0.018892312494207184;  // std dev = 1.656, 41.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | | | else return 0.07638753599196008;  // std dev = 3.813, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5325556744391622;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.02971989409296865;  // std dev = 2.602, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.14257276885202458;  // std dev = 2.626, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.31746669463378707;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.33203151554777843;  // std dev = 0.014, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10232271654429745;  // std dev = 0.016, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.025650189637447467;  // std dev = 0.910, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.05326743774978189;  // std dev = 3.107, 105.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=30 */
%   | | | else return 0.1098404494427751;  // std dev = 2.526, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.40083854170162575;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.056380493098414426;  // std dev = 3.661, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.0375187203371166;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25154801729415904;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.04495043686792535;  // std dev = 0.548, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.30204553087641883;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( phenotype(A, G), enzyme(A, H) )
%   | | then return 0.12135775688627401;  // std dev = 0.615, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.12113205807579977;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.04700097771954722;  // std dev = 0.464, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2698321420738227;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.04091558808103905;  // std dev = 3.498, 134.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=37 */
%   | | | else return 0.0919866665735547;  // std dev = 4.031, 93.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23538351680672984;  // std dev = 0.044, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2021346312654252;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6294728731674832;  // std dev = 0.737, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19156760874947262;  // std dev = 0.095, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.4731314065843243;  // std dev = 0.084, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.14819793844129436;  // std dev = 0.011, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.22389848413531213;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.20999371446761161;  // std dev = 1.138, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0650572798428309;  // std dev = 1.773, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17154146221688266;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.17056344827119807;  // std dev = 0.013, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.329955645721533;  // std dev = 0.310, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.4294201987092566;  // std dev = 0.382, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.10733642760472185;  // std dev = 0.140, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.15199052520894984;  // std dev = 0.258, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2075130857149925;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.0070039011647765265;  // std dev = 2.142, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.10467017062372155;  // std dev = 2.094, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15411765706558386;  // std dev = 0.014, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17812412754231868;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.07216428894122706;  // std dev = 0.011, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.05092641002115101;  // std dev = 0.355, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.05497661657993256;  // std dev = 0.333, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.02721285316524199;  // std dev = 1.342, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.014587629544233835;  // std dev = 0.903, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.09777998806764973;  // std dev = 2.355, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return -3.9110564321090353E-4;  // std dev = 3.004, 144.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=42 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.1382183666864376;  // std dev = 0.013, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.12833463379598542;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1554900757228454;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then return -0.0827407330523556;  // std dev = 0.293, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.018649740456093432;  // std dev = 0.895, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.05174539648138589;  // std dev = 0.677, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.15204134982536865;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return -0.061257287076268194;  // std dev = 1.881, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.019557143291202686;  // std dev = 3.336, 153.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=49 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.327', 'seconds']
Refined model CLL: -0.176673


******************************************
Best model found
******************************************
Results 

CLL : -0.193204 

AUC ROC : 0.981045 

AUC PR : 0.185804 

Precision : 0.133817 

Recall : 0.931408 

F1 : 0.234014 

Total Learning Time : 2.518 

Total Inference Time : 2.8700804710388184 

Total revision time: 9.984222900390625
Best scored revision CLL: -0.176673


Results 

CLL : -0.193204 

AUC ROC : 0.981045 

AUC PR : 0.185804 

Precision : 0.133817 

Recall : 0.931408 

F1 : 0.234014 

Total Learning Time : 15.507143032073975 

Total Inference Time : 2.8700804710388184 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.486
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.04655473220096165;  // std dev = 3.248, 69.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=13 */
%   | | | else return 0.1470378239884007;  // std dev = 5.266, 135.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.24945328292559932;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7324548349452545;  // std dev = 0.070, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3194734122109545;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7883171303799673;  // std dev = 1.675, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.1567519917220741;  // std dev = 0.071, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.14114419769558723;  // std dev = 1.855, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.07916584297493345;  // std dev = 2.296, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5588443971225469;  // std dev = 0.057, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.25930016166792447;  // std dev = 1.121, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.032643237428269294;  // std dev = 2.868, 70.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6090780778103502;  // std dev = 1.907, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | | else return -0.1406726746969316;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.673130911113777;  // std dev = 0.184, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1254649314269052;  // std dev = 2.428, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.10571403697720488;  // std dev = 1.473, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.41561741621618253;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4671102414344435;  // std dev = 0.161, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5472918167697562;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6148905444284413;  // std dev = 0.178, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.07253457406192164;  // std dev = 4.300, 176.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4382480476910225;  // std dev = 0.069, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.12173353541567733;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.0681491104608082;  // std dev = 1.896, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.03646263252034098;  // std dev = 2.279, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3138884070127873;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12869283987821156;  // std dev = 1.247, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.047038227344973566;  // std dev = 4.566, 207.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.2913159657802443;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4864193598146388;  // std dev = 0.150, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.06365515901739273;  // std dev = 2.514, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.07920237038095403;  // std dev = 1.481, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2630027617450218;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2961219991128835;  // std dev = 0.127, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.23499515470049104;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.05204562027721987;  // std dev = 0.825, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.17386911577642558;  // std dev = 1.020, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06411937162410243;  // std dev = 1.238, 36.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3650939113071199;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.07324630952744135;  // std dev = 2.205, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.06397310905549754;  // std dev = 4.574, 159.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2611758797397805;  // std dev = 0.268, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2884059812265136;  // std dev = 0.175, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.003027535604072651;  // std dev = 0.913, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5760243613178543;  // std dev = 1.182, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17203131360796844;  // std dev = 0.594, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2980627680016614;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08991702691381408;  // std dev = 3.332, 89.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16936262393020463;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.21877686305678237;  // std dev = 0.141, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4470689168183315;  // std dev = 1.283, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.1426504820722028;  // std dev = 0.229, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.2744586043631277;  // std dev = 0.606, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.2761642586145981;  // std dev = 0.119, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.05487001670115891;  // std dev = 2.421, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15780774165823583;  // std dev = 0.085, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1963977608378762;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.21719452750662427;  // std dev = 0.131, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.06424853560036278;  // std dev = 0.309, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.09224416793559458;  // std dev = 0.974, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.034809214015700175;  // std dev = 1.645, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20236626522355286;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.012023086016696093;  // std dev = 2.879, 110.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=31 */
%   | | | else return -0.00231649614973065;  // std dev = 2.513, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1270842717897213;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.16878718168852458;  // std dev = 0.859, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.13541465233817018;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16721836639592885;  // std dev = 2.18e-05, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.2043718891911127;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.03703382837658552;  // std dev = 1.983, 111.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17173711886213705;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02852582296741046;  // std dev = 2.820, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
%   | | | else return 0.06714662551620604;  // std dev = 2.364, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.715', 'seconds']
Parameter learned model CLL:-0.179164 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.248, 56, 13], 'false,false,true,false': [5.266, 96, 39], 'false,false,false,true': [2.341, 14, 9], 'false,false,false,false': [1.5, 9, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.07, 0, 11], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.095, 2, 3], 'false,false,true,true': [1.675, 3, 52], 'false,false,true,false': [0.071, 139, 0], 'false,false,false,true': [1.855, 11, 5], 'false,false,false,false': [2.296, 21, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.057, 0, 11], 'true,false': [1.121, 2, 4], 'false,true,true': [2.868, 56, 14], 'false,true,false,true': [1.907, 4, 42], 'false,true,false,false': [0.0, 98, 0], 'false,false,true,true': [0.184, 0, 3], 'false,false,true,false': [2.428, 19, 9], 'false,false,false,true': [1.473, 8, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.004, 0, 6], 'true,false': [0.161, 0, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.178, 0, 6], 'false,true,false': [4.3, 127, 49], 'false,false,true,true': [0.069, 0, 2], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [1.896, 13, 5], 'false,false,false,false': [2.279, 22, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.02, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [1.247, 2, 6], 'false,true': [4.566, 151, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.15, 0, 2], 'false,false,false,true': [2.514, 22, 9], 'false,false,false,false': [1.481, 8, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.031, 0, 5], 'true,true,false': [0.127, 0, 3], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.825, 1, 3], 'true,false,false': [1.02, 1, 4], 'false,true': [1.238, 31, 5], 'false,false,true': [0.069, 0, 5], 'false,false,false,true': [2.205, 31, 13], 'false,false,false,false': [4.574, 112, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.268, 0, 13], 'true,true,true,false': [0.175, 0, 3], 'true,true,false,true': [0.913, 1, 3], 'true,true,false,false': [1.182, 1, 33], 'true,false': [0.594, 126, 0], 'false,true': [0.05, 0, 3], 'false,false,true': [3.332, 58, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.141, 0, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.283, 1, 56], 'false,true,false': [0.229, 149, 0], 'false,false,true,true': [0.606, 1, 1], 'false,false,true,false': [0.119, 0, 2], 'false,false,false,true': [2.421, 27, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.085, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.131, 0, 5], 'false,true,true': [0.309, 7, 1], 'false,true,false,true': [0.974, 1, 6], 'false,true,false,false': [1.645, 65, 17], 'false,false,true': [0.038, 0, 3], 'false,false,false,true': [2.879, 79, 31], 'false,false,false,false': [2.513, 35, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.027, 0, 8], 'true,true,true,false': [0.859, 1, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [2.18e-05, 0, 2], 'true,false': [0.097, 0, 3], 'false,true': [1.983, 87, 24], 'false,false,true': [0.034, 0, 3], 'false,false,false,true': [2.82, 67, 31], 'false,false,false,false': [2.364, 24, 12]}]
{'': [0.05859374999999978, 0.20531760195650783], 'false': [-2.5376526277146434e-16, 0.19607499868699904], 'false,false': [0.18992695117262678, 0.2253061224489791], 'false,false,false': [0.23818525519848777, 0.1874999999999999], 'false,false,true': [0.15290905272001626, 0.20543209876543267], 'true': [-1.4802973661668753e-16, 0.18750000000000006], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.0003624995143289548, 0.2009045850304159], 'false': [0.17283950617283964, 0.1964854590837545], 'false,false': [0.1959231197897229, 0.1988916617676792], 'false,false,false': [0.21505367536947087, 0.1882593830769331], 'false,false,true': [0.051041468651183405, 3.616241424688285e-05], 'false,true': [0.0, 0.20408163265306128], 'false,true,false': [0.0, 0.24000000000000005], 'true': [0.0, 0.00044937956321764653]}
{'': [0.09464026926906499, 0.15177728627990258], 'false': [0.1386087492641312, 0.2132216633061124], 'false,false': [0.21752270263712883, 0.19719404836725418], 'false,false,true': [0.011335714304703481, 0.210587905159225], 'false,false,false': [0.19719404836725418, nan], 'false,true': [0.11746765469293816, 0.14745269011811496], 'false,true,false': [0.07903292780473932, 0.0], 'true': [0.000294131801192098, 0.20954970331692813]}
{'': [0.002376045876520383, 0.12849725575395668], 'false': [0.11168986141188637, 0.1882707558252486], 'false,false': [0.15124911299378763, 0.18722210807198392], 'false,false,false': [0.1996259285929153, 0.17913866175775195], 'false,false,true': [0.002407507747125448, 0.25], 'false,true': [0.005078805177486918, 0.10507555124537787], 'false,true,true': [0.0, 0.005272474424057612], 'true': [2.2074591887003927e-06, 0.0028980004018249123]}
{'': [0.09998109322712823, 0.11838877855879816], 'false': [0.10071492572139881, 0.19807892903439925], 'false,false': [0.015990743054756378, 0.20274696982975376], 'false,false,false': [0.20388230040312186, 0.19936899258319943], 'true': [4.44403053070857e-05, 0.1942523817184903], 'false,false,true': [0.0, 0.011297669794221255], 'true,true': [4.44403053070857e-05, nan]}
{'': [0.10424709771063372, 0.1161351310940255], 'false': [0.04255601535134011, 0.1260889399791327], 'false,false': [0.0009414599587320493, 0.12702073399820157], 'false,false,false': [0.11048199323963624, 0.1315788537334788], 'true': [0.0024051899440112323, 0.17648283130719294], 'true,false': [0.14138173253093056, 0.207951547769398], 'true,false,true': [0.0, 0.17003305923452489], 'true,true': [0.00018676049109592752, 0.005417019938143808]}
{'': [0.10448497509829348, 0.122102345299124], 'false': [0.0008331063307467912, 0.12477731214450244], 'false,false': [0.12477731214450244, nan], 'true': [0.07798360151543465, 0.002804386126267729], 'true,true': [0.006508552237574919, 0.08964457569970015], 'true,true,false': [0.20834873652611896, 0.04111881585803351], 'true,true,true': [0.005505529438192909, 0.010252533146310935]}
{'': [0.001801758001091236, 0.09085425564505488], 'false': [0.07785128450044311, 0.1524363109600095], 'false,false': [0.17112633561389629, 0.15024795681777314], 'false,false,true': [0.18355984626061825, 0.007100056350280673], 'false,false,false': [0.15024795681777314, nan], 'false,true': [0.02889541603660711, 0.0003520322085276544], 'false,true,true': [nan, 0.02889541603660708], 'true': [0.0, 0.00180580485450512]}
{'': [0.0022752656948561573, 0.07270363849695254], 'false': [0.03985622299582083, 0.09203004051176639], 'false,false': [0.0004858377941500079, 0.09306898388993882], 'false,false,false': [0.07536044649504148, 0.13437042943967434], 'false,true': [0.011953883631183618, 0.0422360588535629], 'false,true,false': [0.13552504396492926, 0.033002725305324866], 'true': [0.0007204996038486678, 0.002912092513819853], 'true,false': [0.0, 0.0034224267659381303]}
{'': [0.05959726739105218, 0.07237029941221086], 'false': [0.03544082753768939, 0.09950891472864773], 'false,false': [0.0003747922382872128, 0.10134194226955524], 'false,false,false': [0.08116593891496464, 0.15517465989606471], 'true': [0.06851161323043761, 0.003130093363504514], 'true,true': [0.08453181852807254, 0.00022477265362648435], 'true,true,true': [9.087843303898918e-05, 0.24604226461180093], 'true,true,false': [0.0, 2.3781717220505705e-10]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.466
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.22434611819810266;  // std dev = 4.059, 71.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=26 */
%   | | | else return 0.13552119787323433;  // std dev = 5.240, 137.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5656272583648005;  // std dev = 0.361, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7670719622367217;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4813730497173963;  // std dev = 0.881, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8159608602601495;  // std dev = 0.985, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15954689687664445;  // std dev = 0.159, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.3408383131585516;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.11670038212406884;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5792908918819852;  // std dev = 0.018, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5929620091023857;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.10896102094592869;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0.08210974182879455;  // std dev = 2.641, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5979294233646986;  // std dev = 1.908, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | | else return -0.14450207792083322;  // std dev = 0.051, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.37534704794333335;  // std dev = 0.882, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.19607858209133344;  // std dev = 2.061, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.0626878731194314;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4384521991016984;  // std dev = 0.016, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5350095951273668;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.412040121738385;  // std dev = 0.893, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.1172163409172975;  // std dev = 0.125, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.0786642001151287;  // std dev = 4.217, 158.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5476813959153908;  // std dev = 0.050, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5212698976165113;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.14845312856365903;  // std dev = 2.078, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.06534024677896474;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3350451166359773;  // std dev = 0.015, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.07160602086323452;  // std dev = 0.745, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.05727815738550797;  // std dev = 1.063, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.06389823181784005;  // std dev = 3.820, 132.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=41 */
%   | | | else return 0.11560018805443516;  // std dev = 1.700, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return 0.3779521682301342;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4198614572122557;  // std dev = 0.038, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.03917012429172212;  // std dev = 2.078, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.2776534480138573;  // std dev = 1.722, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.27281805819858473;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.29396553740369236;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.05679486344249304;  // std dev = 0.914, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.17334127886819223;  // std dev = 0.850, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then if ( interaction(A, I), interaction(I, I) )
%   | | then return -0.06261426873870897;  // std dev = 0.123, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else return 0.05238985861777961;  // std dev = 0.290, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.10465030294144584;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.03524083682367303;  // std dev = 3.355, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | | | else return 0.11156945831695043;  // std dev = 3.570, 92.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=36 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.26451918477255515;  // std dev = 0.065, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then if ( interaction(G, A), enzyme(A, H) )
%   | | | then return 0.09175836505734915;  // std dev = 1.450, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.029835161850045012;  // std dev = 2.501, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.0478614516339759;  // std dev = 1.892, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return 0.1664751386644433;  // std dev = 1.670, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.0013435760377399908;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, K) )
%   | | then return 0.005014422915388549;  // std dev = 0.304, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.09918131006710106;  // std dev = 1.952, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.007002322166508939;  // std dev = 1.494, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.15872468690144104;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.22516291212387873;  // std dev = 0.031, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), location(A, H) )
%   | | | then return 0.41927487153768495;  // std dev = 0.986, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return 0.5167160752167292;  // std dev = 0.327, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else return -0.15339671069968258;  // std dev = 0.035, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return 0.01853638486634555;  // std dev = 2.026, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.324762996793056;  // std dev = 1.137, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.05400863597285829;  // std dev = 1.160, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.03936895654243531;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16492772917857224;  // std dev = 0.033, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.19419799655387215;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2115955250367918;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), interaction(H, I) )
%   | | then if ( enzyme(A, J), phenotype(I, K) )
%   | | | then return 0.049054990050907354;  // std dev = 1.254, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return -0.02209009671870623;  // std dev = 1.606, 64.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | else return 0.1379625802104952;  // std dev = 0.584, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.21134730215053735;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return -0.06955999353304781;  // std dev = 2.452, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return 0.027920640438515307;  // std dev = 2.976, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14584298979145505;  // std dev = 0.028, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.19968232655549245;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.036278919259901204;  // std dev = 1.456, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return 0.04241109368163674;  // std dev = 1.070, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.0414022970089284;  // std dev = 1.249, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.08059972589230235;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return -0.07140403461118466;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, M) )
%   | | | then return -0.05089027197353292;  // std dev = 3.026, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | | else return 0.03736163083830993;  // std dev = 2.563, 81.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=31 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '43.325', 'seconds']
Refined model CLL: -0.208224


******************************************
Best model found
******************************************
Results 

CLL : -0.189978 

AUC ROC : 0.983672 

AUC PR : 0.243211 

Precision : 0.145193 

Recall : 0.784452 

F1 : 0.245033 

Total Learning Time : 3.466 

Total Inference Time : 3.636813163757324 

Total revision time: 11.791516878128052
Best scored revision CLL: -0.179164


Results 

CLL : -0.189978 

AUC ROC : 0.983672 

AUC PR : 0.243211 

Precision : 0.145193 

Recall : 0.784452 

F1 : 0.245033 

Total Learning Time : 17.3144370098114 

Total Inference Time : 3.636813163757324 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.236
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11799145478455035;  // std dev = 4.942, 127.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=33 */
%   | | | else return 0.16066994350287242;  // std dev = 5.011, 119.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.058148935099512175;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04701438684128155;  // std dev = 0.787, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6921235377191154;  // std dev = 3.195, 81.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | | else return -0.15925246079843985;  // std dev = 0.035, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.019730022618308474;  // std dev = 1.563, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.35092203251355425;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.35536643674628426;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.12552592366782894;  // std dev = 4.208, 110.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6452863956325708;  // std dev = 1.665, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14202370174859574;  // std dev = 6.14e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22085060252771047;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1279928728634821;  // std dev = 1.308, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4470864646730604;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.31690341346509626;  // std dev = 0.919, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5195318367752149;  // std dev = 1.562, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return 0.0698381119519963;  // std dev = 4.911, 206.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5235786933486264;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.2339690312427658;  // std dev = 1.301, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.11286447050834286;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3806803635774588;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13471005552104368;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.05352474106768878;  // std dev = 5.517, 247.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39431883399428913;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.24408337968909186;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.18853325069679722;  // std dev = 1.076, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.08930470417183838;  // std dev = 0.879, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.38708994531484453;  // std dev = 0.230, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3035240187550473;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3050185102775287;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return 0.002374080455348115;  // std dev = 2.263, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.30929759504249693;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.056829002097128045;  // std dev = 2.923, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | | else return 0.0491897267356723;  // std dev = 4.224, 143.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.28331888945580397;  // std dev = 0.220, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2444322539166247;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5880061891716203;  // std dev = 0.365, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.19853280941386106;  // std dev = 0.697, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24744540737938395;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05153003398471563;  // std dev = 4.053, 135.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.2160363449783472;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.10044796449687618;  // std dev = 0.815, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3509178575603299;  // std dev = 3.201, 86.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=71 */
%   | | else return -0.15176919647034282;  // std dev = 0.238, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.20214146846998038;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.07801499086773417;  // std dev = 1.468, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18598575079988772;  // std dev = 0.082, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.22043012479636262;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.02363897496194407;  // std dev = 1.430, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.34299052407937014;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.019212196643186994;  // std dev = 1.866, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18850113021158554;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0180223120790651;  // std dev = 3.664, 136.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=40 */
%   | | | else return -0.06181152152089877;  // std dev = 1.473, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.05140829066712217;  // std dev = 1.132, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.22551291277918362;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.3927555013768996;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.18535202104125018;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return 0.010385599338216374;  // std dev = 2.188, 101.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=29 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16136625154163606;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0532627039548959;  // std dev = 3.449, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
%   | | | else return 0.08029227462490134;  // std dev = 1.331, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.028', 'seconds']
Parameter learned model CLL:-0.195759 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.942, 94, 33], 'false,false,true,false': [5.011, 83, 36], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.265, 8, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 9], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.787, 3, 1], 'false,false,true,true': [3.195, 12, 69], 'false,false,true,false': [0.035, 156, 0], 'false,false,false,true': [1.563, 13, 3], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [1.265, 2, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.208, 76, 34], 'false,true,false,true': [1.665, 3, 37], 'false,true,false,false': [6.14e-08, 77, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.095, 3, 2], 'false,false,false,true': [1.308, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.054, 0, 5], 'true,false': [0.919, 1, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.562, 3, 14], 'false,true,false': [4.911, 149, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.301, 4, 3], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.036, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.886, 1, 4], 'false,true': [5.517, 176, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.076, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.879, 1, 4], 'true,true,false': [0.23, 0, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [2.263, 39, 12], 'false,false,true': [0.03, 0, 3], 'false,false,false,true': [2.923, 49, 20], 'false,false,false,false': [4.224, 102, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.22, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.365, 0, 33], 'true,false': [0.697, 82, 0], 'false,true': [0.027, 0, 3], 'false,false,true': [4.053, 95, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.018, 0, 3], 'true,false': [0.815, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.201, 15, 71], 'false,true,false': [0.238, 162, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.468, 16, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.082, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.088, 0, 3], 'false,true,true': [1.43, 35, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.866, 51, 17], 'false,false,true': [0.022, 0, 3], 'false,false,false,true': [3.664, 96, 40], 'false,false,false,false': [1.473, 16, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [1.132, 2, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.077, 0, 3], 'false,true': [2.188, 72, 29], 'false,false,true': [0.019, 0, 3], 'false,false,false,true': [3.449, 76, 40], 'false,false,false,false': [1.331, 7, 4]}]
{'': [-1.6148698540002277e-16, 0.20454254182983292], 'false': [0.18750000000000006, 0.20146504014914765], 'false,false': [0.20181439619274275, 0.1955555555555554], 'false,false,true': [0.19232438464877055, 0.2110020478779759], 'false,false,false': [0.24000000000000005, 0.16000000000000003], 'false,true': [0.0, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.0, 0.2047339293118665], 'false': [0.20365055268788954, 0.20427774488828415], 'false,false': [0.20615101805778652, 0.17435781807642378], 'false,false,true': [0.1260566012286845, 8.004314017253997e-06], 'false,true': [0.0, 0.15474211543145752], 'false,false,false': [0.15271497340059315, 0.25], 'false,true,false': [nan, 0.15474211543145752], 'true': [0.0, -9.868649107779169e-17]}
{'': [0.1301775147928993, 0.16493464864825916], 'false': [0.1620949132869203, 0.20983841082556856], 'false,false': [0.24000000000000007, 0.19000248741018774], 'false,false,true': [nan, 0.24000000000000007], 'false,false,false': [0.19000248741018774, nan], 'false,true': [0.1609479827433813, 0.16317195824675862], 'false,true,false': [0.06933777627559375, 4.902283485357834e-17], 'true': [0.16000000000000011, 0.0]}
{'': [0.07479071416318052, 0.1383692290181612], 'false': [0.13333359811423437, 0.22600244835803884], 'false,false': [0.0, 0.23894473362565205], 'false,false,false': [0.24171162983791872, 0.2222222222222222], 'false,true': [0.14357403698604518, 0.11707229996968857], 'false,true,true': [nan, 0.14357403698604526], 'true': [0.000583036841293172, 0.120734686788772], 'false,false,true': [nan, 0.0]}
{'': [0.08022815804342784, 0.12814120243691565], 'false': [0.123216701157004, 0.21939118239358776], 'false,false': [0.0, 0.2404883812411985], 'false,false,false': [0.25000000000000006, 0.2315076120870192], 'true': [0.00018948756062405918, 0.15698981779288862], 'true,true': [0.00018948756062405918, nan], 'false,false,true': [nan, 0.0]}
{'': [0.0878634973209463, 0.1196193772359356], 'false': [0.10040004401151535, 0.12364191087831146], 'false,false': [0.00030946063399878154, 0.12446110459887824], 'false,false,false': [0.12382353896874769, 0.12474974711244474], 'true': [0.10470845752370353, 5.583762276994975e-07], 'true,true': [0.15445858558346906, 0.010620304542638759], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}
{'': [0.12592773622379008, 0.11986951481408636], 'true': [0.021968629517013352, 0.005931832397062011], 'false': [0.00023425507528729295, 0.12169366671699851], 'false,false': [0.12169366671699851, nan], 'true,true': [0.00451288119803103, 0.004036942865400263], 'true,true,true': [0.004826699279328983, 0.0], 'true,true,false': [nan, 0.004036942865400532]}
{'': [0.057915521949200854, 0.09991513000465103], 'false': [0.09878640287746221, 0.10623078357450082], 'false,false': [0.0, 0.10780481600519516], 'false,false,false': [0.10780481600519516, nan], 'false,true': [0.11914659695611053, 0.0003500516051053068], 'false,true,true': [nan, 0.11914659695611055], 'true': [0.00011057006987744145, 0.07384367081672633], 'false,false,true': [0.0, nan]}
{'': [0.0015479417047847429, 0.07852688041076428], 'false': [0.04921103932909894, 0.09937645118857182], 'false,false': [0.00015750854286381935, 0.10066832810450739], 'false,false,false': [0.09869077182258024, 0.10855937765322561], 'false,true': [0.04444964276121042, 0.05234785299652785], 'false,true,false': [0.0, 0.05121635826414092], 'true': [0.0008461276342388302, 0.0025565986929005913], 'true,false': [nan, 0.0025565986929005913]}
{'': [0.1155670651365559, 0.08061910853415773], 'true': [0.13392923997682724, 0.0019894994624757947], 'true,true': [0.13494125235041132, 0.0], 'true,true,true': [0.14226618954197534, 0.0], 'false': [0.04739312445425533, 0.10544003135693195], 'false,false': [0.00012306960649602813, 0.10766970238692487], 'false,false,false': [0.10255121350668879, 0.1609791766391985], 'true,true,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 5.685
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.12841920536978263;  // std dev = 2.701, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return 0.2217852987358757;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return 0.1355682899382211;  // std dev = 5.574, 155.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6790794919946541;  // std dev = 3.306, 82.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=69 */
%   | | | else return -0.1588451315609955;  // std dev = 0.151, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.06358448718806879;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.17416534409525872;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5780839080730493;  // std dev = 0.029, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.04373446120150269;  // std dev = 2.943, 65.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | | | else return 0.1442072193488201;  // std dev = 3.140, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6222534134783357;  // std dev = 1.899, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.1417316668181062;  // std dev = 0.039, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.2325352634224748;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.009956931966259575;  // std dev = 1.115, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.016118249287902186;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.41420504748296744;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.4427986860890012;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1215698719273901;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11894906389536249;  // std dev = 0.005, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( location(A, H) )
%   | | | then return 0.12208267185147255;  // std dev = 5.322, 196.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=68 */
%   | | | else return 0.004530230471715988;  // std dev = 1.192, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5578237723558961;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.029392548483125516;  // std dev = 0.906, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.23456382216478183;  // std dev = 1.318, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3470763427790606;  // std dev = 0.046, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.33691046567742033;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.2917761290262461;  // std dev = 4.191, 114.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=68 */
%   | | | else return -0.15429667458260357;  // std dev = 0.347, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.22692384215997496;  // std dev = 0.797, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.10052375470173447;  // std dev = 0.572, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4193385763413723;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.02815883654261545;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.19966486656097437;  // std dev = 1.310, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then return 0.13400189305128804;  // std dev = 0.542, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.30756418857713264;  // std dev = 0.158, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.34109123546499676;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( enzyme(I, K), interaction(L, I) )
%   | | | then return -0.04917305758502509;  // std dev = 0.740, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.07738635980199111;  // std dev = 2.162, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else return -0.12107917309406872;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | then return 0.027455817979361002;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, N), interaction(P, A) )
%   | | | then return 0.005079808755718525;  // std dev = 2.512, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | | else return 0.0763664772880119;  // std dev = 3.977, 131.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24513901532954263;  // std dev = 0.047, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.5012052236166038;  // std dev = 1.139, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | | else return 0.7376426745383216;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.17869390414955463;  // std dev = 0.086, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2656482046421145;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), interaction(I, A) )
%   | | | then return 0.024978836372157184;  // std dev = 1.748, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.14836591987095363;  // std dev = 1.834, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.004872180334618396;  // std dev = 2.460, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | | else return 0.15563485420900944;  // std dev = 0.627, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1734120840187345;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.20510892876580789;  // std dev = 0.028, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), complex(A, H) )
%   | | | then return 0.4311596401291737;  // std dev = 0.235, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.3308436653913513;  // std dev = 2.772, 69.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=58 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.11966003118160914;  // std dev = 0.239, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | | else return -0.16035366263167056;  // std dev = 0.281, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.20898441100592446;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.07974709503495574;  // std dev = 0.935, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.08657826211951254;  // std dev = 1.013, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17225096230575154;  // std dev = 0.029, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.038617389148189254;  // std dev = 0.408, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.04621956769778511;  // std dev = 1.367, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.11750116525827825;  // std dev = 0.798, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.14424783604824892;  // std dev = 0.412, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.009408022430779919;  // std dev = 1.672, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18455110021508392;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return -0.03973990048894264;  // std dev = 2.157, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | | else return 0.045230551281161185;  // std dev = 2.803, 88.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=31 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.0854619702354939;  // std dev = 1.278, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.19919560800885394;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15104918293748595;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(H, A), interaction(H, H) )
%   | | then return -0.028044822271076256;  // std dev = 0.261, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else return 0.038281706033430736;  // std dev = 0.218, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15845192281178852;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.15011428426139486;  // std dev = 1.195, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.037611517817043895;  // std dev = 2.924, 112.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=37 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.069', 'seconds']
Refined model CLL: -0.195251


******************************************
Best model found
******************************************
Results 

CLL : -0.20077 

AUC ROC : 0.987148 

AUC PR : 0.24108 

Precision : 0.185866 

Recall : 0.932624 

F1 : 0.309959 

Total Learning Time : 5.685 

Total Inference Time : 10.042384386062622 

Total revision time: 24.179018493652343
Best scored revision CLL: -0.195251


Results 

CLL : -0.20077 

AUC ROC : 0.987148 

AUC PR : 0.24108 

Precision : 0.185866 

Recall : 0.932624 

F1 : 0.309959 

Total Learning Time : 24.19272327041626 

Total Inference Time : 10.042384386062622 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.234
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.06903328884100794;  // std dev = 4.946, 147.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=31 */
%   | | | else return 0.17957750652808288;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.14386322081379804;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7347337483847239;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6694190766481093;  // std dev = 0.970, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7641072739982948;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6759880895252756;  // std dev = 3.540, 91.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=76 */
%   | | | else return -0.15812104574801622;  // std dev = 0.100, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.3397187297348978;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2397187297348978;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5050139710311207;  // std dev = 0.961, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.44977062149675556;  // std dev = 0.909, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09079214866436999;  // std dev = 4.369, 125.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5562040161888561;  // std dev = 2.758, 57.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   | | | else return -0.1467347565008842;  // std dev = 0.181, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8047762653401092;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08752514183447162;  // std dev = 1.608, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4646644224204022;  // std dev = 0.052, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.05571095191748641;  // std dev = 1.718, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3115982664621131;  // std dev = 0.761, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5436979888114691;  // std dev = 1.738, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else return 0.023321734507284583;  // std dev = 5.272, 261.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5225393762484938;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.10695808180559825;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.25507189337239655;  // std dev = 0.934, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3831538126350907;  // std dev = 0.147, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2511030089868674;  // std dev = 1.222, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.07192976980152525;  // std dev = 5.793, 277.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3935722997227362;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.17632123564150504;  // std dev = 1.441, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2658212338788905;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.34601468228669563;  // std dev = 0.719, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.35204539215233516;  // std dev = 0.067, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.02931571841708596;  // std dev = 2.745, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2451087451211632;  // std dev = 0.885, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.020998083399684876;  // std dev = 2.287, 63.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=11 */
%   | | | else return 0.07565962963080079;  // std dev = 4.691, 156.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.29732952562898607;  // std dev = 0.276, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.23542307642404903;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.030024196896051625;  // std dev = 0.786, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.46486218102901394;  // std dev = 1.837, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.1796389900529037;  // std dev = 0.854, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.31818143587047754;  // std dev = 0.100, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08063026183458294;  // std dev = 4.393, 145.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16356442206521404;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.17501843289004412;  // std dev = 0.922, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.414740099140177;  // std dev = 2.905, 91.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=82 */
%   | | else return -0.1507801556802347;  // std dev = 0.408, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.19570440161770375;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.10875772212222809;  // std dev = 1.473, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17770564311882645;  // std dev = 0.116, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.11236346652186975;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20884867516979164;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.007093119265616536;  // std dev = 1.787, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.13789358776217278;  // std dev = 0.868, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.06087538961371934;  // std dev = 1.662, 65.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.06175139298112727;  // std dev = 0.884, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04151550543706179;  // std dev = 3.795, 145.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=47 */
%   | | | else return 0.018188894266115998;  // std dev = 1.382, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.021139395892154952;  // std dev = 0.909, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.010847596005832141;  // std dev = 1.008, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18797961778653952;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.020834929711443587;  // std dev = 2.548, 125.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2120533483634591;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.04609762703358577;  // std dev = 3.741, 137.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=47 */
%   | | | else return 0.08232273959977965;  // std dev = 1.273, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.667', 'seconds']
Parameter learned model CLL:-0.202779 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [1.0, 2, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.946, 116, 31], 'false,false,true,false': [5.526, 95, 45], 'false,false,false,true': [1.69, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.97, 1, 13], 'false,true,true': [0.089, 0, 4], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [3.54, 15, 76], 'false,false,true,false': [0.1, 186, 0], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.961, 1, 11], 'true,false': [0.909, 1, 6], 'false,true,true': [4.369, 91, 34], 'false,true,false,true': [2.758, 9, 48], 'false,true,false,false': [0.181, 81, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.608, 8, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.052, 0, 10], 'true,false': [1.718, 5, 7], 'false,true,true,true': [0.761, 1, 3], 'false,true,true,false': [1.738, 4, 21], 'false,true,false': [5.272, 203, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [0.934, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.147, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.222, 2, 10], 'false,true': [5.793, 195, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.441, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(J, A)'}, {'true,true,true': [0.046, 0, 5], 'true,true,false': [0.719, 1, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.067, 0, 2], 'false,true': [2.745, 50, 19], 'false,false,true': [0.885, 1, 8], 'false,false,false,true': [2.287, 52, 11], 'false,false,false,false': [4.691, 106, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.276, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.786, 1, 3], 'true,true,false,false': [1.837, 4, 33], 'true,false': [0.854, 111, 0], 'false,true': [0.1, 0, 5], 'false,false,true': [4.393, 98, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.922, 1, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.905, 9, 82], 'false,true,false': [0.408, 182, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.473, 17, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.116, 0, 9], 'true,false,true': [0.792, 1, 2], 'true,false,false': [0.08, 0, 5], 'false,true,true': [1.787, 29, 13], 'false,true,false,true': [0.868, 2, 8], 'false,true,false,false': [1.662, 54, 11], 'false,false,true': [0.884, 1, 5], 'false,false,false,true': [3.795, 98, 47], 'false,false,false,false': [1.382, 8, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.909, 1, 7], 'true,true,true,false': [1.008, 2, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.057, 0, 3], 'false,true': [2.548, 93, 32], 'false,false,true': [0.076, 0, 5], 'false,false,false,true': [3.741, 90, 47], 'false,false,false,false': [1.273, 6, 4]}]
{'': [0.09418282548476423, 0.2018834547346519], 'false': [0.17283950617283939, 0.1951413339808622], 'false,false': [0.19468489358860774, 0.20408163265306106], 'false,false,false': [0.20408163265306106, nan], 'false,false,true': [0.16641214308852906, 0.21811224489796036], 'false,true': [0.25, 0.0], 'true': [0.07100591715976314, 0.1388888888888887], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.05305628988235542, 0.20545064993959006], 'false': [0.0016262707086134626, 0.20114332536331722], 'false,false': [0.19876525638969075, 0.24691358024691348], 'false,false,false': [0.25, 0.23999999999999994], 'false,false,true': [0.13774846231305707, 5.379529866022961e-05], 'true': [0.0, 0.06726722843895093], 'false,true': [0.0019921816180513696, 0.0], 'false,true,false': [0.0, 0.0]}
{'': [0.09282850536502076, 0.16852247004167767], 'false': [0.16518441471748604, 0.23549620581525188], 'false,false': [0.23549620581525188, nan], 'false,false,true': [0.0, 0.21554787623548957], 'false,true': [0.1527357429543661, 0.17513449453467053], 'false,true,false': [0.13340477045186605, 0.00040560712495701305], 'true': [0.07693949421492134, 0.1181393400877989]}
{'': [0.17579067520822905, 0.13403149852105767], 'true': [0.00026819382487115463, 0.24603989104146085], 'false': [0.13034407230842437, 0.21584268682503696], 'false,false': [0.0, 0.22588375724840545], 'false,false,false': [0.22222222222222218, 0.21821343908157315], 'false,true': [0.13048449319839514, 0.10647867689578533], 'false,true,true': [0.14465129270694202, 0.12078742167500703], 'false,false,true': [nan, 0.0]}
{'': [0.0837714973528439, 0.1248571947298805], 'false': [0.12116598747058967, 0.21175244078302358], 'false,false': [0.0, 0.2305606872744724], 'false,false,false': [0.2305606872744724, nan], 'true': [0.003091190108886683, 0.12441069921660879], 'true,true': [0.003091190108886683, nan], 'false,false,true': [nan, 0.0]}
{'': [0.03216073621722071, 0.12239239255490252], 'false': [0.10923330540186188, 0.12621375097654183], 'false,false': [0.08705816172256658, 0.12628698583672476], 'false,false,false': [0.08303859039800596, 0.14106505408708073], 'true': [0.03602133017950071, 0.002259217299755756], 'true,true': [0.00041520729371330445, 0.05168072856654928], 'true,false': [nan, 0.002259217299755756]}
{'': [0.10555921779164908, 0.13056972933472935], 'false': [0.001999754915544982, 0.13312215805229996], 'false,false': [0.13312215805229996, nan], 'true': [0.08676222671561079, 0.006568116432856814], 'true,true': [0.004975894661374394, 0.11400923657694768], 'true,true,false': [0.1546394187947499, 0.09116955786531131], 'true,true,true': [0.00506809544380998, 0.0]}
{'': [0.04721307538933589, 0.1038053844763116], 'false': [0.10258983970336898, 0.10260660880048401], 'false,false': [0.0, 0.10327912939133646], 'false,false,false': [0.10327912939133646, nan], 'false,true': [0.09273054940117466, 0.0009150986504185829], 'false,true,true': [nan, 0.09273054940117477], 'true': [0.0, 0.060673371197469086], 'false,false,true': [0.0, nan]}
{'': [0.05139903146250357, 0.08737685038371852], 'false': [0.06045420799326558, 0.10492954557782087], 'false,false': [0.13020672359615978, 0.1039456923401021], 'false,false,false': [0.09933924099623725, 0.15910443823750656], 'false,true': [0.0760377538512241, 0.05146027926084798], 'false,true,false': [0.07539554408302232, 0.042510049977726255], 'true': [0.0015035467052092342, 0.10330857356833686], 'true,false': [0.208877292839766, 0.0012758770166753919]}
{'': [0.10181618860876888, 0.08171387478963063], 'true': [0.11542901189765134, 0.0010644278705056465], 'true,true': [0.11542901189765134, nan], 'true,true,true': [0.10323265062280355, 0.12711378934715817], 'false': [0.051925424195712104, 0.10368781537763856], 'false,false': [0.0011620613271253132, 0.10629582779805621], 'false,false,false': [0.1021341093273292, 0.1620883813713741]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 6.647
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.5724346493852266;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7748156017661789;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.0716756263039965;  // std dev = 1.929, 57.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=4 */
%   | | else if ( enzyme(A, L), location(A, M) )
%   | | | then return 0.11102249831790272;  // std dev = 4.054, 87.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   | | | else return 0.17904445748757128;  // std dev = 5.404, 134.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then return 0.13025716369507329;  // std dev = 1.077, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.7439819383112245;  // std dev = 0.089, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H), complex(G, H) )
%   | | then return 0.7505511758931249;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6848133407925626;  // std dev = 3.302, 88.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=76 */
%   | | | else return -0.15420651032630922;  // std dev = 0.178, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.34973024364127614;  // std dev = 1.011, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08135346515361165;  // std dev = 1.242, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.6131846006748104;  // std dev = 0.049, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3450089929177571;  // std dev = 0.389, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1526371693067419;  // std dev = 0.174, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.09483610859322819;  // std dev = 4.099, 116.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5959525545790696;  // std dev = 2.285, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.13927202038961184;  // std dev = 0.142, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.16641458711299215;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5677324180119976;  // std dev = 0.870, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.17457136415182659;  // std dev = 0.065, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.46000796250449244;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.5085426097218739;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4209738310239161;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1175842826210353;  // std dev = 0.036, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.08573479735191691;  // std dev = 4.734, 167.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=52 */
%   | | | else return 0.030107535037256557;  // std dev = 3.585, 122.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=30 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.40698761502405467;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.27801971342624626;  // std dev = 0.941, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09177106845902501;  // std dev = 1.111, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.37240890277731675;  // std dev = 0.029, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3363464866083968;  // std dev = 0.025, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F), location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.21984953547974498;  // std dev = 2.469, 48.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=26 */
%   | | | else return -0.13392132276155982;  // std dev = 0.299, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.07684701803891278;  // std dev = 4.591, 154.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=48 */
%   | | | else return 0.1871229203875375;  // std dev = 1.623, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.31358323524856735;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.19877944957721483;  // std dev = 0.934, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 6.451288913578157E-5;  // std dev = 1.202, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26807178244768226;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.08513627767888055;  // std dev = 1.103, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.44303471327038935;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.24334033743099553;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( complex(A, G), interaction(A, H) )
%   | then return 0.011468515716009679;  // std dev = 0.284, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | else if ( phenotype(A, I), location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3485253614929664;  // std dev = 3.025, 60.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=41 */
%   | | | else return -0.17259484813816914;  // std dev = 0.461, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.11035193310411176;  // std dev = 0.432, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.0562286876080559;  // std dev = 3.167, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23616963577302225;  // std dev = 0.190, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else if ( phenotype(A, E), enzyme(A, F) )
%   | | | then return 0.3639740333557956;  // std dev = 1.296, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.49435215890218726;  // std dev = 0.607, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.15315705431358057;  // std dev = 0.075, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2763187117898528;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3144530632693243;  // std dev = 2.738, 44.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=34 */
%   | | | else return -0.14791608308718995;  // std dev = 0.236, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.10697195617948281;  // std dev = 1.417, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.18490228700741557;  // std dev = 1.041, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return -0.02995232334311204;  // std dev = 0.941, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.21158688847233448;  // std dev = 0.033, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.2775332244569091;  // std dev = 3.034, 80.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=67 */
%   | | | else return 0.4587282298030829;  // std dev = 0.244, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.13596212207297012;  // std dev = 0.627, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | | else return -0.1618311681801127;  // std dev = 0.223, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.17128984327109076;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.12626098903296026;  // std dev = 0.647, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.012745120491466118;  // std dev = 1.096, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.13002905826287225;  // std dev = 0.213, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.1349932965424977;  // std dev = 0.210, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( complex(A, E), interaction(A, F) )
%   | then if ( complex(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.23517511479624106;  // std dev = 0.810, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.10056679872873107;  // std dev = 0.725, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else return -0.016174152901239806;  // std dev = 0.208, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.37726898062089625;  // std dev = 0.678, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | | else return -0.13769820751925999;  // std dev = 0.569, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(A, K), phenotype(A, L) )
%   | | | then return -0.04427837452003159;  // std dev = 1.460, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.013643464285521595;  // std dev = 2.809, 110.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=37 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.33724855256728625;  // std dev = 1.021, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.17886641348377716;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.12660958852701548;  // std dev = 0.186, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.1589419877826338;  // std dev = 0.075, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(I, A) )
%   | then if ( phenotype(A, J), complex(A, K) )
%   | | then return -0.07725960829852656;  // std dev = 0.257, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else return -0.013542370055197357;  // std dev = 0.213, 89.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=21 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.001955085435033088;  // std dev = 0.918, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(M, A), phenotype(A, N) )
%   | | | then return 0.015471706708434821;  // std dev = 2.359, 86.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=29 */
%   | | | else return -0.03761252750493323;  // std dev = 2.555, 92.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '28.330', 'seconds']
Refined model CLL: -0.17847


******************************************
Best model found
******************************************
Results 

CLL : -0.159625 

AUC ROC : 0.991024 

AUC PR : 0.35817 

Precision : 0.256198 

Recall : 0.818868 

F1 : 0.390288 

Total Learning Time : 6.647 

Total Inference Time : 12.082183599472046 

Total revision time: 27.81141968345642
Best scored revision CLL: -0.17847


Results 

CLL : -0.159625 

AUC ROC : 0.991024 

AUC PR : 0.35817 

Precision : 0.256198 

Recall : 0.818868 

F1 : 0.390288 

Total Learning Time : 27.825124460220337 

Total Inference Time : 12.082183599472046 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.52
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09344305274657119;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.14573063444591652;  // std dev = 5.599, 153.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1504566274072046;  // std dev = 3.667, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8035838521672792;  // std dev = 1.385, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15930547315582388;  // std dev = 0.031, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.07057777001581515;  // std dev = 1.952, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.1649162828964325;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.41250929388914154;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.04399591291731865;  // std dev = 2.125, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6906274517867675;  // std dev = 0.237, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1402066289341396;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6040520610480189;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17233464237043175;  // std dev = 3.549, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.20501057508829604;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.42921231177150454;  // std dev = 0.050, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.15185426006664363;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4333368171554455;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41077386784423064;  // std dev = 0.649, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.03696805763328661;  // std dev = 4.341, 212.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.45470590928508814;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5621870871629266;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.028873961497508514;  // std dev = 1.962, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.13673372172852344;  // std dev = 3.125, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.376089267749893;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24676661055672405;  // std dev = 0.919, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.05137193232550131;  // std dev = 4.340, 202.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.34606523123960387;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4225914804899562;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.10005781067182858;  // std dev = 3.570, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.15416294756168927;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26851108621154357;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3643368833072572;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.34209606734750064;  // std dev = 0.099, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3278169845768403;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.336223425551786;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07659771198220584;  // std dev = 1.036, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1618559567785891;  // std dev = 0.908, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.06270457023012033;  // std dev = 2.737, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
%   | | | else return 0.044937436591921384;  // std dev = 4.821, 160.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24950251421819683;  // std dev = 0.125, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.23264221709337912;  // std dev = 0.032, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2367061355548492;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6430609051881504;  // std dev = 0.706, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18866373341196238;  // std dev = 0.647, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2749782668133777;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.030441701566063316;  // std dev = 3.482, 140.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17963143607123883;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.12466465245254107;  // std dev = 0.850, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.45754490929498165;  // std dev = 0.804, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1356358331873363;  // std dev = 0.210, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.1938053424223839;  // std dev = 0.028, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04989020639833551;  // std dev = 3.031, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16749516030131295;  // std dev = 0.060, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1423106779719272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1689521093276024;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07087677681707558;  // std dev = 0.436, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2098058921792879;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.019114038074960878;  // std dev = 1.249, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20307943836132364;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03274801465298148;  // std dev = 2.726, 119.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=36 */
%   | | | else return 0.04487858258102971;  // std dev = 3.006, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1486730347318497;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1528991953394201;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return -0.1650734275704859;  // std dev = 0.730, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13827153565791755;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.005430521345910869;  // std dev = 1.336, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1723039367147775;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02564245344301169;  // std dev = 2.712, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | | else return 0.004084350206345632;  // std dev = 3.078, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.584', 'seconds']
Parameter learned model CLL:-0.175478 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.473, 26, 8], 'false,false,true,false': [5.599, 109, 44], 'false,false,false,true': [3.667, 46, 19], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 9], 'false,true,true': [0.894, 1, 4], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [1.385, 2, 52], 'false,false,true,false': [0.031, 141, 0], 'false,false,false,true': [1.952, 14, 5], 'false,false,false,false': [3.179, 31, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.926, 1, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.125, 30, 8], 'false,true,false,true': [0.237, 0, 48], 'false,true,false,false': [0.0, 120, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.549, 36, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.05, 0, 9], 'true,false': [1.2, 2, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.649, 1, 3], 'false,true,false': [4.341, 160, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.962, 14, 5], 'false,false,false,false': [3.125, 28, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.072, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.919, 1, 9], 'false,true': [4.34, 146, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.57, 39, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.003, 0, 6], 'true,true,false': [0.0, 0, 1], 'true,false,true,true': [0.099, 0, 2], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.035, 0, 3], 'false,true': [1.036, 25, 3], 'false,false,true': [0.908, 1, 6], 'false,false,false,true': [2.737, 55, 23], 'false,false,false,false': [4.821, 114, 46]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.125, 0, 12], 'true,true,true,false': [0.032, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.706, 0, 36], 'true,false': [0.647, 96, 0], 'false,true': [0.074, 0, 5], 'false,false,true': [3.482, 104, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.002, 0, 5], 'true,false': [0.85, 1, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.804, 0, 56], 'false,true,false': [0.21, 137, 0], 'false,false,true,true': [0.028, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.031, 39, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.06, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.017, 0, 4], 'false,true,true': [0.436, 12, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.249, 47, 14], 'false,false,true': [0.06, 0, 5], 'false,false,false,true': [2.726, 83, 36], 'false,false,false,false': [3.006, 38, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.038, 0, 5], 'true,true,true,false': [0.032, 0, 3], 'true,true,false,true': [0.73, 1, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.015, 0, 4], 'false,true': [1.336, 48, 17], 'false,false,true': [0.053, 0, 5], 'false,false,false,true': [2.712, 85, 36], 'false,false,false,false': [3.078, 46, 20]}]
{'': [-2.5376526277146434e-16, 0.21046197880174777], 'false': [-1.4802973661668753e-16, 0.2035963692605741], 'false,false': [0.20074923503674763, 0.2112029384756653], 'false,false,false': [0.20686390532544327, 0.0], 'false,false,true': [0.179930795847751, 0.20487846554744], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [6.344131569286608e-17, 0.20417562783577303], 'false': [0.12244897959183687, 0.2007854860976338], 'false,false': [0.19548672585770974, 0.21600678444147267], 'false,false,false': [0.20063567691738277, 0.21975425330812895], 'false,false,true': [0.035501037486504176, 6.9890025831021675e-06], 'false,true': [0.16000000000000006, 0.0], 'true': [0.0, -9.868649107779169e-17], 'false,true,false': [nan, 0.0]}
{'': [0.062222222222222, 0.1585149230592116], 'false': [0.13750707142253252, 0.22508381346266026], 'false,false': [0.22418820172588988, 0.25], 'false,false,false': [0.25, nan], 'false,false,true': [0.0, 0.22492173914486105], 'false,true': [0.11883784856150702, 0.14120820818983493], 'false,true,false': [0.001167821744884871, -7.401486830834377e-18], 'true': [0.12244897959183677, -5.551115123125783e-17]}
{'': [0.10912974616322645, 0.12209143737355646], 'false': [0.0920182176264376, 0.22020453762416192], 'false,false': [0.0028880508995018928, 0.2220948725165924], 'false,false,false': [0.20258619603511, 0.22714981070849102], 'true': [0.0002737204555355187, 0.2058157810260833], 'false,true': [0.08426500172083062, 0.08890326976785176], 'false,true,true': [0.0, 0.1052294348147142], 'false,false,true': [0.0, 0.0]}
{'': [0.060356042092747926, 0.12277451960054662], 'false': [0.09323205778763914, 0.21630771400647728], 'false,false': [0.0014640667060817625, 0.22089537443125673], 'false,false,false': [0.2197941877917618, 0.25], 'true': [0.0010264080576407597, 0.08444607588913419], 'false,false,true': [0.0, 0.0], 'true,true': [0.0010264080576407597, nan]}
{'': [0.0020669589395701593, 0.1214641900020175], 'false': [0.038301031353598046, 0.12922099786771077], 'false,false': [0.11786468211300814, 0.1292023714493045], 'false,false,false': [0.09602632252500143, 0.14527224008586062], 'true': [0.0011259122635732493, 0.0015876140679017547], 'true,false': [0.002479269840283682, 0.00039782254211445656], 'true,false,true': [0.004856593578181773, 0.0], 'true,true': [1.7666804979961832e-06, 0.0]}
{'': [0.13354029476425483, 0.0856513238890928], 'true': [0.04278465516570305, 0.0043606478956579415], 'false': [0.0010988640560811614, 0.08660905005455415], 'false,false': [0.08660905005455415, nan], 'true,true': [0.0012159397701452088, 0.017827430751961238], 'true,true,false': [0.0, 0.013859820977853123], 'true,true,true': [0.001293021391130365, 0.0005097903706882123]}
{'': [0.04878727837314846, 0.09418011341278656], 'false': [0.07605087607310608, 0.15129007507599984], 'false,false': [0.000390229300714931, 0.15572625633527187], 'false,false,false': [0.15572625633527187, nan], 'false,true': [0.011547768624910994, 0.00032203193981732777], 'true': [9.53052687469036e-07, 0.07217332526625073], 'false,true,true': [nan, 0.011547768624911057], 'false,false,true': [0.000390229300714931, nan]}
{'': [0.000317688949179432, 0.07255530159860181], 'false': [0.024872056550154984, 0.0912890023716149], 'false,false': [0.0007218668617556101, 0.09308710856905236], 'false,false,false': [0.0624528050435665, 0.155841316749062], 'false,true': [0.014632021969362415, 0.026389038898382504], 'false,true,false': [0.0, 0.025590623622854986], 'true': [0.0003944581721994078, 0.00016986968570277262], 'true,false': [0.0, 7.038393419263322e-05]}
{'': [0.05127269608110369, 0.07309428668068232], 'false': [0.02746755141574, 0.08834982289512065], 'false,false': [0.0005597938477820419, 0.09007737637229363], 'false,false,false': [0.06076767703497038, 0.14351110339463388], 'true': [0.06843587434436006, 5.679750007581835e-05], 'true,true': [0.00031517586582877066, 0.17777557106129258], 'true,true,false': [0.17777557106129258, nan], 'true,true,true': [0.00029554785288833375, 0.0003367264498038934]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,false;interaction(A, J), interaction(J, K).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.24
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.07938787315260903;  // std dev = 4.412, 113.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=25 */
%   | | | else return 0.24945328292559804;  // std dev = 4.054, 69.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=27 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1974346493852266;  // std dev = 3.543, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7536899806110665;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7670719622367217;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8361537310309438;  // std dev = 0.084, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.1640498465263602;  // std dev = 0.130, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.019475228911580593;  // std dev = 1.846, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return 0.1092810035347098;  // std dev = 3.403, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462844;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14126983569079551;  // std dev = 0.034, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.19049644266737345;  // std dev = 1.823, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6817895513120814;  // std dev = 0.217, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14162513866844129;  // std dev = 0.106, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.12197675334818663;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.15043444507624745;  // std dev = 3.618, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | else return 0.8295681934416544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.41751358415830986;  // std dev = 1.05e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2508469174916433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5015928778555754;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3866584456626925;  // std dev = 0.663, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.12018996248453455;  // std dev = 0.055, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.05299140064397274;  // std dev = 4.180, 183.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=52 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5741791955409881;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return -0.001013386920082553;  // std dev = 1.518, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.2001419270420249;  // std dev = 3.181, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3356472991670369;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.333158057165889;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.07531232795276448;  // std dev = 0.634, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.056024596002865454;  // std dev = 3.043, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.38947586462792155;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07675816958699912;  // std dev = 2.647, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.43162153733541725;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.06931509845362929;  // std dev = 2.040, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | | | else return 0.06137083337163281;  // std dev = 3.240, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.26391455707099404;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3163021096046673;  // std dev = 0.043, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10319948171638577;  // std dev = 0.008, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.17275479303190383;  // std dev = 0.617, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.069978477154507;  // std dev = 0.526, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(A, I), complex(A, J) )
%   | | | then return 0.04454895023496865;  // std dev = 1.895, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.1524462857721762;  // std dev = 3.303, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.04399723603427624;  // std dev = 3.600, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
%   | | | else return -0.13839050931706412;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23436272431506328;  // std dev = 0.037, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.22511439598205896;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6265904106934667;  // std dev = 0.758, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19276860429681622;  // std dev = 0.075, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.26384534713474606;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5343093385894245;  // std dev = 0.183, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.13811811160710608;  // std dev = 0.070, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.06382352759275817;  // std dev = 1.386, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.01396825274237848;  // std dev = 2.028, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17031015113038792;  // std dev = 0.000385, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.20135970902951003;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.31951603791496075;  // std dev = 0.292, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.44306876642071064;  // std dev = 0.317, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.11665103609538933;  // std dev = 0.163, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | | else return -0.15479415111649933;  // std dev = 0.126, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.22140483854037374;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.02952404762468262;  // std dev = 1.616, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.20103755423510572;  // std dev = 2.151, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1536336367482946;  // std dev = 0.013, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17603803092564935;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( enzyme(A, G), complex(A, H) )
%   | | | then return -0.040274650296547816;  // std dev = 0.371, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.08180106048908375;  // std dev = 0.080, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.20901386844118358;  // std dev = 0.048, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.035184774887814185;  // std dev = 1.533, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.18380785085315665;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, K) )
%   | | | then return -0.0016406217111361685;  // std dev = 3.853, 184.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=54 */
%   | | | else return -0.08229986717049448;  // std dev = 0.992, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1371443950987087;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.15035237739549143;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), interaction(A, G) )
%   | | then if ( location(G, H), enzyme(A, I) )
%   | | | then return -0.07061440855785045;  // std dev = 0.234, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return -0.03827203932939015;  // std dev = 0.457, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.009086250255916745;  // std dev = 0.982, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return -0.032163888270185244;  // std dev = 0.833, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.15783873852167785;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return -0.0661206567210746;  // std dev = 2.134, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.027334781983901716;  // std dev = 3.214, 139.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=47 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '29.211', 'seconds']
Refined model CLL: -0.174584


******************************************
Best model found
******************************************
Results 

CLL : -0.196228 

AUC ROC : 0.984774 

AUC PR : 0.247407 

Precision : 0.139186 

Recall : 0.938628 

F1 : 0.242424 

Total Learning Time : 3.24 

Total Inference Time : 2.991184949874878 

Total revision time: 10.441699752807617
Best scored revision CLL: -0.174584


Results 

CLL : -0.196228 

AUC ROC : 0.984774 

AUC PR : 0.247407 

Precision : 0.139186 

Recall : 0.938628 

F1 : 0.242424 

Total Learning Time : 10.455404529571533 

Total Inference Time : 2.991184949874878 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.565
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.06127393509951237;  // std dev = 3.219, 64.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | | else return 0.20636322081379738;  // std dev = 5.042, 112.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.13939893509951237;  // std dev = 2.543, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7473839334745775;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6689726073317802;  // std dev = 0.963, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7991192372423035;  // std dev = 1.382, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.1618951367429735;  // std dev = 0.110, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.1959372764098748;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.09720687124817562;  // std dev = 2.278, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5149349013700711;  // std dev = 0.954, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.4126056602232403;  // std dev = 0.906, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.03507680324673764;  // std dev = 2.812, 71.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6132382388294627;  // std dev = 1.672, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.14735081936830294;  // std dev = 9.31e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6458575772636366;  // std dev = 0.222, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10040157399714544;  // std dev = 2.469, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.5654847038092112;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4622159649855111;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.49550148985042075;  // std dev = 0.062, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5466887989215019;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.47377472771814994;  // std dev = 0.845, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.06356475669060863;  // std dev = 4.257, 176.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.3956843353530509;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.030456267921543406;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.1513764720071627;  // std dev = 1.791, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.05874317496205453;  // std dev = 2.234, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3518434475485891;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3853486710859699;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.05026933259437988;  // std dev = 4.477, 199.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.305941093105385;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07241013293549699;  // std dev = 0.852, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.040648306520589456;  // std dev = 2.568, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.6946045568183292;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.27237308899315354;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.31938498999308457;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2450655214116687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.31186623574402567;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.16841776279479892;  // std dev = 0.990, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07253706266624232;  // std dev = 1.348, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.30293183242931637;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.08375261672333288;  // std dev = 2.157, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | | else return 0.03505491367918634;  // std dev = 4.656, 164.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2537775201462114;  // std dev = 0.178, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.30754845425236604;  // std dev = 0.194, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2570842563206614;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5512320684485871;  // std dev = 1.301, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.203035684291508;  // std dev = 1.064, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24842463047508587;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06539466940275869;  // std dev = 3.360, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.179782664167491;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1959700059356904;  // std dev = 0.067, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4290933071374339;  // std dev = 1.566, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.14441521223153744;  // std dev = 0.227, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.15739770358969296;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.034725987573247796;  // std dev = 0.652, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.036998015194928485;  // std dev = 2.434, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15509175874019115;  // std dev = 0.033, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.19593248572167055;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.22906765546472513;  // std dev = 0.173, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09056037224786145;  // std dev = 0.312, 27.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2660975508239198;  // std dev = 0.183, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.0195681319517591;  // std dev = 1.444, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17490450844054362;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.031183619860762284;  // std dev = 2.910, 94.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=31 */
%   | | | else return -0.002401374460333308;  // std dev = 2.465, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13472277251409615;  // std dev = 0.003, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14036664898089168;  // std dev = 0.028, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return -0.33823268989716243;  // std dev = 0.663, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.0497703361037786;  // std dev = 0.535, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.22032627526402757;  // std dev = 0.131, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.010639664997376855;  // std dev = 1.642, 92.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15108591368050717;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.021378516823345513;  // std dev = 2.779, 104.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=31 */
%   | | | else return -0.023056224587597512;  // std dev = 2.555, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.855', 'seconds']
Parameter learned model CLL:-0.184529 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.309, 2, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.219, 51, 13], 'false,false,true,false': [5.042, 73, 39], 'false,false,false,true': [2.543, 23, 9], 'false,false,false,false': [1.414, 6, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.963, 1, 11], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 3], 'false,false,true,true': [1.382, 2, 52], 'false,false,true,false': [0.11, 139, 0], 'false,false,false,true': [1.793, 9, 5], 'false,false,false,false': [2.278, 20, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.954, 1, 11], 'true,false': [0.906, 1, 4], 'false,true,true': [2.812, 57, 14], 'false,true,false,true': [1.672, 3, 42], 'false,true,false,false': [9.31e-08, 90, 0], 'false,false,true,true': [0.222, 0, 3], 'false,false,true,false': [2.469, 22, 9], 'false,false,false,true': [0.862, 1, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.023, 0, 6], 'true,false': [0.062, 0, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.845, 1, 6], 'false,true,false': [4.257, 127, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [1.791, 8, 5], 'false,false,false,false': [2.234, 18, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.019, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.037, 0, 6], 'false,true': [4.477, 143, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.852, 1, 2], 'false,false,false,true': [2.568, 26, 9], 'false,false,false,false': [0.034, 0, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.008, 0, 5], 'true,true,false': [0.098, 0, 3], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.079, 0, 3], 'true,false,false': [0.99, 1, 4], 'false,true': [1.348, 30, 5], 'false,false,true': [0.025, 0, 5], 'false,false,false,true': [2.157, 27, 13], 'false,false,false,false': [4.656, 117, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.178, 0, 13], 'true,true,true,false': [0.194, 0, 3], 'true,true,false,true': [0.054, 0, 3], 'true,true,false,false': [1.301, 1, 33], 'true,false': [1.064, 110, 0], 'false,true': [0.015, 0, 3], 'false,false,true': [3.36, 67, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.067, 0, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.566, 2, 56], 'false,true,false': [0.227, 130, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.652, 1, 2], 'false,false,false,true': [2.434, 23, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.033, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.173, 0, 5], 'false,true,true': [0.312, 26, 1], 'false,true,false,true': [0.183, 0, 6], 'false,true,false,false': [1.444, 57, 17], 'false,false,true': [0.012, 0, 3], 'false,false,false,true': [2.91, 63, 31], 'false,false,false,false': [2.465, 31, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.003, 0, 8], 'true,true,true,false': [0.028, 0, 2], 'true,true,false,true': [0.663, 1, 1], 'true,true,false,false': [0.535, 1, 2], 'true,false': [0.131, 0, 3], 'false,true': [1.642, 68, 24], 'false,false,true': [0.011, 0, 3], 'false,false,false,true': [2.779, 73, 31], 'false,false,false,false': [2.555, 31, 12]}]
{'': [0.1388888888888886, 0.21649792729591863], 'false': [-2.5376526277146434e-16, 0.20794665420799047], 'false,false': [0.2081611570247941, 0.20701963117192096], 'false,false,true': [0.16186523437499947, 0.2269610969387761], 'false,false,false': [0.2021484375000001, 0.2222222222222221], 'true': [0.1224489795918365, 0.18750000000000006], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.05911423942639821, 0.2027837335791142], 'false': [-6.344131569286608e-17, 0.19810251027713402], 'false,false': [0.19606788461572833, 0.20720782955626313], 'false,false,false': [0.22967293915656103, 0.1922307737043628], 'false,false,true': [0.03539163973560417, 8.66653154443822e-05], 'true': [0.0, 0.07728190188499595], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 0.0]}
{'': [0.10400930489001775, 0.15168584890008696], 'false': [0.13734170354893696, 0.21909138872039172], 'false,false': [0.20472468488481047, 0.18565730872610137], 'false,false,true': [0.016377293024262347, 0.19669988847145808], 'false,false,false': [0.18565730872610137, nan], 'false,true': [0.11134946358274993, 0.14926926562725124], 'false,true,false': [0.06214398658164468, 9.62193288008469e-17], 'true': [0.07584520947080997, 0.1642116466535146]}
{'': [0.000552797223744476, 0.12901502576163779], 'false': [0.10968801652676102, 0.21334966505272104], 'false,false': [0.15834788530993843, 0.21770696590465208], 'false,false,false': [0.2466634030648106, 0.19971403804508514], 'false,false,true': [0.0, 0.25], 'false,true': [0.08986600636712327, 0.1029441122144472], 'false,true,true': [0.0, 0.10203944955428142], 'true': [8.455885706648569e-05, 0.0004217856686500691]}
{'': [0.0003830441532408043, 0.11892452824420902], 'false': [0.10071286461647196, 0.20349046543366292], 'false,false': [0.19154579068489533, 0.20460651235481717], 'false,false,false': [0.18834958142823188, 0.000374464245106898], 'false,false,true': [0.0, 0.241760210240393], 'true': [3.962259705746362e-05, 0.00022461648494217132], 'true,true': [3.962259705746362e-05, nan]}
{'': [0.06217196312863315, 0.118890521252365], 'false': [0.05194920651523091, 0.12791931635316345], 'false,false': [0.00012024024798292787, 0.1294551505692676], 'false,false,false': [0.11631960645976888, 0.1321939484269033], 'true': [0.0017143215185041888, 0.11390839422513428], 'true,false': [0.002400257039703077, 0.19597484614026808], 'true,false,true': [0.0, 0.0020847588607758407], 'true,true': [1.282713089632015e-05, 0.0031688212255835033]}
{'': [0.11699196543470214, 0.1127499038911395], 'true': [0.052562141965548176, 0.010292706254884196], 'false': [7.967447388533093e-05, 0.11520394403240923], 'false,false': [0.11520394403240923, nan], 'true,true': [0.004765900118263736, 0.05226650013613965], 'true,true,false': [0.0009811812731146952, 0.0497763021910458], 'true,true,true': [0.0024293941067943933, 0.012541567400645715]}
{'': [0.00035112231499345725, 0.0971891632595847], 'false': [0.08349374439134699, 0.1631628497926496], 'false,false': [0.10899307304924721, 0.16927098119325462], 'false,false,false': [0.16927098119325462, nan], 'false,false,true': [0.0, 0.14156200992139148], 'false,true': [0.042306001555235555, 0.00039695648617029593], 'false,true,true': [nan, 0.042306001555235465], 'true': [0.0, 0.0004089284812038145]}
{'': [0.0030835981301781806, 0.07130919108460779], 'false': [0.026564632660494223, 0.10461347873309147], 'false,false': [4.735376550069059e-05, 0.10639331613665945], 'false,false,false': [0.09006384349980968, 0.14131637966844188], 'false,true': [0.0035960846776113904, 0.03216132898839631], 'false,true,false': [0.005571994450947813, 0.028196854804242066], 'true': [0.00010769751590057886, 0.0051147677060797885], 'true,false': [0.0, 0.005954731334978924]}
{'': [0.06834624315275964, 0.07062327849404769], 'false': [0.029311550091159065, 0.09577923401911198], 'false,false': [3.734137720379227e-05, 0.09732585406024465], 'false,false,false': [0.0742380218103319, 0.15176930538635558], 'true': [0.07517837079672927, 0.005723221376592712], 'true,true': [8.678747127850161e-05, 0.16495813147790012], 'true,true,false': [0.21956075899187338, 0.09527216797951016], 'true,true,true': [7.905847094237528e-07, 0.000405292344296853]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
4;false,false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.327
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, F), interaction(F, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( interaction(H, A), interaction(G, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.11502966904446578;  // std dev = 4.562, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.15148226843284515;  // std dev = 3.943, 75.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=22 */
%   | | | else return 0.2581489350995123;  // std dev = 2.898, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.636140078877621;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7822925710658344;  // std dev = 1.699, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.1577956403113765;  // std dev = 0.150, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.10070442083416165;  // std dev = 2.586, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.19873365448410585;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then return 0.42713185173929463;  // std dev = 0.348, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.571288777516451;  // std dev = 0.009, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.04630045994895995;  // std dev = 1.297, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | | else return 0.13652620779666289;  // std dev = 2.313, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6687437789992808;  // std dev = 1.003, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14184255891000858;  // std dev = 0.063, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5957530524383111;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, K) )
%   | | | then return 0.11347008527561621;  // std dev = 2.793, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.04033120232545801;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4381578592878442;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3482686457867349;  // std dev = 0.293, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.6059229414331334;  // std dev = 0.073, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.003201249040881335;  // std dev = 2.512, 83.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=16 */
%   | | | else return 0.08172788733042802;  // std dev = 3.484, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.11537202929926653;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.030804785287444014;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.06356510914380623;  // std dev = 2.425, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.21317831735244802;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.34629503803472594;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.21501329586396972;  // std dev = 0.353, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.4455831148526738;  // std dev = 1.538, 41.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=36 */
%   | | | else return -0.13984249386125341;  // std dev = 0.434, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.02995783778150657;  // std dev = 1.545, 36.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | | else return 0.06563168329827263;  // std dev = 2.306, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4325525315194955;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.00958030269947535;  // std dev = 2.659, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | | else return 0.1474584514227849;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.262886389270595;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.11636707642785878;  // std dev = 0.599, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.3275057032653085;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then return -0.08378854876517161;  // std dev = 0.080, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.0021742786207674877;  // std dev = 0.621, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.22159906232875223;  // std dev = 0.430, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.14766164980526783;  // std dev = 0.925, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -1.2557415178095658E-4;  // std dev = 2.481, 54.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | | else return 0.07576045100159647;  // std dev = 3.994, 142.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2474764508684788;  // std dev = 0.044, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.04943172425765871;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5701593525887803;  // std dev = 0.970, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1598813209053354;  // std dev = 0.061, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return -0.12991669240530884;  // std dev = 1.105, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.42473302280443065;  // std dev = 0.135, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1330235482368808;  // std dev = 0.037, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.0033980678764351587;  // std dev = 1.839, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0.06585107460331986;  // std dev = 1.974, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1722241302639691;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.17059644949888955;  // std dev = 0.269, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.5501786836505657;  // std dev = 0.292, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.25893830709839477;  // std dev = 2.040, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | else return -0.12761231491674313;  // std dev = 0.045, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.1829806880538375;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.06450443275590252;  // std dev = 0.738, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return -0.030995662383433382;  // std dev = 2.071, 40.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=7 */
%   | | | else return 0.046523691506805104;  // std dev = 1.571, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1598544271041525;  // std dev = 0.015, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.30000724513594396;  // std dev = 0.703, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.21715782911509596;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.06958369613369317;  // std dev = 0.003, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.0935893542108378;  // std dev = 0.432, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.011713771375345006;  // std dev = 1.490, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.01557294294668099;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return -0.012816424855702224;  // std dev = 1.413, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.0482092973072972;  // std dev = 3.142, 108.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=37 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.13956364286166326;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.039769998636424414;  // std dev = 0.738, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.21638391144485858;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, H) )
%   | | then if ( complex(H, I), interaction(H, A) )
%   | | | then return -0.04881678016531489;  // std dev = 0.560, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.032734842090176415;  // std dev = 1.213, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | else return 0.1980291185704959;  // std dev = 0.398, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2625466438929972;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.021185568628798737;  // std dev = 2.437, 102.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=27 */
%   | | | else return 0.0544448595752946;  // std dev = 2.574, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21.617', 'seconds']
Refined model CLL: -0.166342


******************************************
Best model found
******************************************
Results 

CLL : -0.182091 

AUC ROC : 0.987294 

AUC PR : 0.309221 

Precision : 0.167328 

Recall : 0.893993 

F1 : 0.281894 

Total Learning Time : 3.327 

Total Inference Time : 3.564438819885254 

Total revision time: 11.649764339447021
Best scored revision CLL: -0.166342


Results 

CLL : -0.182091 

AUC ROC : 0.987294 

AUC PR : 0.309221 

Precision : 0.167328 

Recall : 0.893993 

F1 : 0.281894 

Total Learning Time : 11.663469116210937 

Total Inference Time : 3.564438819885254 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.19
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20338703033760755;  // std dev = 7.547, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.12979008247267246;  // std dev = 4.885, 114.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=34 */
%   | | | else return 0.14702065891377522;  // std dev = 6.023, 168.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.10520620774208173;  // std dev = 4.970, 119.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=35 */
%   | | | else return 0.1379918922863456;  // std dev = 5.916, 159.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.10713343596420735;  // std dev = 3.106, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.13311333167080547;  // std dev = 6.924, 213.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10626280440634651;  // std dev = 7.593, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08056949800526404;  // std dev = 7.628, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7391619608785054;  // std dev = 0.024, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2609159761883189;  // std dev = 0.032, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.0836791488898491;  // std dev = 3.603, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | | else return 0.0810630009627408;  // std dev = 4.555, 91.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.044290739683672815;  // std dev = 3.828, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   | | | else return 0.02378047283068891;  // std dev = 5.992, 168.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02559992855342915;  // std dev = 7.096, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.023265848662324024;  // std dev = 7.082, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.480', 'seconds']
Parameter learned model CLL:-0.324444 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.547, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.885, 80, 34], 'false,false,false,false': [6.023, 115, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.97, 84, 35], 'false,false,false,false': [5.916, 107, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.106, 31, 14], 'false,false,false,false': [6.924, 140, 73]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.593, 171, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.628, 176, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.024, 0, 35], 'true,false': [0.032, 64, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.603, 37, 20], 'false,false,false,false': [4.555, 59, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.828, 72, 35], 'false,false,false,false': [5.992, 116, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.096, 189, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.082, 185, 87]}]
{'': [nan, 0.22604875283446801], 'false': [nan, 0.22604875283446793], 'false,false': [nan, 0.22604875283446801], 'false,false,false': [nan, 0.22604875283446793]}
{'': [nan, 0.2133318243549132], 'false': [nan, 0.21333182435491185], 'false,false': [nan, 0.2133318243549132], 'false,false,false': [0.20929516774391993, 0.21595096371882205]}
{'': [nan, 0.21498796565519773], 'false': [nan, 0.21498796565519773], 'false,false': [nan, 0.21498796565519804], 'false,false,false': [0.207556786190706, 0.22008954646879045]}
{'': [nan, 0.22330822772034997], 'false': [nan, 0.22330822772034997], 'false,false': [nan, 0.22330822772034975], 'false,false,false': [0.21432098765432148, 0.22508921570438065]}
{'': [nan, 0.22345285126433], 'false': [nan, 0.22345285126433], 'false,false': [nan, 0.2234528512643299], 'false,false,false': [nan, 0.2234528512643299]}
{'': [nan, 0.22124079636335936], 'false': [nan, 0.22124079636335936], 'false,false': [nan, 0.2212407963633604], 'false,false,false': [nan, 0.2212407963633602]}
{'': [0.22860023234340257, 0.22790505918490842], 'true': [1.65865782892841e-05, 1.6450921459951195e-05], 'false': [nan, 0.22790505918490842], 'false,false': [nan, 0.22790505918490842], 'false,false,false': [0.2277623884272087, 0.22799178843134865], 'true,true': [nan, 1.65865782892841e-05], 'true,true,false': [nan, 1.65865782892841e-05]}
{'': [nan, 0.1839591573636948], 'false': [nan, 0.1839591573636948], 'false,false': [nan, 0.18395915736369398], 'false,false,false': [0.13696281203463662, 0.21372767421602681]}
{'': [nan, 0.18241585532833746], 'false': [nan, 0.18241585532833826], 'false,false': [nan, 0.18241585532833826], 'false,false,false': [nan, 0.18241585532833826]}
{'': [nan, 0.18439698380836586], 'false': [nan, 0.18439698380836586], 'false,false': [nan, 0.18439698380836606], 'false,false,false': [nan, 0.18439698380836606]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 8.684
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7914822684328456;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.1489652616301251;  // std dev = 6.358, 196.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=57 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( enzyme(C, E), complex(C, F) )
%   | then return 0.05203767874920807;  // std dev = 0.401, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.6611708950355394;  // std dev = 0.264, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( enzyme(A, G), phenotype(D, H) )
%   | | | then return 0.2869479836388544;  // std dev = 1.729, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.038213898202791155;  // std dev = 3.306, 73.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   else if ( complex(A, I) )
%   | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.8115550021966481;  // std dev = 0.173, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.17031663322086438;  // std dev = 0.132, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(K, A) )
%   | | then if ( interaction(L, K), enzyme(L, M) )
%   | | | then return 0.17846945767831113;  // std dev = 3.462, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | | else return 0.10218874397127527;  // std dev = 2.714, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else return 0.008019334621854564;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( interaction(A, C), recursion_proteinclass(C, B) )
%   | then return 0.5697129687493455;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.1384830902265049;  // std dev = 0.052, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.5096431545189561;  // std dev = 0.760, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( phenotype(A, E), enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.7468315404230993;  // std dev = 0.329, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.16933289315233244;  // std dev = 0.113, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4679579078638898;  // std dev = 0.744, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.13065960820443875;  // std dev = 6.018, 184.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=59 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return 0.0471196507281117;  // std dev = 0.351, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( location(A, E), location(D, E) )
%   | | then if ( enzyme(D, F) )
%   | | | then return -0.040530179425935585;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.07549347432063623;  // std dev = 1.705, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.2754231353585091;  // std dev = 1.100, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.7592807842817009;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( enzyme(H, J) )
%   | | | then return 0.17376386408652922;  // std dev = 1.373, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.04106353119790069;  // std dev = 3.776, 97.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=25 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.2300912665095796;  // std dev = 1.802, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.10252076438328492;  // std dev = 3.468, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.4205976730748556;  // std dev = 0.019, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5592013929815526;  // std dev = 0.139, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.12178524722198879;  // std dev = 0.028, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(E, E), interaction(A, E) )
%   | | | then return -0.0010012617077831511;  // std dev = 1.657, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.09504855496457565;  // std dev = 6.144, 202.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=66 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.03888381057142784;  // std dev = 0.797, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.08504834100588951;  // std dev = 1.078, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.35042957967227834;  // std dev = 0.062, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, G) )
%   | | | then return 0.6323098468801864;  // std dev = 0.202, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.0720650533280246;  // std dev = 0.669, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.1530295218191478;  // std dev = 1.269, 32.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | | | else return 0.015468958713082499;  // std dev = 2.295, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | else if ( enzyme(A, I), interaction(A, J) )
%   | | then if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.03730304551466623;  // std dev = 1.792, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return -0.07310714731772058;  // std dev = 1.103, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.12627374249083342;  // std dev = 2.267, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.06310051380218287;  // std dev = 4.808, 129.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=40 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2675413303843142;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.5959709745063103;  // std dev = 0.538, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.4184364012228221;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, G) )
%   | | then return -0.17886411209344336;  // std dev = 0.052, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.21931829217272208;  // std dev = 0.046, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.30208280930720427;  // std dev = 0.282, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11132046030284419;  // std dev = 0.032, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.2698537632203875;  // std dev = 1.693, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.08739138471130377;  // std dev = 4.759, 111.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=38 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( complex(A, D), enzyme(A, E) )
%   | then return 0.15825343879215628;  // std dev = 0.592, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.03300361550081239;  // std dev = 0.248, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.2974344510284183;  // std dev = 0.164, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.4810191638270183;  // std dev = 0.247, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.009783580344182433;  // std dev = 4.011, 116.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
%   | else if ( enzyme(A, I), complex(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.34540979436974173;  // std dev = 0.162, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.17591612632154235;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.0674792184236738;  // std dev = 1.796, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.13506187988215443;  // std dev = 3.117, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0.017830582710098762;  // std dev = 0.845, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, E) )
%   | | then return 0.21368999462062913;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.316295963395903;  // std dev = 0.223, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then if ( interaction(F, I), enzyme(I, J) )
%   | | | then return 0.41140959169677704;  // std dev = 0.395, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.6394100171839668;  // std dev = 0.276, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.22143510236199795;  // std dev = 0.077, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.26051833511575634;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.041400199670097115;  // std dev = 4.687, 132.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=44 */
%   | | | else return 0.16154557406146566;  // std dev = 1.362, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), complex(F, D) )
%   | | then return 0.2724488496047978;  // std dev = 0.055, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.14214721334022878;  // std dev = 0.792, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.0616651302415988;  // std dev = 0.277, 81.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=19 */
%   else if ( interaction(G, A), interaction(G, G) )
%   | then if ( interaction(A, G) )
%   | | then return 0.12471513321388618;  // std dev = 0.266, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( enzyme(G, H), enzyme(A, I) )
%   | | | then return 0.08090666490487682;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.05379017035800632;  // std dev = 2.036, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | else if ( complex(A, J) )
%   | | then return 0.025105940885173948;  // std dev = 0.252, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.15633981822698034;  // std dev = 2.031, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.06166297102330641;  // std dev = 3.504, 60.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.803', 'seconds']
Refined model CLL: -0.264527


******************************************
Best model found
******************************************
Results 

CLL : -0.266478 

AUC ROC : 0.932895 

AUC PR : 0.284476 

Precision : 0.275862 

Recall : 0.567376 

F1 : 0.37123 

Total Learning Time : 8.684 

Total Inference Time : 5.253559112548828 

Total revision time: 16.967230247497557
Best scored revision CLL: -0.264527


Results 

CLL : -0.266478 

AUC ROC : 0.932895 

AUC PR : 0.284476 

Precision : 0.275862 

Recall : 0.567376 

F1 : 0.37123 

Total Learning Time : 16.997090028762816 

Total Inference Time : 5.253559112548828 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.184
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19363280606725494;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1302037052961808;  // std dev = 4.816, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   | | | else return 0.15859448139337923;  // std dev = 6.919, 218.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1768498130364336;  // std dev = 5.099, 112.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=41 */
%   | | | else return 0.13422248162849545;  // std dev = 6.530, 195.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.10150892679453868;  // std dev = 2.865, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0.1178704339759185;  // std dev = 7.846, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11329316404631239;  // std dev = 8.244, 300.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05555244553401098;  // std dev = 8.472, 336.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7305095367701092;  // std dev = 0.026, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2692819308035772;  // std dev = 0.036, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.021776972651011944;  // std dev = 3.888, 75.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=21 */
%   | | | else return 0.009028949575419267;  // std dev = 5.527, 154.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.033987923310982306;  // std dev = 4.142, 127.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=41 */
%   | | | else return 0.08176735336859224;  // std dev = 6.418, 182.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03538488585413864;  // std dev = 7.740, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03722805197981714;  // std dev = 7.674, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.279', 'seconds']
Parameter learned model CLL:-0.324737 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.313, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.816, 78, 33], 'false,false,false,false': [6.919, 147, 71]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.099, 71, 41], 'false,false,false,false': [6.53, 132, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.865, 26, 12], 'false,false,false,false': [7.846, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.244, 196, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.472, 232, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.026, 0, 41], 'true,false': [0.036, 79, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.888, 54, 21], 'false,false,false,false': [5.527, 112, 42]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.142, 86, 41], 'false,false,false,false': [6.418, 119, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.74, 218, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.674, 209, 104]}]
{'': [nan, 0.22293444328824347], 'false': [nan, 0.2229344432882419], 'false,false': [nan, 0.22293444328824347], 'false,false,false': [nan, 0.2229344432882419]}
{'': [nan, 0.21618425550392031], 'false': [nan, 0.21618425550392026], 'false,false': [nan, 0.21618425550392031], 'false,false,false': [0.2089116143170198, 0.21961535224307466]}
{'': [nan, 0.22401994797576147], 'false': [nan, 0.22401994797576147], 'false,false': [nan, 0.2240199479757612], 'false,false,false': [0.23217392690483088, 0.21867372491352075]}
{'': [nan, 0.22080352323845584], 'false': [nan, 0.22080352323845584], 'false,false': [nan, 0.22080352323845526], 'false,false,false': [0.2160664819944598, 0.22141884083129834]}
{'': [nan, 0.2265398591582464], 'false': [nan, 0.2265398591582464], 'false,false': [nan, 0.22653985915824373], 'false,false,false': [nan, 0.22653985915824373]}
{'': [nan, 0.21359677659556164], 'false': [nan, 0.21359677659556164], 'false,false': [nan, 0.21359677659556198], 'false,false,false': [nan, 0.21359677659556164]}
{'': [0.22485315478983278, 0.1994482581486924], 'true': [1.5929390867740507e-05, 1.6644364742389854e-05], 'false': [nan, 0.1994482581486924], 'false,false': [nan, 0.1994482581486924], 'false,false,false': [0.2015999999999995, 0.19834710743801642], 'true,true': [nan, 1.5929390867740507e-05], 'true,true,false': [nan, 1.5929390867740507e-05]}
{'': [nan, 0.18936794335122023], 'false': [nan, 0.18936794335122023], 'false,false': [nan, 0.18936794335122123], 'false,false,false': [0.13510434385930764, 0.22629493376144025]}
{'': [nan, 0.18606782364301824], 'false': [nan, 0.18606782364301802], 'false,false': [nan, 0.18606782364301802], 'false,false,false': [nan, 0.18606782364301802]}
{'': [nan, 0.18817220929128742], 'false': [nan, 0.18817220929128742], 'false,false': [nan, 0.18817220929128697], 'false,false,false': [nan, 0.18817220929128697]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 12.464
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( enzyme(A, E), complex(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.10100607795665523;  // std dev = 3.588, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | | else return 0.17666745361803013;  // std dev = 5.413, 135.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7289967225966154;  // std dev = 0.061, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.6367599971833614;  // std dev = 0.878, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(D, E), location(D, G) )
%   | | | then return -0.03264549081824004;  // std dev = 2.095, 41.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | | else return 0.09715139615303388;  // std dev = 3.300, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.46332728143430657;  // std dev = 1.195, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.010248346035543041;  // std dev = 2.092, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.16679937814485482;  // std dev = 4.966, 120.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=40 */
%   | | | else return 0.34742578864314944;  // std dev = 2.089, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.6454707197017846;  // std dev = 0.097, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.20371770922279184;  // std dev = 1.024, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.5530135794957105;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05307417112253135;  // std dev = 3.716, 89.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=20 */
%   | | else if ( enzyme(E, G), complex(A, H) )
%   | | | then return 0.040105872196447886;  // std dev = 1.570, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.15175643846598197;  // std dev = 5.755, 162.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=57 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then return 0.21101615800683912;  // std dev = 0.925, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.03891294913555741;  // std dev = 1.192, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.21824778947445383;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, D) )
%   | then return 0.09515040698145559;  // std dev = 0.386, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else return 0.4835568433008776;  // std dev = 0.247, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( location(A, G), interaction(E, H) )
%   | | then if ( interaction(E, A), recursion_proteinclass(H, B) )
%   | | | then return 0.6291895189072174;  // std dev = 1.518, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.010195016342086305;  // std dev = 2.993, 78.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=14 */
%   | | else return 0.41104607413211236;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(A, K), interaction(I, K) )
%   | | | then return -0.1361937359253972;  // std dev = 0.577, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.08655686114158301;  // std dev = 5.329, 155.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=48 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.0755433231491514;  // std dev = 0.653, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1879428892331736;  // std dev = 1.542, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( phenotype(A, E), complex(A, F) )
%   | then return 0.15398373947632196;  // std dev = 0.390, 52.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=22 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.31268093083332366;  // std dev = 0.275, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.057609745970659834;  // std dev = 0.408, 184.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=53 */
%   else if ( phenotype(A, H), complex(A, I) )
%   | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.7077236983126005;  // std dev = 0.143, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1894653916539355;  // std dev = 0.094, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.6765015252821817;  // std dev = 0.354, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.21846273300628247;  // std dev = 0.086, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return 0.06983972312693242;  // std dev = 1.112, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.46985421088762735;  // std dev = 1.104, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.37652036453640597;  // std dev = 0.076, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), complex(G, E) )
%   | | | then return 0.6388060778378539;  // std dev = 0.392, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.12446608637933257;  // std dev = 1.149, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.38823758871054376;  // std dev = 0.169, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.10716737880270404;  // std dev = 2.626, 92.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=9 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5516668340478424;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10200955351375451;  // std dev = 1.471, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.04954391348789901;  // std dev = 4.958, 144.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=42 */
%   | | | else return 0.1736620467186094;  // std dev = 1.320, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4719684042967601;  // std dev = 0.166, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2036209578283766;  // std dev = 0.096, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( complex(E, G), location(A, H) )
%   | | then if ( interaction(A, I), location(I, H) )
%   | | | then return 0.05596230823683748;  // std dev = 2.241, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return 0.18586145735358042;  // std dev = 3.658, 60.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=27 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.1515321981973208;  // std dev = 1.176, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.006341016939973094;  // std dev = 1.852, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then return 0.11106759733573422;  // std dev = 1.006, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return -0.11298177219001375;  // std dev = 1.558, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.057130442679408075;  // std dev = 1.268, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(A, E), interaction(C, C) )
%   | then return 0.1313325126979344;  // std dev = 0.721, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.1987520071810397;  // std dev = 0.105, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, F) )
%   | | | then return -0.09055768205846632;  // std dev = 1.495, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | | else return -0.01167872863844348;  // std dev = 2.239, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   else if ( complex(A, G) )
%   | then return 0.002106601000800056;  // std dev = 0.264, 91.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=26 */
%   | else if ( phenotype(A, H), location(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5637713439407773;  // std dev = 1.526, 29.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | | else return -0.25904558510164616;  // std dev = 0.285, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.051824063100110764;  // std dev = 3.112, 60.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
%   | | | else return -0.01619665613044798;  // std dev = 1.347, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.16772785782639482;  // std dev = 0.248, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( complex(D, F), location(D, E) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2798627843904573;  // std dev = 1.379, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.09098690307917746;  // std dev = 2.034, 100.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=11 */
%   | | else if ( complex(D, H), phenotype(D, I) )
%   | | | then return 0.3127996553535474;  // std dev = 0.520, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.0032928532322079786;  // std dev = 1.926, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(K, K), phenotype(J, L) )
%   | | | then return -0.005877667738963639;  // std dev = 2.608, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.08301139384919534;  // std dev = 3.494, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
%   | | else if ( location(A, M) )
%   | | | then return -0.13467651514110465;  // std dev = 1.288, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.16874967993048617;  // std dev = 0.806, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(D, D), location(D, C) )
%   | then return -0.023450827032294914;  // std dev = 0.294, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | else if ( recursion_proteinclass(D, B) )
%   | | then return 0.2157295237206624;  // std dev = 0.143, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, E), interaction(D, E) )
%   | | | then return -0.008485235716303033;  // std dev = 2.023, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | | else return 0.03879740631677047;  // std dev = 4.423, 134.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=47 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return -0.2586900683901901;  // std dev = 0.773, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.2284788426139422;  // std dev = 0.168, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( location(A, H) )
%   | | then return 0.04015245584717616;  // std dev = 0.293, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.18798090654111538;  // std dev = 0.779, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.05970813238224593;  // std dev = 1.850, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.182', 'seconds']
Refined model CLL: -0.243941


******************************************
Best model found
******************************************
Results 

CLL : -0.255562 

AUC ROC : 0.943071 

AUC PR : 0.28298 

Precision : 0.367647 

Recall : 0.471698 

F1 : 0.413223 

Total Learning Time : 12.464 

Total Inference Time : 8.461652994155884 

Total revision time: 24.185373065948486
Best scored revision CLL: -0.243941


Results 

CLL : -0.255562 

AUC ROC : 0.943071 

AUC PR : 0.28298 

Precision : 0.367647 

Recall : 0.471698 

F1 : 0.413223 

Total Learning Time : 24.215232847213745 

Total Inference Time : 8.461652994155884 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.239
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18439006985128545;  // std dev = 7.873, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.14313188475564356;  // std dev = 5.124, 123.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=38 */
%   | | | else return 0.19905366018961415;  // std dev = 5.856, 148.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.09499837738974565;  // std dev = 5.608, 154.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=44 */
%   | | | else return 0.13122289604231124;  // std dev = 5.699, 148.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.13191925218329237;  // std dev = 4.000, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | | | else return 0.09723147807269684;  // std dev = 6.851, 219.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09555800280815323;  // std dev = 7.891, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10068800725922972;  // std dev = 7.756, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7165989349568501;  // std dev = 0.987, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.26142773346526754;  // std dev = 0.020, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.08181133547687439;  // std dev = 3.036, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.06608800201474248;  // std dev = 4.749, 101.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.020468706767101347;  // std dev = 4.422, 149.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=44 */
%   | | | else return 0.05612619541763003;  // std dev = 5.641, 142.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04477706056595844;  // std dev = 7.092, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03979509401315062;  // std dev = 7.059, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.466', 'seconds']
Parameter learned model CLL:-0.325796 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.873, 190, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.124, 85, 38], 'false,false,false,false': [5.856, 94, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.608, 110, 44], 'false,false,false,false': [5.699, 100, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.0, 48, 24], 'false,false,false,false': [6.851, 151, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.891, 192, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.756, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.987, 1, 44], 'true,false': [0.02, 97, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.036, 27, 14], 'false,false,false,false': [4.749, 67, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.422, 105, 44], 'false,false,false,false': [5.641, 94, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.092, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.059, 179, 92]}]
{'': [nan, 0.21980785674764972], 'false': [nan, 0.2198078567476494], 'false,false': [nan, 0.21980785674764972], 'false,false,false': [nan, 0.2198078567476494]}
{'': [nan, 0.22423441946596148], 'false': [nan, 0.22423441946596603], 'false,false': [nan, 0.22423441946596148], 'false,false,false': [0.21349725692378888, 0.2317384952520089]}
{'': [nan, 0.21200271226673778], 'false': [nan, 0.21200271226673778], 'false,false': [nan, 0.21200271226673753], 'false,false,false': [0.20422842306400762, 0.2194230322244489]}
{'': [nan, 0.21649637432679775], 'false': [nan, 0.21649637432679775], 'false,false': [nan, 0.21649637432679883], 'false,false,false': [0.2222222222222227, 0.21431619450598222]}
{'': [nan, 0.21923544980824075], 'false': [nan, 0.21923544980824075], 'false,false': [nan, 0.21923544980824095], 'false,false,false': [nan, 0.21923544980824095]}
{'': [nan, 0.22616821095983616], 'false': [nan, 0.22616821095983616], 'false,false': [nan, 0.22616821095983627], 'false,false,false': [nan, 0.22616821095983625]}
{'': [0.21393035712105637, 0.2238111067401621], 'false': [nan, 0.2238111067401621], 'false,false': [nan, 0.2238111067401621], 'false,false,false': [0.22486615110053498, 0.22331144005489695], 'true': [0.02165156420206126, 4.201339150612302e-06], 'true,true': [nan, 0.02165156420206126], 'true,true,false': [nan, 0.02165156420206126]}
{'': [nan, 0.17686623959213513], 'false': [nan, 0.17686623959213513], 'false,false': [nan, 0.17686623959213527], 'false,false,false': [0.13122978275943026, 0.22410136023606922]}
{'': [nan, 0.18288693142013834], 'false': [nan, 0.18288693142013931], 'false,false': [nan, 0.18288693142013931], 'false,false,false': [nan, 0.18288693142013931]}
{'': [nan, 0.18385380555976547], 'false': [nan, 0.18385380555976547], 'false,false': [nan, 0.18385380555976621], 'false,false,false': [nan, 0.18385380555976621]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 11.448
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( complex(E, F), phenotype(E, G) )
%   | | | then return 0.1914822684328457;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.0399671169176941;  // std dev = 2.558, 44.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A), enzyme(A, J) )
%   | | | then return 0.13814893509951237;  // std dev = 3.175, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return 0.22656998773109083;  // std dev = 5.150, 114.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(D, F), complex(D, G) )
%   | | then if ( enzyme(A, E), phenotype(A, H) )
%   | | | then return -0.05784296774700629;  // std dev = 0.936, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.09971283688266494;  // std dev = 2.267, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else return -0.14490072016545294;  // std dev = 0.072, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.49790643196610296;  // std dev = 0.904, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08978360024083548;  // std dev = 3.858, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return 0.3237616241525676;  // std dev = 2.079, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.16107975319078324;  // std dev = 5.028, 115.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=38 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( complex(A, E), location(D, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.13699556013557354;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06135296527952768;  // std dev = 0.921, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.09160905419886423;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.19852918561099106;  // std dev = 0.788, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.6652523521415711;  // std dev = 0.106, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1999438077645151;  // std dev = 0.902, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.1027996860414017;  // std dev = 3.045, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.17257569264463413;  // std dev = 5.972, 155.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=56 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.473492934527904;  // std dev = 0.077, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( enzyme(C, E), enzyme(A, F) )
%   | | then return -0.11120428264969542;  // std dev = 0.196, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( location(C, D), enzyme(A, G) )
%   | | | then return 0.13054106337641322;  // std dev = 3.265, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return 0.06029255174852443;  // std dev = 5.111, 139.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=39 */
%   else if ( phenotype(A, H), location(A, I) )
%   | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | then return 0.7501237670292495;  // std dev = 0.112, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.20804130506052912;  // std dev = 0.060, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( enzyme(A, K) )
%   | | then return 0.5799254869512964;  // std dev = 0.900, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.17311353963064627;  // std dev = 1.156, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.4061809448214971;  // std dev = 1.379, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.44075618517386317;  // std dev = 0.203, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, C) )
%   | | then return -0.14315552751409133;  // std dev = 0.180, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( phenotype(C, F), enzyme(A, G) )
%   | | | then return 0.18931704960524307;  // std dev = 2.798, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.08144455003671888;  // std dev = 5.119, 130.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=42 */
%   else if ( phenotype(A, H) )
%   | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.5728075353166331;  // std dev = 0.136, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.18535745345505972;  // std dev = 0.081, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( phenotype(J, L), enzyme(K, M) )
%   | | | then return -0.10832772593654054;  // std dev = 1.266, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.003916221725722411;  // std dev = 2.428, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else return -0.14077351456428816;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2689307903817155;  // std dev = 0.076, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), phenotype(A, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.05503203496142123;  // std dev = 1.251, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return -0.1767993744918761;  // std dev = 0.092, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.08046870670675359;  // std dev = 1.445, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.001674820341917028;  // std dev = 2.149, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | else if ( location(A, I), interaction(A, J) )
%   | | then if ( phenotype(A, K), interaction(J, L) )
%   | | | then return 0.10156296129640513;  // std dev = 1.551, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.015924109658111727;  // std dev = 3.159, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | else if ( location(A, M), enzyme(A, N) )
%   | | | then return 0.04470768538093611;  // std dev = 3.150, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return 0.14212426591646662;  // std dev = 3.871, 67.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2095106688974549;  // std dev = 0.061, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.6795602758190401;  // std dev = 0.146, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.22154695021830745;  // std dev = 0.070, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.7056999847310882;  // std dev = 0.107, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.26213393837611176;  // std dev = 0.099, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( phenotype(I, K), enzyme(A, L) )
%   | | | then return 0.3303529123451642;  // std dev = 0.621, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08919815738598369;  // std dev = 1.887, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return -0.03942246078858461;  // std dev = 2.462, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.05198006722510931;  // std dev = 2.556, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then return 0.48155516709450774;  // std dev = 0.173, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.19407819271807952;  // std dev = 0.386, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( interaction(A, F), complex(A, G) )
%   | then if ( interaction(H, A), interaction(I, H) )
%   | | then return 0.03311710718572107;  // std dev = 0.264, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( enzyme(F, J) )
%   | | | then return 0.059719521154293825;  // std dev = 0.986, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.25223473573063304;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.42086386134499226;  // std dev = 0.453, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.26225579618234796;  // std dev = 0.062, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.030715653879586642;  // std dev = 3.647, 81.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=25 */
%   | | | else return -0.06500477285763757;  // std dev = 2.285, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.11098997213154094;  // std dev = 0.815, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.5254078975857681;  // std dev = 1.280, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.20448626996215175;  // std dev = 0.286, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0.30514200309632733;  // std dev = 1.674, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then return -0.17242202929259906;  // std dev = 0.053, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(A, I), phenotype(A, J) )
%   | | | then return -0.16563141396744238;  // std dev = 0.424, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.2536589178073206;  // std dev = 0.382, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( interaction(A, A) )
%   | then return -0.12185566740381518;  // std dev = 0.118, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else return -0.15591844533070395;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( phenotype(C, E), interaction(F, A) )
%   | then if ( enzyme(A, G), enzyme(F, H) )
%   | | then return -0.006589415441452909;  // std dev = 0.167, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else return 0.13481120618213407;  // std dev = 0.271, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | else if ( phenotype(A, I) )
%   | | then return -0.03181516170915536;  // std dev = 0.186, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( complex(A, J), location(C, D) )
%   | | | then return -0.03375005043908313;  // std dev = 1.141, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.12391970215616377;  // std dev = 1.646, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   else if ( interaction(K, A), complex(K, L) )
%   | then return -0.02867553170096158;  // std dev = 0.247, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | else if ( complex(A, M) )
%   | | then return 0.08897382922248288;  // std dev = 0.241, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return -0.08828061054280027;  // std dev = 0.823, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.00799634978121953;  // std dev = 2.635, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '59.636', 'seconds']
Refined model CLL: -0.21142


******************************************
Best model found
******************************************
Results 

CLL : -0.217042 

AUC ROC : 0.983495 

AUC PR : 0.236689 

Precision : 0.19615 

Recall : 0.772563 

F1 : 0.312865 

Total Learning Time : 11.448 

Total Inference Time : 8.493273258209229 

Total revision time: 22.994931184768678
Best scored revision CLL: -0.21142


Results 

CLL : -0.217042 

AUC ROC : 0.983495 

AUC PR : 0.236689 

Precision : 0.19615 

Recall : 0.772563 

F1 : 0.312865 

Total Learning Time : 23.024790966033937 

Total Inference Time : 8.493273258209229 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.199
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16974313799806348;  // std dev = 7.694, 276.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.19517918223161326;  // std dev = 4.237, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | | else return 0.1398697447232232;  // std dev = 6.355, 191.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1638139602119963;  // std dev = 4.264, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | | else return 0.1692704401282037;  // std dev = 6.112, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.09130382669694524;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.12218876276140431;  // std dev = 7.156, 230.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=77 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0942008773711316;  // std dev = 7.601, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.097149778898578;  // std dev = 7.484, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7320704820126321;  // std dev = 0.012, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2675599707928699;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.05490435962035303;  // std dev = 3.559, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | | else return 0.032545747161549524;  // std dev = 5.225, 130.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.020555626677171576;  // std dev = 3.472, 92.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=28 */
%   | | | else return 0.060615945778712516;  // std dev = 6.187, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07062045829497612;  // std dev = 6.911, 236.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.012867720701660331;  // std dev = 7.162, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.475', 'seconds']
Parameter learned model CLL:-0.34324 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.694, 190, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.237, 50, 28], 'false,false,false,false': [6.355, 133, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.264, 52, 28], 'false,false,false,false': [6.112, 105, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.491, 20, 9], 'false,false,false,false': [7.156, 153, 77]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.601, 176, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.484, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.012, 0, 28], 'true,false': [0.014, 45, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.559, 38, 19], 'false,false,false,false': [5.225, 91, 39]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.472, 64, 28], 'false,false,false,false': [6.187, 113, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.911, 150, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.162, 182, 86]}]
{'': [nan, 0.21450325561856828], 'false': [nan, 0.21450325561856817], 'false,false': [nan, 0.21450325561856828], 'false,false,false': [nan, 0.21450325561856817]}
{'': [nan, 0.21749284835754162], 'false': [nan, 0.21749284835754], 'false,false': [nan, 0.21749284835754162], 'false,false,false': [0.23011176857330634, 0.211452536937035]}
{'': [nan, 0.22854680383169804], 'false': [nan, 0.22854680383169804], 'false,false': [nan, 0.2285468038316977], 'false,false,false': [0.22723975288242607, 0.22917849936243384]}
{'': [nan, 0.2217702386183538], 'false': [nan, 0.2217702386183538], 'false,false': [nan, 0.2217702386183529], 'false,false,false': [0.21403091557669437, 0.22263926129078843]}
{'': [nan, 0.2205374400258716], 'false': [nan, 0.2205374400258716], 'false,false': [nan, 0.2205374400258714], 'false,false,false': [nan, 0.2205374400258714]}
{'': [nan, 0.22676688913101278], 'false': [nan, 0.22676688913101278], 'false,false': [nan, 0.22676688913101312], 'false,false,false': [nan, 0.22676688913101328]}
{'': [0.23627193968119037, 0.21383142159112797], 'true': [5.025942186178055e-06, 4.255827490102288e-06], 'false': [nan, 0.21383142159112797], 'false,false': [nan, 0.21383142159112797], 'false,false,false': [0.22222222222222276, 0.209999999999999], 'true,true': [nan, 5.025942186178055e-06], 'true,true,false': [nan, 5.025942186178055e-06]}
{'': [nan, 0.19177051629170408], 'false': [nan, 0.19177051629170408], 'false,false': [nan, 0.19177051629170386], 'false,false,false': [0.13105226600525086, 0.22387625999311062]}
{'': [nan, 0.20237908267869714], 'false': [nan, 0.20237908267869706], 'false,false': [nan, 0.20237908267869706], 'false,false,false': [nan, 0.20237908267869706]}
{'': [nan, 0.19141489027338746], 'false': [nan, 0.19141489027338746], 'false,false': [nan, 0.1914148902733879], 'false,false,false': [nan, 0.1914148902733879]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 7.056
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.12481560176617967;  // std dev = 6.408, 210.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.7765384071856128;  // std dev = 0.059, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, F), phenotype(F, G) )
%   | | then return -0.012101828152892765;  // std dev = 0.333, 73.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=11 */
%   | | else return 0.16598012437183898;  // std dev = 0.461, 97.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=32 */
%   else if ( interaction(A, H), location(A, I) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(H, H), complex(H, J) )
%   | | | then return -0.011801849420279514;  // std dev = 1.598, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.2103679095842931;  // std dev = 2.793, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | else if ( complex(A, K) )
%   | | then return 0.13466834579771858;  // std dev = 0.716, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.5089324792577673;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5922658125911007;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(D, D), complex(D, E) )
%   | then return 0.21111942177188053;  // std dev = 0.412, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else return 0.0896740901206918;  // std dev = 0.414, 161.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=46 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( interaction(F, F), phenotype(F, H) )
%   | | then if ( interaction(I, F), recursion_proteinclass(I, B) )
%   | | | then return 0.8438405868138794;  // std dev = 3.23e-05, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.15616270718058298;  // std dev = 3.42e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(F, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6195918873184341;  // std dev = 0.222, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.03490846654283757;  // std dev = 2.358, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | else if ( complex(A, K), phenotype(A, L) )
%   | | then return 0.5639369918600974;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.22443104232203268;  // std dev = 2.157, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.11017432493400461;  // std dev = 1.803, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), interaction(E, A) )
%   | then if ( interaction(A, F), interaction(C, F) )
%   | | then return 0.019303677694300574;  // std dev = 0.298, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else return 0.10615954860826028;  // std dev = 0.437, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.6945071892970808;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(C, H) )
%   | | | then return 0.17529712133985267;  // std dev = 3.052, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return 0.10915260978629293;  // std dev = 3.637, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.4702046232164064;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then return 0.27234066614961017;  // std dev = 0.915, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(L, A), interaction(A, M) )
%   | | | then return -0.044897948094223324;  // std dev = 1.595, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.05410583984943782;  // std dev = 3.343, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then if ( complex(A, D) )
%   | | then return 0.4616813117621256;  // std dev = 0.132, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.020735384448385446;  // std dev = 0.759, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.5035257854471419;  // std dev = 0.114, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.671162928617765;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.14882776943425804;  // std dev = 0.042, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.5302037500066049;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3292895695597008;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.02051520610171247;  // std dev = 3.314, 76.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=18 */
%   | | | else return 0.08015456837635715;  // std dev = 5.529, 150.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=46 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then return 0.3831470724710747;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5234900507727471;  // std dev = 0.147, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, G), enzyme(G, H) )
%   | | then return 0.34023506346468857;  // std dev = 0.097, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.0655280897191166;  // std dev = 0.670, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.12991315491617214;  // std dev = 0.039, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6993260946400407;  // std dev = 0.477, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.21672306246633033;  // std dev = 0.253, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.09112349354438998;  // std dev = 3.950, 77.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=27 */
%   | | | else return 0.022923331664994908;  // std dev = 3.526, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4951010790451541;  // std dev = 0.198, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.17904261503631225;  // std dev = 0.054, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, F) )
%   | | then return 0.048728657148833975;  // std dev = 0.236, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.06843198843431753;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6677008879061344;  // std dev = 0.142, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( phenotype(H, J) )
%   | | | then return 0.0622931662891284;  // std dev = 1.903, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.2836191416250821;  // std dev = 1.165, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.017922101671183133;  // std dev = 2.520, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.08416285995860924;  // std dev = 3.627, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), phenotype(C, E) )
%   | then return 0.39510234584012544;  // std dev = 0.186, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( phenotype(C, F), interaction(A, C) )
%   | | then return -0.17656179503641528;  // std dev = 0.086, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( complex(D, G), phenotype(A, H) )
%   | | | then return 0.16138409095751302;  // std dev = 2.582, 39.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   | | | else return 2.2514596118207675E-4;  // std dev = 3.089, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   else if ( interaction(I, A), phenotype(I, J) )
%   | then if ( phenotype(A, K) )
%   | | then if ( interaction(A, L) )
%   | | | then return 0.1103795358837018;  // std dev = 0.925, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.015448638554873434;  // std dev = 1.961, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( interaction(I, M), recursion_proteinclass(M, B) )
%   | | | then return 0.42391194735353166;  // std dev = 0.724, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.15722561996368745;  // std dev = 0.106, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.04114315596080546;  // std dev = 0.353, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( phenotype(D, E) )
%   | then if ( interaction(F, D), location(F, C) )
%   | | then if ( phenotype(A, G), complex(A, H) )
%   | | | then return 0.05649345810905288;  // std dev = 1.279, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return -0.024104105296477038;  // std dev = 3.801, 114.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=30 */
%   | | else if ( complex(D, I) )
%   | | | then return -0.025105033246243885;  // std dev = 1.235, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.07345393893551652;  // std dev = 2.197, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | else return -0.06604836498220318;  // std dev = 0.338, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   else if ( interaction(A, J), enzyme(J, K) )
%   | then return 8.704115236906099E-4;  // std dev = 0.327, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else if ( location(A, L), complex(A, M) )
%   | | then return -0.06590333887868104;  // std dev = 0.734, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.24240070368749708;  // std dev = 1.046, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.05991024963119557;  // std dev = 1.483, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.22197600960821218;  // std dev = 0.283, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.023707200262853778;  // std dev = 0.624, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, G), interaction(G, A) )
%   | | then return 0.24061994094677316;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3200468038078861;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.1034635115602219;  // std dev = 0.087, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.13821226873603398;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.29318292202652196;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.042280836298048026;  // std dev = 2.437, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | | else return 0.04488262536571433;  // std dev = 5.026, 154.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=52 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.917', 'seconds']
Refined model CLL: -0.266049


******************************************
Best model found
******************************************
Results 

CLL : -0.26889 

AUC ROC : 0.916146 

AUC PR : 0.196404 

Precision : 0.253608 

Recall : 0.434629 

F1 : 0.320313 

Total Learning Time : 7.056 

Total Inference Time : 2.7917919158935547 

Total revision time: 12.722836618423461
Best scored revision CLL: -0.266049


Results 

CLL : -0.26889 

AUC ROC : 0.916146 

AUC PR : 0.196404 

Precision : 0.253608 

Recall : 0.434629 

F1 : 0.320313 

Total Learning Time : 12.75269639968872 

Total Inference Time : 2.7917919158935547 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.165
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.12214893509951097;  // std dev = 4.928, 125.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=33 */
%   | | | else return 0.12285481745245234;  // std dev = 5.145, 136.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.21947341221095448;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6944265372694052;  // std dev = 3.197, 81.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | | else return -0.15742520050971698;  // std dev = 0.000577, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.011871392932562792;  // std dev = 1.556, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.3444674378357556;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4442553256351733;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05832282986332432;  // std dev = 4.443, 145.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6287566646172491;  // std dev = 1.898, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.1376947101768719;  // std dev = 7.88e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20689814840417925;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.22336816963643136;  // std dev = 1.183, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4338596510308287;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2941160447208322;  // std dev = 0.947, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5320509143463954;  // std dev = 1.562, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return 0.03660039971349138;  // std dev = 5.238, 237.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.49975237078352175;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.06940026230667086;  // std dev = 1.455, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.0880661160454551;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.364620455235515;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3310469010610753;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.09024197846958462;  // std dev = 5.418, 225.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.37736610331261533;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.05099284027345445;  // std dev = 1.187, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.05387966883959033;  // std dev = 1.279, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2682751016823337;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3760298048165013;  // std dev = 0.228, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return -0.44463356325371556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.2930505233601969;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.29356979562422125;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return 0.023522438515405076;  // std dev = 2.239, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.0190447444181088;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.08675601861154418;  // std dev = 2.887, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0.10440303916371797;  // std dev = 4.128, 117.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2592138034555056;  // std dev = 0.237, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.23655166975634379;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5384350278655975;  // std dev = 1.365, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.18076998572251454;  // std dev = 0.552, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.26260821593485456;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05028538523464761;  // std dev = 4.055, 136.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return -0.05299489346075931;  // std dev = 0.816, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.1928009432170662;  // std dev = 0.055, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41039068828638436;  // std dev = 2.607, 80.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=71 */
%   | | else return -0.15232995844236988;  // std dev = 0.251, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.1965133098743823;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04402456408938453;  // std dev = 1.416, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18289386721299117;  // std dev = 0.103, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18689801977074702;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.06030659227094556;  // std dev = 1.724, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.33859999577474564;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.055641966557770144;  // std dev = 1.566, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18428426586314606;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.051522746461667886;  // std dev = 3.448, 112.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=40 */
%   | | | else return -0.013388344631850346;  // std dev = 1.470, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.02860238536365843;  // std dev = 0.883, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.23302370304216913;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08790949514108529;  // std dev = 0.700, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return 0.008828994420634515;  // std dev = 2.245, 93.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1581872460775808;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.03258573605273483;  // std dev = 3.349, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
%   | | | else return 0.004772429614180677;  // std dev = 1.451, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.759', 'seconds']
Parameter learned model CLL:-0.199251 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.928, 92, 33], 'false,false,true,false': [5.145, 100, 36], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 9], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.707, 1, 1], 'false,false,true,true': [3.197, 12, 69], 'false,false,true,false': [0.000577, 152, 0], 'false,false,false,true': [1.556, 13, 3], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.943, 1, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.443, 111, 34], 'false,true,false,true': [1.898, 4, 37], 'false,true,false,false': [7.88e-08, 80, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.095, 3, 2], 'false,false,false,true': [1.183, 4, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.03, 0, 5], 'true,false': [0.947, 1, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.562, 3, 14], 'false,true,false': [5.238, 180, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.455, 8, 3], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.038, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.028, 0, 4], 'false,true': [5.418, 154, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.187, 5, 2], 'false,false,false,false': [1.279, 10, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.031, 0, 4], 'true,true,false': [0.228, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [2.239, 34, 12], 'false,false,true': [0.857, 1, 3], 'false,false,false,true': [2.887, 42, 20], 'false,false,false,false': [4.128, 76, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.237, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.365, 2, 33], 'true,false': [0.552, 81, 0], 'false,true': [0.02, 0, 3], 'false,false,true': [4.055, 96, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.816, 1, 3], 'true,false': [0.055, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.607, 9, 71], 'false,true,false': [0.251, 172, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.416, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.103, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.084, 0, 3], 'false,true,true': [1.724, 37, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.566, 27, 17], 'false,false,true': [0.016, 0, 3], 'false,false,false,true': [3.448, 72, 40], 'false,false,false,false': [1.47, 12, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.883, 1, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.7, 2, 3], 'false,true': [2.245, 64, 29], 'false,false,true': [0.014, 0, 3], 'false,false,false,true': [3.349, 85, 40], 'false,false,false,false': [1.451, 11, 4]}]
{'': [-1.6148698540002277e-16, 0.19953791220331896], 'false': [1.4802973661668753e-16, 0.19589689919360379], 'false,false': [0.19447747390672518, 0.22222222222222207], 'false,false,false': [0.25, 0.18750000000000003], 'false,false,true': [0.19430400000000128, 0.19463667820069314], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [2.4223047810003414e-16, 0.20777210591510445], 'false': [0.24000000000000005, 0.20644561267020858], 'false,true': [0.0, 0.22222222222222224], 'false,true,false': [0.0, 0.25], 'false,false': [0.20843774108979674, 0.17315859833738367], 'false,false,true': [0.1261938546649373, 2.1882712396500824e-09], 'false,false,false': [0.15126229767564034, 0.25], 'true': [0.0, -9.868649107779169e-17]}
{'': [0.07638888888888884, 0.1522382230244216], 'false': [0.14861425630774297, 0.2165945566910161], 'false,false': [0.24000000000000005, 0.19976335723247177], 'false,false,true': [nan, 0.24000000000000005], 'false,false,false': [0.19976335723247177, nan], 'false,true': [0.13612153919823738, 0.16137372427069488], 'false,true,false': [0.08785410370835994, 7.771561172376095e-17], 'true': [0.09876543209876548, 0.0]}
{'': [0.07958087281725705, 0.1365657751972061], 'false': [0.13293937781355283, 0.19700205428991324], 'false,false': [0.0, 0.19895521166681793], 'false,false,false': [0.19253500317014058, 0.2222222222222222], 'false,true': [0.1435750566440304, 0.11574730538338814], 'false,true,true': [nan, 0.14357505664403056], 'true': [0.0001781292681338753, 0.1281603367492699], 'false,false,true': [nan, 0.0]}
{'': [0.00046660185455435233, 0.1335831745022542], 'false': [0.130455997938126, 0.16199471148871775], 'false,false': [0.0, 0.16281367596739113], 'false,false,false': [0.20132550779857739, 0.136296456407603], 'true': [0.0002101790358377542, 0.00019804317100571844], 'true,true': [0.0002101790358377542, nan], 'false,false,true': [nan, 0.0]}
{'': [0.051585560840629256, 0.13691973962512272], 'false': [0.10896110570767363, 0.14287608060133802], 'false,false': [0.18352278725452373, 0.14183050839125488], 'false,false,false': [0.13446410997675123, 0.14562620472227963], 'true': [0.0087293345754724, 0.12101358670508382], 'true,false': [0.13604445291085057, 0.0], 'true,false,true': [0.0, 0.0], 'true,true': [0.00024122869236321842, 0.01035934103861189]}
{'': [0.12091613592828776, 0.11924945282596018], 'true': [0.056130845364276045, 0.0037604672704000678], 'false': [0.0001337861786457432, 0.12090403340900184], 'false,false': [0.12090403340900184, nan], 'true,true': [0.005147875856301559, 0.053234246969855646], 'true,true,false': [nan, 0.053234246969855493], 'true,true,true': [0.005615975050677247, 0.0]}
{'': [0.06913764294693607, 0.09844146394132848], 'false': [0.09582953344213202, 0.1446810270269878], 'false,false': [0.0, 0.1541494212560744], 'false,false,false': [0.1541494212560744, nan], 'false,true': [0.084944200425072, 0.00036723260135927276], 'false,true,true': [nan, 0.08494420042507259], 'true': [0.16636717997921646, 0.00038434332141177446], 'false,false,true': [0.0, nan]}
{'': [0.0016082610916993549, 0.08990923409940663], 'false': [0.06290427474613769, 0.10813227936713381], 'false,false': [8.01599298667031e-05, 0.11021026511592612], 'false,false,false': [0.10613578485745502, 0.13504485839664163], 'false,true': [0.06193865269570903, 0.056222392576679596], 'false,true,false': [0.0, 0.055720946530630595], 'true': [0.0013218552901528707, 0.0023603493593099593], 'true,false': [nan, 0.0023603493593099593]}
{'': [0.09783007003759278, 0.0781823947642156], 'true': [0.09085344736354138, 0.09792704024926654], 'true,true': [0.09085344736354138, nan], 'true,true,true': [0.09756700882604866, 0.0], 'false': [0.054211101849248676, 0.09355496928845017], 'false,false': [6.278287648105636e-05, 0.09521152284986159], 'false,false,false': [0.08970620758080484, 0.14039845364999676]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 6.475
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G), phenotype(A, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.03275210970268692;  // std dev = 3.013, 63.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=11 */
%   | | else if ( interaction(J, A), location(A, K) )
%   | | | then return 0.21985106275908775;  // std dev = 5.706, 141.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=51 */
%   | | | else return 0.08037115732173444;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.743272687223838;  // std dev = 0.058, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H), complex(G, H) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6745489223838563;  // std dev = 3.194, 81.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | | else return -0.16330423642543115;  // std dev = 0.129, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.08728487623755264;  // std dev = 1.258, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.1854370645093397;  // std dev = 1.153, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.46796380454535136;  // std dev = 0.305, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.6121829050209074;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.03134732629517933;  // std dev = 2.432, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return 0.1184995881723274;  // std dev = 3.360, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6879589706190036;  // std dev = 1.005, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.14475738584007664;  // std dev = 0.075, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7676566314901362;  // std dev = 0.245, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16157997026191329;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.0226187937740036;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4594539087086532;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3230963101455626;  // std dev = 0.337, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F), phenotype(A, G) )
%   | | then if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.09703604687786468;  // std dev = 1.658, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return -0.002480040959803409;  // std dev = 2.097, 44.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.04961178646197465;  // std dev = 2.611, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | | else return 0.0995321651978229;  // std dev = 3.918, 121.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=40 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.3669604140084495;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return -0.01798442311194579;  // std dev = 0.790, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.1471853618166622;  // std dev = 1.266, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( location(A, E), interaction(A, A) )
%   | | then return 0.34591767097408566;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.08766354213996823;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3666991730713556;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1457725887099823;  // std dev = 0.011, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( location(A, G) )
%   | | | then return 0.07696693339924623;  // std dev = 5.231, 211.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=68 */
%   | | | else return 0.19203068069202756;  // std dev = 0.983, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.2865418068808635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.269209583621521;  // std dev = 1.024, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.04614213356015282;  // std dev = 0.912, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.3327121532686988;  // std dev = 0.076, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return -0.1594938141741517;  // std dev = 0.441, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.23169210525649386;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( enzyme(A, G), location(A, H) )
%   | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.560529450373089;  // std dev = 0.085, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return -0.18048463579088142;  // std dev = 0.058, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.038735654964120465;  // std dev = 2.405, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return -0.05715956842072824;  // std dev = 1.352, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.0701420260767528;  // std dev = 1.926, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.03709387658053061;  // std dev = 2.871, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.262905592498004;  // std dev = 0.066, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A), enzyme(E, F) )
%   | | | then return 0.39204035693053796;  // std dev = 1.198, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.5422213406411632;  // std dev = 0.531, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( enzyme(A, G) )
%   | | then return -0.15656341114464295;  // std dev = 0.072, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.18620703426261392;  // std dev = 0.081, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.02074118025480537;  // std dev = 0.794, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( interaction(I, K), enzyme(K, L) )
%   | | | then return 0.05022394786989294;  // std dev = 3.586, 116.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=38 */
%   | | | else return -0.18537838527262832;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.10140152730765273;  // std dev = 0.722, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.19723338058367915;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, E), location(A, F) )
%   | | then return 0.19725866458540214;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.25057125710559097;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.3623830242030462;  // std dev = 2.584, 75.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=67 */
%   | | | else return 0.12120874979121465;  // std dev = 1.063, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.14715282305692387;  // std dev = 0.031, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.15533199889389437;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.01983560662926901;  // std dev = 0.460, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.15320932401487078;  // std dev = 0.826, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18949713639759974;  // std dev = 0.048, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.026120685679382666;  // std dev = 0.620, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.009857397121707207;  // std dev = 1.504, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.09986634363063478;  // std dev = 0.012, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.1828680247071836;  // std dev = 0.442, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.015391158494576682;  // std dev = 1.580, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20181035659224222;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, K) )
%   | | | then return -9.433197259264318E-4;  // std dev = 2.159, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return 0.07193251965030392;  // std dev = 2.424, 71.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=28 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.16244691221441981;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.15607715685084259;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, H) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.2754705211054835;  // std dev = 1.012, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.0992215631198263;  // std dev = 1.317, 67.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=7 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.0018721765858061448;  // std dev = 0.402, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.06852268362600011;  // std dev = 1.091, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.06431147484688318;  // std dev = 0.820, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, L) )
%   | | | then return -0.03352631709384322;  // std dev = 1.077, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.024408290786720285;  // std dev = 3.203, 115.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=40 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '12.337', 'seconds']
Refined model CLL: -0.182758


******************************************
Best model found
******************************************
Results 

CLL : -0.173666 

AUC ROC : 0.987813 

AUC PR : 0.350558 

Precision : 0.193574 

Recall : 0.85461 

F1 : 0.315652 

Total Learning Time : 6.475 

Total Inference Time : 79.51577401161194 

Total revision time: 95.23358239173889
Best scored revision CLL: -0.182758


Results 

CLL : -0.173666 

AUC ROC : 0.987813 

AUC PR : 0.350558 

Precision : 0.193574 

Recall : 0.85461 

F1 : 0.315652 

Total Learning Time : 95.25689472198486 

Total Inference Time : 79.51577401161194 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.204
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.13007875966091456;  // std dev = 4.751, 114.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=31 */
%   | | | else return 0.15420156667845877;  // std dev = 5.628, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.09344305274657114;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7347337483847239;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6706418565865006;  // std dev = 0.954, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7445127270675579;  // std dev = 2.687, 84.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=76 */
%   | | | else return -0.15994168957145197;  // std dev = 0.021, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.028207352811543355;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.24638917099336152;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5883318985494106;  // std dev = 0.053, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5897626211758434;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.04062829399985891;  // std dev = 4.392, 154.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5754401599479209;  // std dev = 2.461, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | | else return -0.1411537589768823;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8115583343864573;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16888317939903705;  // std dev = 1.510, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.43824869592511506;  // std dev = 0.044, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.32343693020837017;  // std dev = 0.945, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.10116006114714168;  // std dev = 0.981, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5997119700616372;  // std dev = 1.239, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else return 0.03299874790159719;  // std dev = 5.064, 252.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5133704300074365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 8.002979410279225E-4;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.09641995683050082;  // std dev = 1.085, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3397021489360195;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3572140700857851;  // std dev = 0.062, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.047442783231140755;  // std dev = 5.842, 289.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3870152507878003;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.10440894783017456;  // std dev = 1.621, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25480778010573896;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3079865691328442;  // std dev = 0.890, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2922893442491364;  // std dev = 0.011, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.02225441379610192;  // std dev = 2.725, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2818096630702854;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.01076765234108733;  // std dev = 2.279, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | | else return 0.0518859792243447;  // std dev = 4.803, 170.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2821440416758645;  // std dev = 0.344, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.24247084444753808;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.03406226044840882;  // std dev = 0.849, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4824493328038447;  // std dev = 1.597, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.17887443475102446;  // std dev = 0.869, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23897496707880536;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06895017335842993;  // std dev = 4.293, 159.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16531603373841153;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.12727334256385084;  // std dev = 0.927, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.337804672946249;  // std dev = 3.666, 99.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=82 */
%   | | else return -0.14701775470744474;  // std dev = 0.531, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.20074390923392071;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.027715757839365463;  // std dev = 1.423, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17540677581571948;  // std dev = 0.148, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.12990733558253398;  // std dev = 0.791, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.10976206274712559;  // std dev = 0.604, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.01899258285786908;  // std dev = 1.613, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.16271197446484736;  // std dev = 0.651, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.04777398033825231;  // std dev = 1.441, 70.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.10500201481039974;  // std dev = 1.187, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0711947381485606;  // std dev = 3.696, 133.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=47 */
%   | | | else return 0.09268223903409122;  // std dev = 1.348, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1315522070656027;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2162515183712105;  // std dev = 0.103, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19074878467328205;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.01985804032398171;  // std dev = 2.571, 115.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.19475302001755287;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.02452893433996198;  // std dev = 3.757, 163.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=47 */
%   | | | else return -0.05059042404316333;  // std dev = 1.488, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.670', 'seconds']
Parameter learned model CLL:-0.1977 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.751, 83, 31], 'false,false,true,false': [5.628, 107, 45], 'false,false,false,true': [1.749, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.954, 1, 13], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [2.687, 8, 76], 'false,false,true,false': [0.021, 170, 0], 'false,false,false,true': [1.279, 9, 2], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.053, 0, 11], 'true,false': [0.02, 0, 6], 'false,true,true': [4.392, 120, 34], 'false,true,false,true': [2.461, 7, 48], 'false,true,false,false': [0.0, 97, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.51, 7, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.044, 0, 10], 'true,false': [0.945, 1, 7], 'false,true,true,true': [0.981, 2, 3], 'false,true,true,false': [1.239, 2, 21], 'false,true,false': [5.064, 194, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.279, 9, 2], 'false,false,false,false': [1.085, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.053, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.062, 0, 10], 'false,true': [5.842, 207, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.621, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(J, A)'}, {'true,true,true': [0.008, 0, 5], 'true,true,false': [0.89, 1, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.011, 0, 2], 'false,true': [2.725, 48, 19], 'false,false,true': [0.051, 0, 8], 'false,false,false,true': [2.279, 44, 11], 'false,false,false,false': [4.803, 120, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.344, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.849, 1, 3], 'true,true,false,false': [1.597, 3, 33], 'true,false': [0.869, 90, 0], 'false,true': [0.023, 0, 5], 'false,false,true': [4.293, 112, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.927, 1, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.666, 17, 82], 'false,true,false': [0.531, 171, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.423, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.148, 0, 9], 'true,false,true': [0.791, 1, 2], 'true,false,false': [0.604, 1, 5], 'false,true,true': [1.613, 40, 13], 'false,true,false,true': [0.651, 2, 8], 'false,true,false,false': [1.441, 59, 11], 'false,false,true': [1.187, 2, 5], 'false,false,false,true': [3.696, 86, 47], 'false,false,false,false': [1.348, 7, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.025, 0, 7], 'true,true,true,false': [0.103, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.112, 0, 3], 'false,true': [2.571, 83, 32], 'false,false,true': [0.019, 0, 5], 'false,false,false,true': [3.757, 116, 47], 'false,false,false,false': [1.488, 15, 4]}]
{'': [0.09418282548476423, 0.21000000000000052], 'false': [-2.5376526277146434e-16, 0.20277441346502123], 'false,false': [0.20408163265306153, 0.1799307958477507], 'false,false,true': [0.1979839950754091, 0.20840547091412862], 'false,false,false': [0.1799307958477507, nan], 'true': [0.07100591715976314, 0.1388888888888887], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.05126619158319734, 0.2114026549913], 'false': [-6.344131569286608e-17, 0.20829894615653097], 'false,false': [0.20950066369202358, 0.1874999999999999], 'false,false,true': [0.08597919905465876, 2.6160522727322773e-06], 'false,false,false': [0.14876033057851246, 0.24000000000000005], 'true': [0.0, 0.06500083698284298], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 0.0]}
{'': [0.00018740003632063373, 0.14695139292971468], 'false': [0.14325392167699158, 0.22147456191387105], 'false,false': [0.22147456191387105, nan], 'false,false,true': [0.0, 0.2071893334271082], 'false,true': [0.12528387096826743, 0.15843674666346327], 'false,true,false': [0.11016310750696619, -9.156478553609538e-17], 'true': [0.00025358897045402173, 6.472914886586818e-05]}
{'': [0.05297532622161727, 0.12747090989844193], 'false': [0.1246954856521423, 0.17028256723235072], 'false,false': [0.0, 0.16756193749418521], 'false,false,false': [0.14876033057851243, 0.19611541424188772], 'false,true': [0.12566563818617954, 0.10176929033622124], 'false,true,true': [0.19233385386665602, 0.06678790391330727], 'true': [0.00019379156997705315, 0.11162905478783616], 'false,false,true': [nan, 0.0]}
{'': [0.00046502047886198177, 0.12222322812285162], 'false': [0.11810252689968433, 0.2079017420148543], 'false,false': [0.0, 0.21908332391572982], 'false,false,false': [0.21908332391572982, nan], 'true': [0.0003968984684062133, 0.0003864310816815708], 'true,true': [0.0003968984684062133, nan], 'false,false,true': [nan, 0.0]}
{'': [0.04715938733351234, 0.12114872246061716], 'false': [0.11081589879462804, 0.12400451222084624], 'false,false': [0.00032594681778859436, 0.12633700494306094], 'false,false,false': [0.09443197940596401, 0.13569965790893335], 'true': [0.05343871748575442, 6.0778548420209466e-05], 'true,true': [1.1914547191549385e-05, 0.07920945775423929], 'true,false': [nan, 6.0778548420209466e-05]}
{'': [0.11264733593883221, 0.11325380287662196], 'false': [0.00010244537023886834, 0.11593066707833642], 'false,false': [0.11593066707833642, nan], 'true': [0.08237418634456921, 0.008394169084727092], 'true,true': [0.007485746283404732, 0.10580344886058379], 'true,true,false': [0.18016786180984146, 0.07086231371426817], 'true,true,true': [0.007886423374486877, 0.0]}
{'': [0.04798866043233344, 0.10667255066348451], 'false': [0.1053904240271639, 0.12825130208718405], 'false,false': [0.0, 0.13493021756955775], 'false,false,false': [0.13493021756955775, nan], 'false,true': [0.1357180099455772, 0.0016463263052602466], 'false,true,true': [nan, 0.13571800994557692], 'true': [0.0, 0.06137809596974235], 'false,false,true': [0.0, nan]}
{'': [0.06797730976058622, 0.08135497669571826], 'false': [0.04127329828471131, 0.11326953848018967], 'false,false': [0.20143345109935176, 0.10751766771949683], 'false,false,false': [0.10270892935875983, 0.16523324310653334], 'true': [0.002419378036336042, 0.12294509431881079], 'true,false': [0.2087461922887692, 0.06089740516859792], 'false,true': [0.049090264313400946, 0.036092125819087224], 'false,true,false': [0.042425853696268924, 0.02964926540474685]}
{'': [0.0029915543406783193, 0.0771918859406696], 'false': [0.057456866477059894, 0.08867868964678018], 'false,false': [7.601106473935637e-05, 0.0902650329795524], 'false,false,false': [0.08661564330848083, 0.1165191327262136], 'true': [0.0026495695293277752, 0.0041450805329172336], 'true,true': [0.0026495695293277752, nan], 'true,true,true': [8.696613022689457e-05, 0.0017763647757524093]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 4.996
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, F), interaction(F, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.11776431971489601;  // std dev = 4.471, 104.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=27 */
%   | | | else return 0.1914822684328459;  // std dev = 5.944, 159.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=53 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7200643407120416;  // std dev = 2.974, 86.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=76 */
%   | | | else return -0.16163546282037358;  // std dev = 0.129, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.5082012028155766;  // std dev = 1.152, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.15679965486761765;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.42000331263419255;  // std dev = 0.353, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.41250929388914165;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.04079454691980008;  // std dev = 3.268, 86.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=19 */
%   | | | else return 0.1829744837081637;  // std dev = 2.595, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6436736662118338;  // std dev = 1.691, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.14323907081012507;  // std dev = 0.036, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.48309847899476555;  // std dev = 0.735, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.16387349211733435;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.21904510730651072;  // std dev = 0.092, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4514961630808747;  // std dev = 0.000909, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( phenotype(A, E) )
%   | | then return -0.13225080113253768;  // std dev = 1.142, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.4681204001731354;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( complex(A, G), location(A, H) )
%   | | then return 0.03469868067852947;  // std dev = 0.334, 104.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=26 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.16522817954798333;  // std dev = 2.254, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return 0.07800173413410928;  // std dev = 4.197, 135.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=43 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.43518652138807756;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.04073628244088666;  // std dev = 1.033, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.0025890974694428906;  // std dev = 1.178, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.2905399221426118;  // std dev = 0.315, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.3427054374552786;  // std dev = 0.002, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( phenotype(A, H), enzyme(F, I) )
%   | | | then return 0.14726794319434852;  // std dev = 2.480, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return 0.03084195679435647;  // std dev = 4.779, 190.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=51 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return -0.06810025897464052;  // std dev = 0.649, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.13268621032092212;  // std dev = 2.032, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.3327202452860675;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.01642364427558742;  // std dev = 1.608, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.11349868630134165;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.3835265475208017;  // std dev = 0.096, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.26605173582529223;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13270089961655496;  // std dev = 0.038, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.020726745683103696;  // std dev = 2.168, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.14816359570037244;  // std dev = 2.075, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.27099238230258543;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.06605032882700064;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.0625363371881417;  // std dev = 4.013, 116.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=38 */
%   | | | else return -0.013677362093779798;  // std dev = 3.046, 103.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=23 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.29031879307624336;  // std dev = 0.085, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( complex(A, E), interaction(F, A) )
%   | | | then return 0.4286165294150953;  // std dev = 1.261, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return 0.6092954552691653;  // std dev = 0.292, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1705362578838888;  // std dev = 0.067, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24414651465620824;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3026003218471698;  // std dev = 2.032, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | else return -0.19441101892465537;  // std dev = 0.401, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return -0.007332176723635679;  // std dev = 1.772, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.06316975043974202;  // std dev = 2.965, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16610227002538325;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.20153280052362216;  // std dev = 0.053, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.11940523612918601;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.32683318122865274;  // std dev = 1.887, 41.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=35 */
%   | | | else return 0.464349810265581;  // std dev = 1.598, 50.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=47 */
%   | | else return -0.14766717838156368;  // std dev = 0.027, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.17008879034781144;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.27537512326369795;  // std dev = 0.758, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.022303698185711752;  // std dev = 0.551, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1822150456367916;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.11339167915912436;  // std dev = 0.853, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.12581461890244072;  // std dev = 0.214, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, F), location(A, G) )
%   | then if ( interaction(H, A), phenotype(F, I) )
%   | | then return -0.024304649829104238;  // std dev = 0.240, 124.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=28 */
%   | | else return -0.12193007785370036;  // std dev = 0.241, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | else if ( location(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.3617282490719121;  // std dev = 0.663, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.1783460747417448;  // std dev = 0.812, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.014269323595919413;  // std dev = 1.516, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return 0.05420993808222062;  // std dev = 2.196, 64.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=24 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F), phenotype(A, G) )
%   | | | then return -0.11176974154143354;  // std dev = 0.814, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.18236181582614747;  // std dev = 0.097, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return -0.11826928260511937;  // std dev = 0.816, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.23536644423546613;  // std dev = 0.129, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.18691122233026028;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, J), interaction(K, A) )
%   | then return -0.020886012920396768;  // std dev = 0.246, 132.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=32 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.026773070369540963;  // std dev = 0.749, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(M, A) )
%   | | | then return -0.009043255941132505;  // std dev = 3.356, 161.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=47 */
%   | | | else return 0.14787760641109993;  // std dev = 1.038, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.473', 'seconds']
Refined model CLL: -0.194268


******************************************
Best model found
******************************************
Results 

CLL : -0.169262 

AUC ROC : 0.990299 

AUC PR : 0.368053 

Precision : 0.282147 

Recall : 0.85283 

F1 : 0.424015 

Total Learning Time : 4.996 

Total Inference Time : 7.060614347457886 

Total revision time: 21.373978090286258
Best scored revision CLL: -0.194268


Results 

CLL : -0.169262 

AUC ROC : 0.990299 

AUC PR : 0.368053 

Precision : 0.282147 

Recall : 0.85283 

F1 : 0.424015 

Total Learning Time : 21.39729042053223 

Total Inference Time : 7.060614347457886 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.462
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07436515131572859;  // std dev = 2.504, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return 0.134878494847939;  // std dev = 5.641, 159.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1504566274072046;  // std dev = 3.667, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6194734122109543;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7313730497173963;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7670719622367217;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8232531989666857;  // std dev = 0.992, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.1575550802014957;  // std dev = 0.038, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.06063147354031962;  // std dev = 1.965, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.1959721835175505;  // std dev = 3.105, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5676350157676627;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4633397818906506;  // std dev = 0.938, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06076831880977427;  // std dev = 2.095, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6888308597647838;  // std dev = 0.236, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13911301379805818;  // std dev = 9.19e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5524261025068926;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1632020491979373;  // std dev = 3.567, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2991868005436541;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.44255202811208627;  // std dev = 0.066, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2852377689392937;  // std dev = 0.899, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3826411523603721;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41297528027901814;  // std dev = 0.633, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.06598588201001647;  // std dev = 4.171, 184.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41533634111149653;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5737764694035381;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.09685824495239537;  // std dev = 1.857, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.1175429967112039;  // std dev = 3.162, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3357441029251166;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.36265800843655094;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.06138611366890274;  // std dev = 4.231, 189.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.31923613632513415;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.43131193225012443;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.07837979118751477;  // std dev = 3.618, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return -0.021866248132914934;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2559391936389593;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.40337460824158056;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.3036000336897125;  // std dev = 0.070, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2960374410776978;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.3393100596383262;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07777067766361763;  // std dev = 1.030, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.29237555110223773;  // std dev = 0.036, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.036061033835044554;  // std dev = 2.764, 87.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=23 */
%   | | | else return 0.061773956462438766;  // std dev = 4.704, 152.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24020773985098876;  // std dev = 0.145, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.03925878207665671;  // std dev = 0.470, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.22468887779543212;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5984477012280093;  // std dev = 1.346, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.19291437363315214;  // std dev = 0.590, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23799653386997757;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.032825901776766295;  // std dev = 3.447, 131.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16962707295905716;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.19576732478148026;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.45035182974159815;  // std dev = 0.767, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.13954859324925956;  // std dev = 0.202, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.22352960766550495;  // std dev = 0.041, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.01674112702992242;  // std dev = 3.158, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.155756454351365;  // std dev = 0.032, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.12430825409425272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.18857644234953272;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.08291412886879422;  // std dev = 0.449, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2154548411143914;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.011689011346574405;  // std dev = 1.417, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16838673215963518;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.004382675067582943;  // std dev = 2.884, 132.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=36 */
%   | | | else return 0.030902261552841214;  // std dev = 3.113, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13407117993062523;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15733398895517017;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.13380777164797386;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1436348858414167;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.013625210389769746;  // std dev = 1.367, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1461181415105685;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03726679184904936;  // std dev = 2.682, 110.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=36 */
%   | | | else return 0.0037932844850486016;  // std dev = 3.149, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.048', 'seconds']
Parameter learned model CLL:-0.172897 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [2.504, 29, 8], 'false,false,true,false': [5.641, 115, 44], 'false,false,false,true': [3.667, 46, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.949, 1, 9], 'false,true,true': [0.041, 0, 4], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [0.992, 1, 52], 'false,false,true,false': [0.038, 146, 0], 'false,false,false,true': [1.965, 17, 5], 'false,false,false,false': [3.105, 27, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.03, 0, 6], 'true,false': [0.938, 1, 8], 'false,true,true': [2.095, 27, 8], 'false,true,false,true': [0.236, 0, 48], 'false,true,false,false': [9.19e-08, 115, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.567, 37, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.066, 0, 9], 'true,false': [0.899, 1, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.633, 1, 3], 'false,true,false': [4.171, 132, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.857, 12, 5], 'false,false,false,false': [3.162, 30, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.063, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.061, 0, 9], 'false,true': [4.231, 133, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.618, 43, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.031, 0, 6], 'true,true,false': [0.0, 0, 1], 'true,false,true,true': [0.07, 0, 2], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.085, 0, 3], 'false,true': [1.03, 24, 3], 'false,false,true': [0.036, 0, 6], 'false,false,false,true': [2.764, 64, 23], 'false,false,false,false': [4.704, 106, 46]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.145, 0, 12], 'true,true,true,false': [0.47, 1, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.346, 2, 36], 'true,false': [0.59, 108, 0], 'false,true': [0.029, 0, 5], 'false,false,true': [3.447, 95, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.012, 0, 5], 'true,false': [0.027, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.767, 0, 56], 'false,true,false': [0.202, 140, 0], 'false,false,true,true': [0.041, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.158, 50, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.032, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.036, 0, 4], 'false,true,true': [0.449, 17, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.417, 35, 14], 'false,false,true': [0.022, 0, 5], 'false,false,false,true': [2.884, 96, 36], 'false,false,false,false': [3.113, 45, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.025, 0, 5], 'true,true,true,false': [0.031, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.042, 0, 4], 'false,true': [1.367, 52, 17], 'false,false,true': [0.02, 0, 5], 'false,false,false,true': [2.682, 74, 36], 'false,false,false,false': [3.149, 52, 20]}]
{'': [-2.5376526277146434e-16, 0.20543209876543278], 'false': [0.12244897959183662, 0.19881738929289267], 'false,false': [0.19491878384006744, 0.2094007574069944], 'false,false,false': [0.20686390532544327, 0.25], 'false,false,true': [0.16946676406135883, 0.20015031050986984], 'false,true': [0.0, 0.1388888888888887], 'false,true,false': [0.0, 0.18750000000000006], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [0.06222222222222248, 0.20290671585636297], 'false': [0.0005664054911388808, 0.19871310963941366], 'false,false': [0.19292262107542926, 0.21513185886473468], 'false,false,false': [0.17550584458878965, 0.22959183673469433], 'false,false,true': [0.01856514592994543, 9.744540963979358e-06], 'true': [0.0, 0.09000000000000026], 'false,true': [0.00042480411835421616, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.06126547567028071, 0.1604378467357532], 'false': [0.1399804187896598, 0.22336300827480568], 'false,false': [0.22188743248685008, 0.25], 'false,false,false': [0.25, nan], 'false,false,true': [0.0, 0.22316820543143714], 'false,true': [0.12544353399254274, 0.14276069597660304], 'false,true,false': [0.001162869697167131, 7.337126075783643e-17], 'true': [0.00015051803120373167, 0.09765778243921466]}
{'': [0.06013000502622088, 0.1273947956585667], 'false': [0.09717672093302235, 0.21485168346577005], 'false,false': [0.0062758185632996455, 0.2170034423201312], 'false,false,false': [0.20287848214209, 0.22222222222222163], 'false,true': [0.0802704664549491, 0.09456130990129875], 'false,true,true': [0.0, 0.10015405120536944], 'true': [0.00048341914241537925, 0.13475121816847835], 'false,false,true': [0.0, 0.0]}
{'': [0.0007177305122193818, 0.12445071764739728], 'false': [0.09472660298678998, 0.20677711586747524], 'false,false': [0.0031402460080550143, 0.21024820434507951], 'false,false,false': [0.21110678386219628, 0.1875], 'false,false,true': [0.0, 0.0], 'true': [0.0008007527960169237, 0.0004129076248356394], 'true,true': [0.0008007527960169237, nan]}
{'': [0.0028504159468804025, 0.11635671045763002], 'false': [0.03927858595659929, 0.123013378671064], 'false,false': [0.0002153602983561894, 0.12468601406290998], 'false,false,false': [0.08779181380758368, 0.14556241794572886], 'true': [0.0027947008228148868, 0.0021164100768531003], 'true,true': [0.0001551697962773324, 0.0], 'true,false': [0.0012362078965426765, 0.0023988332505517906], 'true,false,true': [0.0024438193895776616, 0.0]}
{'': [0.12726080878765691, 0.0888475596780424], 'true': [0.07269122047885486, 0.0032255373874647665], 'false': [0.00016728150643259277, 0.09068469325670954], 'false,false': [0.09068469325670954, nan], 'true,true': [0.022579938380180443, 0.04996441215903161], 'true,true,false': [0.0, 0.04769732515946468], 'true,true,true': [0.0017404295999482826, 0.07363358659663681]}
{'': [0.00022027425785798544, 0.09181677240088942], 'false': [0.07422869414443013, 0.13966444372797743], 'false,false': [0.0008277538737494206, 0.14244338752514185], 'false,false,false': [0.14244338752514185, nan], 'false,true': [0.010515389289891295, 0.00029044207344792105], 'false,true,true': [nan, 0.01051538928989136], 'false,false,true': [0.0008277538737494206, nan], 'true': [2.8788216016661928e-05, 8.261511887865576e-05]}
{'': [0.0004907079780055486, 0.07613935286569823], 'false': [0.034689042346940174, 0.08987716067681091], 'false,false': [9.991122166804755e-05, 0.09155914270769304], 'false,false,false': [0.06300289769801752, 0.14907904744660333], 'false,true': [0.011202346920740723, 0.041303354849753976], 'false,true,false': [0.0, 0.04096589902062858], 'true': [0.00011036147495136854, 0.0009190533752421626], 'true,false': [0.0, 0.000322736714729481]}
{'': [0.00032427287449941577, 0.07494794799972729], 'false': [0.027099591797115453, 0.09215203455524149], 'false,false': [7.935916455084624e-05, 0.0942829247517904], 'false,false,false': [0.06539062766129083, 0.13774672361056928], 'true': [0.00027244204916727357, 0.0004488809071952933], 'true,true': [0.00032439946545878215, 0.0], 'true,true,true': [0.00012098180125253155, 0.00032520497848225377], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 2.816
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(H, H), location(H, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.008148935099512197;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.0803711573217346;  // std dev = 2.160, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.18289120314074908;  // std dev = 6.522, 194.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=63 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.7313730497173963;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7670719622367217;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8372880163307911;  // std dev = 0.047, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15902964093949568;  // std dev = 0.131, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.08439601150990095;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.30314601150990056;  // std dev = 2.823, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.18011881842296476;  // std dev = 1.135, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.044594770031462574;  // std dev = 1.643, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6800369447361588;  // std dev = 0.227, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14142408513719057;  // std dev = 0.072, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.5524261025068926;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11426641721236462;  // std dev = 3.644, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | else return 0.07240288042640072;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4175135841583098;  // std dev = 1.29e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.38472064437981524;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6069629733999317;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.0648568869455782;  // std dev = 2.582, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | | | else return 0.0368650622718938;  // std dev = 3.268, 125.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=31 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41533634111149653;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08569860083753048;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( enzyme(A, J), location(A, K) )
%   | | | then return -0.016115469697667757;  // std dev = 2.013, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.11687112334583465;  // std dev = 3.133, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3207118471601497;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1280288631450544;  // std dev = 0.030, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.0529674417807943;  // std dev = 0.914, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.11924435244931887;  // std dev = 1.750, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.042018527285161665;  // std dev = 3.711, 149.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=41 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.31923613632513415;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5647623936770629;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.23539342920669518;  // std dev = 2.168, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.07856761394898042;  // std dev = 2.740, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.2783238209981321;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return -0.049961417248894836;  // std dev = 0.863, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.10634866246674099;  // std dev = 0.920, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then if ( interaction(A, I), enzyme(I, J) )
%   | | then return -0.11912425573160153;  // std dev = 0.005, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.015153202238797245;  // std dev = 0.233, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, L), phenotype(A, M) )
%   | | | then return -0.013265043876867786;  // std dev = 2.866, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | | else return 0.05559951177544517;  // std dev = 4.626, 189.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=55 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25052268269065514;  // std dev = 0.230, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.3312602276346144;  // std dev = 0.095, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.25588878793047;  // std dev = 0.659, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.6279912528823713;  // std dev = 0.742, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18902781257706008;  // std dev = 0.070, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.024504400790190155;  // std dev = 1.655, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.1094525125912052;  // std dev = 2.265, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | else return 0.03802752080561818;  // std dev = 0.287, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16797312871053083;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.18347015636101827;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.3377364247202185;  // std dev = 0.287, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.49178915703283443;  // std dev = 0.302, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.11370546166574694;  // std dev = 0.151, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.1622822281694718;  // std dev = 0.122, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return -0.2352834932383785;  // std dev = 1.006, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.014365484966983309;  // std dev = 2.612, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return -0.03847091063998222;  // std dev = 1.720, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1673232579353342;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.23351109203835482;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), location(G, H) )
%   | | | then return -0.08200960373417801;  // std dev = 0.021, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.01925476426632901;  // std dev = 0.347, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.20817212341888225;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.024072251189839824;  // std dev = 1.339, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1519208470654866;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -4.338005847086976E-4;  // std dev = 2.645, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | | | else return 0.028216625696918553;  // std dev = 3.054, 105.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.16326124507415676;  // std dev = 0.063, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.16376491926764664;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.25781141212628395;  // std dev = 0.105, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.09730254972851501;  // std dev = 0.092, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.012375167766623405;  // std dev = 0.765, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.05917185671137749;  // std dev = 0.665, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.1333641896755141;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.07413296364979217;  // std dev = 1.540, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.02467928311969111;  // std dev = 3.691, 164.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=52 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.897', 'seconds']
Refined model CLL: -0.17428


******************************************
Best model found
******************************************
Results 

CLL : -0.191234 

AUC ROC : 0.981717 

AUC PR : 0.226311 

Precision : 0.134265 

Recall : 0.797834 

F1 : 0.229849 

Total Learning Time : 2.816 

Total Inference Time : 3.1308023929595947 

Total revision time: 10.15009916114807
Best scored revision CLL: -0.172897


Results 

CLL : -0.191234 

AUC ROC : 0.981717 

AUC PR : 0.226311 

Precision : 0.134265 

Recall : 0.797834 

F1 : 0.229849 

Total Learning Time : 10.173411491394042 

Total Inference Time : 3.1308023929595947 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.536
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.05814893509951237;  // std dev = 3.225, 65.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=13 */
%   | | | else return 0.16283643509951176;  // std dev = 5.207, 128.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1795775065280838;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5255870765077119;  // std dev = 1.484, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7694093508225863;  // std dev = 1.921, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.15850188567774803;  // std dev = 0.074, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.06190140257878607;  // std dev = 1.965, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.11432606142916288;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5906968462594714;  // std dev = 0.104, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.437435223918091;  // std dev = 0.870, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.04050954492949154;  // std dev = 2.864, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.650047379344671;  // std dev = 1.387, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14237952630565343;  // std dev = 9.88e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.663264924878547;  // std dev = 0.195, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1480016869069211;  // std dev = 2.401, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.19460079892443868;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.42479882458615287;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4942470438963171;  // std dev = 0.119, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5453421177588798;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6086308748380685;  // std dev = 0.189, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.06975106536572079;  // std dev = 4.266, 175.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.42197606667845317;  // std dev = 0.043, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.580390336782354;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.1877410153528528;  // std dev = 1.751, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.049704549350251565;  // std dev = 2.243, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32840974748130924;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.39454418241476635;  // std dev = 0.075, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.05299260042507488;  // std dev = 4.478, 199.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.29674145945846664;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.39387501194075003;  // std dev = 0.060, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.035268960702940576;  // std dev = 2.558, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.14848727389430438;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25061579076899243;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.31213019967377287;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.23873910277744537;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3015988451684586;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.35046451098475556;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.05665623619158229;  // std dev = 1.234, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.31254300287542963;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.0456900522129817;  // std dev = 2.306, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.04341940979908937;  // std dev = 4.622, 170.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2417653410725027;  // std dev = 0.180, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2238820582574446;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2500136722762929;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5566147253474079;  // std dev = 1.270, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.1794835579209306;  // std dev = 0.575, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.26456863304976075;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.09067424919991358;  // std dev = 3.291, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16604662162513517;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.19595614055527355;  // std dev = 0.078, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3851884710803085;  // std dev = 2.160, 61.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | else return -0.1433877965873504;  // std dev = 0.241, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.16489811192648318;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10212837448122392;  // std dev = 0.738, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.048847177831899784;  // std dev = 2.462, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15026496510328666;  // std dev = 0.038, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.204964394419482;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.09118443161873467;  // std dev = 0.583, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09649753144828688;  // std dev = 0.313, 29.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.25116781644085046;  // std dev = 0.174, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.016572783718700294;  // std dev = 1.499, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18505340001154566;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.07972343216334823;  // std dev = 2.629, 82.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=31 */
%   | | | else return 0.02575424309667613;  // std dev = 2.464, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1288753511849876;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.12034912707587749;  // std dev = 0.650, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.14513272320222848;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.169456679056527;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.20136474353909473;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.008926971077897337;  // std dev = 1.674, 91.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1587712571201776;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04910640922080725;  // std dev = 2.704, 87.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=31 */
%   | | | else return -0.019975595405135108;  // std dev = 2.553, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.816', 'seconds']
Parameter learned model CLL:-0.184378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.225, 52, 13], 'false,false,true,false': [5.207, 89, 39], 'false,false,false,true': [2.471, 19, 9], 'false,false,false,false': [1.414, 6, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.484, 3, 11], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [1.921, 4, 52], 'false,false,true,false': [0.074, 133, 0], 'false,false,false,true': [1.965, 17, 5], 'false,false,false,false': [2.245, 18, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.104, 0, 11], 'true,false': [0.87, 1, 4], 'false,true,true': [2.864, 51, 14], 'false,true,false,true': [1.387, 2, 42], 'false,true,false,false': [9.88e-08, 117, 0], 'false,false,true,true': [0.195, 0, 3], 'false,false,true,false': [2.401, 18, 9], 'false,false,false,true': [1.369, 5, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.055, 0, 6], 'true,false': [0.119, 0, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.189, 0, 6], 'false,true,false': [4.266, 126, 49], 'false,false,true,true': [0.043, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.751, 8, 5], 'false,false,false,false': [2.243, 20, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.048, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.075, 0, 6], 'false,true': [4.478, 143, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.06, 0, 2], 'false,false,false,true': [2.558, 26, 9], 'false,false,false,false': [1.367, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.022, 0, 5], 'true,true,false': [0.104, 0, 3], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.079, 0, 3], 'true,false,false': [0.113, 0, 4], 'false,true': [1.234, 27, 5], 'false,false,true': [0.054, 0, 5], 'false,false,false,true': [2.306, 33, 13], 'false,false,false,false': [4.622, 123, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.18, 0, 13], 'true,true,true,false': [0.055, 0, 3], 'true,true,false,true': [0.055, 0, 3], 'true,true,false,false': [1.27, 2, 33], 'true,false': [0.575, 102, 0], 'false,true': [0.024, 0, 3], 'false,false,true': [3.291, 59, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.078, 0, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.16, 5, 56], 'false,true,false': [0.241, 134, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.738, 1, 2], 'false,false,false,true': [2.462, 26, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.038, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.583, 1, 5], 'false,true,true': [0.313, 28, 1], 'false,true,false,true': [0.174, 0, 6], 'false,true,false,false': [1.499, 56, 17], 'false,false,true': [0.019, 0, 3], 'false,false,false,true': [2.629, 51, 31], 'false,false,false,false': [2.464, 29, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.006, 0, 8], 'true,true,true,false': [0.65, 1, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.006, 0, 2], 'true,false': [0.04, 0, 3], 'false,true': [1.674, 67, 24], 'false,false,true': [0.016, 0, 3], 'false,false,false,true': [2.704, 56, 31], 'false,false,false,false': [2.553, 37, 12]}]
{'': [0.05859374999999978, 0.20983104559454543], 'false': [-2.5376526277146434e-16, 0.20083175803402775], 'false,false': [0.19683749899326236, 0.2191380569758943], 'false,false,false': [0.21811224489795927, 0.2222222222222221], 'false,false,true': [0.15999999999999945, 0.21185302734375056], 'true': [-1.4802973661668753e-16, 0.18750000000000006], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.12881490487528627, 0.20193350278592606], 'false': [0.10937500000000006, 0.19741130854157354], 'false,false': [0.19908348336330262, 0.1901183400686811], 'false,false,true': [0.06590696246230225, 4.098933880436556e-05], 'false,false,false': [0.1755724880668417, 0.20163223053619958], 'true': [0.0, 0.15726540537276443], 'false,true': [0.0, 0.13888888888888892], 'false,true,false': [0.0, 0.1875]}
{'': [0.053066677636281645, 0.14861050821339708], 'false': [0.13387056452863041, 0.22090488998697225], 'false,false': [0.2173683425840829, 0.23414777636681688], 'false,false,false': [0.23414777636681688, nan], 'false,false,true': [0.012657821251194079, 0.21356433562501456], 'false,true': [0.1261691859019001, 0.1366536685132999], 'false,true,false': [0.04369883656441606, 8.350395398890066e-17], 'true': [0.0009761068085466607, 0.15151716010043426]}
{'': [0.0023033275230375534, 0.12821357983120008], 'false': [0.1105896579689486, 0.20203234012580412], 'false,false': [0.0061946774187985705, 0.2066343736332375], 'false,false,false': [0.2358037592128479, 0.18639728321785412], 'false,true': [0.005567034224761537, 0.10399329760979108], 'false,false,true': [0.0009269891373472339, 0.0], 'false,true,true': [0.0, 0.005922663723274916], 'true': [0.0005025463550876186, 0.0015746262355297426]}
{'': [0.001571898917057964, 0.1177009379909368], 'false': [0.10075061320642682, 0.19059074033395954], 'false,false': [0.0032990442891748053, 0.19758421585748068], 'false,false,false': [0.1869969505185826, 0.23346993135547645], 'false,false,true': [0.0, 0.0018035907611526902], 'true': [0.0002507491121898939, 0.000929365533979524], 'true,true': [0.0002507491121898939, nan]}
{'': [0.0035403553890243494, 0.11414059200643496], 'false': [0.0475916213846377, 0.12233835490372484], 'false,false': [0.0005847353456590488, 0.12352397762951818], 'false,false,false': [0.11559841770207792, 0.12566744290594323], 'true': [0.002308710660529137, 0.0037822971030076757], 'true,false': [0.0022850320253655076, 0.003194235141149568], 'true,true': [9.5561654674714e-05, 0.0036322782726378824], 'true,false,true': [0.0, 0.0020588725637878946]}
{'': [0.10897144430000343, 0.1174014787631289], 'false': [0.00019258046551004493, 0.12033298214505435], 'false,false': [0.12033298214505435, nan], 'true': [0.053447304652643045, 0.003244251887151401], 'true,true': [0.0022697451397737448, 0.04938558001648173], 'true,true,false': [0.001014105910470936, 0.046110321704400596], 'true,true,true': [0.0024983363025732172, 0.001019336343361608]}
{'': [0.0005835845466681219, 0.09760105480590092], 'false': [0.08427255817614142, 0.15919055281004343], 'false,false': [0.14971143888249455, 0.1595128468198977], 'false,false,false': [0.1595128468198977, nan], 'false,false,true': [0.0, 0.18178946573251473], 'false,true': [0.0764515622516073, 0.00043304118729854533], 'false,true,true': [nan, 0.07645156225160728], 'true': [0.0, 0.0005572426230576037]}
{'': [0.02117334406769502, 0.07070245347982818], 'false': [0.027643091576767368, 0.10405016326428645], 'false,false': [0.00011471813823056565, 0.10622308488767099], 'false,false,false': [0.08430961292361465, 0.14810824657010752], 'false,true': [0.0033841044491662396, 0.03384915125086519], 'false,true,false': [0.0050219745211841915, 0.030774075662057473], 'true': [0.0001443296809741451, 0.05013591792496259], 'true,false': [0.0, 0.05664249282651262]}
{'': [0.03643031555162257, 0.07350306218162186], 'false': [0.030786243428722635, 0.10095462723131424], 'false,false': [8.972834662683098e-05, 0.10278883361721726], 'false,false,false': [0.08404208610958615, 0.133020991782468], 'true': [0.041624560490853856, 0.000541033869089505], 'true,true': [0.050775862001392946, 0.0001427735874578312], 'true,true,true': [4.798664722534263e-06, 0.14099238927658644], 'true,true,false': [0.0, 1.6942105052788342e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.573
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.026569987731091302;  // std dev = 3.648, 95.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=16 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.35814893509951234;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.19148226843284508;  // std dev = 4.899, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), phenotype(A, F) )
%   | | then return 0.3861400788776211;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.739872790793426;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H), complex(G, H) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5845391122281327;  // std dev = 0.366, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7752453693818925;  // std dev = 1.666, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.1559602486400312;  // std dev = 0.154, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.12950178752784464;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.3332054912315484;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4929915218956528;  // std dev = 0.268, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return -0.13582442467668815;  // std dev = 0.893, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.619226177374149;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G), interaction(H, A) )
%   | | then return 0.04262138577968938;  // std dev = 0.339, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | else return 0.11451073363083328;  // std dev = 0.386, 136.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=42 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5878823050313438;  // std dev = 1.258, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.19103829103140077;  // std dev = 0.052, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.1626124064332321;  // std dev = 0.971, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.27543389713171146;  // std dev = 1.532, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.44574269039570064;  // std dev = 0.077, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4839661886493394;  // std dev = 0.071, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.584763390030206;  // std dev = 0.051, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14135692366029973;  // std dev = 0.141, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.08007207307367085;  // std dev = 4.931, 175.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=49 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, G) )
%   | | | then return 0.019077780854391393;  // std dev = 0.997, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5048572591054018;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.038749819132901396;  // std dev = 2.124, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.19293798676618257;  // std dev = 1.537, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3020399911475964;  // std dev = 0.222, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( location(A, E), complex(A, F) )
%   | | then if ( location(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.13854010741996892;  // std dev = 2.417, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return -0.1514855188777813;  // std dev = 0.126, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.16184581982917493;  // std dev = 2.385, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | | else return 0.05243574508844898;  // std dev = 3.527, 93.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=25 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return 0.5101704633145814;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13745370569707857;  // std dev = 0.767, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.1286776233362358;  // std dev = 1.940, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.017613350856527054;  // std dev = 1.806, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.27876593797635296;  // std dev = 0.046, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.38473861836662426;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13978225618181017;  // std dev = 0.748, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.4888148852980635;  // std dev = 0.174, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then if ( interaction(I, A), complex(I, J) )
%   | | then return -0.0951411131247006;  // std dev = 0.161, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else return 0.016216416524274302;  // std dev = 0.258, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.06607960671305016;  // std dev = 0.511, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.012084793097021089;  // std dev = 2.610, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | | else return 0.09696465542410225;  // std dev = 4.699, 143.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2854748244134431;  // std dev = 0.088, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.38771133167787225;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5779722622091413;  // std dev = 1.339, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1936713257560143;  // std dev = 0.084, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.3006095921016066;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, G), complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5820487929952451;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1779616284720864;  // std dev = 0.069, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.008171133957196127;  // std dev = 1.374, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.14195822792291735;  // std dev = 2.929, 54.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.170422298390157;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.19681506874444232;  // std dev = 0.078, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return -0.21946767300651432;  // std dev = 1.176, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.03203364827403021;  // std dev = 0.726, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(H, A) )
%   | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then return 0.4291660107749092;  // std dev = 0.265, 61.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | else return -0.15895736089342186;  // std dev = 0.043, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.24676537153889358;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.059273527148263484;  // std dev = 1.483, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.03754945749327138;  // std dev = 1.625, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.15330239085702518;  // std dev = 0.059, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.07508011938384067;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.22785713280927877;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3866704061541414;  // std dev = 0.220, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.11317535342903089;  // std dev = 0.124, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.051499673552642594;  // std dev = 0.177, 83.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.23562707550839534;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, K) )
%   | | | then return 0.027326837477680405;  // std dev = 3.545, 128.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=41 */
%   | | | else return 0.17072387398155814;  // std dev = 0.735, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.1579347525468672;  // std dev = 0.053, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.18840430477119563;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.04199916331881451;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, H) )
%   | | then if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.03382523697285295;  // std dev = 0.966, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | | | else return 0.021909961199251385;  // std dev = 1.393, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | else return 0.2403209373940214;  // std dev = 0.442, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1958733634598202;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), enzyme(A, L) )
%   | | | then return 0.09212361284175544;  // std dev = 1.709, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.018951138056212253;  // std dev = 3.143, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '36.750', 'seconds']
Refined model CLL: -0.197025


******************************************
Best model found
******************************************
Results 

CLL : -0.195853 

AUC ROC : 0.98284 

AUC PR : 0.205241 

Precision : 0.14549 

Recall : 0.780919 

F1 : 0.245283 

Total Learning Time : 3.573 

Total Inference Time : 3.8278696537017822 

Total revision time: 12.113701614379883
Best scored revision CLL: -0.184378


Results 

CLL : -0.195853 

AUC ROC : 0.98284 

AUC PR : 0.205241 

Precision : 0.14549 

Recall : 0.780919 

F1 : 0.245283 

Total Learning Time : 12.137013944625854 

Total Inference Time : 3.8278696537017822 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.389
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.12427796735757547;  // std dev = 4.921, 124.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=33 */
%   | | | else return 0.2010060779566541;  // std dev = 4.864, 105.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7413433124639606;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5515724396446856;  // std dev = 1.284, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7103265990296996;  // std dev = 2.955, 79.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | | | else return -0.16238641944817933;  // std dev = 0.065, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.054502885253336616;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.07373365448410585;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.6081049788703139;  // std dev = 0.056, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6051618034974863;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.102662090905829;  // std dev = 4.276, 118.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6297838622395073;  // std dev = 1.666, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14661754605339958;  // std dev = 5.77e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14901324853312423;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.11879670996469775;  // std dev = 1.309, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.44383126700186937;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.32271072579657173;  // std dev = 0.948, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4655792326169546;  // std dev = 1.817, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else return 0.04988421370807715;  // std dev = 4.978, 219.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5258721079707656;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.06718418483037955;  // std dev = 1.476, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.7940185488466772;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.37388379379931064;  // std dev = 0.085, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03004631853679829;  // std dev = 1.123, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.07091334703237087;  // std dev = 5.435, 228.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39596862461405247;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.18093967305840883;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1257849443743962;  // std dev = 1.080, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.290742135150986;  // std dev = 0.094, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.25183253651469434;  // std dev = 0.614, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.30931797419518214;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3061331830137526;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.009371748824592626;  // std dev = 2.365, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3432481480755401;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.05593667630409438;  // std dev = 2.884, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | | else return 0.0847509258255484;  // std dev = 4.021, 123.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.27140270349722023;  // std dev = 0.206, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24519734166766027;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.7830997938214102;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5847536973659664;  // std dev = 0.397, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1888306027626136;  // std dev = 0.528, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.024463623540478513;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04696033119698448;  // std dev = 3.971, 137.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17283835441728898;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.23364503939417358;  // std dev = 0.080, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4073191377218735;  // std dev = 2.509, 79.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=71 */
%   | | else return -0.15533626579072304;  // std dev = 0.241, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.20268604534462564;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.07295184130269139;  // std dev = 1.463, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1772122036559286;  // std dev = 0.121, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.33167887685946473;  // std dev = 0.103, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.03141620684002752;  // std dev = 0.759, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.006916279464465272;  // std dev = 1.367, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.34153519850623126;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.01305677325133628;  // std dev = 1.739, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.22273481047425395;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01685772339778062;  // std dev = 3.517, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   | | | else return -0.07527109280376218;  // std dev = 1.513, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13953907609625993;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2480856110871763;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19236698923145104;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.017657378393890043;  // std dev = 2.371, 109.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.060402044853163;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.012833208401325182;  // std dev = 3.589, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
%   | | | else return -0.05112079971989172;  // std dev = 1.495, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.438', 'seconds']
Parameter learned model CLL:-0.192987 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.943, 1, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.921, 91, 33], 'false,false,true,false': [4.864, 69, 36], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 2], 'true,false': [1.284, 2, 9], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [2.955, 10, 69], 'false,false,true,false': [0.065, 155, 0], 'false,false,false,true': [1.519, 10, 3], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.056, 0, 8], 'true,false': [0.022, 0, 3], 'false,true,true': [4.276, 84, 34], 'false,true,false,true': [1.666, 3, 37], 'false,true,false,false': [5.77e-08, 73, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.155, 4, 2], 'false,false,false,true': [1.309, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.039, 0, 5], 'true,false': [0.948, 1, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.817, 4, 14], 'false,true,false': [4.978, 162, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.476, 8, 3], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.085, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.123, 2, 4], 'false,true': [5.435, 157, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.08, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.094, 0, 4], 'true,true,false': [0.614, 1, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [2.365, 40, 12], 'false,false,true': [0.023, 0, 3], 'false,false,false,true': [2.884, 50, 20], 'false,false,false,false': [4.021, 82, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.206, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.397, 0, 33], 'true,false': [0.528, 87, 0], 'false,true': [0.853, 1, 3], 'false,false,true': [3.971, 97, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.037, 0, 3], 'true,false': [0.08, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.509, 8, 71], 'false,true,false': [0.241, 168, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.463, 15, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.121, 0, 8], 'true,false,true': [0.103, 2, 0], 'true,false,false': [0.759, 1, 3], 'false,true,true': [1.367, 31, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.739, 45, 17], 'false,false,true': [0.018, 0, 3], 'false,false,false,true': [3.517, 91, 40], 'false,false,false,false': [1.513, 15, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.039, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.022, 0, 3], 'false,true': [2.371, 80, 29], 'false,false,true': [0.856, 1, 3], 'false,false,false,true': [3.589, 87, 40], 'false,false,false,false': [1.495, 15, 4]}]
{'': [0.07638888888888877, 0.21542244382214346], 'false': [1.4802973661668753e-16, 0.2121461459008084], 'false,false': [0.21052230125283675, 0.23999999999999985], 'false,false,false': [0.24000000000000005, 0.24000000000000005], 'false,false,true': [0.19530437044745186, 0.22530612244898068], 'true': [0.09876543209876527, 1.4802973661668753e-16], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0]}
{'': [0.13157347653174428, 0.2077765894682062], 'false': [0.0, 0.20611804820000304], 'false,false': [0.20765743693658828, 0.17993079584775074], 'false,false,true': [0.11053623809972671, 2.7094150731389645e-05], 'false,false,false': [0.17751479289940814, 0.18750000000000006], 'true': [0.0, 0.1499554677070759], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.0003273593716885353, 0.16150599651128128], 'false': [0.15877029998229977, 0.203403630954983], 'false,false': [0.22222222222222224, 0.19049268776226747], 'false,false,true': [nan, 0.22222222222222224], 'false,false,false': [0.19049268776226747, nan], 'false,true': [0.1549710352170475, 0.16240413659289943], 'false,true,false': [0.06937276803120698, 4.562560375171876e-17], 'true': [0.00038951775625589713, 0.00015530383858197716]}
{'': [0.07851188507816231, 0.1353489728145987], 'false': [0.1306137236448981, 0.21606686525516514], 'false,false': [0.0, 0.22188026392205537], 'false,false,false': [0.19802718094629726, 0.0], 'false,true': [0.18331637277841042, 0.11315777003992453], 'false,true,true': [nan, 0.1833163727784105], 'true': [0.00030645751288405076, 0.12826032747520352], 'false,false,true': [nan, 0.0]}
{'': [0.12698008336505553, 0.134217187879892], 'false': [0.12954043885322158, 0.22073498233046351], 'false,false': [0.0, 0.2374577692441071], 'false,false,false': [0.24000000000000005, 0.2333945164401106], 'true': [0.0010383222341206716, 0.2102529483436366], 'true,true': [0.0010383222341206716, nan], 'false,false,true': [nan, 0.0]}
{'': [0.032649617519183306, 0.12359418022018138], 'false': [0.10759316421085297, 0.126223402871844], 'false,false': [0.00017181417167213184, 0.1270756159402852], 'false,false,false': [0.11884461061752492, 0.13145879698883764], 'true': [0.03890795978074393, 2.5357237173340152e-06], 'true,true': [0.0022200889857792727, 0.0627609575643054], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}
{'': [0.12183534396319941, 0.11697987924966387], 'true': [0.058839700885694686, 0.003203253351670019], 'false': [0.18176897522520902, 0.11507386931297825], 'false,false': [0.11507386931297825, nan], 'true,true': [0.003917177698178029, 0.05805504632810051], 'true,true,false': [0.0, 0.0047841968222986685], 'true,true,true': [0.004246466287212336, 0.0]}
{'': [0.001440343731140053, 0.09627476096763427], 'false': [0.09458867580572719, 0.11060269321954093], 'false,false': [0.0, 0.1126250753717468], 'false,false,false': [0.1126250753717468, nan], 'false,true': [0.07967606596568522, 0.00034646825415681387], 'false,true,true': [nan, 0.07967606596568519], 'true': [0.00046563944499726967, 0.0007974615826586567], 'false,false,true': [0.0, nan]}
{'': [0.07485782284745669, 0.07739326253392628], 'false': [0.04776031712324427, 0.09761640551725374], 'false,false': [0.00010230791681481444, 0.09863871525680508], 'false,false,false': [0.09439588104524217, 0.12047933288030996], 'true': [0.001835327269059335, 0.11776083692237467], 'true,false': [0.005303048854909356, 0.14393717395370687], 'false,true': [0.04449283980573052, 0.04993853045692494], 'false,true,false': [0.0, 0.04874818957106248]}
{'': [0.0014267897931036575, 0.0833311083307811], 'false': [0.05157446378455828, 0.10623183012493591], 'false,false': [0.18305426723638885, 0.10401474238210985], 'false,false,false': [0.10144090512326798, 0.11766097258578292], 'true': [0.0014820667688804114, 0.00015842750720025203], 'true,true': [0.0014820667688804114, nan], 'true,true,true': [0.00022099681068940953, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,false;complex(A, J), interaction(A, K).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 5.608
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.10814893509951236;  // std dev = 3.000, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.1555848325354109;  // std dev = 6.383, 195.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=58 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7238868242541382;  // std dev = 2.819, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | | else return -0.15953731504971852;  // std dev = 0.089, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.15993762014402862;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.021903980922829736;  // std dev = 1.247, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(A, A) )
%   | | then return 0.5553664367462844;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2220331034129511;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.06430649227219405;  // std dev = 3.007, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | | else return 0.11525558841386564;  // std dev = 3.074, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6607515898345373;  // std dev = 1.382, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.1408988921496564;  // std dev = 0.014, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( phenotype(A, I) )
%   | | then return 0.4030905891663806;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.1192703107271514;  // std dev = 0.990, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4340280947903067;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4312756763516405;  // std dev = 0.075, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5051620042489531;  // std dev = 1.659, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return -0.016664525874553804;  // std dev = 2.769, 99.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=17 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.0894879566479948;  // std dev = 2.418, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return 0.17269719876593412;  // std dev = 2.957, 61.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=25 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5257540233476967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.005146929780138944;  // std dev = 1.464, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.1192821941722247;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.2116177556000929;  // std dev = 0.310, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.14782434937871267;  // std dev = 0.845, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6053480761682639;  // std dev = 0.190, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.14999580444931265;  // std dev = 0.161, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.05751910258056348;  // std dev = 4.691, 197.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=56 */
%   | | | else return 0.012940670033194122;  // std dev = 1.254, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.39588359630790015;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.04435207781040454;  // std dev = 0.883, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.10637374791942104;  // std dev = 1.379, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.308974971722584;  // std dev = 0.049, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.28989266792143537;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5458558913969349;  // std dev = 0.135, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.14335121026243033;  // std dev = 0.101, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.21156617244404077;  // std dev = 0.733, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.10943185544665499;  // std dev = 1.160, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.31038949599039384;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.01104105489677436;  // std dev = 2.766, 72.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | | | else return 0.059212939781811164;  // std dev = 4.139, 144.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24527647328101335;  // std dev = 0.040, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4693550372781228;  // std dev = 1.695, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.16330171729240095;  // std dev = 0.060, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( interaction(G, G) )
%   | | then if ( complex(A, H), complex(F, I) )
%   | | | then return -0.024827933769711895;  // std dev = 1.306, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.1282465121652378;  // std dev = 2.271, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else if ( complex(A, J), interaction(F, G) )
%   | | | then return 0.06155081529085973;  // std dev = 1.561, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.013256120671273285;  // std dev = 2.031, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | else return 0.24460931555910043;  // std dev = 0.729, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.195729509988071;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, E) )
%   | | then return -0.009959968909819872;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.18890882617688673;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.10025346298830841;  // std dev = 1.627, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.3907661784189628;  // std dev = 2.418, 66.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=59 */
%   | | else return -0.1519488793152536;  // std dev = 0.052, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.20526622015735918;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.06573283511695772;  // std dev = 0.786, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.030917645931398206;  // std dev = 1.223, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16461487878411113;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.025184867362956054;  // std dev = 0.730, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.0024064681201570117;  // std dev = 1.429, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return -0.13083736733576032;  // std dev = 0.166, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return -0.029964230847779078;  // std dev = 0.459, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.0023881055480007274;  // std dev = 1.802, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2364753836860264;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return -0.03961269750406228;  // std dev = 1.832, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return -0.00471075696086601;  // std dev = 3.380, 113.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.1406085376793132;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.16342008448288944;  // std dev = 0.722, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.18031091333505467;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.18929687124163463;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then return -0.029652741184554042;  // std dev = 0.252, 82.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=18 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(K, A), enzyme(I, L) )
%   | | | then return 0.17291146871614715;  // std dev = 0.728, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.04931955261371553;  // std dev = 1.625, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return -0.011314847441893627;  // std dev = 2.156, 79.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=21 */
%   | | | else return 0.054976423003770994;  // std dev = 2.070, 60.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.445', 'seconds']
Refined model CLL: -0.19014


******************************************
Best model found
******************************************
Results 

CLL : -0.190935 

AUC ROC : 0.98599 

AUC PR : 0.276242 

Precision : 0.190396 

Recall : 0.801418 

F1 : 0.307692 

Total Learning Time : 5.608 

Total Inference Time : 7.862605094909668 

Total revision time: 22.585234901428223
Best scored revision CLL: -0.19014


Results 

CLL : -0.190935 

AUC ROC : 0.98599 

AUC PR : 0.276242 

Precision : 0.190396 

Recall : 0.801418 

F1 : 0.307692 

Total Learning Time : 28.108194372177124 

Total Inference Time : 7.862605094909668 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.217
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.6581489350995123;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11865313678018337;  // std dev = 4.788, 119.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=31 */
%   | | | else return 0.19396983062189968;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7580193346218546;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6226304455886372;  // std dev = 1.313, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.052806745544287804;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.681734038039751;  // std dev = 3.433, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.16213534590691825;  // std dev = 0.071, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.1665388245648817;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.33320549123154836;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5276191340452505;  // std dev = 0.975, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.4829900175012472;  // std dev = 0.925, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08366469328490635;  // std dev = 4.350, 128.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5495719140314733;  // std dev = 2.739, 57.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   | | | else return -0.14577061339209021;  // std dev = 8.69e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7816507595367503;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.036146217449864446;  // std dev = 1.637, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.48718235594743886;  // std dev = 0.064, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3739594863554142;  // std dev = 0.925, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4574898865709489;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4084726668096347;  // std dev = 2.253, 31.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   | | else return 0.020877818508424746;  // std dev = 5.301, 256.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5464237633189154;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.02533003943953274;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.23680626222365164;  // std dev = 0.929, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.25142449113228477;  // std dev = 0.907, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22493727181331158;  // std dev = 1.293, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.07218673790444;  // std dev = 5.780, 279.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41091300953421006;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.03940141788126583;  // std dev = 1.668, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.30158139091386954;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2545938674271444;  // std dev = 1.097, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.33958541767730643;  // std dev = 0.033, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.017486916463556917;  // std dev = 2.881, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3371215070969238;  // std dev = 0.032, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return 0.01533509553851907;  // std dev = 2.246, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return 0.0654709180788131;  // std dev = 4.809, 157.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2536654316877458;  // std dev = 0.916, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.22081250075170467;  // std dev = 0.663, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.03696697353330802;  // std dev = 0.795, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.48012729103584606;  // std dev = 1.738, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | else return -0.18409768227726567;  // std dev = 0.633, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.26636780903829926;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08643279154938381;  // std dev = 4.400, 136.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.19191090766928365;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.10876177261770743;  // std dev = 1.253, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.370207367436243;  // std dev = 3.403, 97.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=82 */
%   | | else return -0.15083822098896443;  // std dev = 0.293, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.2911349520621662;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.0048651696700864515;  // std dev = 1.437, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.11437287656978334;  // std dev = 0.865, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.011730739077193667;  // std dev = 0.338, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2680957327342875;  // std dev = 0.214, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0.015269648462449156;  // std dev = 1.745, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.24686051274532866;  // std dev = 0.474, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.05211563278282074;  // std dev = 1.629, 61.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19973022799265067;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05110416452136095;  // std dev = 3.754, 141.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=47 */
%   | | | else return 0.06440244688131129;  // std dev = 1.335, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.04614942871953266;  // std dev = 0.946, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.07257545704536753;  // std dev = 0.768, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.6003169454276023;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.24585602219977723;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.025194617930006477;  // std dev = 2.678, 125.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16972372636361488;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0300238320865043;  // std dev = 3.851, 144.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=47 */
%   | | | else return -0.011747708431636429;  // std dev = 1.480, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.700', 'seconds']
Parameter learned model CLL:-0.20265 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.549, 3, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.788, 88, 31], 'false,false,true,false': [5.467, 89, 45], 'false,false,false,true': [1.633, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.313, 2, 13], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.816, 2, 1], 'false,false,true,true': [3.433, 14, 76], 'false,false,true,false': [0.071, 192, 0], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.0, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.975, 1, 11], 'true,false': [0.925, 1, 6], 'false,true,true': [4.35, 94, 34], 'false,true,false,true': [2.739, 9, 48], 'false,true,false,false': [8.69e-08, 84, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.637, 12, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.064, 0, 10], 'true,false': [0.925, 1, 7], 'false,true,true,true': [0.094, 0, 3], 'false,true,true,false': [2.253, 10, 21], 'false,true,false': [5.301, 198, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.247, 7, 2], 'false,false,false,false': [0.929, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.907, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.293, 2, 10], 'false,true': [5.78, 197, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.668, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(J, A)'}, {'true,true,true': [0.04, 0, 5], 'true,true,false': [1.097, 2, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.033, 0, 2], 'false,true': [2.881, 55, 19], 'false,false,true': [0.032, 0, 8], 'false,false,false,true': [2.246, 35, 11], 'false,false,false,false': [4.809, 107, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.916, 1, 15], 'true,true,true,false': [0.663, 1, 1], 'true,true,false,true': [0.795, 1, 3], 'true,true,false,false': [1.738, 5, 33], 'true,false': [0.633, 92, 0], 'false,true': [0.028, 0, 5], 'false,false,true': [4.4, 89, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.253, 2, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.403, 15, 82], 'false,true,false': [0.293, 209, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.437, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.865, 1, 9], 'true,false,true': [0.338, 1, 2], 'true,false,false': [0.214, 0, 5], 'false,true,true': [1.745, 28, 13], 'false,true,false,true': [0.474, 1, 8], 'false,true,false,false': [1.629, 50, 11], 'false,false,true': [0.023, 0, 5], 'false,false,false,true': [3.754, 94, 47], 'false,false,false,false': [1.335, 8, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.946, 1, 7], 'true,true,true,false': [0.768, 1, 6], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.181, 0, 3], 'false,true': [2.678, 93, 32], 'false,false,true': [0.02, 0, 5], 'false,false,false,true': [3.851, 97, 47], 'false,false,false,false': [1.48, 10, 4]}]
{'': [0.15419501133786812, 0.21754703719723234], 'false': [-2.5376526277146434e-16, 0.2107511569953731], 'false,false': [0.21015794653876826, 0.22222222222222207], 'false,false,false': [0.22222222222222207, nan], 'false,false,true': [0.19264176258738913, 0.22304522165293045], 'true': [0.15999999999999973, 0.1388888888888887], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.09384855568649635, 0.20210681343698284], 'false': [0.17283950617283964, 0.1985596099420266], 'false,false': [0.19654621423114677, 0.24000000000000013], 'false,false,false': [0.22222222222222224, 0.25], 'false,false,true': [0.13094446596869436, 2.6117613469184287e-05], 'false,true': [0.0, 0.24000000000000005], 'false,true,false': [0.0, 0.2222222222222222], 'true': [0.0, 0.11501585798739053]}
{'': [0.09553075304870286, 0.16165441293711294], 'false': [0.1599111177745062, 0.1883504916561258], 'false,false': [0.1883504916561258, nan], 'false,false,true': [0.0, 0.16742963136862324], 'false,true': [0.14780045446101084, 0.16963527404402323], 'false,true,false': [0.131580812729171, 8.987519723156029e-17], 'true': [0.0792766616595112, 0.12213695726736343]}
{'': [0.0509011865898973, 0.13347316218930533], 'false': [0.13033722236421905, 0.19542474427808765], 'false,false': [0.0, 0.19560327440300318], 'false,false,false': [0.1728395061728395, 0.21586023482646038], 'false,true': [0.1497481236773692, 0.1097507948082016], 'false,true,true': [0.002974738704254687, 0.1637399977748803], 'true': [0.000405374863550545, 0.10689905224857937], 'false,false,true': [nan, 0.0]}
{'': [0.1249534147100528, 0.12395671045919127], 'true': [0.10294032621896662, 0.13934817792254298], 'false': [0.11974546425472679, 0.20784364976228265], 'false,false': [0.0, 0.21397298976859808], 'false,false,false': [0.21397298976859808, nan], 'true,true': [0.10294032621896662, nan], 'false,false,true': [nan, 0.0]}
{'': [0.06793434976487726, 0.13090983123113642], 'false': [0.11220070854741053, 0.13688910010418906], 'false,false': [0.0001304913756051268, 0.13924180717819545], 'false,false,false': [0.10969877953003673, 0.14732814171147535], 'true': [0.07580877239847446, 0.0005450062826203583], 'true,true': [0.00031680538401455125, 0.10943335680852533], 'true,false': [nan, 0.0005450062826203583]}
{'': [0.11954916875657681, 0.13839437118937986], 'false': [0.00015934586944629236, 0.14232843448192325], 'false,false': [0.14232843448192325, nan], 'true': [0.11246641301391337, 0.004357843631470071], 'true,true': [0.09320060706297227, 0.10387591595790652], 'true,true,false': [0.15790628674474438, 0.07948459736295066], 'true,true,true': [0.05239338476509359, 0.21954344467087672]}
{'': [0.08379175974516635, 0.09875404029373981], 'false': [0.09689906115940905, 0.13423005723112802], 'false,false': [0.0, 0.13770272320910895], 'false,false,false': [0.13770272320910895, nan], 'false,true': [0.11936935798875356, 0.0004101813901943929], 'false,true,true': [nan, 0.11936935798875348], 'true': [0.0, 0.10468069666110717], 'false,false,true': [0.0, nan]}
{'': [0.058167379503312536, 0.08498206542340861], 'false': [0.05988127198238822, 0.10114046418318548], 'false,false': [0.00010639866440943501, 0.10375296647721607], 'false,false,false': [0.09992700839122833, 0.14854499981610003], 'false,true': [0.07431123109235327, 0.05111996581940936], 'true': [0.07487683697994334, 0.035438254601621005], 'false,true,false': [0.025003528055410063, 0.043480630444640365], 'true,false': [0.038184872249958826, 0.009144155272817622]}
{'': [0.10833099015197123, 0.0852018327687292], 'true': [0.11835893705314338, 0.010861400422618128], 'true,true': [0.0991235646769711, 0.0], 'true,true,true': [0.1118751311329345, 0.08417790055118095], 'false': [0.05738432976492187, 0.1051772436991555], 'false,false': [8.262665935171443e-05, 0.10787222837698275], 'false,false,false': [0.10299067562741016, 0.15649223162210127], 'true,true,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 8.922
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.7748156017661789;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, F) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.2381489350995123;  // std dev = 3.432, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | | else return 0.12926004621062337;  // std dev = 6.668, 225.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=61 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7359812264346162;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6896533490701463;  // std dev = 0.242, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7469119315584815;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7743504509060085;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2743504509060085;  // std dev = 0.697, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6299197166764153;  // std dev = 3.973, 96.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=76 */
%   | | | else return -0.16099794134701237;  // std dev = 0.119, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.27024587984132104;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.008341117936559237;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then return 0.3652109099136757;  // std dev = 0.411, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.6123006514518796;  // std dev = 0.144, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return 0.1869898093535624;  // std dev = 2.202, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.061619684630735305;  // std dev = 3.722, 97.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=24 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6506122304559798;  // std dev = 1.920, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.13983874928654583;  // std dev = 0.042, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.08797656464130024;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.7573007121971846;  // std dev = 0.159, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.1785889828035509;  // std dev = 0.054, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4572839054590091;  // std dev = 0.083, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.28155060117612957;  // std dev = 0.415, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F) )
%   | | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.61560299785421;  // std dev = 0.479, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.14892363371981757;  // std dev = 0.394, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.04265217909462575;  // std dev = 2.015, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.10320428333275612;  // std dev = 4.544, 142.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=47 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.442991912593239;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.26025020507205104;  // std dev = 0.984, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.030955219767774194;  // std dev = 1.183, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), enzyme(A, E) )
%   | then return -0.3027304454252249;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.38412690115768083;  // std dev = 0.056, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3318623763451347;  // std dev = 2.093, 33.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=24 */
%   | | | else return -0.06827000434795524;  // std dev = 2.235, 101.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=11 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.10775915680208938;  // std dev = 3.332, 84.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=29 */
%   | | | else return 0.05338952142682779;  // std dev = 2.601, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.33804464128797485;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.12841680047572446;  // std dev = 1.480, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.17041235206546626;  // std dev = 0.129, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.26454581199541544;  // std dev = 0.213, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, F), complex(F, E) )
%   | | | then return -0.042994641532509835;  // std dev = 1.242, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.08780741174643747;  // std dev = 1.084, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return -0.033148382118410466;  // std dev = 1.013, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.1523418853973467;  // std dev = 1.462, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0.03354530944921802;  // std dev = 0.737, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3536186517860986;  // std dev = 0.159, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.03384023294633703;  // std dev = 4.581, 195.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=51 */
%   | | | else return 0.12701900782501993;  // std dev = 1.951, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then return 0.257370893364137;  // std dev = 0.078, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.09539610842371209;  // std dev = 1.046, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( location(A, F), complex(A, G) )
%   | | then return -0.02151632966496426;  // std dev = 0.252, 78.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=17 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.018676600576151267;  // std dev = 1.886, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.19811433895140404;  // std dev = 1.874, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.2789833383623579;  // std dev = 0.138, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.36086434449045274;  // std dev = 2.640, 58.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=43 */
%   | | | else return -0.1633704089703513;  // std dev = 0.471, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.015777307798954088;  // std dev = 0.288, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.19164831000056948;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, E) )
%   | | then return -0.07109596565666385;  // std dev = 0.395, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.23752905396896626;  // std dev = 0.127, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.18091849018301934;  // std dev = 2.122, 28.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   | | | else return 0.3944307254752904;  // std dev = 2.214, 70.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=63 */
%   | | else return -0.14328457258362687;  // std dev = 0.449, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.177703952953853;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.10602262528000823;  // std dev = 0.993, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.014188184811148672;  // std dev = 1.047, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(D, E) )
%   | | then return -0.3121213469351233;  // std dev = 0.715, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.15423349855623916;  // std dev = 0.086, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.23753624409635896;  // std dev = 0.070, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2518351515249986;  // std dev = 2.027, 39.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=30 */
%   | | | else return -0.12157453316891813;  // std dev = 0.328, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else return 0.13975343010938462;  // std dev = 0.547, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.18885058759328324;  // std dev = 0.104, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.05051690909019998;  // std dev = 2.850, 89.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=33 */
%   | | | else return -0.03663558383206289;  // std dev = 2.185, 79.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=18 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.07000713950702106;  // std dev = 0.260, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else return 0.22847214433524887;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.2485059454160297;  // std dev = 1.473, 27.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=22 */
%   | | | else return -0.13849638411100837;  // std dev = 0.573, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.19745217836221132;  // std dev = 0.963, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.038657625883118496;  // std dev = 1.457, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.012912995404564198;  // std dev = 0.821, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( location(A, K) )
%   | | | then return 0.03423922580334089;  // std dev = 3.154, 140.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | | | else return -0.05333562264815451;  // std dev = 1.151, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '6.311', 'seconds']
Refined model CLL: -0.195972


******************************************
Best model found
******************************************
Results 

CLL : -0.177269 

AUC ROC : 0.985157 

AUC PR : 0.357367 

Precision : 0.233442 

Recall : 0.811321 

F1 : 0.362563 

Total Learning Time : 8.922 

Total Inference Time : 75.32058191299438 

Total revision time: 94.49075490379334
Best scored revision CLL: -0.195972


Results 

CLL : -0.177269 

AUC ROC : 0.985157 

AUC PR : 0.357367 

Precision : 0.233442 

Recall : 0.811321 

F1 : 0.362563 

Total Learning Time : 100.01371437454225 

Total Inference Time : 75.32058191299438 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.459
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.06867525088898606;  // std dev = 2.513, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | | else return 0.12644161802634063;  // std dev = 5.674, 164.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.13351125394009203;  // std dev = 3.711, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7392070123615109;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6273668522711771;  // std dev = 0.957, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8432084574554005;  // std dev = 0.020, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.1565414444030966;  // std dev = 0.035, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.0862522208348836;  // std dev = 1.933, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.18201620910560593;  // std dev = 3.144, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5845951528236645;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5833025561980193;  // std dev = 0.031, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.045351884779593864;  // std dev = 2.111, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6846737079645706;  // std dev = 0.270, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13822638144012214;  // std dev = 9.88e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1470473348164202;  // std dev = 3.613, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.045043463405968216;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.43696626080775836;  // std dev = 0.034, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.44288466658177705;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38644127727017397;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5905855606484658;  // std dev = 0.133, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.05217109546654126;  // std dev = 4.207, 198.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5188236788169776;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.05442899237248446;  // std dev = 1.934, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.11121513415598466;  // std dev = 3.196, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33712932425362024;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23630459320318212;  // std dev = 0.932, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.052155727311508755;  // std dev = 4.234, 201.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.39090888679943625;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.10344452096325096;  // std dev = 3.575, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | | else return 0.27835856642500323;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2719137521015486;  // std dev = 0.039, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3620164427196555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.3085943426445725;  // std dev = 0.076, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.27885969803191535;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.3178661646864394;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06658729415660784;  // std dev = 0.944, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2832748271422198;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.03733583292159579;  // std dev = 2.808, 86.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=23 */
%   | | | else return 0.08151955501500896;  // std dev = 4.633, 144.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23999401295285291;  // std dev = 0.106, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.22055737006570492;  // std dev = 0.028, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.24501766812921244;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6182945471385521;  // std dev = 1.075, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.2006920141376456;  // std dev = 0.747, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2263265742780809;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06559478991153445;  // std dev = 3.300, 114.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1785353881560514;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.19197296488062396;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4421948975209561;  // std dev = 0.783, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1375907917235785;  // std dev = 0.309, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.1850470799862749;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.0200720752272388;  // std dev = 3.131, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1562374625707217;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.13000120182523967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1721963338596366;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.12288971409363765;  // std dev = 0.783, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18377659708613747;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.007869244821290724;  // std dev = 1.226, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1614512099525896;  // std dev = 0.000953, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03330764042534849;  // std dev = 2.650, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
%   | | | else return 0.04419472846495089;  // std dev = 3.049, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13378866711390297;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14291236598109167;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.1417768294545626;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14037127404874916;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.005381655632314061;  // std dev = 1.315, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.02594060803086808;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.00601604581045984;  // std dev = 2.809, 138.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | | | else return 0.04042224826999573;  // std dev = 3.023, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.275', 'seconds']
Parameter learned model CLL:-0.174318 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.949, 1, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.513, 30, 8], 'false,false,true,false': [5.674, 120, 44], 'false,false,false,true': [3.711, 50, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.957, 1, 9], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [0.02, 0, 52], 'false,false,true,false': [0.035, 139, 0], 'false,false,false,true': [1.933, 15, 5], 'false,false,false,false': [3.144, 29, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.031, 0, 6], 'true,false': [0.031, 0, 8], 'false,true,true': [2.111, 30, 8], 'false,true,false,true': [0.27, 0, 48], 'false,true,false,false': [9.88e-08, 107, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.613, 40, 20], 'false,false,false,true': [0.866, 3, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.034, 0, 9], 'true,false': [0.027, 0, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.133, 0, 3], 'false,true,false': [4.207, 146, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.934, 15, 5], 'false,false,false,false': [3.196, 32, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.026, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.932, 1, 9], 'false,true': [4.234, 145, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.575, 40, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.039, 0, 6], 'true,true,false': [0.0, 0, 1], 'true,false,true,true': [0.076, 0, 2], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.055, 0, 3], 'false,true': [0.944, 20, 3], 'false,false,true': [0.02, 0, 6], 'false,false,false,true': [2.808, 63, 23], 'false,false,false,false': [4.633, 98, 46]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.106, 0, 12], 'true,true,true,false': [0.028, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.075, 1, 36], 'true,false': [0.747, 98, 0], 'false,true': [0.001, 0, 5], 'false,false,true': [3.3, 78, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.017, 0, 5], 'true,false': [0.019, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.783, 0, 56], 'false,true,false': [0.309, 148, 0], 'false,false,true,true': [0.024, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.131, 49, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.027, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.007, 0, 4], 'false,true,true': [0.783, 13, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.226, 41, 14], 'false,false,true': [0.000953, 0, 5], 'false,false,false,true': [2.65, 77, 36], 'false,false,false,false': [3.049, 42, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.011, 0, 5], 'true,true,true,false': [0.021, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.029, 0, 4], 'false,true': [1.315, 48, 17], 'false,false,true': [0.913, 1, 5], 'false,false,false,true': [2.809, 102, 36], 'false,false,false,false': [3.023, 41, 20]}]
{'': [0.06222222222222188, 0.20141056769568808], 'false': [-1.4802973661668753e-16, 0.194179446926701], 'false,false': [0.19115772963435043, 0.20234080539575433], 'false,false,false': [0.1995379122033181, 0.25], 'false,false,true': [0.16620498614958465, 0.1963117192147539], 'true': [0.08999999999999977, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16]}
{'': [0.06389436982824322, 0.20579055788186748], 'false': [7.401486830834377e-17, 0.2025028291262806], 'false,false': [0.19803973085474386, 0.21482733765583492], 'false,false,false': [0.18682441393394902, 0.22469008264462784], 'false,false,true': [7.385343667902606e-06, 8.626942913973905e-06], 'true': [0.0, 0.09167214760602108], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.0001355373733676097, 0.1598197136095411], 'false': [0.14053053948580757, 0.21561408007460708], 'false,false': [0.21673053866872963, 0.18749999999999994], 'false,false,true': [0.0, 0.21760952596893282], 'false,false,false': [0.18749999999999994, nan], 'false,true': [0.11727123506675015, 0.14523314114467797], 'false,true,false': [0.0015200336718102687, 9.130806183833063e-17], 'true': [0.00015535245252314608, 0.00011996000427078046]}
{'': [0.0001408658984494477, 0.12195509579312053], 'false': [0.09246408603726658, 0.20689488541723916], 'false,false': [0.0025659338199370274, 0.2089419487513869], 'false,false,false': [0.18705515138157033, 0.21729289271163407], 'false,true': [0.012225507161542692, 0.08938135061152992], 'false,true,true': [0.0, 0.005881954106381186], 'false,false,true': [0.0, 0.0], 'true': [0.00012668451258841037, 0.00014387469713126322]}
{'': [0.060193953796534465, 0.11964999130512344], 'false': [0.08918023267758463, 0.21366077940635145], 'false,false': [0.0012319060935298831, 0.21869465001999036], 'false,false,false': [0.21663033947624571, 0.25], 'true': [0.0001353149376964069, 0.08683473109548909], 'false,false,true': [0.0, 0.0], 'true,true': [0.0001353149376964069, nan]}
{'': [0.0014553266644431462, 0.11974428120161336], 'false': [0.0387082974023302, 0.12597181520003872], 'false,false': [6.384637219396712e-05, 0.1280450707165064], 'false,false,false': [0.09168226823982717, 0.1490317908890291], 'true': [0.0012088548582195008, 0.0015158080882120087], 'true,false': [0.0016479976607763208, 0.0010065848734424991], 'true,false,true': [0.0028539207764321783, 0.0], 'true,true': [0.0002505456884052866, 0.0]}
{'': [0.13573164942685173, 0.09255872906254634], 'true': [0.05218553073268014, 0.005696028039392839], 'false': [3.036564226066574e-07, 0.09553281725423297], 'false,false': [0.09553281725423297, nan], 'true,true': [0.0009026660911270785, 0.03397124231694126], 'true,true,false': [0.0, 0.031222656937947187], 'true,true,true': [0.0009356518316292473, 0.00038093757378057647]}
{'': [8.776190157675343e-05, 0.08808536360415355], 'false': [0.07041736984107021, 0.13884236442324363], 'false,false': [0.00029297807784000457, 0.142091619589217], 'false,false,false': [0.142091619589217, nan], 'false,true': [0.010943912460792246, 0.0006439728219861624], 'false,true,true': [nan, 0.010943912460792309], 'false,false,true': [0.00029297807784000457, nan], 'true': [5.449055790437418e-05, 4.175724274159255e-05]}
{'': [0.00017113023426620116, 0.07557965430590971], 'false': [0.03316127977325995, 0.09108781688927717], 'false,false': [1.815493750667585e-07, 0.0932612341832526], 'false,false,false': [0.062145302248676405, 0.14989599381756175], 'false,true': [0.04383996901649339, 0.02761583202196359], 'false,true,false': [0.0, 0.027331337824598047], 'true': [8.239803355597177e-05, 0.00029449586672685715], 'true,false': [0.0, 1.2033999928526967e-05]}
{'': [0.0001149477073107181, 0.07296027850514432], 'false': [0.026599502711914906, 0.08762181258233637], 'false,false': [0.13895993725063685, 0.08603977725926669], 'false,false,false': [0.05718104357872068, 0.14983127571405397], 'true': [7.675237285474368e-05, 0.00020682683188741682], 'true,true': [9.176937880336564e-05, 0.0], 'true,true,true': [2.3862893907311555e-05, 0.00015292067799315087], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 3.136
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09840867535925205;  // std dev = 5.302, 154.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=37 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.25814893509951237;  // std dev = 2.683, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.14800400756328025;  // std dev = 3.769, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8360488036572125;  // std dev = 0.212, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15630145883574809;  // std dev = 0.061, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return -0.009599678849227494;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.17788340548181972;  // std dev = 3.528, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.10188011565896679;  // std dev = 0.645, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.09087281436204492;  // std dev = 1.897, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6225311186737098;  // std dev = 1.679, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.13765440491600595;  // std dev = 0.055, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.18452405554846046;  // std dev = 0.524, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.08903150275542122;  // std dev = 3.742, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | else return 0.013681674350636424;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.41751358415830986;  // std dev = 1.05e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2508469174916433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.40127546859423924;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.29482461287712736;  // std dev = 0.500, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.12166448165377751;  // std dev = 0.009, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.08470642586597706;  // std dev = 4.173, 170.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=52 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5213747488219501;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 3.957697492590964E-4;  // std dev = 1.785, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.14022321251955622;  // std dev = 3.232, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.33564729916703684;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.333158057165889;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( phenotype(F, G) )
%   | | | then return -0.05328289991628387;  // std dev = 1.079, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.03890163553363831;  // std dev = 1.522, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.06128937756249161;  // std dev = 3.296, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | | else return 0.13340610357088817;  // std dev = 1.786, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3928064836577952;  // std dev = 0.011, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(A, K) )
%   | | | then return 0.11169544999421241;  // std dev = 3.446, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return -0.023591534940636337;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.2688903046366871;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.31313024454994354;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return -0.11020704065315289;  // std dev = 0.004, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( location(A, I) )
%   | | | then return 0.04160200151153454;  // std dev = 0.675, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.10576771175714873;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.2610031633835658;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.04776250086743924;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.01719057942981802;  // std dev = 2.671, 88.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=21 */
%   | | | else return 0.06142573472728782;  // std dev = 4.814, 161.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=48 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23499495489629182;  // std dev = 0.035, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2067441791814657;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5947778087122619;  // std dev = 1.342, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.19034752079803133;  // std dev = 0.085, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.24794589546223125;  // std dev = 0.090, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G), complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5291168230740966;  // std dev = 0.195, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1479180258854078;  // std dev = 0.048, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.13795727417880654;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.04671839884579192;  // std dev = 2.874, 89.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1695191826569662;  // std dev = 0.000384, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, E) )
%   | | then return 0.1752756600542836;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.21692084797989608;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.3328399050809931;  // std dev = 0.411, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.47764308687999907;  // std dev = 0.429, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.13162233780660115;  // std dev = 0.025, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.20164793365538658;  // std dev = 0.011, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.0377199025408744;  // std dev = 1.524, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.09187261097554349;  // std dev = 2.639, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15619583367487888;  // std dev = 0.014, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17125514177242057;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.07277194172646913;  // std dev = 0.011, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.024046952462591184;  // std dev = 0.278, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.04783467925060466;  // std dev = 0.218, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.022014767620779425;  // std dev = 1.379, 70.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.17527741483612874;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return -0.018932757715797593;  // std dev = 1.604, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.03039291884679567;  // std dev = 3.660, 148.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=47 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13178798558996163;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15618967501971173;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.12861497230248942;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.008757057175815763;  // std dev = 0.619, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.15187620981741168;  // std dev = 0.056, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), interaction(A, H) )
%   | | then if ( enzyme(A, I), enzyme(G, I) )
%   | | | then return -0.08417803360041556;  // std dev = 0.059, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.018135466690074542;  // std dev = 1.348, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.08556535511796662;  // std dev = 2.468, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.02334876098325572;  // std dev = 2.988, 128.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=42 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.447', 'seconds']
Refined model CLL: -0.175053


******************************************
Best model found
******************************************
Results 

CLL : -0.191759 

AUC ROC : 0.982073 

AUC PR : 0.216279 

Precision : 0.134183 

Recall : 0.797834 

F1 : 0.22973 

Total Learning Time : 3.136 

Total Inference Time : 2.9435200691223145 

Total revision time: 10.55442211151123
Best scored revision CLL: -0.174318


Results 

CLL : -0.191759 

AUC ROC : 0.982073 

AUC PR : 0.216279 

Precision : 0.134183 

Recall : 0.797834 

F1 : 0.22973 

Total Learning Time : 16.07738158226013 

Total Inference Time : 2.9435200691223145 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.684
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.06127393509951237;  // std dev = 3.219, 64.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | | else return 0.1367203636709404;  // std dev = 5.304, 140.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.14847151574467365;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7347337483847239;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6621798196687232;  // std dev = 0.936, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8061937607509558;  // std dev = 1.385, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15586233310469194;  // std dev = 0.057, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.10101498955813207;  // std dev = 1.920, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.1710279912038704;  // std dev = 2.159, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5058544552880452;  // std dev = 0.917, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.6088110990423419;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08073947151250678;  // std dev = 2.754, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6479724709107934;  // std dev = 1.386, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.13953686167972645;  // std dev = 7.60e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6619869874513816;  // std dev = 0.192, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.044299292909482126;  // std dev = 2.583, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.18970636988934905;  // std dev = 1.363, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.45076652173505366;  // std dev = 0.021, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.28268001776158475;  // std dev = 1.290, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5353504667989812;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4730262842731364;  // std dev = 0.851, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.0369247309650719;  // std dev = 4.382, 205.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4222866173446464;  // std dev = 0.043, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6054147052556949;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.1073786573314072;  // std dev = 1.877, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.073403966983765;  // std dev = 2.215, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.36451856961886375;  // std dev = 0.080, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3916283320920702;  // std dev = 0.071, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.04659743250836108;  // std dev = 4.513, 211.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.29694337918653535;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4037042809750199;  // std dev = 0.074, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.001716314775826972;  // std dev = 2.654, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return 0.037833364573791016;  // std dev = 1.479, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26348514370039033;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.337744752074362;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.23887824867664875;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3323225441874854;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3588899556254649;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06507417241671927;  // std dev = 1.283, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.14885980519156158;  // std dev = 0.884, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.06934456835720929;  // std dev = 2.207, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.06283638158227733;  // std dev = 4.560, 162.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25503831382425035;  // std dev = 0.157, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.22699608975278376;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.13866386346896467;  // std dev = 1.109, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5883533982398064;  // std dev = 1.062, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.16224574996939778;  // std dev = 0.401, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.29577238299777264;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.126213823890397;  // std dev = 3.111, 80.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17427567148300116;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.15070543117265456;  // std dev = 0.970, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39513682708031;  // std dev = 1.897, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | else return -0.14430020656131867;  // std dev = 0.466, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.164555823001852;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20259247071286723;  // std dev = 0.049, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.0513249856510374;  // std dev = 2.469, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1636995242104231;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.2983423585460679;  // std dev = 0.695, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.18059883985586217;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07594122541876756;  // std dev = 0.379, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.20005795837790402;  // std dev = 0.439, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.013070827829988437;  // std dev = 1.555, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2118536181142636;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.015736139553882946;  // std dev = 2.867, 105.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
%   | | | else return 0.0900654035155323;  // std dev = 2.370, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14258911516490724;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14231099607741188;  // std dev = 0.026, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.13687602877778338;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.13729317045142578;  // std dev = 0.827, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.16202652336286083;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.02167336364328531;  // std dev = 1.862, 101.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17864393741075935;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0034057655055393485;  // std dev = 2.863, 114.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=31 */
%   | | | else return -0.009854212668688094;  // std dev = 2.513, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.837', 'seconds']
Parameter learned model CLL:-0.177136 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.219, 51, 13], 'false,false,true,false': [5.304, 101, 39], 'false,false,false,true': [2.527, 22, 9], 'false,false,false,false': [1.414, 6, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.936, 1, 11], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [1.385, 2, 52], 'false,false,true,false': [0.057, 148, 0], 'false,false,false,true': [1.92, 14, 5], 'false,false,false,false': [2.159, 14, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.917, 1, 11], 'true,false': [0.041, 0, 4], 'false,true,true': [2.754, 39, 14], 'false,true,false,true': [1.386, 2, 42], 'false,true,false,false': [7.6e-08, 92, 0], 'false,false,true,true': [0.192, 0, 3], 'false,false,true,false': [2.583, 30, 9], 'false,false,false,true': [1.363, 5, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.021, 0, 6], 'true,false': [1.29, 2, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.851, 1, 6], 'false,true,false': [4.382, 156, 49], 'false,false,true,true': [0.043, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.877, 12, 5], 'false,false,false,false': [2.215, 18, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.08, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.071, 0, 6], 'false,true': [4.513, 155, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.074, 0, 2], 'false,false,false,true': [2.654, 35, 9], 'false,false,false,false': [1.479, 8, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.008, 0, 5], 'true,true,false': [0.066, 0, 3], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.053, 0, 3], 'true,false,false': [0.122, 0, 4], 'false,true': [1.283, 32, 5], 'false,false,true': [0.884, 1, 5], 'false,false,false,true': [2.207, 31, 13], 'false,false,false,false': [4.56, 115, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.157, 0, 13], 'true,true,true,false': [0.066, 0, 3], 'true,true,false,true': [1.109, 2, 3], 'true,true,false,false': [1.062, 1, 33], 'true,false': [0.401, 107, 0], 'false,true': [0.018, 0, 3], 'false,false,true': [3.111, 49, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.97, 1, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.897, 4, 56], 'false,true,false': [0.466, 152, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.049, 0, 2], 'false,false,false,true': [2.469, 29, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.047, 0, 10], 'true,false,true': [0.695, 1, 1], 'true,false,false': [0.063, 0, 5], 'false,true,true': [0.379, 11, 1], 'false,true,false,true': [0.439, 1, 6], 'false,true,false,false': [1.555, 51, 17], 'false,false,true': [0.014, 0, 3], 'false,false,false,true': [2.867, 74, 31], 'false,false,false,false': [2.37, 22, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.033, 0, 8], 'true,true,true,false': [0.026, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.827, 1, 2], 'true,false': [0.052, 0, 3], 'false,true': [1.862, 77, 24], 'false,false,true': [0.012, 0, 3], 'false,false,false,true': [2.863, 83, 31], 'false,false,false,false': [2.513, 36, 12]}]
{'': [0.10380622837370206, 0.20285392295360435], 'false': [-2.5376526277146434e-16, 0.19349637194302732], 'false,false': [0.18992695117262678, 0.20999999999999946], 'false,false,false': [0.2060353798126952, 0.2222222222222221], 'false,false,true': [0.16186523437499947, 0.20096938775510248], 'true': [0.07100591715976314, 0.18750000000000006], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.05575812246546341, 0.1987730141149116], 'false': [0.10937500000000006, 0.19413493788043773], 'false,false': [0.1907900299733761, 0.20991767313984422], 'false,false,false': [0.19394422998431224, 0.2220414713051122], 'false,false,true': [0.03550831223597255, 2.210017350529809e-05], 'false,true': [0.0, 0.13888888888888892], 'false,true,false': [0.0, 0.1875], 'true': [0.0, 0.07302814514425308]}
{'': [0.05464740576578753, 0.15776363788962547], 'false': [0.14820483077070506, 0.1938952247360558], 'false,false': [0.18498103420983833, 0.23207719807233498], 'false,false,false': [0.23207719807233498, nan], 'false,false,true': [0.012264372137302582, 0.1710142107217349], 'false,true': [0.14310057268113688, 0.1498600983630055], 'false,true,false': [0.043676533774309204, 6.275173617446536e-17], 'true': [0.07007180081961806, 0.00042416773443304523]}
{'': [0.10436264280564345, 0.11816521327219426], 'false': [0.10068945017568806, 0.19791465679173467], 'false,false': [0.008070660258851428, 0.2010113696289606], 'false,false,false': [0.2073296571936102, 0.1962477256818629], 'true': [7.185089537161311e-05, 0.1512768565428531], 'false,true': [0.09105085121367851, 0.09366502066071415], 'false,true,true': [0.0, 0.10357257770683614], 'false,false,true': [0.0009273581942916553, 0.0]}
{'': [0.0009339437148606559, 0.11159883485435823], 'false': [0.09653761396296916, 0.1660217153277555], 'false,false': [0.00434090528509834, 0.16806538795048276], 'false,false,false': [0.16004758265336047, 0.19888526742964577], 'false,false,true': [0.0, 0.0027120612107506825], 'true': [0.0007034857188325589, 0.0008386671760906572], 'true,true': [0.0007034857188325589, nan]}
{'': [0.0031964371984730122, 0.11520935350016637], 'false': [0.04447995847640829, 0.1249764406775782], 'false,false': [0.13036684372214044, 0.12461671789869294], 'false,false,false': [0.11072216963384897, 0.12838149880410746], 'true': [0.00184551552854266, 0.0036402678383831155], 'true,false': [0.002333112236962878, 0.0037009966168438935], 'true,false,true': [0.0, 0.0009278572250714009], 'true,true': [1.2603092864571508e-05, 0.0014538136905963839]}
{'': [0.11117810653417562, 0.11759676004621933], 'false': [0.00010356342537964913, 0.12096359449902239], 'false,false': [0.12096359449902239, nan], 'true': [0.09772396937655088, 0.0015036670677320706], 'true,true': [0.0019383081391782936, 0.11950667063415232], 'true,true,false': [0.24575814521968656, 0.0331769313098631], 'true,true,true': [0.0019021911048665745, 0.00145589264402692]}
{'': [0.05888636686644431, 0.08822743235020858], 'false': [0.07704096764676213, 0.13985171202111857], 'false,false': [0.0011297258848513615, 0.1486925466546553], 'false,false,false': [0.1486925466546553, nan], 'false,true': [0.05996000765245449, 0.001427136780301886], 'false,true,true': [nan, 0.05996000765245449], 'true': [0.0, 0.07837626676485383], 'false,false,true': [0.0, 0.0012123266375797456]}
{'': [0.05157031805223326, 0.07546632116607194], 'false': [0.035795921816902505, 0.09909258513524821], 'false,false': [6.692486830135273e-05, 0.10056092893315714], 'false,false,false': [0.07829445624246653, 0.16515159587627434], 'true': [0.0002208932656705853, 0.11646437452938216], 'true,false': [0.24178564719075718, 0.0007973878857815808], 'false,true': [0.011954700155231293, 0.038665742417560926], 'false,true,false': [0.027578755109013975, 0.035567487846975276]}
{'': [0.05225276226541986, 0.06811107443567524], 'false': [0.03433273415123746, 0.0885613101904466], 'false,false': [5.179638927188072e-05, 0.0896167237452698], 'false,false,false': [0.0718981455358731, 0.1315746168665707], 'true': [0.06213423927726151, 0.0008870465345746601], 'true,true': [0.00017597836231083574, 0.18514340469166063], 'true,true,false': [0.0, 0.22806568547071773], 'true,true,true': [0.00013822667762588073, 0.0003269232208691804]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 3.709
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, F) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return 0.06782635445435108;  // std dev = 3.205, 62.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=13 */
%   | | | else return 0.17103237068233434;  // std dev = 5.920, 163.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=51 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7387463734164045;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7323220530145877;  // std dev = 0.045, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H), complex(G, H) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7687030987186254;  // std dev = 1.909, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.15454989302266217;  // std dev = 0.166, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.10269483192435572;  // std dev = 2.422, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.236028165257689;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.565841284650299;  // std dev = 0.021, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), location(A, G) )
%   | | | then return -0.04710651995856677;  // std dev = 1.506, 43.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
%   | | | else return 0.11121189219167682;  // std dev = 2.259, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6309148891532382;  // std dev = 1.672, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.14173875481243323;  // std dev = 0.045, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), enzyme(K, L) )
%   | | | then return -0.007425568329250106;  // std dev = 1.736, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.09418759806633113;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.051061097235701174;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5510610972357012;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.42822368100599384;  // std dev = 0.054, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, E), enzyme(A, F) )
%   | | then return 0.07955782380235721;  // std dev = 0.818, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.42678528592584086;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.6028913745675865;  // std dev = 0.069, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.013745374320866371;  // std dev = 2.455, 98.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=16 */
%   | | | else return 0.11575903568191047;  // std dev = 3.463, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.5571993042135517;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.11573443310027166;  // std dev = 2.001, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.32730476436442646;  // std dev = 1.630, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32862130207611673;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3483598630404918;  // std dev = 0.088, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F), complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5562044680574858;  // std dev = 0.271, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.13971110899125924;  // std dev = 0.221, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.021896473865213647;  // std dev = 1.377, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.07674440903112306;  // std dev = 3.737, 130.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=41 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.41887433078326436;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.06591492791749586;  // std dev = 2.046, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return -0.001365026777405881;  // std dev = 2.088, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.18928295807200735;  // std dev = 0.208, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.28362945254243455;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.14929313416684997;  // std dev = 0.928, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( enzyme(A, G), location(A, H) )
%   | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.5442322109089013;  // std dev = 0.104, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.15463795923209797;  // std dev = 0.054, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( complex(A, L), phenotype(J, M) )
%   | | | then return 0.023689164716462898;  // std dev = 1.440, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return -0.06909906418026837;  // std dev = 1.588, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | else if ( interaction(N, A), recursion_proteinclass(N, B) )
%   | | | then return 0.25680453572310646;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06481154359726866;  // std dev = 3.502, 106.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.25194896070955447;  // std dev = 0.047, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), phenotype(A, F) )
%   | | | then return 0.34896300360151566;  // std dev = 0.834, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.5637236515946749;  // std dev = 1.449, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return -0.15548631276295913;  // std dev = 0.092, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.21422305060660554;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, H) )
%   | | then if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.0991632319483702;  // std dev = 1.115, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.04368628316788527;  // std dev = 2.162, 64.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.017825295135204162;  // std dev = 1.195, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.07353264260973677;  // std dev = 1.472, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.18881903330257127;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, E), enzyme(A, F) )
%   | | then return -0.09267282351993016;  // std dev = 0.638, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.175512432863098;  // std dev = 0.014, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( location(A, I), interaction(A, J) )
%   | | | then return 0.3400905858976242;  // std dev = 0.435, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.4701700846383591;  // std dev = 0.439, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else return -0.13092930693430171;  // std dev = 0.033, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.23304104335498002;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.07513391800714649;  // std dev = 1.915, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | | else return 0.032784760318327104;  // std dev = 1.555, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1574105663374044;  // std dev = 0.015, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.15829966885274027;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.029208655021497682;  // std dev = 0.960, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.15397807004378297;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.010827372399319147;  // std dev = 1.560, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | | else return -0.06124479240463543;  // std dev = 0.517, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.1685431746605501;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.031099148644457807;  // std dev = 1.603, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.0506509444771756;  // std dev = 2.818, 105.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=38 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.13766802622699087;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.16948152518128093;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.031174932541485012;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.13501409293639957;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.04394233652457571;  // std dev = 0.726, 31.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | | else return -0.00696039208554008;  // std dev = 1.504, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.146273096255095;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, J) )
%   | | | then return -0.019124222038973984;  // std dev = 3.344, 159.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=41 */
%   | | | else return 0.1353751799575121;  // std dev = 0.701, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.629', 'seconds']
Refined model CLL: -0.169343


******************************************
Best model found
******************************************
Results 

CLL : -0.181055 

AUC ROC : 0.988114 

AUC PR : 0.270564 

Precision : 0.178648 

Recall : 0.886926 

F1 : 0.297393 

Total Learning Time : 3.709 

Total Inference Time : 3.4676923751831055 

Total revision time: 11.983466976165772
Best scored revision CLL: -0.169343


Results 

CLL : -0.181055 

AUC ROC : 0.988114 

AUC PR : 0.270564 

Precision : 0.178648 

Recall : 0.886926 

F1 : 0.297393 

Total Learning Time : 17.506426446914674 

Total Inference Time : 3.4676923751831055 

