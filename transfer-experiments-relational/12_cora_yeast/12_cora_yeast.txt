Starting experiment 12_cora_yeast 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.163
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18037115732173445;  // std dev = 7.679, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15696615854020465;  // std dev = 7.679, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16416630825009834;  // std dev = 7.507, 247.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1254255668065271;  // std dev = 7.578, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12771636670276984;  // std dev = 7.438, 239.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10087767790549587;  // std dev = 7.456, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04584575199450215;  // std dev = 7.658, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08405865198528092;  // std dev = 7.383, 233.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0071624121898323095;  // std dev = 7.725, 277.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.060201373331051515;  // std dev = 7.411, 236.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.741', 'seconds']
Parameter learned model CLL:-0.391278 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.679, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.679, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.507, 160, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.578, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.438, 152, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.456, 154, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.658, 180, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.383, 146, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.725, 190, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.411, 149, 87]}]
{'': [0.0, 0.21839506172839596], 'false': [nan, 0.21839506172839596], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21839506172839473], 'false': [nan, 0.21839506172839537], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22816305790948854], 'false': [nan, 0.22816305790948854]}
{'': [0.0, 0.2243499755859383], 'false': [nan, 0.22434997558593808], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2315085520211478], 'false': [nan, 0.23150855202114845], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.23067784645581227], 'false': [nan, 0.23067784645581227], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [0.0, 0.21966923368261573], 'false': [nan, 0.21966923368261573], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2339700491812342], 'false': [nan, 0.23397004918123435], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2154335388184387], 'false': [nan, 0.21543353881843905], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23274561907497746], 'false': [nan, 0.23274561907497746], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 9.485
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15250377380918856;  // std dev = 7.177, 248.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=73 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.202076516226356;  // std dev = 6.704, 194.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=71 */
%   | | | else return 0.060412418373333436;  // std dev = 1.922, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( complex(A, D) )
%   | then if ( phenotype(A, E), complex(C, F) )
%   | | then if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | | then return 0.4640702399190503;  // std dev = 1.114, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.07893861250851764;  // std dev = 2.911, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | else if ( interaction(A, H), complex(C, I) )
%   | | | then return 0.10929252182270961;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.3092925218227096;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( enzyme(A, J), interaction(C, C) )
%   | | then return 0.04877999141721617;  // std dev = 0.382, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | else if ( interaction(K, C), recursion_proteinclass(K, B) )
%   | | | then return 0.49039686999063237;  // std dev = 1.418, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.09658934188574023;  // std dev = 4.863, 117.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   else if ( interaction(A, L), interaction(L, L) )
%   | then return 0.1635387529294051;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.47635789220842595;  // std dev = 1.124, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1489220554039722;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.4186279187754057;  // std dev = 1.113, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.0624871306719569;  // std dev = 3.533, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | else if ( phenotype(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.7064286898314177;  // std dev = 0.976, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.21624795774032537;  // std dev = 0.122, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( enzyme(A, K), phenotype(I, L) )
%   | | | then return 0.2500090703226843;  // std dev = 2.274, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.14362526686537674;  // std dev = 4.359, 89.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=32 */
%   | | else if ( enzyme(A, M) )
%   | | | then return -0.03582474728049519;  // std dev = 0.734, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.002361179038447292;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1270570099344745;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then if ( complex(D, F), interaction(E, A) )
%   | | | then return 0.3387048616971149;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.492295793748539;  // std dev = 0.106, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.031567914267544614;  // std dev = 1.037, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.11141223367124203;  // std dev = 1.771, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 9.067538415535717E-4;  // std dev = 2.950, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.1437159311206322;  // std dev = 3.306, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return 0.08409807573282882;  // std dev = 4.852, 120.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=39 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10537384066011958;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(D, F), phenotype(A, G) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.39015508535835897;  // std dev = 0.291, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.10828173853861069;  // std dev = 1.493, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | else if ( interaction(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.427743833500825;  // std dev = 1.567, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.00872418281294731;  // std dev = 5.043, 144.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=38 */
%   | else if ( enzyme(A, J), complex(A, K) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.620099780662817;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.23196679847279367;  // std dev = 0.191, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.3423128941621033;  // std dev = 1.166, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.14048540716715918;  // std dev = 3.298, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13624362894396416;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), interaction(D, F) )
%   | | then if ( phenotype(D, G), phenotype(A, G) )
%   | | | then return -0.019906478469574714;  // std dev = 1.029, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.07997757865478368;  // std dev = 2.445, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | else if ( phenotype(D, H), interaction(A, I) )
%   | | | then return -0.06426251149217703;  // std dev = 1.694, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return -0.01452882174109;  // std dev = 1.554, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4990441000514867;  // std dev = 0.467, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.0931913929264801;  // std dev = 2.069, 41.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | | else if ( enzyme(A, L), complex(A, M) )
%   | | | then return -0.019345930506380355;  // std dev = 2.000, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.15681744251948337;  // std dev = 4.455, 92.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08467110989859677;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.5857232396644225;  // std dev = 1.957, 80.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=78 */
%   | | | else return -0.09195457733718876;  // std dev = 1.503, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.1959266672180721;  // std dev = 0.210, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.2612535182029293;  // std dev = 0.425, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then return 0.0153472071894738;  // std dev = 0.855, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.09933201801857976;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.13829006950875553;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09530276757315154;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( location(A, F), location(D, F) )
%   | | then if ( phenotype(A, G), complex(A, H) )
%   | | | then return -0.022168409419481047;  // std dev = 1.998, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return 0.03165330192129126;  // std dev = 2.816, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | else if ( location(A, I), phenotype(D, J) )
%   | | | then return 0.05713268965536858;  // std dev = 2.115, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0.2524337275937103;  // std dev = 1.067, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( interaction(A, K), phenotype(A, L) )
%   | | then if ( enzyme(A, M) )
%   | | | then return 0.04928065517485778;  // std dev = 1.175, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return -0.03792435435106729;  // std dev = 0.934, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return -0.003582240504683582;  // std dev = 1.186, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.057609865504459463;  // std dev = 3.328, 93.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=24 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), enzyme(G, D) )
%   | | | then return 0.35373218713878146;  // std dev = 0.194, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5554385823640844;  // std dev = 0.298, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.16948646458099179;  // std dev = 0.131, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.21007666908881167;  // std dev = 0.079, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.28129008618182116;  // std dev = 0.377, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.01811319611110185;  // std dev = 2.379, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return -0.05211220939140908;  // std dev = 2.597, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.0239290022960711;  // std dev = 3.664, 96.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.385', 'seconds']
Refined model CLL: -0.26009


******************************************
Best model found
******************************************
Results 

CLL : -0.25179 

AUC ROC : 0.965162 

AUC PR : 0.231542 

Precision : 0.184388 

Recall : 0.485816 

F1 : 0.267317 

Total Learning Time : 9.485 

Total Inference Time : 6.253580570220947 

Total revision time: 18.910117385864257
Best scored revision CLL: -0.26009


Results 

CLL : -0.25179 

AUC ROC : 0.965162 

AUC PR : 0.231542 

Precision : 0.184388 

Recall : 0.485816 

F1 : 0.267317 

Total Learning Time : 20.34055781173706 

Total Inference Time : 6.253580570220947 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.283
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21309774056026373;  // std dev = 8.191, 293.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14437922197759165;  // std dev = 8.445, 331.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12688786766199472;  // std dev = 8.422, 327.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11345459589604087;  // std dev = 8.379, 320.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09391246831611669;  // std dev = 8.379, 320.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11417542979606098;  // std dev = 8.143, 287.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.062163914716412944;  // std dev = 8.333, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.044510450571505454;  // std dev = 8.366, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.032344654246946616;  // std dev = 8.385, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.054172746309069805;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.310', 'seconds']
Parameter learned model CLL:-0.373761 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.191, 189, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.445, 227, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.422, 223, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.379, 216, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.379, 216, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.143, 183, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.333, 209, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.366, 214, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.385, 217, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.206, 191, 104]}]
{'': [0.0, 0.2289601509627374], 'false': [nan, 0.2289601509627374], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21547813546791117], 'false': [nan, 0.2154781354679107]}
{'': [0.0, 0.21689158226486852], 'false': [nan, 0.21689158226486852], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.2193749999999998], 'false': [nan, 0.21937499999999915], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [0.0, 0.2193749999999987], 'false': [nan, 0.21937499999999904], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23105780087168823], 'false': [nan, 0.23105780087168823], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2218661005011791], 'false': [nan, 0.2218661005011791], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [-1.1564823173178713e-18, 0.22008623076618705], 'false': [nan, 0.22008623076618697], 'true': [nan, -1.1564823173178713e-18], 'true,false': [nan, -1.1564823173178713e-18], 'true,false,false': [nan, -1.1564823173178713e-18]}
{'': [0.0, 0.21901961355188718], 'false': [nan, 0.21901961355188712], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22825624820453988], 'false': [nan, 0.22825624820453988], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 10.948
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.7427643197148958;  // std dev = 3.258, 104.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=92 */
%   | | | else return 0.05045662740720455;  // std dev = 2.010, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else return -0.1418510649004881;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | else if ( complex(A, G) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(C, E) )
%   | then return 0.4454063501590362;  // std dev = 0.727, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7442439421610764;  // std dev = 0.030, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7578381077328358;  // std dev = 0.102, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(I, G), phenotype(G, J) )
%   | | | then return 0.1283762302366315;  // std dev = 3.624, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   | | | else return -0.02546275818131525;  // std dev = 1.905, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.07087480304362788;  // std dev = 3.026, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return 0.2067843514819857;  // std dev = 4.218, 94.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=36 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1226777014551556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.588344860327895;  // std dev = 0.099, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( complex(E, F) )
%   | | | then return 0.605321115947034;  // std dev = 0.139, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16998190932304302;  // std dev = 0.809, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12745596805768034;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.09510589284745531;  // std dev = 6.685, 279.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=80 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11987082695274157;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), enzyme(D, F) )
%   | | then return -0.025616391257218415;  // std dev = 0.922, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.4443087049781523;  // std dev = 0.102, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1304162503478897;  // std dev = 0.126, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( phenotype(A, G), location(A, H) )
%   | | | then return 0.10722527415869333;  // std dev = 5.302, 170.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=55 */
%   | | | else return 0.04965586606103361;  // std dev = 4.175, 125.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=32 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10615675172928778;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), enzyme(D, E) )
%   | | then return 0.10455496632818388;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.3274674552386192;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.43157578575318456;  // std dev = 0.247, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(A, F), complex(A, G) )
%   | | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.6514106312172443;  // std dev = 0.297, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.17281302120327202;  // std dev = 0.025, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.138281170148394;  // std dev = 3.816, 85.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=31 */
%   | | | else return 0.07366239499603623;  // std dev = 4.765, 151.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=47 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09390093862594608;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E) )
%   | | then if ( complex(A, F), interaction(G, A) )
%   | | | then return 0.28321849221695383;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.39474178173193936;  // std dev = 0.161, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.08538876736987114;  // std dev = 0.731, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, J), interaction(A, J) )
%   | | | then return -0.0198365217107937;  // std dev = 3.237, 87.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=18 */
%   | | | else return 0.13430508910300934;  // std dev = 2.306, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.18290019234144356;  // std dev = 2.627, 39.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=19 */
%   | | | else return 0.06966465359290915;  // std dev = 4.198, 113.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=37 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09000429562948822;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(D, F), interaction(G, D) )
%   | | then if ( recursion_proteinclass(G, B), interaction(A, D) )
%   | | | then return 0.4481634177145141;  // std dev = 0.775, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.0328159137469175;  // std dev = 3.109, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | else if ( location(A, H), complex(D, I) )
%   | | | then return 0.017200785861403684;  // std dev = 4.233, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
%   | | | else return -0.038144739468348315;  // std dev = 2.537, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | else if ( complex(A, J), location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.14904746442724207;  // std dev = 1.385, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return -0.17567816907439143;  // std dev = 0.064, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.42146116282858;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10780730059339293;  // std dev = 1.926, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08675303909462245;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.4583614188325901;  // std dev = 0.833, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.07303758881341474;  // std dev = 1.350, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(G, E), complex(G, D) )
%   | | | then return -0.1688457582790792;  // std dev = 0.448, 46.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=1 */
%   | | | else return -0.015335513741294856;  // std dev = 2.222, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.34861519938618424;  // std dev = 1.537, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return -0.2252280433791931;  // std dev = 0.406, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.1623231602095532;  // std dev = 2.602, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | | else return 0.060905083981461564;  // std dev = 4.093, 104.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=37 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07775107655250217;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, D), complex(D, E) )
%   | | then if ( interaction(A, F), phenotype(A, G) )
%   | | | then return -0.058008450991372376;  // std dev = 1.839, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return 0.030123043638640837;  // std dev = 1.655, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( interaction(A, H), complex(D, I) )
%   | | | then return 0.0709557770310847;  // std dev = 2.931, 77.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=32 */
%   | | | else return 0.006251124705223064;  // std dev = 4.721, 162.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=48 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.06333619036385417;  // std dev = 1.004, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.23313571363699345;  // std dev = 0.988, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.06510526898196432;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B), complex(E, D) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.15296104261940918;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.25857293678700427;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return -0.2200396311856126;  // std dev = 1.500, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.031986502064300246;  // std dev = 3.055, 103.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=23 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( phenotype(G, I) )
%   | | | then return -0.0169697381058406;  // std dev = 2.513, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.11848344685332629;  // std dev = 1.137, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.22048589874350008;  // std dev = 1.369, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.0694112946734641;  // std dev = 4.065, 110.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=41 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '30.776', 'seconds']
Refined model CLL: -0.259022


******************************************
Best model found
******************************************
Results 

CLL : -0.253288 

AUC ROC : 0.977317 

AUC PR : 0.266457 

Precision : 0.269091 

Recall : 0.279245 

F1 : 0.274074 

Total Learning Time : 10.948 

Total Inference Time : 7.494728326797485 

Total revision time: 21.809526973724367
Best scored revision CLL: -0.259022


Results 

CLL : -0.253288 

AUC ROC : 0.977317 

AUC PR : 0.266457 

Precision : 0.269091 

Recall : 0.279245 

F1 : 0.274074 

Total Learning Time : 23.23996739959717 

Total Inference Time : 7.494728326797485 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.154
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16895974591032312;  // std dev = 7.963, 296.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1535534726381823;  // std dev = 7.926, 290.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17216932744065283;  // std dev = 7.685, 257.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09965371167513642;  // std dev = 7.951, 294.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09693293431185743;  // std dev = 7.866, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09012771323083021;  // std dev = 7.803, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07544115070921549;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.019412179785206193;  // std dev = 8.027, 307.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07518052953627463;  // std dev = 7.677, 256.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0500768066431497;  // std dev = 7.734, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.430', 'seconds']
Parameter learned model CLL:-0.375076 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.963, 204, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.926, 198, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.685, 165, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.951, 202, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.866, 189, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.803, 180, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.788, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.027, 215, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.677, 164, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.734, 171, 92]}]
{'': [0.0, 0.21420745069393812], 'false': [nan, 0.21420745069393812], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21659928656361446], 'false': [nan, 0.2165992865636148], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22982936910475488], 'false': [nan, 0.22982936910475488], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21500300800592284], 'false': [nan, 0.21500300800592204]}
{'': [nan, 0.2202099770772919], 'false': [nan, 0.22020997707729137]}
{'': [0.0, 0.22383217993079552], 'false': [nan, 0.22383217993079552], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2246364883401914], 'false': [nan, 0.2246364883401914], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.20986960073846941], 'false': [nan, 0.20986960073846916], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2302246093750012], 'false': [nan, 0.23022460937499933]}
{'': [0.0, 0.2274429296361093], 'false': [nan, 0.2274429296361093], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 5.812
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B), interaction(F, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.21370449065506653;  // std dev = 4.541, 90.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=32 */
%   | else if ( enzyme(A, G), interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15272257851036372;  // std dev = 5.177, 129.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.7352763917041137;  // std dev = 0.102, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( phenotype(E, D), interaction(A, F) )
%   | | | then return -0.07043559863184778;  // std dev = 1.338, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | | else return 0.11148372658702381;  // std dev = 3.673, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.8045461740271245;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1469968349689872;  // std dev = 5.918, 167.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.551460799019728;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.602536039238542;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, D), complex(A, F) )
%   | | | then return -0.16417611966835274;  // std dev = 0.133, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.1689823101779058;  // std dev = 4.372, 88.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=31 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H), interaction(I, A) )
%   | | | then return 0.5483350897932062;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6645906390947232;  // std dev = 0.123, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.05297818195405476;  // std dev = 2.938, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | | else return 0.14143710782732996;  // std dev = 4.621, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(E, A) )
%   | then return 0.4363213814516377;  // std dev = 0.050, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5608735386650837;  // std dev = 0.273, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( enzyme(F, G) )
%   | | then return -0.12707682558956335;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(F, F), location(F, H) )
%   | | | then return -0.14876852417760011;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.05822133700500846;  // std dev = 1.236, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), interaction(K, A) )
%   | | | then return -0.037222986648140645;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.19458026667333303;  // std dev = 3.359, 51.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.46672991292511323;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06886539001079917;  // std dev = 5.868, 175.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=48 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.3447145350592238;  // std dev = 0.047, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4571382905560699;  // std dev = 0.283, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12617065127933386;  // std dev = 0.032, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(G, F), interaction(G, G) )
%   | | | then return 0.22601674139022915;  // std dev = 1.696, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.003017726849849908;  // std dev = 2.651, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6823311632247607;  // std dev = 1.366, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.21405456910852408;  // std dev = 0.084, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.2022142619668432;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.06613824196681119;  // std dev = 4.633, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.0791063609648199;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.23568749551176413;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2718472058559715;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.34519119132080717;  // std dev = 0.208, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6812563399746889;  // std dev = 0.478, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.21007997119126534;  // std dev = 0.331, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -8.465110497604569E-4;  // std dev = 2.327, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.09942024715739851;  // std dev = 5.350, 149.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=51 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10987333981602748;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, A) )
%   | then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | | then return 0.20750821210789178;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, E) )
%   | | | then return -0.28992377950262266;  // std dev = 0.532, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12043288642919661;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.19864460155675184;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3404239488420762;  // std dev = 0.253, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.08896475824115545;  // std dev = 3.674, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
%   | | | else return 0.04375803445230673;  // std dev = 5.201, 169.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=53 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.26055724274097847;  // std dev = 0.290, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.604757811739096;  // std dev = 0.415, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.056599789966119286;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.21164761518447758;  // std dev = 0.195, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5940445448655225;  // std dev = 0.858, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.23848460421258857;  // std dev = 0.384, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.21611844371302927;  // std dev = 0.120, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.03286497534782848;  // std dev = 5.039, 149.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=46 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.13505302675546463;  // std dev = 0.031, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.21581783457070616;  // std dev = 0.181, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.18728115742759927;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5169309954072945;  // std dev = 0.674, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return -0.1860150013918824;  // std dev = 0.059, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( interaction(G, A) )
%   | | then if ( complex(G, H) )
%   | | | then return 0.08841656837755929;  // std dev = 2.417, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return -0.0016958831979163055;  // std dev = 3.079, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.04884135969442581;  // std dev = 2.260, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.24267085346313264;  // std dev = 1.459, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09206342733780272;  // std dev = 0.000612, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(G, A), complex(G, F) )
%   | | | then return -0.0361840163512511;  // std dev = 0.479, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return -0.10401624628717077;  // std dev = 1.325, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | else if ( complex(D, H), interaction(D, I) )
%   | | | then return 0.16185927451539525;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.008151793812752023;  // std dev = 0.833, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(A, K), interaction(L, J) )
%   | | | then return 0.1121189445165304;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.21350938837082117;  // std dev = 0.118, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 1.222810609883869E-4;  // std dev = 3.753, 137.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=40 */
%   | | | else return 0.05709171239600792;  // std dev = 3.616, 76.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.958', 'seconds']
Refined model CLL: -0.246832


******************************************
Best model found
******************************************
Results 

CLL : -0.244871 

AUC ROC : 0.970985 

AUC PR : 0.219901 

Precision : 0.247508 

Recall : 0.537906 

F1 : 0.339022 

Total Learning Time : 5.812 

Total Inference Time : 2.6058592796325684 

Total revision time: 11.355766931533815
Best scored revision CLL: -0.246832


Results 

CLL : -0.244871 

AUC ROC : 0.970985 

AUC PR : 0.219901 

Precision : 0.247508 

Recall : 0.537906 

F1 : 0.339022 

Total Learning Time : 12.786207357406617 

Total Inference Time : 2.6058592796325684 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.109
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18639320990867314;  // std dev = 7.601, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15243005830950312;  // std dev = 7.656, 270.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14375891891545955;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13413330317926714;  // std dev = 7.503, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08524045557145048;  // std dev = 7.649, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07565101664421336;  // std dev = 7.615, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06494038768355745;  // std dev = 7.594, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05854899340326396;  // std dev = 7.557, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04535450177456947;  // std dev = 7.565, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05522059328789908;  // std dev = 7.454, 243.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.611', 'seconds']
Parameter learned model CLL:-0.375733 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.601, 176, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.656, 184, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.579, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.503, 163, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.649, 183, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.615, 178, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.594, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.557, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.565, 171, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.454, 157, 86]}]
{'': [nan, 0.22049997086416934], 'false': [nan, 0.22049997086416934]}
{'': [0.0, 0.2170644718792878], 'false': [nan, 0.21706447187928773], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22179156542090964], 'false': [nan, 0.22179156542090964], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22609312753020241], 'false': [nan, 0.22609312753020225]}
{'': [0.0, 0.21749284835754013], 'false': [nan, 0.21749284835754065], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2196395775941226], 'false': [nan, 0.2196395775941226], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22093040325303584], 'false': [nan, 0.22093040325303584], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22308349609374922], 'false': [nan, 0.2230834960937489], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2226528789232236], 'false': [nan, 0.2226528789232226]}
{'': [0.0, 0.2286575555894251], 'false': [nan, 0.2286575555894251], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 5.679
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( complex(A, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.02481560176617899;  // std dev = 2.236, 36.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | | else return 0.19713198594696954;  // std dev = 5.142, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1254446385283914;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.733221056842097;  // std dev = 0.114, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13974666229051702;  // std dev = 0.064, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(E, A), enzyme(A, F) )
%   | | | then return 0.1115727023159921;  // std dev = 3.835, 83.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=23 */
%   | | | else return 0.18078063243278214;  // std dev = 5.276, 134.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=47 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.6735618455158383;  // std dev = 0.058, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5519691358236979;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then if ( interaction(A, G), interaction(F, G) )
%   | | | then return -0.07165040953015758;  // std dev = 0.795, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.172022180160055;  // std dev = 2.069, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( complex(A, H), enzyme(A, I) )
%   | | | then return 0.22294913104493064;  // std dev = 1.726, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.1205459053851878;  // std dev = 5.806, 173.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=55 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.48377274160590283;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.414998591720178;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5183515817414699;  // std dev = 0.024, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.44411814201562294;  // std dev = 0.939, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.1504139163525216;  // std dev = 2.344, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return -0.07858122100229942;  // std dev = 1.716, 42.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=4 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.5287575735162866;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.1079538122730025;  // std dev = 4.703, 112.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
%   | | | else return 0.1751566928914354;  // std dev = 2.618, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1032636130397675;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.30022888160667094;  // std dev = 0.578, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.53801430041336;  // std dev = 0.368, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.13366997024987115;  // std dev = 0.277, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.14271585648675505;  // std dev = 2.809, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( complex(A, H), interaction(I, A) )
%   | | | then return 0.08575838287305478;  // std dev = 0.657, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.028852340354775075;  // std dev = 1.859, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.17915402768987504;  // std dev = 1.514, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.05491471088143689;  // std dev = 5.125, 138.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=41 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10202522579584149;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.31101014583034464;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2782326542361138;  // std dev = 0.097, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.37627119906641543;  // std dev = 0.056, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.33690678299455773;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0037835500813534063;  // std dev = 3.246, 82.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=19 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.026156199218422802;  // std dev = 2.525, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.09849181641031761;  // std dev = 4.789, 112.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=39 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then if ( complex(E, F), interaction(E, A) )
%   | | | then return 0.21669554002141456;  // std dev = 0.059, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2630223300077293;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3172683896678523;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.1226703449287077;  // std dev = 0.919, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.009758927323145341;  // std dev = 1.405, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.06855261812350807;  // std dev = 4.880, 126.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=43 */
%   | | | else return 0.009746404989128888;  // std dev = 3.684, 83.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=22 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09305027263032184;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.2227869199095885;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.61845284193288;  // std dev = 0.474, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(D, E), enzyme(D, H) )
%   | | | then return 0.04830304906424765;  // std dev = 1.316, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.06792234117467248;  // std dev = 3.390, 84.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=17 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.524555839420083;  // std dev = 1.613, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | | else return -0.2707002759520719;  // std dev = 0.441, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.01624167718909678;  // std dev = 3.512, 82.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=26 */
%   | | | else return 0.08964367552552226;  // std dev = 1.723, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then return -0.0016797926957761967;  // std dev = 0.293, 87.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=27 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( complex(F, G), phenotype(E, H) )
%   | | then if ( interaction(E, F), enzyme(A, I) )
%   | | | then return 0.021059149470389074;  // std dev = 1.238, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.15765059480618923;  // std dev = 2.367, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | else if ( recursion_proteinclass(F, B) )
%   | | | then return 0.4258806724738008;  // std dev = 0.785, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.08160137700275397;  // std dev = 2.753, 57.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.6316491559050817;  // std dev = 0.480, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.22661631687507916;  // std dev = 0.073, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, M), location(A, N) )
%   | | | then return 0.10791257216005466;  // std dev = 2.108, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.05249487397333432;  // std dev = 1.460, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.17039522190882567;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12317300433614672;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, D), interaction(G, F) )
%   | | | then return 0.2770226662945446;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17844743894176593;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( complex(H, J) )
%   | | | then return 0.002555312649461604;  // std dev = 3.375, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
%   | | | else return -0.05208131185592833;  // std dev = 3.204, 100.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=22 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.003742069284334445;  // std dev = 3.010, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | | | else return 0.17985077610625483;  // std dev = 1.873, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.158', 'seconds']
Refined model CLL: -0.260127


******************************************
Best model found
******************************************
Results 

CLL : -0.278324 

AUC ROC : 0.916875 

AUC PR : 0.149172 

Precision : 0.212425 

Recall : 0.374558 

F1 : 0.2711 

Total Learning Time : 5.679 

Total Inference Time : 2.7662112712860107 

Total revision time: 11.175621879577637
Best scored revision CLL: -0.260127


Results 

CLL : -0.278324 

AUC ROC : 0.916875 

AUC PR : 0.149172 

Precision : 0.212425 

Recall : 0.374558 

F1 : 0.2711 

Total Learning Time : 12.60606230545044 

Total Inference Time : 2.7662112712860107 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.119
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15206785401843098;  // std dev = 7.838, 296.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17322676277424262;  // std dev = 7.608, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16887356862488898;  // std dev = 7.490, 245.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13621242212567697;  // std dev = 7.523, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10425268282234655;  // std dev = 7.571, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08355854399564312;  // std dev = 7.578, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03166265275290726;  // std dev = 7.780, 286.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.043366663120303274;  // std dev = 7.679, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.024168520787071185;  // std dev = 7.738, 279.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.015873491508370186;  // std dev = 7.756, 282.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.590', 'seconds']
Parameter learned model CLL:-0.355552 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.838, 209, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.608, 173, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.49, 158, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.523, 162, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.571, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.578, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.78, 199, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.679, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.738, 192, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.756, 195, 87]}]
{'': [nan, 0.20753058802045385], 'false': [nan, 0.20753058802045385]}
{'': [nan, 0.2226479289940817], 'false': [nan, 0.222647928994081]}
{'': [0.0, 0.2290045814244059], 'false': [nan, 0.2290045814244059], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22731891421106037], 'false': [nan, 0.2273189142110597], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22477508650519082], 'false': [nan, 0.22477508650519065], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22434997558593672], 'false': [nan, 0.22434997558593672], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2116607169054717], 'false': [nan, 0.2116607169054717], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21839506172839476], 'false': [nan, 0.21839506172839337], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21459128222915946], 'false': [nan, 0.21459128222915827], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21333182435491224], 'false': [nan, 0.21333182435491224], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 11.032
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, A) )
%   | | then return 0.06648226843284567;  // std dev = 0.406, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( complex(A, D) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( complex(A, E), interaction(A, F) )
%   | then return 0.12644161802634163;  // std dev = 0.443, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( complex(G, I), complex(H, J) )
%   | | | then return 0.2649285961164604;  // std dev = 3.773, 59.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=24 */
%   | | | else return 0.14661047356104961;  // std dev = 4.620, 104.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=30 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( enzyme(C, E), interaction(C, F) )
%   | then return 0.0741817188958805;  // std dev = 0.407, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( interaction(G, A), interaction(G, C) )
%   | | then return 0.3419769273734403;  // std dev = 1.005, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.05419239799487236;  // std dev = 1.246, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.17697465505346666;  // std dev = 2.137, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   else if ( complex(A, J) )
%   | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | then return 0.784921109030424;  // std dev = 0.185, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else return -0.17895181170776486;  // std dev = 0.224, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( interaction(A, L), complex(L, M) )
%   | | then return 0.5340358277272511;  // std dev = 0.443, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.2346906246339527;  // std dev = 4.426, 82.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=33 */
%   | | | else return 0.05435621230256806;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6011062271776738;  // std dev = 0.813, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.13654681243849462;  // std dev = 0.045, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.6766237667990962;  // std dev = 0.090, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.0028269840869464945;  // std dev = 2.960, 54.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.7550453014734559;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.07938736103198592;  // std dev = 2.820, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.17669468873647923;  // std dev = 5.079, 114.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=44 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.2759029194476952;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.6291263469694458;  // std dev = 0.607, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.35014704996154977;  // std dev = 0.704, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.1888097410864413;  // std dev = 0.277, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0.009786916452439816;  // std dev = 2.308, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | else if ( complex(A, G), phenotype(A, H) )
%   | | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.6518681809527317;  // std dev = 0.248, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.15501554392524905;  // std dev = 0.028, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.09815454893334524;  // std dev = 3.377, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | | else return 0.1841024960184188;  // std dev = 3.898, 65.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=27 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10829810157526486;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then if ( complex(D, F), interaction(E, A) )
%   | | | then return 0.26634203856989097;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3809033917286092;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.583912150642961;  // std dev = 0.194, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.33284921126798933;  // std dev = 0.814, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 6.74751919108024E-5;  // std dev = 3.639, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | | else if ( interaction(A, I), phenotype(A, J) )
%   | | | then return 0.21356427623978896;  // std dev = 1.552, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.05430014651890484;  // std dev = 5.068, 146.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=44 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10926953583843706;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), phenotype(A, E) )
%   | | then return 0.06463781598597554;  // std dev = 0.787, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(D, F) )
%   | | | then return 0.31273842147081965;  // std dev = 0.067, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.45789427249578046;  // std dev = 0.207, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13212335573256423;  // std dev = 0.103, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( phenotype(A, G), interaction(A, H) )
%   | | | then return 0.02452115606130064;  // std dev = 3.030, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | else return 0.0971186910485973;  // std dev = 5.495, 157.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=58 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.1568792554952321;  // std dev = 0.529, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.5247144342845835;  // std dev = 0.280, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.1637160352722605;  // std dev = 0.286, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.05990949349986831;  // std dev = 4.479, 118.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=41 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.2500134760021331;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.09319630047568107;  // std dev = 1.980, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.1328015963194719;  // std dev = 1.835, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.026322413407120555;  // std dev = 3.169, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10223881849185568;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.19761226607916194;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.4038329818297151;  // std dev = 0.215, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1164743984089425;  // std dev = 0.320, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.02410236350940322;  // std dev = 1.954, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.10972504290208078;  // std dev = 2.521, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.03732088904958669;  // std dev = 5.276, 159.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=53 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11195806778792185;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( phenotype(D, F), phenotype(A, F) )
%   | | | then return 0.08635447117406514;  // std dev = 0.817, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.40977683730784065;  // std dev = 0.638, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.13985049521655377;  // std dev = 0.385, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0.006683218074391057;  // std dev = 5.585, 182.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then return -0.17215430077617885;  // std dev = 0.271, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.10269114745261616;  // std dev = 1.678, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.03082973634298219;  // std dev = 1.534, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.06785362873984939;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.15454248103956233;  // std dev = 0.126, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.04021536408074569;  // std dev = 2.202, 66.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=15 */
%   | | else if ( interaction(F, D), interaction(D, F) )
%   | | | then return 0.07684477627296843;  // std dev = 4.492, 113.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=43 */
%   | | | else return -0.01577496601698417;  // std dev = 3.076, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then return 0.11257534716926472;  // std dev = 0.957, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.6428089638323123;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.182', 'seconds']
Refined model CLL: -0.300257


******************************************
Best model found
******************************************
Results 

CLL : -0.315168 

AUC ROC : 0.848127 

AUC PR : 0.221953 

Precision : 0.192893 

Recall : 0.404255 

F1 : 0.261168 

Total Learning Time : 11.032 

Total Inference Time : 5.192248106002808 

Total revision time: 19.270964599609375
Best scored revision CLL: -0.300257


Results 

CLL : -0.315168 

AUC ROC : 0.848127 

AUC PR : 0.221953 

Precision : 0.192893 

Recall : 0.404255 

F1 : 0.261168 

Total Learning Time : 19.371455169677734 

Total Inference Time : 5.192248106002808 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.427
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1801303592481196;  // std dev = 8.397, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16182117604853272;  // std dev = 8.366, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13930972084738794;  // std dev = 8.359, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10412330498341045;  // std dev = 8.439, 330.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10659844975904051;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.055852799355483644;  // std dev = 8.507, 342.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10355960439455697;  // std dev = 8.143, 287.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05631833326642595;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05034535588032859;  // std dev = 8.279, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04324469457793115;  // std dev = 8.257, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.560', 'seconds']
Parameter learned model CLL:-0.374398 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.397, 219, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.366, 214, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.359, 213, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.439, 226, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.313, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.507, 238, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.143, 183, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.313, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.279, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.257, 198, 104]}]
{'': [0.0, 0.2183093866518424], 'false': [nan, 0.2183093866518424], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22008623076618863], 'false': [nan, 0.22008623076619027], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22044203843206764], 'false': [nan, 0.22044203843206764], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2158310376492201], 'false': [nan, 0.21583103764921704], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22293444328824064], 'false': [nan, 0.2229344432882432], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21162066960774142], 'false': [nan, 0.21162066960774142], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23105780087168734], 'false': [nan, 0.23105780087168734], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2229344432882409], 'false': [nan, 0.22293444328824122], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22471378661650104], 'false': [nan, 0.22471378661650196], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22577957107144445], 'false': [nan, 0.22577957107144445], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 10.458
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( recursion_proteinclass(D, B), complex(D, F) )
%   | | then if ( interaction(A, G), interaction(D, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, A), phenotype(A, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.12992593858383394;  // std dev = 7.537, 287.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=78 */
%   | else if ( enzyme(A, H), complex(A, I) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1604745164948612;  // std dev = 3.012, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(D, F), enzyme(D, G) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.06345304092410238;  // std dev = 2.343, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.12587243912789176;  // std dev = 2.914, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | else if ( location(A, I), location(D, I) )
%   | | | then return 0.1958975682560182;  // std dev = 5.739, 148.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=53 */
%   | | | else return 0.12158569521454059;  // std dev = 3.175, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | | then return 0.8022711608879138;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.19270038216191582;  // std dev = 0.092, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.22015464620979355;  // std dev = 2.036, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.6074260931721743;  // std dev = 1.236, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(D, E), complex(A, F) )
%   | | then if ( complex(D, F), recursion_proteinclass(D, B) )
%   | | | then return 0.6782963478095707;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.015528107610509725;  // std dev = 1.998, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else if ( interaction(A, D), complex(D, G) )
%   | | | then return 0.5685039546602657;  // std dev = 0.872, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2201675034755808;  // std dev = 2.766, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8136913625804387;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.11397845765117857;  // std dev = 6.296, 191.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=57 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.02475359914976064;  // std dev = 2.114, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.17159033695803091;  // std dev = 2.153, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B), location(A, F) )
%   | | then if ( location(E, F), location(D, F) )
%   | | | then return 0.7362362893733697;  // std dev = 0.547, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return 0.05335325901310582;  // std dev = 1.117, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.2037513744761342;  // std dev = 0.223, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -3.8053974406448195E-4;  // std dev = 3.554, 78.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=17 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( phenotype(A, I), interaction(J, G) )
%   | | | then return 0.21816743581527687;  // std dev = 3.734, 57.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=24 */
%   | | | else return 0.13102328101231478;  // std dev = 3.599, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.0056528088811799715;  // std dev = 0.688, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.0911869336818527;  // std dev = 2.264, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E), phenotype(D, F) )
%   | | | then return 0.3056123132780525;  // std dev = 0.664, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.6308715518361768;  // std dev = 0.951, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else if ( complex(A, G), complex(E, G) )
%   | | | then return -0.18898405422006795;  // std dev = 0.888, 44.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
%   | | | else return 0.07481975422863128;  // std dev = 6.104, 186.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=57 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6965418645745101;  // std dev = 0.154, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2522057672235582;  // std dev = 0.160, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return -0.16277960978013517;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.022711112692074424;  // std dev = 1.761, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( enzyme(E, G), complex(E, H) )
%   | | | then return -0.23378557734500818;  // std dev = 0.625, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3403656306533568;  // std dev = 0.773, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(D, I), interaction(I, A) )
%   | | | then return 0.5586923677405994;  // std dev = 0.130, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.612213279769743;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), interaction(K, J) )
%   | | | then return 0.49093578667741655;  // std dev = 0.314, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.07995297110516147;  // std dev = 1.031, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return -0.01779210960515301;  // std dev = 3.450, 97.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=22 */
%   | | | else return 0.046159646843780766;  // std dev = 6.027, 196.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=58 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), interaction(A, D) )
%   | | then return 0.14227222426489528;  // std dev = 0.445, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(D, F), interaction(A, G) )
%   | | | then return 0.5181075939675168;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4148407435163661;  // std dev = 0.166, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), complex(H, J) )
%   | | | then return 0.3233012537285095;  // std dev = 0.187, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5816859159173846;  // std dev = 0.141, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.009157939117772811;  // std dev = 6.631, 271.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=71 */
%   | | | else return 0.20029797466144453;  // std dev = 1.966, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.24647124484492994;  // std dev = 0.118, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.03356073308011661;  // std dev = 0.479, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), location(G, H) )
%   | | | then return 0.3910755074040452;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.341927800492617;  // std dev = 0.104, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then if ( complex(A, I) )
%   | | | then return -0.12688897802974605;  // std dev = 0.143, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.1975092520222181;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return 0.020661865342021756;  // std dev = 3.935, 122.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=38 */
%   | | | else return 0.06550137169082774;  // std dev = 5.655, 149.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=49 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.32318328396739576;  // std dev = 0.656, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.5828338499868859;  // std dev = 0.721, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( interaction(G, A), interaction(A, H) )
%   | | | then return -0.17185881933715183;  // std dev = 0.293, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return -0.2755779902704676;  // std dev = 0.324, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.24280571941261808;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.05243265319167471;  // std dev = 1.834, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.19095128786744214;  // std dev = 2.299, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.060368887711861136;  // std dev = 4.984, 120.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=42 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( recursion_proteinclass(E, B), complex(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.1408477511163846;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.197255347600944;  // std dev = 0.149, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, G), enzyme(E, H) )
%   | | | then return -0.11199454348847968;  // std dev = 1.729, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return -0.01194803815456505;  // std dev = 2.880, 78.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=21 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return 0.020659913841003432;  // std dev = 4.924, 149.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=51 */
%   | | | else return 0.18189188763732272;  // std dev = 2.412, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( location(A, L) )
%   | | | then return 0.24368832740690616;  // std dev = 0.929, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.12189277164814491;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.808', 'seconds']
Refined model CLL: -0.288419


******************************************
Best model found
******************************************
Results 

CLL : -0.308356 

AUC ROC : 0.889902 

AUC PR : 0.250947 

Precision : 0.357143 

Recall : 0.377358 

F1 : 0.366972 

Total Learning Time : 10.458 

Total Inference Time : 5.602204322814941 

Total revision time: 19.663291463851927
Best scored revision CLL: -0.288419


Results 

CLL : -0.308356 

AUC ROC : 0.889902 

AUC PR : 0.250947 

Precision : 0.357143 

Recall : 0.377358 

F1 : 0.366972 

Total Learning Time : 19.763782033920286 

Total Inference Time : 5.602204322814941 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.045
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1963842292171595;  // std dev = 7.803, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709242085851956;  // std dev = 7.765, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1269165266455711;  // std dev = 7.906, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13425365309253773;  // std dev = 7.742, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0944340164854239;  // std dev = 7.839, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0710128088955607;  // std dev = 7.873, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07690482615677272;  // std dev = 7.758, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08662103279980807;  // std dev = 7.607, 248.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.023943492074655157;  // std dev = 7.873, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02237767357795591;  // std dev = 7.853, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.305', 'seconds']
Parameter learned model CLL:-0.37772 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.803, 180, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.765, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.906, 195, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.742, 172, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.839, 185, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.873, 190, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.758, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.607, 156, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.873, 190, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.853, 187, 92]}]
{'': [nan, 0.2238321799307967], 'false': [nan, 0.2238321799307967]}
{'': [0.0, 0.2258412938882588], 'false': [nan, 0.22584129388825952], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21780038606757346], 'false': [nan, 0.21780038606757346]}
{'': [nan, 0.22704315886133963], 'false': [nan, 0.22704315886133933]}
{'': [0.0, 0.221819650979421], 'false': [nan, 0.22181965097942127], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21980785674764713], 'false': [nan, 0.21980785674764713]}
{'': [0.0, 0.22624229747300673], 'false': [nan, 0.22624229747300673], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23335067637877238], 'false': [nan, 0.2333506763787725], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2198078567476497], 'false': [nan, 0.21980785674764736], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22101463239167124], 'false': [nan, 0.22101463239167124]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 5.882
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.09148226843284571;  // std dev = 3.276, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.1795775065280838;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.26910783920910136;  // std dev = 4.204, 73.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=30 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(A, E), interaction(D, D) )
%   | | | then return -0.0730866890478544;  // std dev = 0.942, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.11577506033910381;  // std dev = 4.119, 89.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=25 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.4888034771530158;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2364314879760863;  // std dev = 2.086, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.08592206428852849;  // std dev = 1.729, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.16441048133167782;  // std dev = 4.980, 127.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=44 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), interaction(E, E) )
%   | then return 0.08010076277062024;  // std dev = 0.419, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | else if ( interaction(F, C), complex(F, G) )
%   | | then return 0.13494792429431013;  // std dev = 0.423, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.43266209393133803;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.17401030675680432;  // std dev = 2.003, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.6555600945860259;  // std dev = 0.204, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.719881741044348;  // std dev = 0.405, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.17867286009510236;  // std dev = 0.108, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( enzyme(A, M), interaction(N, A) )
%   | | | then return 0.021192792722392228;  // std dev = 1.697, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.17078491178580682;  // std dev = 3.843, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.46443799633031335;  // std dev = 0.142, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6656349637283574;  // std dev = 0.083, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.16385138569645963;  // std dev = 0.095, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5654717362289768;  // std dev = 0.250, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1622361922443356;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( enzyme(A, G), complex(A, H) )
%   | | then if ( enzyme(I, G), interaction(I, A) )
%   | | | then return -0.2238360986749915;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.05772679374329454;  // std dev = 2.910, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.20884129484875052;  // std dev = 1.502, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.07177535702041235;  // std dev = 5.634, 174.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=51 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.182317607443504;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.36561538164901614;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6398288456466046;  // std dev = 0.529, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.22999326938635953;  // std dev = 0.087, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.1563269447544148;  // std dev = 0.348, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(J, K) )
%   | | | then return 0.361079540279015;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.536683200900046;  // std dev = 0.167, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(L, A), complex(A, M) )
%   | | | then return 0.03242437926401149;  // std dev = 3.047, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | | | else return 0.10129927991520768;  // std dev = 5.050, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( complex(C, D), enzyme(C, E) )
%   | then if ( enzyme(A, E) )
%   | | then if ( complex(A, D) )
%   | | | then return 0.03546020061209886;  // std dev = 0.819, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.09246234490352724;  // std dev = 0.968, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.17066176685904252;  // std dev = 0.839, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.004352815336378889;  // std dev = 0.336, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.37670990193795706;  // std dev = 0.122, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, G), phenotype(A, H) )
%   | | then if ( interaction(I, A), interaction(G, J) )
%   | | | then return -0.001996035266172288;  // std dev = 1.129, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.26827479079298305;  // std dev = 1.655, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return -0.023650548575002414;  // std dev = 2.091, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | | else return 0.060568239613121765;  // std dev = 4.784, 147.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=48 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12556348027621056;  // std dev = 0.033, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2976378396220583;  // std dev = 0.149, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(D, F), enzyme(D, G) )
%   | | | then return 0.13001013887715696;  // std dev = 1.122, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.07469461849549532;  // std dev = 1.847, 45.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.2753561007869308;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4159974076669798;  // std dev = 0.186, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.009834731093192208;  // std dev = 3.667, 104.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=29 */
%   | | | else return 0.06067779246346987;  // std dev = 4.702, 126.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( location(D, E), location(A, E) )
%   | | then if ( enzyme(D, F) )
%   | | | then return -0.025750602803920764;  // std dev = 1.336, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.14329597267503985;  // std dev = 1.070, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( enzyme(A, G), interaction(A, D) )
%   | | | then return 0.050838214757476484;  // std dev = 0.329, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06179321436317745;  // std dev = 1.409, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( enzyme(H, I) )
%   | | | then return 0.09673583092020395;  // std dev = 1.465, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.03675414366990761;  // std dev = 2.517, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | else if ( interaction(J, A), interaction(A, K) )
%   | | | then return 0.10928708747952978;  // std dev = 2.269, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | | else return 0.04261884241303569;  // std dev = 4.711, 140.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1624137091154117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.20462550846807606;  // std dev = 0.083, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(D, F) )
%   | | | then return 0.24904681215355234;  // std dev = 0.157, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.40387165221657256;  // std dev = 0.144, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.30903521238279547;  // std dev = 0.157, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(H, A), enzyme(A, I) )
%   | | | then return 0.06801686135222616;  // std dev = 3.011, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   | | | else return -1.2579727567424765E-4;  // std dev = 5.446, 180.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=49 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then return -0.0795835748643826;  // std dev = 0.227, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | else if ( complex(C, F) )
%   | | then if ( location(A, G), location(C, G) )
%   | | | then return 0.022832261040587627;  // std dev = 1.573, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.1403611409839726;  // std dev = 0.912, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.047543678385284345;  // std dev = 0.185, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.22987623565873824;  // std dev = 0.059, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.07796864188218171;  // std dev = 1.598, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.23817022894797177;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.0013951773600478876;  // std dev = 2.856, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.0462447441991987;  // std dev = 4.540, 120.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=40 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.291', 'seconds']
Refined model CLL: -0.273249


******************************************
Best model found
******************************************
Results 

CLL : -0.258656 

AUC ROC : 0.949234 

AUC PR : 0.167388 

Precision : 0.206349 

Recall : 0.375451 

F1 : 0.266325 

Total Learning Time : 5.882 

Total Inference Time : 2.67264461517334 

Total revision time: 11.37649746131897
Best scored revision CLL: -0.273249


Results 

CLL : -0.258656 

AUC ROC : 0.949234 

AUC PR : 0.167388 

Precision : 0.206349 

Recall : 0.375451 

F1 : 0.266325 

Total Learning Time : 11.476988031387329 

Total Inference Time : 2.67264461517334 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.16
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1967316122648672;  // std dev = 7.542, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15823226758070205;  // std dev = 7.615, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14915426087908062;  // std dev = 7.534, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11718742294269195;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0904705545053996;  // std dev = 7.615, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08530202141142124;  // std dev = 7.550, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05862886098868193;  // std dev = 7.608, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06259548915305832;  // std dev = 7.519, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.024517036819974816;  // std dev = 7.662, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.010314965636359153;  // std dev = 7.713, 279.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.411', 'seconds']
Parameter learned model CLL:-0.361442 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.542, 168, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.615, 178, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.534, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.579, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.615, 178, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.55, 169, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.608, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.519, 165, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.662, 185, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.713, 193, 86]}]
{'': [0.0, 0.22394444788889634], 'false': [nan, 0.22394444788889634], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21963957759412175], 'false': [nan, 0.21963957759412217]}
{'': [0.0, 0.22437469730819273], 'false': [nan, 0.22437469730819273], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22179156542090958], 'false': [nan, 0.2217915654209098]}
{'': [0.0, 0.2196395775941238], 'false': [nan, 0.2196395775941235], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22351403306420625], 'false': [nan, 0.22351403306420625], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.220069684396188], 'false': [nan, 0.220069684396188]}
{'': [nan, 0.22523452008698316], 'false': [nan, 0.22523452008698283]}
{'': [0.0, 0.21663648370801047], 'false': [nan, 0.21663648370801028], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21322953199470812], 'false': [nan, 0.21322953199470812], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 5.809
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.19148226843284571;  // std dev = 4.082, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8146706742299468;  // std dev = 0.978, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.113962888587884;  // std dev = 4.046, 86.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=22 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7582323646124244;  // std dev = 0.183, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, A) )
%   | then return -0.13760636506958557;  // std dev = 0.078, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then return 0.7395305985557081;  // std dev = 0.103, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.05081933233742871;  // std dev = 3.057, 56.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | | | else return 0.19453579792060208;  // std dev = 5.460, 141.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5657270032768135;  // std dev = 0.147, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return -0.05561225354453257;  // std dev = 1.593, 40.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=4 */
%   | | | else return 0.08763188183175291;  // std dev = 4.630, 116.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=32 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.4363938982140711;  // std dev = 1.249, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.14978859625483837;  // std dev = 4.044, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7108712123195862;  // std dev = 0.113, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.18721460294481107;  // std dev = 0.208, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.333270180296298;  // std dev = 0.734, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.7044288662282305;  // std dev = 0.514, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.18224683823612742;  // std dev = 0.344, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.5112773752430635;  // std dev = 0.782, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.03263264348395772;  // std dev = 3.370, 77.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=19 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.0691445672682102;  // std dev = 1.684, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.23089001072408172;  // std dev = 1.994, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12652454779199968;  // std dev = 0.000388, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.32775086911767415;  // std dev = 0.103, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5373176816951417;  // std dev = 0.263, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then if ( enzyme(A, G), interaction(A, H) )
%   | | | then return 0.07890045028992813;  // std dev = 0.771, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.07164615291468483;  // std dev = 1.706, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | else if ( interaction(I, A), interaction(A, J) )
%   | | | then return 0.08357647979547857;  // std dev = 3.137, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   | | | else return 0.03990939007895223;  // std dev = 4.658, 147.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=40 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.0997681705282462;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E) )
%   | | then return 0.013325335780836093;  // std dev = 0.692, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.26763845337213815;  // std dev = 0.064, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.4160348436921453;  // std dev = 0.252, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return -0.04248103253811882;  // std dev = 0.702, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3926682340801622;  // std dev = 0.206, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.05714398485977007;  // std dev = 1.310, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return 0.04776199595637736;  // std dev = 5.599, 211.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=60 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.26314421520771375;  // std dev = 0.084, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.4153460369285236;  // std dev = 0.280, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5428752838938296;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.11870215903021078;  // std dev = 0.205, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.03354229718634665;  // std dev = 4.012, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5499315439312172;  // std dev = 0.517, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.16514534351999252;  // std dev = 0.089, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.4016441403882238;  // std dev = 0.747, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.07583981880266484;  // std dev = 3.184, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(E, C), interaction(D, F) )
%   | then return 0.025109300132041153;  // std dev = 0.287, 91.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=30 */
%   | else return -0.08428632053480596;  // std dev = 0.314, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( interaction(H, A), complex(A, I) )
%   | | then return 0.2412497291651393;  // std dev = 0.838, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, H), location(G, K) )
%   | | | then return -0.02265672729016031;  // std dev = 2.636, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return 0.10597588947942224;  // std dev = 1.444, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( enzyme(A, L) )
%   | | then if ( enzyme(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.4492004176695104;  // std dev = 0.915, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.1686611701769567;  // std dev = 0.157, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return 0.2324679510315213;  // std dev = 1.086, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.13883227956104574;  // std dev = 2.479, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10480226396281227;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.17166482061267666;  // std dev = 0.050, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.2700624658795876;  // std dev = 0.195, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then if ( recursion_proteinclass(G, B), phenotype(F, H) )
%   | | | then return 0.3771129245300225;  // std dev = 0.528, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.03379891598855271;  // std dev = 3.453, 123.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=26 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.1387429760790585;  // std dev = 1.858, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.04783260481221999;  // std dev = 3.545, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.14865041903557;  // std dev = 0.044, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2506809880032394;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(E, F), phenotype(A, F) )
%   | | | then return -0.09412570797461287;  // std dev = 1.390, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | | else return 0.013368379271196884;  // std dev = 2.776, 80.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=21 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.39744171117199284;  // std dev = 0.932, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.18858239004844998;  // std dev = 0.161, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.17354406115032037;  // std dev = 1.511, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.07338356928304433;  // std dev = 3.344, 67.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=27 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.021', 'seconds']
Refined model CLL: -0.243966


******************************************
Best model found
******************************************
Results 

CLL : -0.244526 

AUC ROC : 0.958561 

AUC PR : 0.235473 

Precision : 0.248311 

Recall : 0.519435 

F1 : 0.336 

Total Learning Time : 5.809 

Total Inference Time : 2.4376485347747803 

Total revision time: 11.035355228424073
Best scored revision CLL: -0.243966


Results 

CLL : -0.244526 

AUC ROC : 0.958561 

AUC PR : 0.235473 

Precision : 0.248311 

Recall : 0.519435 

F1 : 0.336 

Total Learning Time : 11.135845798492433 

Total Inference Time : 2.4376485347747803 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.132
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19021000380180236;  // std dev = 7.623, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17455869870550295;  // std dev = 7.571, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11297826201512697;  // std dev = 7.774, 285.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14321484527286105;  // std dev = 7.499, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10461857373586338;  // std dev = 7.578, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07006336137056453;  // std dev = 7.665, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06524754111318509;  // std dev = 7.616, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), function(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06143927168164369;  // std dev = 7.563, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.01705332531382646;  // std dev = 7.744, 280.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.020307610941506245;  // std dev = 7.706, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.474', 'seconds']
Parameter learned model CLL:-0.363231 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.623, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.571, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.774, 198, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.499, 159, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.578, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.665, 181, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.616, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), function(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.563, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.744, 193, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.706, 187, 87]}]
{'': [0.0, 0.22179651535458392], 'false': [nan, 0.22179651535458392], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22477508650519162], 'false': [nan, 0.22477508650519182], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21207756232686917], 'false': [nan, 0.21207756232686917]}
{'': [0.0, 0.22858417608566334], 'false': [nan, 0.22858417608566423], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22434997558593672], 'false': [nan, 0.2243499755859375], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.219244263755847], 'false': [nan, 0.219244263755847]}
{'': [2.3129646346357427e-18, 0.22222222222222224], 'false': [nan, 0.22222222222222224], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [nan, 0.22519995039990107], 'false': [nan, 0.2251999503999013]}
{'': [0.0, 0.21417091836734772], 'false': [nan, 0.21417091836734736], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21670041025094566], 'false': [nan, 0.21670041025094566], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 11.594
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0.19148226843284694;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( location(A, I) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), location(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.838432986858;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.03814476159058732;  // std dev = 1.468, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return 0.0920307513893224;  // std dev = 2.076, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.10863227455594537;  // std dev = 4.226, 90.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=25 */
%   | | | else return 0.2109426320145286;  // std dev = 4.954, 108.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( enzyme(A, E), enzyme(C, E) )
%   | then return 0.045540534366085905;  // std dev = 0.326, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.5658674961358758;  // std dev = 0.309, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else return 0.04638311862018621;  // std dev = 0.398, 90.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=20 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.7745432162240687;  // std dev = 0.087, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, H), location(A, I) )
%   | | | then return 0.24019395002478483;  // std dev = 4.258, 74.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=32 */
%   | | | else return 0.035179209895494314;  // std dev = 2.158, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | else if ( phenotype(A, J) )
%   | | then return 0.01755739189181708;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.051798811497026226;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.13943579263718167;  // std dev = 1.159, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13858389894382625;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), enzyme(G, D) )
%   | | | then return 0.6691039228337947;  // std dev = 0.207, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.77654832534885;  // std dev = 0.114, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.12883390757597984;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.19480850200365601;  // std dev = 0.128, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J), phenotype(I, K) )
%   | | | then return 0.5611175153119873;  // std dev = 0.381, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.013193251943637482;  // std dev = 1.254, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.01587069418976838;  // std dev = 2.854, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | | else return 0.11140659146317163;  // std dev = 5.442, 145.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=49 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10344714116705862;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.5346896571727304;  // std dev = 0.220, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.40403886329352284;  // std dev = 0.234, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.25830968507858926;  // std dev = 0.803, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.10096801849170052;  // std dev = 2.482, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return 0.02025109119572623;  // std dev = 4.196, 98.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=26 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.0951673934627346;  // std dev = 4.025, 79.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=27 */
%   | | | else return 0.18651763869030186;  // std dev = 1.886, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.40680686986760506;  // std dev = 0.132, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.6346152363231496;  // std dev = 0.111, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.1917147529755759;  // std dev = 0.041, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( location(A, H), interaction(G, A) )
%   | | then return 0.31836126488169464;  // std dev = 0.142, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5554116410936353;  // std dev = 0.201, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then if ( phenotype(J, K) )
%   | | | then return -0.08205342084729994;  // std dev = 1.028, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.05882070452499476;  // std dev = 1.441, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.11182441509807257;  // std dev = 3.926, 78.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=29 */
%   | | | else return 0.012748172965973014;  // std dev = 3.862, 79.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09441787614819294;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.25031526153868505;  // std dev = 0.121, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4638605702261045;  // std dev = 0.149, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.12110084026499916;  // std dev = 1.371, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | | else return 0.06145069990104318;  // std dev = 1.627, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( interaction(H, A), enzyme(A, I) )
%   | | then if ( complex(A, J), complex(H, K) )
%   | | | then return 5.736235640018406E-4;  // std dev = 1.668, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.12101542553283261;  // std dev = 2.835, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.19457544597087248;  // std dev = 0.891, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.018400967735321887;  // std dev = 4.982, 145.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( phenotype(A, D) )
%   | then return 0.04682389619809028;  // std dev = 0.229, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.1991091996281912;  // std dev = 0.394, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else return -0.1895110930863788;  // std dev = 0.024, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( phenotype(A, F), complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.469802714888119;  // std dev = 0.136, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.17657322744213436;  // std dev = 0.034, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( interaction(I, I) )
%   | | | then return 0.02111286933192713;  // std dev = 0.875, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.008914340622402286;  // std dev = 1.052, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.2312111117149753;  // std dev = 1.996, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.0950014997511875;  // std dev = 4.737, 101.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=38 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(E, F), phenotype(A, F) )
%   | | | then return 0.37817801201096835;  // std dev = 1.646, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | | else return 0.1917934659321359;  // std dev = 4.121, 82.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=41 */
%   | | else if ( phenotype(A, G), complex(A, H) )
%   | | | then return -0.1514087626824086;  // std dev = 0.116, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.27488157937267316;  // std dev = 0.803, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( interaction(A, A) )
%   | | then return -0.0251137776674214;  // std dev = 0.264, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.45602107911335965;  // std dev = 0.769, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.3061122453491149;  // std dev = 0.486, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.5737311925807911;  // std dev = 0.553, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( location(H, E), recursion_proteinclass(H, B) )
%   | | | then return -0.28808759412491725;  // std dev = 0.395, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.17892755288226916;  // std dev = 0.455, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.25655224986120795;  // std dev = 0.429, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.013774340284671832;  // std dev = 4.004, 119.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.023924164097824645;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.30889844256582705;  // std dev = 0.953, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.684', 'seconds']
Refined model CLL: -0.241793


******************************************
Best model found
******************************************
Results 

CLL : -0.252885 

AUC ROC : 0.967607 

AUC PR : 0.316623 

Precision : 0.300388 

Recall : 0.549645 

F1 : 0.388471 

Total Learning Time : 11.594 

Total Inference Time : 7.115094900131226 

Total revision time: 21.532938886642455
Best scored revision CLL: -0.241793


Results 

CLL : -0.252885 

AUC ROC : 0.967607 

AUC PR : 0.316623 

Precision : 0.300388 

Recall : 0.549645 

F1 : 0.388471 

Total Learning Time : 21.591569829940795 

Total Inference Time : 7.115094900131226 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.255
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20714222369011692;  // std dev = 8.228, 298.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17200139892376176;  // std dev = 8.279, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12547263426096747;  // std dev = 8.410, 325.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10904458841828754;  // std dev = 8.385, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10374802337812174;  // std dev = 8.300, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10935335560688923;  // std dev = 8.143, 287.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03254904532432983;  // std dev = 8.491, 339.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.045257565529042164;  // std dev = 8.372, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03399724040264365;  // std dev = 8.385, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.021002968630123527;  // std dev = 8.422, 327.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.126', 'seconds']
Parameter learned model CLL:-0.362082 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.228, 194, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.279, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.41, 221, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.385, 217, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.3, 204, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.143, 183, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.491, 235, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.372, 215, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.385, 217, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.422, 223, 104]}]
{'': [0.0, 0.22719697310931994], 'false': [nan, 0.22719697310931994], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22471378661650065], 'false': [nan, 0.22471378661650224], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21759999999999935], 'false': [nan, 0.21759999999999935], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2190196135518863], 'false': [nan, 0.2190196135518907], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22364648338674373], 'false': [nan, 0.22364648338674106]}
{'': [nan, 0.2310578008716865], 'false': [nan, 0.2310578008716865]}
{'': [0.0, 0.21266783268506087], 'false': [nan, 0.21266783268506087], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21973054510077683], 'false': [nan, 0.2197305451007765], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21901961355188646], 'false': [nan, 0.2190196135518865]}
{'': [0.0, 0.2168915822648665], 'false': [nan, 0.2168915822648665], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 14.133
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.10430278125335853;  // std dev = 3.473, 65.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(E, F), interaction(A, G) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.23314893509951187;  // std dev = 3.623, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   | | | else return 0.14148226843284564;  // std dev = 6.046, 180.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=51 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), phenotype(D, F) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4279729184975322;  // std dev = 0.714, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7444543695697959;  // std dev = 0.131, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( complex(A, G), location(A, H) )
%   | | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.8382352209716653;  // std dev = 0.038, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.16102499273714924;  // std dev = 0.095, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.15002956026152928;  // std dev = 5.741, 154.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=48 */
%   | | | else return 0.27215070389683554;  // std dev = 2.382, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, E) )
%   | | then if ( phenotype(D, F), interaction(E, D) )
%   | | | then return 0.5842935670516075;  // std dev = 0.079, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.08899217788798679;  // std dev = 0.763, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, G) )
%   | | | then return 0.7153652014859258;  // std dev = 0.117, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5909601872133866;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.38018479343009176;  // std dev = 0.695, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.040195004581526896;  // std dev = 2.873, 70.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.13396835014968983;  // std dev = 6.272, 193.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=63 */
%   | | | else return 0.29571851612239497;  // std dev = 1.849, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), complex(A, E) )
%   | | then return 0.28617639642834714;  // std dev = 0.639, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(D, F), phenotype(A, G) )
%   | | | then return 0.441373175280024;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5214105248580386;  // std dev = 0.157, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12065614024470735;  // std dev = 0.061, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( location(A, H) )
%   | | | then return 0.1357759273571843;  // std dev = 6.745, 232.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=81 */
%   | | | else return -0.0014158315027163113;  // std dev = 2.169, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0.37187187353566276;  // std dev = 0.086, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4646372278753722;  // std dev = 0.101, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, E), interaction(E, A) )
%   | | | then return 0.6596780472612268;  // std dev = 0.873, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.022612588236472164;  // std dev = 0.819, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.1887720555775067;  // std dev = 0.321, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.028874142827170286;  // std dev = 2.945, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.40290843770914775;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.15483926199183531;  // std dev = 4.031, 75.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=29 */
%   | | | else return 0.08362064022590039;  // std dev = 3.637, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(C, A), interaction(E, D) )
%   | | then return 0.4343122749770025;  // std dev = 0.257, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.28119901959628485;  // std dev = 0.260, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.180433731889135;  // std dev = 0.721, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.06836353202306063;  // std dev = 0.295, 104.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=15 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then return 0.3533517802376544;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.10437504436437751;  // std dev = 2.535, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 2.647723654012569E-4;  // std dev = 2.033, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.13229054218723874;  // std dev = 3.658, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | | | else return 0.07952077170308645;  // std dev = 2.461, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.19832447448095106;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.35520024563688324;  // std dev = 0.126, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.20992554929991014;  // std dev = 0.650, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.0077131903833793855;  // std dev = 2.766, 95.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=22 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.48399033420460974;  // std dev = 2.644, 49.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=39 */
%   | | | else return -0.2552809161747376;  // std dev = 0.343, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3297140427523887;  // std dev = 0.228, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.13392127295353123;  // std dev = 3.503, 56.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08660230077353093;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then return 0.16853534385576355;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(D, E) )
%   | | | then return 0.30453308875574664;  // std dev = 0.151, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.20614338072619134;  // std dev = 0.114, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( location(A, F), interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.39014242767884755;  // std dev = 0.575, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return -0.07933808677636423;  // std dev = 2.772, 115.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=14 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.018545627759224977;  // std dev = 2.893, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | | else return 0.09555413844478251;  // std dev = 4.176, 94.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=37 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.22441307480845424;  // std dev = 0.198, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, D), interaction(A, C) )
%   | | then return -0.1625310397659782;  // std dev = 0.295, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return -0.038370666574027205;  // std dev = 0.318, 137.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=35 */
%   else if ( phenotype(A, E), location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(G, E) )
%   | | | then return 0.4146956232138758;  // std dev = 1.566, 43.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=39 */
%   | | | else return -0.22484123754541538;  // std dev = 0.324, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.19244817927791666;  // std dev = 0.069, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.24253702591876325;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(A, J) )
%   | | | then return -0.08326691627845766;  // std dev = 1.250, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return -0.004167546165630039;  // std dev = 3.299, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, A) )
%   | | then return 0.12846213173881982;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, E), phenotype(D, E) )
%   | | | then return -0.0626742504137275;  // std dev = 1.652, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | | else return 0.012812076708080353;  // std dev = 1.148, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, G) )
%   | | | then return 0.24196747559990459;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1991448630770524;  // std dev = 0.180, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, H), location(A, I) )
%   | | | then return -0.02772450163673762;  // std dev = 2.162, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | | else return 0.061064782060117596;  // std dev = 4.949, 140.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=50 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '32.458', 'seconds']
Refined model CLL: -0.245387


******************************************
Best model found
******************************************
Results 

CLL : -0.257599 

AUC ROC : 0.93443 

AUC PR : 0.281476 

Precision : 0.277778 

Recall : 0.471698 

F1 : 0.34965 

Total Learning Time : 14.133 

Total Inference Time : 16.434111833572388 

Total revision time: 33.81900786209106
Best scored revision CLL: -0.245387


Results 

CLL : -0.257599 

AUC ROC : 0.93443 

AUC PR : 0.281476 

Precision : 0.277778 

Recall : 0.471698 

F1 : 0.34965 

Total Learning Time : 33.8776388053894 

Total Inference Time : 16.434111833572388 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.145
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18439006985128545;  // std dev = 7.873, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14188110301705684;  // std dev = 7.981, 299.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15436422863745355;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12855936767917445;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11405485950630373;  // std dev = 7.750, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04950889186709279;  // std dev = 8.004, 303.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.058059071364790285;  // std dev = 7.900, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), function(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0788026582323518;  // std dev = 7.710, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0548331950403539;  // std dev = 7.758, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.023767575534354723;  // std dev = 7.873, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.399', 'seconds']
Parameter learned model CLL:-0.3711 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.873, 190, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.981, 207, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.788, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.795, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.75, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.004, 211, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.9, 194, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), function(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.71, 168, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.758, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.873, 190, 92]}]
{'': [nan, 0.2198078567476494], 'false': [nan, 0.2198078567476494]}
{'': [0.0, 0.21301775147929014], 'false': [nan, 0.21301775147928687], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22463648834019143], 'false': [nan, 0.22463648834019143], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22423441946596542], 'false': [nan, 0.22423441946596637]}
{'': [0.0, 0.2266429334282661], 'false': [nan, 0.22664293342826636], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21143896567874546], 'false': [nan, 0.21143896567874546], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21820137904054], 'false': [nan, 0.21820137904054], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2286390532544368], 'false': [nan, 0.2286390532544365]}
{'': [0.0, 0.22624229747300575], 'false': [nan, 0.22624229747300412], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21980785674764872], 'false': [nan, 0.21980785674764872], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 5.503
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( complex(A, D), enzyme(C, E) )
%   | | | then return 0.011995088945666114;  // std dev = 1.840, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.1581489350995121;  // std dev = 4.806, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.20189893509951234;  // std dev = 2.687, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return 0.13314893509951237;  // std dev = 2.824, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15591473062289105;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.727924358108956;  // std dev = 0.114, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.1098342052377337;  // std dev = 7.035, 264.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=72 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12571870729450632;  // std dev = 0.023, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.5647446684350055;  // std dev = 0.155, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7555675191099607;  // std dev = 0.231, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09342547962147792;  // std dev = 5.790, 189.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=52 */
%   | | else if ( enzyme(A, G), location(A, H) )
%   | | | then return 0.11642205903616597;  // std dev = 2.012, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.25989638436245976;  // std dev = 2.940, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then return 0.05481998196964444;  // std dev = 0.383, 101.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=29 */
%   else if ( enzyme(A, E), interaction(A, F) )
%   | then if ( phenotype(A, G), enzyme(F, H) )
%   | | then if ( interaction(I, F), recursion_proteinclass(I, B) )
%   | | | then return 0.7192383882871941;  // std dev = 0.237, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1796693673802278;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(J, F), recursion_proteinclass(J, B) )
%   | | | then return 0.7996217911686768;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.21889447778257123;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | | then return 0.7030797113903524;  // std dev = 0.344, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18237677380129155;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.04942974821866015;  // std dev = 2.327, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.1206121324809187;  // std dev = 4.855, 127.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=42 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E) )
%   | | then return 0.4095375545807228;  // std dev = 0.153, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.47900255002957226;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, F), location(A, G) )
%   | | then if ( complex(A, H), complex(F, H) )
%   | | | then return -0.06475448355374057;  // std dev = 2.213, 50.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=6 */
%   | | | else return 0.061117526564403855;  // std dev = 4.401, 101.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=29 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return 0.051362757887722835;  // std dev = 1.916, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.16674592733929378;  // std dev = 4.085, 86.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=35 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11879923331179339;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.30029666758008;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.3810000555076313;  // std dev = 0.087, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.007070677228606141;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.12195986776825235;  // std dev = 0.887, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | | else return 0.03349017698746307;  // std dev = 2.115, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( complex(A, H), enzyme(A, I) )
%   | | | then return 0.2116503914859506;  // std dev = 2.622, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | | else return 0.06819943387330112;  // std dev = 5.581, 170.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=54 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12052544350787583;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( recursion_proteinclass(D, B), interaction(D, E) )
%   | | | then return 0.2403870338374029;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5084222854681774;  // std dev = 0.392, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.17944551295261793;  // std dev = 0.235, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0.025330131263676427;  // std dev = 4.986, 152.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=43 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.3176221610665328;  // std dev = 0.081, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.012297456263644318;  // std dev = 2.728, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.10898188550153706;  // std dev = 3.338, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return -0.04180995009520477;  // std dev = 0.221, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | else if ( phenotype(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.32208690448194216;  // std dev = 0.686, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.607558135711921;  // std dev = 1.198, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else return -0.23590249513316644;  // std dev = 0.037, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( interaction(H, A), interaction(A, H) )
%   | then return -0.031265902862337096;  // std dev = 0.199, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( location(A, I), interaction(A, J) )
%   | | then if ( complex(J, K), location(J, I) )
%   | | | then return 0.2017351544294182;  // std dev = 2.193, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.07281830474342002;  // std dev = 2.290, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.13861177853601722;  // std dev = 2.335, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.04660710331585919;  // std dev = 2.831, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.06154103815659582;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.0535846408041889;  // std dev = 1.667, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.03511745557098299;  // std dev = 0.980, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.13521637982315995;  // std dev = 0.571, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.3087204028544175;  // std dev = 1.290, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), enzyme(L, M) )
%   | | | then return 0.12079727492132442;  // std dev = 1.944, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.029947954640444963;  // std dev = 2.995, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.02651315660877994;  // std dev = 2.304, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return -0.026276334438105564;  // std dev = 3.683, 104.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.0827593606199808;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.19591786845692882;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.26415610934283773;  // std dev = 0.207, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, F), location(A, G) )
%   | | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.4756440488938127;  // std dev = 1.276, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | | else return -0.20312833907672098;  // std dev = 0.366, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.21409314159409823;  // std dev = 1.473, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.045639388248718694;  // std dev = 4.660, 127.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=44 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.982', 'seconds']
Refined model CLL: -0.263904


******************************************
Best model found
******************************************
Results 

CLL : -0.272618 

AUC ROC : 0.955398 

AUC PR : 0.160842 

Precision : 0.172986 

Recall : 0.527076 

F1 : 0.260482 

Total Learning Time : 5.503 

Total Inference Time : 2.545177936553955 

Total revision time: 11.010101316452026
Best scored revision CLL: -0.263904


Results 

CLL : -0.272618 

AUC ROC : 0.955398 

AUC PR : 0.160842 

Precision : 0.172986 

Recall : 0.527076 

F1 : 0.260482 

Total Learning Time : 11.068732259750366 

Total Inference Time : 2.545177936553955 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.145
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21798157108277622;  // std dev = 7.420, 239.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13230708822378603;  // std dev = 7.743, 284.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16828733839510773;  // std dev = 7.429, 240.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11862957562273374;  // std dev = 7.557, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10176105448623125;  // std dev = 7.534, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08415781580971278;  // std dev = 7.527, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06374272067204946;  // std dev = 7.550, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05491065108434847;  // std dev = 7.527, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.033058314754609415;  // std dev = 7.586, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.031268885577524747;  // std dev = 7.557, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.410', 'seconds']
Parameter learned model CLL:-0.37711 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.42, 153, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.743, 198, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.429, 154, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.557, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.534, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.527, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.55, 169, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.527, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.586, 174, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.557, 170, 86]}]
{'': [0.0, 0.23035311006460032], 'false': [nan, 0.23035311006460032], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21111882562983397], 'false': [nan, 0.21111882562983397]}
{'': [nan, 0.22993055555555575], 'false': [nan, 0.22993055555555575]}
{'': [0.0, 0.2230834960937488], 'false': [nan, 0.22308349609374797], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22437469730819232], 'false': [nan, 0.2243746973081923]}
{'': [0.0, 0.22480473670949744], 'false': [nan, 0.22480473670949744], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22351403306420542], 'false': [nan, 0.22351403306420542], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22480473670949797], 'false': [nan, 0.22480473670949752], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2213609467455627], 'false': [nan, 0.22136094674556342], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22308349609375117], 'false': [nan, 0.22308349609375117]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 6.208
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.09624417319475045;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( interaction(A, F), enzyme(A, G) )
%   | | | then return 0.23314893509951234;  // std dev = 2.739, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.1446354215859979;  // std dev = 6.149, 185.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=53 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.6808530230643496;  // std dev = 0.287, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | else if ( interaction(A, E), interaction(E, D) )
%   | | then return -0.05252100376471097;  // std dev = 0.290, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.24832627512058222;  // std dev = 2.657, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.13085499832718464;  // std dev = 3.923, 75.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=22 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(K, A), interaction(I, L) )
%   | | | then return -0.16038522894825988;  // std dev = 7.45e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.07172005120171025;  // std dev = 2.315, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( enzyme(A, M), phenotype(A, N) )
%   | | | then return 0.07379514894236958;  // std dev = 2.305, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.2032511346881038;  // std dev = 2.763, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.564881616746553;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7856827301896679;  // std dev = 0.099, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( enzyme(E, F) )
%   | | then return 0.2252048300797073;  // std dev = 0.820, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5827574932820339;  // std dev = 0.122, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( complex(G, H) )
%   | | | then return -0.09404475554393364;  // std dev = 0.865, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.04028659286166756;  // std dev = 1.347, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.07171705697240228;  // std dev = 2.871, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.1559235033964626;  // std dev = 5.664, 143.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=49 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.2198942865748056;  // std dev = 0.709, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.424608386602041;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(D, G) )
%   | | | then return 0.4108676203557893;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.49398035028864556;  // std dev = 0.105, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), complex(H, J) )
%   | | | then return 0.14695732865529593;  // std dev = 3.858, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
%   | | | else return 0.04044931780915042;  // std dev = 4.877, 132.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=33 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.12380244938772002;  // std dev = 2.326, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.300560009875484;  // std dev = 1.424, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( interaction(E, C), phenotype(E, F) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.5455114624838893;  // std dev = 0.163, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.1360373484030715;  // std dev = 0.054, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.16051192942131878;  // std dev = 3.517, 55.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=22 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then return -0.05995639853925809;  // std dev = 0.421, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(C, J) )
%   | | | then return 0.0407402999401602;  // std dev = 2.684, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return 0.22423913666525208;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( interaction(A, K), phenotype(K, L) )
%   | then return 0.025450530012208167;  // std dev = 0.411, 70.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=21 */
%   | else if ( interaction(M, A), phenotype(M, N) )
%   | | then return 0.03274058947363991;  // std dev = 0.428, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | else return 0.21552449031507884;  // std dev = 0.444, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13320740998351177;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(D, D), phenotype(A, E) )
%   | | | then return 0.25553825859409884;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3167694246135006;  // std dev = 0.123, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12466376108265305;  // std dev = 0.064, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.0595148415843965;  // std dev = 4.759, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( enzyme(A, H), interaction(I, G) )
%   | | | then return 0.1129579090377703;  // std dev = 2.170, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.24852622328411536;  // std dev = 2.698, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.4383186911725594;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06101473039788619;  // std dev = 2.532, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12496770555618998;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.2102576327955822;  // std dev = 0.000591, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.24810522220072487;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, H), interaction(H, D) )
%   | | | then return -0.10951562853317863;  // std dev = 1.085, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | | else return -0.004915592356232054;  // std dev = 4.295, 94.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=26 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.47446982709692603;  // std dev = 0.317, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.13603340762788732;  // std dev = 0.684, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.010867484324336766;  // std dev = 3.739, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   | | | else return 0.08960150211442805;  // std dev = 3.608, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12416931974140925;  // std dev = 0.084, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.16547945477719336;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20371233374134742;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.469669179871332;  // std dev = 0.154, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, G), phenotype(G, H) )
%   | | | then return -0.09852895153720774;  // std dev = 0.022, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.12635613230536522;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.027265351618627576;  // std dev = 3.797, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
%   | | | else return 0.08761871387749323;  // std dev = 5.226, 124.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=46 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.06870215312261856;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.1439113570121735;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17267029895923858;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3580230392074563;  // std dev = 0.141, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(G, I), enzyme(I, J) )
%   | | | then return -0.09576476501790954;  // std dev = 2.314, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | | | else return 0.15414798672139016;  // std dev = 2.035, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.16459686140010968;  // std dev = 2.931, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return 0.011354762556066867;  // std dev = 4.898, 112.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( enzyme(C, E), location(A, F) )
%   | then if ( interaction(A, G), complex(C, H) )
%   | | then return -0.04573731681211864;  // std dev = 0.329, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( location(I, F), recursion_proteinclass(I, B) )
%   | | | then return 0.5543193700616524;  // std dev = 0.949, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.30277915063008065;  // std dev = 0.147, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( enzyme(A, J), phenotype(A, K) )
%   | | then if ( interaction(L, C), recursion_proteinclass(L, B) )
%   | | | then return 0.3115293329760125;  // std dev = 0.272, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08802394412495995;  // std dev = 1.913, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.018002126649720708;  // std dev = 2.712, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return 0.04272603486026048;  // std dev = 3.333, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   else if ( phenotype(A, N), complex(A, P) )
%   | then return 0.09167911447248776;  // std dev = 0.449, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else return -0.030423904787475937;  // std dev = 0.402, 77.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.322', 'seconds']
Refined model CLL: -0.31984


******************************************
Best model found
******************************************
Results 

CLL : -0.341518 

AUC ROC : 0.758486 

AUC PR : 0.07368 

Precision : 0.111301 

Recall : 0.229682 

F1 : 0.149942 

Total Learning Time : 6.208 

Total Inference Time : 3.230043888092041 

Total revision time: 12.170825317382812
Best scored revision CLL: -0.31984


Results 

CLL : -0.341518 

AUC ROC : 0.758486 

AUC PR : 0.07368 

Precision : 0.111301 

Recall : 0.229682 

F1 : 0.149942 

Total Learning Time : 12.229456260681152 

Total Inference Time : 3.230043888092041 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.119
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1953582374250937;  // std dev = 7.594, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19069082738601503;  // std dev = 7.473, 243.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12661058424262878;  // std dev = 7.679, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12757019356642021;  // std dev = 7.555, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09462428206567142;  // std dev = 7.616, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06589492224666894;  // std dev = 7.679, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09190713220056251;  // std dev = 7.456, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06326277058827899;  // std dev = 7.515, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0515507562180369;  // std dev = 7.507, 247.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03918082701429898;  // std dev = 7.515, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.433', 'seconds']
Parameter learned model CLL:-0.389467 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.594, 171, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.473, 156, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.679, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.555, 166, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.616, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.679, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.456, 154, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.515, 161, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.507, 160, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.515, 161, 87]}]
{'': [0.0, 0.2234991887506769], 'false': [nan, 0.2234991887506769], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2298430117360165], 'false': [nan, 0.2298430117360157]}
{'': [nan, 0.21839506172839482], 'false': [nan, 0.21839506172839482]}
{'': [nan, 0.22562452155165827], 'false': [nan, 0.22562452155165838]}
{'': [0.0, 0.2222222222222216], 'false': [nan, 0.22222222222222082], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2183950617283955], 'false': [nan, 0.2183950617283955], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23067784645581144], 'false': [nan, 0.23067784645581144], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22774128511966632], 'false': [nan, 0.227741285119666], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22816305790948788], 'false': [nan, 0.22816305790948802], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22774128511966737], 'false': [nan, 0.22774128511966737]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 10.909
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), complex(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H), location(A, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.15392358298683764;  // std dev = 6.661, 213.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=63 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.7470209545928356;  // std dev = 0.215, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( interaction(D, A) )
%   | | then return -0.15211485947165776;  // std dev = 0.069, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1249329608372971;  // std dev = 3.436, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.5908054018564014;  // std dev = 0.850, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5286893590480035;  // std dev = 3.393, 57.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
%   | | | else return -0.15646918125831347;  // std dev = 0.111, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.038463727318330844;  // std dev = 0.931, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.12407434733431852;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5338992952852294;  // std dev = 0.248, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(D, G) )
%   | | | then return 0.6837218071651097;  // std dev = 0.148, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.32335491980299574;  // std dev = 0.759, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(H, A), interaction(H, D) )
%   | | | then return -0.06949925238241195;  // std dev = 0.932, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.21975987203955358;  // std dev = 2.336, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(I, J), enzyme(J, K) )
%   | | | then return -0.02341435326061576;  // std dev = 0.914, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.02849396641428737;  // std dev = 0.763, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.09043968330626213;  // std dev = 2.850, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return 0.16525794486126155;  // std dev = 4.586, 111.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=40 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F), enzyme(C, G) )
%   | | then return 0.3719986375868589;  // std dev = 0.657, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.4435457475843038;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6497094279485172;  // std dev = 0.283, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, C) )
%   | | then return -0.1363492842130313;  // std dev = 0.256, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(A, H), complex(A, I) )
%   | | | then return 0.2125490599935978;  // std dev = 1.858, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.09569878831868313;  // std dev = 5.268, 159.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=50 */
%   else if ( phenotype(A, J) )
%   | then return 0.38909716301483055;  // std dev = 0.969, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( enzyme(A, K) )
%   | | then return 0.007905486017101712;  // std dev = 0.585, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.19721091232285476;  // std dev = 1.026, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0.38705537416247204;  // std dev = 0.175, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.6067146336464092;  // std dev = 0.580, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.11715853157522546;  // std dev = 0.082, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.20011181041011844;  // std dev = 0.339, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( interaction(A, H), phenotype(A, I) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.4042609649678828;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -6.837111044221795E-4;  // std dev = 1.929, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.43473420137171365;  // std dev = 0.214, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12866428230888474;  // std dev = 4.484, 109.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=39 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15505227438880506;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), interaction(A, F) )
%   | | | then return 0.4813322187029693;  // std dev = 1.191, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0.2306316835630678;  // std dev = 3.759, 75.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=43 */
%   | | else if ( complex(A, G), interaction(H, A) )
%   | | | then return -0.1360514696248204;  // std dev = 0.166, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.19181481947362886;  // std dev = 0.326, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then return 0.013755585700519685;  // std dev = 0.769, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.3994267908749547;  // std dev = 0.821, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1272624952111798;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( complex(A, F), phenotype(D, G) )
%   | | then if ( complex(A, E), phenotype(A, H) )
%   | | | then return -0.09517597753345895;  // std dev = 0.899, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return -0.031180449378071837;  // std dev = 1.674, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | else if ( enzyme(A, I), phenotype(D, J) )
%   | | | then return 0.14357929192170574;  // std dev = 1.086, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.030616119878293963;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else if ( location(A, K), interaction(L, A) )
%   | | then if ( phenotype(A, M), recursion_proteinclass(L, B) )
%   | | | then return 0.2958195058342941;  // std dev = 0.171, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06475741675502883;  // std dev = 4.357, 144.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=50 */
%   | | else return 0.3022095470586388;  // std dev = 1.021, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1163737782140473;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), location(A, F) )
%   | | then return 0.1749904299425197;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2518808048204836;  // std dev = 0.137, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11463166570943077;  // std dev = 0.228, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.011559153266630947;  // std dev = 1.506, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | else if ( enzyme(A, H), interaction(I, A) )
%   | | | then return 0.07240389041944359;  // std dev = 2.759, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | | | else return 0.002008468518277366;  // std dev = 4.229, 138.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=41 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10966173267399686;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( location(A, F), complex(D, G) )
%   | | then if ( interaction(H, A), interaction(H, D) )
%   | | | then return -0.03960830823400777;  // std dev = 1.569, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.07496394048567058;  // std dev = 1.835, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else if ( interaction(D, I), phenotype(I, E) )
%   | | | then return -0.024841435641542873;  // std dev = 0.837, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.12035694227945429;  // std dev = 1.304, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | else if ( enzyme(A, J), complex(A, K) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.28177947344916704;  // std dev = 0.161, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.15435723061772438;  // std dev = 0.270, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.12260539185398671;  // std dev = 1.840, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.04488999068274256;  // std dev = 3.852, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return -0.021931928182595206;  // std dev = 0.222, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, F), phenotype(A, G) )
%   | | then if ( location(A, H), location(D, H) )
%   | | | then return -0.007744085935824479;  // std dev = 1.158, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.10932523557131622;  // std dev = 0.800, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(D, I) )
%   | | | then return 0.07405172259161157;  // std dev = 2.505, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | | | else return 0.20122563060506526;  // std dev = 0.951, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(J, A), phenotype(A, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.48704769453156693;  // std dev = 0.964, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.19001138904533446;  // std dev = 0.323, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.08763789863876212;  // std dev = 0.881, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.04048196859903008;  // std dev = 3.047, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '39.707', 'seconds']
Refined model CLL: -0.234864


******************************************
Best model found
******************************************
Results 

CLL : -0.246146 

AUC ROC : 0.97008 

AUC PR : 0.297591 

Precision : 0.260597 

Recall : 0.588652 

F1 : 0.361262 

Total Learning Time : 10.909 

Total Inference Time : 8.122691631317139 

Total revision time: 21.801111581802367
Best scored revision CLL: -0.234864


Results 

CLL : -0.246146 

AUC ROC : 0.97008 

AUC PR : 0.297591 

Precision : 0.260597 

Recall : 0.588652 

F1 : 0.361262 

Total Learning Time : 21.829565885543822 

Total Inference Time : 8.122691631317139 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.272
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16047451649486158;  // std dev = 8.518, 344.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1564887644470838;  // std dev = 8.416, 326.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1675731939647742;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1175398892311985;  // std dev = 8.353, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11026046709178078;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09345637585671117;  // std dev = 8.250, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06218641209289783;  // std dev = 8.333, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.050818330465289115;  // std dev = 8.327, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04917651667599421;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.020770586790971234;  // std dev = 8.385, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.530', 'seconds']
Parameter learned model CLL:-0.370624 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.518, 240, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.416, 222, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.206, 191, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.353, 212, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.272, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.25, 197, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.333, 209, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.327, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.272, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.385, 217, 104]}]
{'': [0.0, 0.21092482422931386], 'false': [nan, 0.21092482422931386], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21724566223794564], 'false': [nan, 0.21724566223794878], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2282562482045399], 'false': [nan, 0.2282562482045399], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22079794904662683], 'false': [nan, 0.2207979490466276], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22506925207756287], 'false': [nan, 0.22506925207756232], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2261343693778203], 'false': [nan, 0.2261343693778203], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22186610050117822], 'false': [nan, 0.22186610050117822], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22222222222222265], 'false': [nan, 0.22222222222222257], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22506925207756226], 'false': [nan, 0.2250692520775621], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2190196135518865], 'false': [nan, 0.2190196135518865], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 11.83
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), complex(D, F) )
%   | | then if ( interaction(D, G), complex(A, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.19148226843284555;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.02764046052324112;  // std dev = 2.882, 59.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=10 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.15721435566026135;  // std dev = 6.698, 214.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=64 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.8147770376493778;  // std dev = 0.219, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.15487041867927892;  // std dev = 0.058, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.7282220336740769;  // std dev = 0.109, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1508615536128214;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.16971867197124482;  // std dev = 6.714, 209.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=70 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), enzyme(G, D) )
%   | | | then return 0.5494009168334262;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6909868489126039;  // std dev = 0.169, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.14055984332063196;  // std dev = 0.118, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5751591275758818;  // std dev = 0.142, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.7074939036471317;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, J), location(A, K) )
%   | | | then return 0.03588853285117321;  // std dev = 3.777, 91.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=21 */
%   | | | else return 0.14565572247647302;  // std dev = 5.530, 141.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=47 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D) )
%   | | then return 0.40640946811841605;  // std dev = 0.017, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.5483779477025681;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.49941284359877686;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, F), interaction(A, G) )
%   | | then if ( enzyme(G, F), interaction(G, H) )
%   | | | then return -0.0672810355134199;  // std dev = 0.884, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.04564338728425629;  // std dev = 2.061, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( complex(A, I), location(A, J) )
%   | | | then return 0.05299234457753753;  // std dev = 3.805, 91.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=24 */
%   | | | else return 0.11763984838182304;  // std dev = 5.609, 154.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=51 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( phenotype(D, F), interaction(G, D) )
%   | | then if ( recursion_proteinclass(G, B), interaction(A, H) )
%   | | | then return 0.6048961057717678;  // std dev = 0.969, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.006984677506164071;  // std dev = 5.580, 221.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=53 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.4184332886310121;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.08134793612224189;  // std dev = 1.827, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4856772605344192;  // std dev = 1.793, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | | else return -0.19971447815691507;  // std dev = 0.207, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.19370156415636652;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.27025849867846086;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), phenotype(D, F) )
%   | | then return -0.20556200496989685;  // std dev = 0.796, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, D), complex(D, G) )
%   | | | then return 0.06233486372666467;  // std dev = 0.625, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.42508828454370856;  // std dev = 0.352, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, I) )
%   | | | then return 0.40918592122943753;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.35089259808122675;  // std dev = 0.081, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return -0.018148024924551073;  // std dev = 4.125, 154.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=31 */
%   | | | else return 0.05882932359922116;  // std dev = 5.394, 166.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, A), interaction(A, D) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.19229433332531132;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.21374650641425436;  // std dev = 0.589, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( phenotype(A, F), interaction(A, G) )
%   | | | then return 0.07603236413000128;  // std dev = 3.199, 70.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=26 */
%   | | | else return 0.03431284316126709;  // std dev = 5.497, 185.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=56 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2453839366099793;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.09005623052647295;  // std dev = 1.595, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return 0.018675840617178748;  // std dev = 2.401, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.1870125312179161;  // std dev = 0.070, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.32703411086888695;  // std dev = 0.297, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4583895859906275;  // std dev = 1.682, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return -0.0890779877479209;  // std dev = 2.811, 110.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=14 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.46666546316519797;  // std dev = 0.141, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1579710789016329;  // std dev = 0.274, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.08795945682701344;  // std dev = 4.421, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
%   | | | else return 0.04244465697117623;  // std dev = 2.444, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), interaction(D, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.11314197758650847;  // std dev = 1.644, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return -0.10186887295415632;  // std dev = 1.526, 54.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=7 */
%   | | else if ( complex(D, H) )
%   | | | then return 0.008112407837718648;  // std dev = 2.803, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return 0.10812856452949868;  // std dev = 1.823, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.04803826221513319;  // std dev = 1.882, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | | else return 0.15568420215769566;  // std dev = 3.607, 67.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=29 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.10787436128135672;  // std dev = 2.007, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return -0.04839968648079271;  // std dev = 1.943, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.4226712883191918;  // std dev = 3.206, 104.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=92 */
%   | | | else return -0.1694222470150065;  // std dev = 1.517, 55.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=5 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.17106779161473823;  // std dev = 0.313, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.23484056025471478;  // std dev = 0.558, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(A, J) )
%   | | | then return -0.07971036760126078;  // std dev = 1.278, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.03503576099172128;  // std dev = 0.972, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return -0.12070360881771958;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.540', 'seconds']
Refined model CLL: -0.228938


******************************************
Best model found
******************************************
Results 

CLL : -0.211247 

AUC ROC : 0.969244 

AUC PR : 0.326586 

Precision : 0.309045 

Recall : 0.464151 

F1 : 0.371041 

Total Learning Time : 11.83 

Total Inference Time : 8.645726919174194 

Total revision time: 23.93034577560425
Best scored revision CLL: -0.228938


Results 

CLL : -0.211247 

AUC ROC : 0.969244 

AUC PR : 0.326586 

Precision : 0.309045 

Recall : 0.464151 

F1 : 0.371041 

Total Learning Time : 23.958800079345703 

Total Inference Time : 8.645726919174194 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.211
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1617792981358159;  // std dev = 8.004, 303.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17677607743216567;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.165599680740018;  // std dev = 7.710, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15610260530826453;  // std dev = 7.607, 248.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09586762299761954;  // std dev = 7.803, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08546160447961411;  // std dev = 7.758, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06481140596573004;  // std dev = 7.780, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), function(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08514308252693022;  // std dev = 7.580, 245.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.028777285853212136;  // std dev = 7.810, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02015688515325802;  // std dev = 7.824, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.523', 'seconds']
Parameter learned model CLL:-0.386916 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.004, 211, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.795, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.71, 168, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.607, 156, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.803, 180, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.758, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.78, 177, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), function(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.58, 153, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.81, 181, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.824, 183, 92]}]
{'': [0.0, 0.21143896567874707], 'false': [nan, 0.21143896567874707], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22423441946596356], 'false': [nan, 0.22423441946596678]}
{'': [0.0, 0.2286390532544365], 'false': [nan, 0.2286390532544365], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2333506763787716], 'false': [nan, 0.23335067637877066], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22383217993079554], 'false': [nan, 0.22383217993079504], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2262422974730064], 'false': [nan, 0.2262422974730064], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22503834938710113], 'false': [nan, 0.22503834938710113], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.23450229071220352], 'false': [nan, 0.2345022907122036]}
{'': [0.0, 0.2234298058473883], 'false': [nan, 0.2234298058473897], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2226247933884299], 'false': [nan, 0.2226247933884299], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 5.518
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( enzyme(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.14185106490048766;  // std dev = 6.99e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( interaction(I, A), complex(A, J) )
%   | | | then return 0.25814893509951237;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.11814893509951237;  // std dev = 4.386, 100.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=26 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.3105298874804647;  // std dev = 3.226, 42.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
%   | | | else return 0.24451257146314873;  // std dev = 3.230, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.791492739521387;  // std dev = 0.054, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, D), complex(D, F) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.08823974512586297;  // std dev = 1.349, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.21252258176734698;  // std dev = 0.926, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.13904056278288776;  // std dev = 0.100, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.0010442239068039233;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), location(I, J) )
%   | | | then return 0.1787579844695584;  // std dev = 4.939, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
%   | | | else return 0.05749971480723667;  // std dev = 3.056, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.14857576001600525;  // std dev = 1.599, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.3046879486031599;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), complex(A, F) )
%   | | then return 0.585687581657142;  // std dev = 0.167, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.6941104421393012;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.8004592243035664;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7131736485912501;  // std dev = 0.287, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.14607591501570968;  // std dev = 0.131, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.07241858957365652;  // std dev = 4.813, 123.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=34 */
%   | | | else return 0.12064115891443059;  // std dev = 4.358, 93.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14640337639541756;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), enzyme(A, F) )
%   | | then return 0.28659140979281944;  // std dev = 0.550, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.5314816890756499;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6689917181060958;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.14786181225856104;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.20209487634435433;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.17163381393452706;  // std dev = 3.991, 81.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=32 */
%   | | | else return 0.06752290250579247;  // std dev = 5.365, 162.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=46 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.3269701794669565;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4001729638001549;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5817723782854194;  // std dev = 0.120, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(H, H), location(H, I) )
%   | | | then return -0.14430003063122;  // std dev = 0.091, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.02117837866639467;  // std dev = 1.376, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.09664047411092369;  // std dev = 4.646, 113.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.15888192867137912;  // std dev = 4.243, 88.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=35 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09732602609543974;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.27151280856034127;  // std dev = 0.058, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.3040901324094593;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.482200423402994;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then if ( interaction(H, G), interaction(I, H) )
%   | | | then return -0.04159596486706736;  // std dev = 2.656, 67.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=12 */
%   | | | else return 0.15662086255510496;  // std dev = 1.471, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.11913174481581264;  // std dev = 3.269, 54.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
%   | | | else return 0.07763760423733577;  // std dev = 4.773, 117.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=39 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1169302738427486;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), enzyme(A, F) )
%   | | then return 0.2121177189612013;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.2497788846953504;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.36511709814862137;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( enzyme(H, I), phenotype(G, J) )
%   | | | then return 0.05959268364487039;  // std dev = 1.644, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.05122821918283281;  // std dev = 2.638, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.1658227736084987;  // std dev = 1.579, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.023432681698537343;  // std dev = 5.756, 184.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=56 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.177723196071545;  // std dev = 0.301, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), complex(F, G) )
%   | | then if ( enzyme(F, H), complex(A, I) )
%   | | | then return 0.17434243573180433;  // std dev = 1.544, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.015505481675742313;  // std dev = 2.900, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | else if ( interaction(D, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5135714756724253;  // std dev = 0.857, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.21747376085272435;  // std dev = 0.519, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( complex(A, M), enzyme(A, N) )
%   | | | then return -0.07635706667800124;  // std dev = 1.334, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | | else return 0.1799261759858269;  // std dev = 1.009, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(A, P), interaction(Q, A) )
%   | | | then return 0.16096164191635254;  // std dev = 2.102, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.046835126203741556;  // std dev = 4.273, 90.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08447730844774001;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), complex(F, D) )
%   | | | then return 0.15775655858954962;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.35175106856438715;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.5260181397019885;  // std dev = 0.988, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.23227697093267058;  // std dev = 0.616, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(A, J), phenotype(A, K) )
%   | | | then return -0.054434602119030465;  // std dev = 0.523, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.04478519716323515;  // std dev = 3.018, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.046877814307172055;  // std dev = 2.589, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.19252838156413069;  // std dev = 2.980, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11569059852888161;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(F, D) )
%   | | then if ( enzyme(F, G), interaction(D, D) )
%   | | | then return -0.0645253973553761;  // std dev = 0.570, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1482568198640701;  // std dev = 0.054, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3068769687567083;  // std dev = 0.121, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( complex(I, J) )
%   | | | then return -0.013482292011767299;  // std dev = 3.921, 121.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=34 */
%   | | | else return -0.07936951662129367;  // std dev = 2.242, 48.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | | else if ( interaction(A, K), phenotype(A, L) )
%   | | | then return 0.1166952191940779;  // std dev = 2.080, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.01030980832295631;  // std dev = 3.427, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.683', 'seconds']
Refined model CLL: -0.277552


******************************************
Best model found
******************************************
Results 

CLL : -0.281101 

AUC ROC : 0.882623 

AUC PR : 0.148906 

Precision : 0.215517 

Recall : 0.361011 

F1 : 0.269906 

Total Learning Time : 5.518 

Total Inference Time : 2.5157365798950195 

Total revision time: 11.073463348388671
Best scored revision CLL: -0.277552


Results 

CLL : -0.281101 

AUC ROC : 0.882623 

AUC PR : 0.148906 

Precision : 0.215517 

Recall : 0.361011 

F1 : 0.269906 

Total Learning Time : 11.101917652130126 

Total Inference Time : 2.5157365798950195 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.089
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20774243103447199;  // std dev = 7.479, 246.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16170272093957358;  // std dev = 7.586, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14557042996001748;  // std dev = 7.542, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09154076767836773;  // std dev = 7.713, 279.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11981540892903096;  // std dev = 7.462, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0638048129961228;  // std dev = 7.656, 270.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07425543375276678;  // std dev = 7.527, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05812449291238365;  // std dev = 7.534, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.060201636906417666;  // std dev = 7.454, 243.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.026983884458571968;  // std dev = 7.572, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.450', 'seconds']
Parameter learned model CLL:-0.378165 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.479, 160, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.586, 174, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.542, 168, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.713, 193, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.462, 158, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.656, 184, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.527, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.534, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.454, 157, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.572, 172, 86]}]
{'': [nan, 0.22737788353493352], 'false': [nan, 0.22737788353493352]}
{'': [nan, 0.22136094674556142], 'false': [nan, 0.22136094674556137]}
{'': [0.0, 0.22394444788889625], 'false': [nan, 0.22394444788889625], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21322953199470734], 'false': [nan, 0.21322953199470757]}
{'': [0.0, 0.22823165815640875], 'false': [nan, 0.2282316581564083], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2170644718792875], 'false': [nan, 0.2170644718792875], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2248047367094981], 'false': [nan, 0.2248047367094981], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22437469730819212], 'false': [nan, 0.22437469730819296], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22865755558942658], 'false': [nan, 0.2286575555894264], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22222222222222315], 'false': [nan, 0.22222222222222315], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 11.483
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.13592671287729013;  // std dev = 2.687, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( interaction(H, A), phenotype(A, I) )
%   | | | then return 0.136995088945665;  // std dev = 4.573, 104.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=29 */
%   | | | else return 0.23128326345772132;  // std dev = 3.959, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7283981403407856;  // std dev = 0.074, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then return 0.7505511758931249;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(F, A), phenotype(A, G) )
%   | | | then return 0.08692883961084798;  // std dev = 4.987, 134.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=33 */
%   | | | else return 0.16742307976871137;  // std dev = 4.532, 92.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), phenotype(A, F) )
%   | | then return 0.3670789596619321;  // std dev = 0.912, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5744509165291484;  // std dev = 0.119, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.13057308728167757;  // std dev = 0.265, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.03044664406381397;  // std dev = 2.498, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( enzyme(A, I), interaction(A, J) )
%   | | | then return 0.25159964178677546;  // std dev = 2.430, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.14404009665135645;  // std dev = 5.741, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( complex(E, C) )
%   | | then if ( interaction(A, F), complex(F, C) )
%   | | | then return 0.41662712127229673;  // std dev = 1.315, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.7727232103269015;  // std dev = 0.299, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.19069827829188613;  // std dev = 0.144, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.19563368844011503;  // std dev = 0.238, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then return 0.4107180017136477;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5637224210660251;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.46304136928787454;  // std dev = 0.074, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.00893315138696321;  // std dev = 2.177, 35.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
%   | | | else return 0.14114153780133942;  // std dev = 5.180, 119.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=41 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14532983244177836;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return 0.32569830715239306;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.41612788741046597;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, F), location(A, G) )
%   | | then if ( interaction(H, A), interaction(F, H) )
%   | | | then return -0.0673851327965179;  // std dev = 1.300, 35.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | | | else return 0.05913370397143092;  // std dev = 4.399, 105.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.20828017083459907;  // std dev = 2.700, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.10028665473576255;  // std dev = 3.511, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), enzyme(G, D) )
%   | | | then return 0.44254344149266994;  // std dev = 0.317, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.713853568142161;  // std dev = 0.427, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.2226664530867226;  // std dev = 0.086, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.33849807321362035;  // std dev = 4.081, 92.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=64 */
%   | | | else return -0.2198423904684953;  // std dev = 0.458, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else return 0.3343769352235338;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1281920540700474;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), enzyme(A, E) )
%   | then if ( interaction(D, D), location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.24986414273922805;  // std dev = 0.985, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.20697651763514502;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(H, D), enzyme(H, I) )
%   | | | then return 0.05583650655685286;  // std dev = 1.490, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.009613730468884698;  // std dev = 2.560, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.20420531646167658;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.2668313363463729;  // std dev = 0.137, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.020293448986262206;  // std dev = 3.435, 88.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=25 */
%   | | | else return 0.09350239193254985;  // std dev = 3.413, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13348975123670964;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.476728468387921;  // std dev = 2.187, 71.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=69 */
%   | | | else return -0.06534951996563815;  // std dev = 2.738, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.07153434026574668;  // std dev = 0.021, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.1929668536093173;  // std dev = 0.278, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, G) )
%   | | | then return -0.1325526983908354;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.1571062666560714;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.023772933322738072;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11878997401468452;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.3926661268149546;  // std dev = 1.697, 70.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=69 */
%   | | | else return -0.0301980739756401;  // std dev = 2.715, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.1186755757161932;  // std dev = 0.212, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.1733653394843837;  // std dev = 0.245, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I) )
%   | | | then return -0.13714445599792538;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.10166717655768424;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.19690033272487517;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09132927796735503;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A) )
%   | then if ( complex(A, E), enzyme(D, F) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.004660522026708008;  // std dev = 0.437, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.10390589735254491;  // std dev = 1.273, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.16072389049352878;  // std dev = 1.361, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.014093739877763365;  // std dev = 3.482, 173.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=48 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), phenotype(H, K) )
%   | | | then return 0.22625175505111503;  // std dev = 0.733, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.004481349186430044;  // std dev = 1.539, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.19865101238171048;  // std dev = 1.156, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3436434998949452;  // std dev = 0.824, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '24.284', 'seconds']
Refined model CLL: -0.201781


******************************************
Best model found
******************************************
Results 

CLL : -0.21644 

AUC ROC : 0.984933 

AUC PR : 0.293147 

Precision : 0.25078 

Recall : 0.85159 

F1 : 0.38746 

Total Learning Time : 11.483 

Total Inference Time : 8.510864734649658 

Total revision time: 22.780103418350222
Best scored revision CLL: -0.201781


Results 

CLL : -0.21644 

AUC ROC : 0.984933 

AUC PR : 0.293147 

Precision : 0.25078 

Recall : 0.85159 

F1 : 0.38746 

Total Learning Time : 22.808557722091678 

Total Inference Time : 8.510864734649658 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.062
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18037115732173445;  // std dev = 7.679, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1618116054909148;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15919859986650028;  // std dev = 7.532, 250.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10081980147752573;  // std dev = 7.719, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1217915137923346;  // std dev = 7.499, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08558141275901171;  // std dev = 7.578, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.058717493745971835;  // std dev = 7.637, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.048220236481956814;  // std dev = 7.630, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03461220483524709;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.01784954744756759;  // std dev = 7.706, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.224', 'seconds']
Parameter learned model CLL:-0.366035 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.679, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.651, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.532, 163, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.719, 189, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.499, 159, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.578, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.637, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.63, 176, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.651, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.706, 187, 87]}]
{'': [nan, 0.21839506172839596], 'false': [nan, 0.21839506172839596]}
{'': [0.0, 0.2200944089547173], 'false': [nan, 0.22009440895471785], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22689600000000032], 'false': [nan, 0.22689600000000032]}
{'': [0.0, 0.215855387523629], 'false': [nan, 0.21585538752362854], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2285841760856636], 'false': [nan, 0.22858417608566417], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22434997558593678], 'false': [nan, 0.22434997558593678]}
{'': [nan, 0.22094524793388404], 'false': [nan, 0.22094524793388404]}
{'': [-1.1564823173178713e-18, 0.22137084532088075], 'false': [nan, 0.22137084532088253], 'true': [nan, -1.1564823173178713e-18], 'true,false': [nan, -1.1564823173178713e-18], 'true,false,false': [nan, -1.1564823173178713e-18]}
{'': [nan, 0.22009440895471802], 'false': [nan, 0.22009440895471816]}
{'': [2.3129646346357427e-18, 0.21670041025094525], 'false': [nan, 0.21670041025094525], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 9.95
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.14185106490048766;  // std dev = 6.99e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, G), location(A, H) )
%   | | then if ( interaction(G, I), complex(I, J) )
%   | | | then return 0.2059750220560341;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.0581489350995123;  // std dev = 2.828, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | | else if ( location(A, K), enzyme(A, L) )
%   | | | then return 0.30642479716847787;  // std dev = 2.678, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.17064893509951184;  // std dev = 4.146, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.16391927822007088;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.7340493259070764;  // std dev = 0.109, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( enzyme(D, F), phenotype(D, G) )
%   | | | then return -0.0145455213107986;  // std dev = 1.415, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.16465566067739318;  // std dev = 3.989, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7558084019234199;  // std dev = 0.983, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return -0.16360567613936491;  // std dev = 0.164, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.11520877693344521;  // std dev = 3.068, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return 0.19841811800587536;  // std dev = 3.035, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.5517642967336833;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6327233014229152;  // std dev = 0.155, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( complex(E, F), complex(A, F) )
%   | | then if ( interaction(G, E), phenotype(E, H) )
%   | | | then return -0.13598635650416638;  // std dev = 0.036, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.09194785074152288;  // std dev = 0.986, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.16586864360416306;  // std dev = 0.055, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.1224698905053189;  // std dev = 6.437, 219.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=69 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.21890469580678834;  // std dev = 0.655, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.6657806797073054;  // std dev = 0.202, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12096744723083898;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, A) )
%   | then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then return 0.44508046254290723;  // std dev = 0.145, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.132017543922882;  // std dev = 0.099, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.4151678087379153;  // std dev = 2.139, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | | | else return 0.10776180177567625;  // std dev = 5.561, 171.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=55 */
%   | | else if ( interaction(H, A), phenotype(A, I) )
%   | | | then return 0.12618902146015049;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.020691182601128122;  // std dev = 1.958, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1086826954592775;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2463089325135889;  // std dev = 0.553, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(D, F), interaction(F, G) )
%   | | | then return -0.004182025326237389;  // std dev = 2.085, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return 0.12972226659906227;  // std dev = 1.304, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( interaction(J, H), interaction(H, J) )
%   | | | then return 0.10009603998375229;  // std dev = 5.234, 151.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=52 */
%   | | | else return 0.17986428002181112;  // std dev = 2.406, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.0596887888319286;  // std dev = 1.019, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.046828052540835684;  // std dev = 1.280, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( complex(C, E), phenotype(C, F) )
%   | then if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.41014600550735797;  // std dev = 0.254, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.010696494072221388;  // std dev = 0.310, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | else if ( location(C, H) )
%   | | then return -0.04428522606955615;  // std dev = 0.332, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else return 0.04833461001265972;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.3481518172528383;  // std dev = 0.125, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return -0.12464043951275894;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.009499962114451544;  // std dev = 1.204, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.0704185823235107;  // std dev = 3.167, 65.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | | | else return 0.12817714008140635;  // std dev = 4.391, 88.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=34 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.35913658546553573;  // std dev = 0.257, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return -0.03192707426621469;  // std dev = 0.360, 123.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=27 */
%   else if ( complex(A, F), interaction(G, A) )
%   | then if ( interaction(A, H), interaction(G, H) )
%   | | then return 0.22732517484262837;  // std dev = 1.006, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(I, G), enzyme(A, J) )
%   | | | then return 0.0433983336568995;  // std dev = 1.332, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.0463868114660896;  // std dev = 1.667, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( enzyme(K, M) )
%   | | | then return 0.1057716724602407;  // std dev = 1.113, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.0043758224171983814;  // std dev = 1.675, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return 0.07573780872276617;  // std dev = 1.693, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.18342182891157816;  // std dev = 3.155, 47.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.19254260434797246;  // std dev = 0.094, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.36122262966665386;  // std dev = 0.150, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, F), interaction(A, E) )
%   | | | then return -0.06677628235044733;  // std dev = 1.481, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | | else return 0.049705036556330816;  // std dev = 5.857, 190.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=62 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3628431580276838;  // std dev = 0.170, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18386596227239727;  // std dev = 0.140, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.35337494465285085;  // std dev = 1.165, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, A), complex(C, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.009837342828571197;  // std dev = 0.331, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.0629899006338083;  // std dev = 0.125, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( enzyme(A, F), interaction(C, C) )
%   | | then if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | | then return 0.34698483314606415;  // std dev = 1.379, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.23091134808881367;  // std dev = 0.156, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, C), complex(C, H) )
%   | | | then return -0.057975322531842295;  // std dev = 1.417, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.039381432736026116;  // std dev = 5.738, 187.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=63 */
%   else if ( enzyme(A, I) )
%   | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.3031772270786458;  // std dev = 0.128, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.16318156467003478;  // std dev = 0.048, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.25611995615795197;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09009837202404375;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(E, E) )
%   | | then if ( enzyme(A, F), phenotype(E, D) )
%   | | | then return 0.08050024678473985;  // std dev = 1.240, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.019104610103017405;  // std dev = 1.845, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else if ( interaction(A, G), phenotype(E, H) )
%   | | | then return 0.19776014143946272;  // std dev = 1.571, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.03630656833650044;  // std dev = 2.704, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( complex(I, K) )
%   | | | then return -0.03536455027579872;  // std dev = 2.311, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return -0.12008538664818001;  // std dev = 1.358, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.02174082432234105;  // std dev = 2.142, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.04864791423582276;  // std dev = 3.548, 62.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.985', 'seconds']
Refined model CLL: -0.296297


******************************************
Best model found
******************************************
Results 

CLL : -0.296413 

AUC ROC : 0.883936 

AUC PR : 0.197971 

Precision : 0.264214 

Recall : 0.280142 

F1 : 0.271945 

Total Learning Time : 9.95 

Total Inference Time : 6.247498273849487 

Total revision time: 18.945786392211915
Best scored revision CLL: -0.296297


Results 

CLL : -0.296413 

AUC ROC : 0.883936 

AUC PR : 0.197971 

Precision : 0.264214 

Recall : 0.280142 

F1 : 0.271945 

Total Learning Time : 19.043286478042603 

Total Inference Time : 6.247498273849487 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.142
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19363280606725464;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16839027896662187;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13518519477488866;  // std dev = 8.366, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14994081368947296;  // std dev = 8.135, 286.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10213652449787479;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06795608169481686;  // std dev = 8.366, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07088950386295757;  // std dev = 8.265, 303.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04145813381559165;  // std dev = 8.359, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04920200209114034;  // std dev = 8.257, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02051165372081912;  // std dev = 8.372, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.272', 'seconds']
Parameter learned model CLL:-0.373854 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.313, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.313, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.366, 214, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.135, 182, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.272, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.366, 214, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.86e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.265, 199, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.359, 213, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.257, 198, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.372, 215, 104]}]
{'': [nan, 0.22293444328824205], 'false': [nan, 0.22293444328824205]}
{'': [nan, 0.22293444328823978], 'false': [nan, 0.2229344432882407]}
{'': [0.0, 0.22008623076618833], 'false': [nan, 0.22008623076618833], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.231404958677687], 'false': [nan, 0.2314049586776831], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22506925207756184], 'false': [nan, 0.22506925207756376], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [-1.1564823173178713e-18, 0.220086230766188], 'false': [nan, 0.220086230766188], 'true': [nan, -1.1564823173178713e-18], 'true,false': [nan, -1.1564823173178713e-18], 'true,false,false': [nan, -1.1564823173178713e-18]}
{'': [1.1564823173178713e-18, 0.22542452265028562], 'false': [nan, 0.22542452265028562], 'true': [nan, 1.1564823173178713e-18], 'true,false': [nan, 1.1564823173178713e-18], 'true,false,false': [nan, 1.1564823173178713e-18]}
{'': [0.0, 0.22044203843206656], 'false': [nan, 0.22044203843206742], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2257795710714445], 'false': [nan, 0.22577957107144464], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21973054510077433], 'false': [nan, 0.21973054510077433], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 12.289
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), complex(A, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( phenotype(A, F) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.14185106490048766;  // std dev = 7.88e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.07243464938522666;  // std dev = 3.433, 70.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | | | else return 0.18872744749620565;  // std dev = 5.175, 121.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( phenotype(A, D), complex(C, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.6281995730053277;  // std dev = 0.323, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.15089926308140125;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1541442567625239;  // std dev = 3.818, 75.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.6413304269328677;  // std dev = 0.347, 64.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=54 */
%   | | else return -0.1538041918598916;  // std dev = 0.219, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.8366905383029838;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.16330946169701627;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.13974500966134976;  // std dev = 0.417, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.16142864512353447;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.5764936931049613;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1146683167428555;  // std dev = 0.937, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.5970286349780835;  // std dev = 0.151, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( location(A, F), interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5958787656486692;  // std dev = 1.721, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return -0.05429913525651911;  // std dev = 3.037, 121.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=14 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.11813118312867188;  // std dev = 4.879, 153.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=49 */
%   | | | else return 0.4036368324169023;  // std dev = 1.205, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13146202868349433;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.442178696518859;  // std dev = 0.118, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.6422872589055184;  // std dev = 0.597, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else return -0.1584553968682851;  // std dev = 0.342, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.5365791066288593;  // std dev = 0.237, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.00829741366484936;  // std dev = 1.612, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.07255882186259488;  // std dev = 5.127, 182.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=52 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09681718577975833;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( location(A, D), phenotype(A, E) )
%   | then if ( location(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, F) )
%   | | | then return 0.5178075834253454;  // std dev = 1.930, 64.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=59 */
%   | | | else return -0.07804689751226;  // std dev = 1.582, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | else return -0.15196268204897775;  // std dev = 0.321, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, I), complex(A, J) )
%   | | | then return 0.012700523966046373;  // std dev = 0.845, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.37156916502536014;  // std dev = 0.124, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.03754679616198595;  // std dev = 2.033, 53.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=9 */
%   | | | else return 0.043201185108294834;  // std dev = 3.125, 85.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=23 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.121582579876041;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F), complex(A, G) )
%   | | | then return -0.0018436426018714942;  // std dev = 0.884, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.4248015040630765;  // std dev = 0.494, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.1536634908639792;  // std dev = 0.483, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0.06495098190859452;  // std dev = 4.170, 160.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=52 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( enzyme(I, J) )
%   | | | then return 0.11772668015222426;  // std dev = 0.892, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2262688854292363;  // std dev = 0.758, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return 0.06618672270556608;  // std dev = 0.648, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.0010744275993286186;  // std dev = 2.501, 62.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09867878246523468;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), location(A, H) )
%   | | | then return 0.3328565926502724;  // std dev = 0.415, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.6190941087074293;  // std dev = 0.131, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.13565596025747395;  // std dev = 0.236, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.08887902328632025;  // std dev = 0.936, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.27588979436847466;  // std dev = 0.228, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return -0.024315017156762223;  // std dev = 2.133, 82.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=20 */
%   | | | else return 0.04016774653225988;  // std dev = 4.551, 161.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=48 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09994916279119352;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E) )
%   | | then if ( interaction(A, D), phenotype(A, E) )
%   | | | then return 0.2141171681492783;  // std dev = 0.105, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.291418139500279;  // std dev = 0.143, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return -0.40166810611829146;  // std dev = 0.718, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.20990179731965022;  // std dev = 0.078, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( location(A, G), interaction(H, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10843148430110613;  // std dev = 0.102, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.01334679324053041;  // std dev = 4.833, 269.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=76 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.22787418927918518;  // std dev = 0.960, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.03317099382161363;  // std dev = 1.681, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09251220975858158;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.1708529305100797;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18912740550502916;  // std dev = 0.102, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, F), complex(D, F) )
%   | | | then return 0.3146564286270866;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2472048625852678;  // std dev = 0.176, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, G), location(A, H) )
%   | | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.3238870499478376;  // std dev = 0.661, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.1322511074075088;  // std dev = 0.688, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.010841385166424258;  // std dev = 2.849, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
%   | | | else return 0.07543640761058663;  // std dev = 3.546, 102.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.0793385504689489;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(D, A), enzyme(A, E) )
%   | then if ( enzyme(D, E), complex(D, F) )
%   | | then if ( interaction(G, A), interaction(G, D) )
%   | | | then return -0.021314682164505164;  // std dev = 0.589, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.14466930777687328;  // std dev = 0.754, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( phenotype(D, H) )
%   | | | then return -0.003928224716189436;  // std dev = 1.838, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | | | else return -0.057501833174188326;  // std dev = 1.118, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(I, A), complex(A, J) )
%   | | then if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.1787622959766006;  // std dev = 0.104, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.0033481490019299388;  // std dev = 1.617, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.05133044915497482;  // std dev = 2.620, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | | else return 0.10327979761190774;  // std dev = 3.090, 68.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.146', 'seconds']
Refined model CLL: -0.193078


******************************************
Best model found
******************************************
Results 

CLL : -0.189607 

AUC ROC : 0.979678 

AUC PR : 0.507156 

Precision : 0.480712 

Recall : 0.611321 

F1 : 0.538206 

Total Learning Time : 12.289 

Total Inference Time : 13.359163522720337 

Total revision time: 28.80576015090942
Best scored revision CLL: -0.193078


Results 

CLL : -0.189607 

AUC ROC : 0.979678 

AUC PR : 0.507156 

Precision : 0.480712 

Recall : 0.611321 

F1 : 0.538206 

Total Learning Time : 28.90326023674011 

Total Inference Time : 13.359163522720337 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.306
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1764880354455331;  // std dev = 7.919, 289.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17856248541827674;  // std dev = 7.773, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12646131602819718;  // std dev = 7.926, 290.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12592640328923818;  // std dev = 7.810, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0822674129700554;  // std dev = 7.938, 292.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1187178472600231;  // std dev = 7.634, 251.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06516562140997736;  // std dev = 7.817, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05089201805945714;  // std dev = 7.824, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03922609227757696;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03842459680654175;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.645', 'seconds']
Parameter learned model CLL:-0.375189 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.919, 197, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.773, 176, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.926, 198, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.81, 181, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.938, 200, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.634, 159, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.817, 182, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.824, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.86e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.832, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.788, 178, 92]}]
{'': [0.0, 0.21699931753690782], 'false': [nan, 0.21699931753690782], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2254399643573174], 'false': [nan, 0.2254399643573198], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21659928656361493], 'false': [nan, 0.21659928656361493], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22342980584738806], 'false': [nan, 0.22342980584738675], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.21580033777444113], 'false': [nan, 0.21580033777444138], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [0.0, 0.23218679068586182], 'false': [nan, 0.23218679068586182], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22302733230326588], 'false': [nan, 0.22302733230326588], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22262479338842917], 'false': [nan, 0.2226247933884309]}
{'': [1.1564823173178713e-18, 0.22222222222222263], 'false': [nan, 0.22222222222222088], 'true': [nan, 1.1564823173178713e-18], 'true,false': [nan, 1.1564823173178713e-18], 'true,false,false': [nan, 1.1564823173178713e-18]}
{'': [-5.782411586589357e-19, 0.22463648834019187], 'false': [nan, 0.22463648834019187], 'true': [nan, -5.782411586589357e-19], 'true,false': [nan, -5.782411586589357e-19], 'true,false,false': [nan, -5.782411586589357e-19]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 6.659
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.024815601766178884;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.1542862741553065;  // std dev = 6.969, 233.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=69 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7314350641810785;  // std dev = 0.052, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.8211942661970429;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09035457948538894;  // std dev = 5.355, 156.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=39 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18613699336914122;  // std dev = 4.568, 92.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=32 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.5524107692876452;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(D, D), location(D, E) )
%   | | | then return -0.1356972882062357;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.011704305740414634;  // std dev = 1.490, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | else if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5184280055181671;  // std dev = 4.583, 109.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=79 */
%   | | | else return -0.180369608842251;  // std dev = 0.073, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else return 0.033690150807616295;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4185705619599686;  // std dev = 0.011, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, F), complex(D, F) )
%   | | | then return -0.13383561525691462;  // std dev = 0.907, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | | else return 0.05400617087281656;  // std dev = 2.176, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.49156601773518416;  // std dev = 0.183, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.45880487892573213;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.0717479593776596;  // std dev = 6.241, 232.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=64 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(F, E), interaction(G, F) )
%   | | then if ( phenotype(A, H), interaction(E, F) )
%   | | | then return 0.16171707405239366;  // std dev = 2.199, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.08779745527094811;  // std dev = 3.600, 85.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=30 */
%   | | else if ( phenotype(E, I), phenotype(A, J) )
%   | | | then return 0.094243036525074;  // std dev = 1.357, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.2759864925309761;  // std dev = 1.905, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( enzyme(A, K), location(A, L) )
%   | | then if ( enzyme(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.6796915868492802;  // std dev = 0.367, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.19135101202623656;  // std dev = 0.301, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.233895938801231;  // std dev = 1.730, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.08819255402865588;  // std dev = 2.788, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A), enzyme(A, E) )
%   | | then return 0.11929117089036144;  // std dev = 0.405, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3154447792927062;  // std dev = 0.100, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then if ( phenotype(A, H), phenotype(F, H) )
%   | | | then return -0.08387596999702812;  // std dev = 1.587, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.016313258463205627;  // std dev = 4.141, 115.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=31 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.07916859582079866;  // std dev = 1.174, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.10301347068009409;  // std dev = 4.416, 114.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=40 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( complex(D, E) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.25336990860854064;  // std dev = 0.076, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.0773066345176688;  // std dev = 2.198, 52.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
%   | | else if ( phenotype(A, F), interaction(G, D) )
%   | | | then return 0.16039503633172741;  // std dev = 2.234, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.02436592806120449;  // std dev = 2.106, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), interaction(I, I) )
%   | | | then return 0.07056318099386093;  // std dev = 4.459, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
%   | | | else return 0.15838341145332613;  // std dev = 1.715, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else return 0.26426222295379614;  // std dev = 1.002, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.20677138928515992;  // std dev = 0.025, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.587841823672477;  // std dev = 0.112, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.2040213004386954;  // std dev = 0.061, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( enzyme(A, F), location(A, G) )
%   | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.5466973176172051;  // std dev = 0.112, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.22110077580794354;  // std dev = 0.056, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, I), phenotype(I, K) )
%   | | | then return -0.03434602309437506;  // std dev = 1.274, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.052448278387943546;  // std dev = 2.720, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.24079295042239024;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0648944471734461;  // std dev = 4.010, 94.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=32 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.06518582437685141;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(F, D), complex(F, G) )
%   | | then if ( complex(D, G), complex(A, H) )
%   | | | then return -0.04077039673951415;  // std dev = 1.744, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.07672873009113813;  // std dev = 2.035, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else if ( interaction(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.28505462799899695;  // std dev = 0.287, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.09979375822689283;  // std dev = 1.534, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( interaction(J, L), interaction(L, J) )
%   | | | then return 0.03835656064471432;  // std dev = 1.129, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.06463818575328276;  // std dev = 1.673, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.012380752533228418;  // std dev = 2.510, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return 0.06969087766153292;  // std dev = 3.836, 92.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07184976385771161;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.15679357959679638;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.19463196944737451;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3501114912020844;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then if ( complex(F, H), phenotype(A, I) )
%   | | | then return 0.05323022089411241;  // std dev = 1.420, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.05715627358976047;  // std dev = 2.449, 61.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=12 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.11629533781741089;  // std dev = 2.635, 49.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | | | else return 0.0178512987729923;  // std dev = 4.174, 119.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=39 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '28.941', 'seconds']
Refined model CLL: -0.261252


******************************************
Best model found
******************************************
Results 

CLL : -0.270004 

AUC ROC : 0.949316 

AUC PR : 0.168318 

Precision : 0.175182 

Recall : 0.34657 

F1 : 0.232727 

Total Learning Time : 6.659 

Total Inference Time : 3.9036786556243896 

Total revision time: 13.768690671920776
Best scored revision CLL: -0.261252


Results 

CLL : -0.270004 

AUC ROC : 0.949316 

AUC PR : 0.168318 

Precision : 0.175182 

Recall : 0.34657 

F1 : 0.232727 

Total Learning Time : 13.866190757751465 

Total Inference Time : 3.9036786556243896 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.114
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21798157108277644;  // std dev = 7.420, 239.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16025941758456613;  // std dev = 7.586, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.121790496380251;  // std dev = 7.669, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13400782176474135;  // std dev = 7.487, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0970444663309788;  // std dev = 7.565, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09830022253402909;  // std dev = 7.454, 243.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06924226348947221;  // std dev = 7.511, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05250156622869687;  // std dev = 7.527, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.051350910017880724;  // std dev = 7.471, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.010339528448409057;  // std dev = 7.642, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.383', 'seconds']
Parameter learned model CLL:-0.379138 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.42, 153, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.586, 174, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.669, 186, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.487, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.565, 171, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.454, 157, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.511, 164, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.527, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.471, 159, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.642, 182, 86]}]
{'': [0.0, 0.23035311006460021], 'false': [nan, 0.23035311006460021], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22136094674556098], 'false': [nan, 0.22136094674556087], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21620891003460102], 'false': [nan, 0.21620891003460102]}
{'': [0.0, 0.22695012211313034], 'false': [nan, 0.22695012211312932], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22265287892322236], 'false': [nan, 0.22265287892322178], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22865755558942572], 'false': [nan, 0.22865755558942572]}
{'': [nan, 0.22566399999999956], 'false': [nan, 0.22566399999999956]}
{'': [0.0, 0.2248047367094979], 'false': [nan, 0.22480473670949755], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22780508121616017], 'false': [nan, 0.22780508121616022]}
{'': [0.0, 0.21792158609935303], 'false': [nan, 0.21792158609935303], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 6.399
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( complex(A, E), interaction(A, F) )
%   | | | then return 0.07481560176617903;  // std dev = 3.191, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return 0.17508882580989527;  // std dev = 6.294, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.8411816507521755;  // std dev = 0.017, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.08466516767073985;  // std dev = 3.560, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | | | else return 0.17218032193829608;  // std dev = 5.859, 156.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return 0.09348090609654847;  // std dev = 0.398, 75.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=22 */
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( phenotype(E, D), complex(A, F) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.769563692547395;  // std dev = 0.124, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1623944231735147;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(E, H), phenotype(H, D) )
%   | | | then return 0.18579978567042407;  // std dev = 2.063, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.03675015190187419;  // std dev = 2.421, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5619742591779369;  // std dev = 3.103, 55.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=42 */
%   | | | else return -0.18776238499484063;  // std dev = 0.053, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.16187650423265845;  // std dev = 1.147, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.010418359045004811;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13841195007893162;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.5354183173967876;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7239711696956702;  // std dev = 0.246, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.5411776544865518;  // std dev = 0.184, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.009790315826744934;  // std dev = 4.264, 123.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=25 */
%   | else if ( interaction(H, A) )
%   | | then if ( enzyme(H, I), interaction(J, H) )
%   | | | then return 0.25967932083806355;  // std dev = 1.319, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.11963532404607391;  // std dev = 4.248, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.3104799072776645;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2917995468993513;  // std dev = 0.941, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), interaction(F, F) )
%   | | then if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.094436175795506;  // std dev = 0.909, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.35258635961234774;  // std dev = 1.243, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3708447247470555;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09991157759317328;  // std dev = 3.455, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( interaction(J, J), complex(A, L) )
%   | | | then return 0.2568935766904726;  // std dev = 0.934, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.049974112821278456;  // std dev = 2.846, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( complex(A, M), interaction(N, A) )
%   | | | then return 0.05341547570074246;  // std dev = 1.490, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.11918544267520428;  // std dev = 3.938, 84.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=30 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), complex(E, F) )
%   | then return 0.02011542052856579;  // std dev = 0.388, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.5321687450799149;  // std dev = 0.124, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, H), phenotype(H, D) )
%   | | | then return -0.14121582443278122;  // std dev = 0.972, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.0654204207053051;  // std dev = 3.216, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.4327690721194979;  // std dev = 0.150, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, J), interaction(A, K) )
%   | | then if ( interaction(K, L), enzyme(L, M) )
%   | | | then return 0.024818446851796995;  // std dev = 1.711, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.23563580434141507;  // std dev = 2.162, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return -0.07034060943463612;  // std dev = 1.536, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.06697867296141288;  // std dev = 1.987, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(D, E), complex(E, F) )
%   | then return 0.024268683321092853;  // std dev = 0.356, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | else if ( phenotype(D, G), interaction(H, A) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.26296585793418537;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.023452156761191587;  // std dev = 1.648, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.37903526046903796;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23279962258913384;  // std dev = 1.355, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | then return 0.3297553460230868;  // std dev = 0.086, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, L), enzyme(L, M) )
%   | | then return -0.05519180376795304;  // std dev = 0.358, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.04838623494776211;  // std dev = 3.767, 85.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
%   | | | else return -0.015462649273124346;  // std dev = 2.845, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11327939250731939;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.3289973445108731;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2264831071950708;  // std dev = 0.145, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, G), phenotype(D, G) )
%   | | | then return 0.42557665419907736;  // std dev = 0.273, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5889412689828288;  // std dev = 0.210, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.15285252034661959;  // std dev = 0.064, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.009943420898587055;  // std dev = 1.347, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( location(A, I) )
%   | | | then return 0.04008379541079295;  // std dev = 5.857, 193.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=62 */
%   | | | else return 0.2522258147759082;  // std dev = 1.222, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( complex(D, E), location(A, F) )
%   | then if ( interaction(D, G), enzyme(G, H) )
%   | | then return 0.027100735669392167;  // std dev = 0.377, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( location(I, F), recursion_proteinclass(I, B) )
%   | | | then return 0.5491629930883419;  // std dev = 0.968, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.26110808845789046;  // std dev = 0.099, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(D, D) )
%   | | then return 0.08990116243165192;  // std dev = 0.866, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.39015622224451335;  // std dev = 0.823, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(J, A) )
%   | then return -0.0034961305366893827;  // std dev = 0.370, 198.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=59 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( complex(K, L), complex(A, L) )
%   | | | then return 0.3593530504120495;  // std dev = 0.712, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.17316479372782034;  // std dev = 1.392, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.016527551020931723;  // std dev = 0.411, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10206863065863396;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(E, G) )
%   | | | then return -0.1461912002017115;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2779556512452174;  // std dev = 0.422, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.05133596367721049;  // std dev = 3.468, 99.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=21 */
%   | | | else return 0.033737100136041906;  // std dev = 4.187, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.29398138512698746;  // std dev = 1.997, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return -0.2761852209834593;  // std dev = 0.384, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.670239981353315;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.513', 'seconds']
Refined model CLL: -0.297902


******************************************
Best model found
******************************************
Results 

CLL : -0.318036 

AUC ROC : 0.860634 

AUC PR : 0.089491 

Precision : 0.071935 

Recall : 0.250883 

F1 : 0.111811 

Total Learning Time : 6.399 

Total Inference Time : 3.636155843734741 

Total revision time: 12.842262495040893
Best scored revision CLL: -0.297902


Results 

CLL : -0.318036 

AUC ROC : 0.860634 

AUC PR : 0.089491 

Precision : 0.071935 

Recall : 0.250883 

F1 : 0.111811 

Total Learning Time : 12.939762580871582 

Total Inference Time : 3.636155843734741 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.104
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1876943896449668;  // std dev = 7.637, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16079891324888046;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13245243005511423;  // std dev = 7.679, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09216020667430809;  // std dev = 7.786, 287.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10918183582155877;  // std dev = 7.601, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10866615187142901;  // std dev = 7.490, 245.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07535310767433766;  // std dev = 7.563, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03534215522231449;  // std dev = 7.706, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08887134522536999;  // std dev = 7.355, 230.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.022797049351766085;  // std dev = 7.630, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.395', 'seconds']
Parameter learned model CLL:-0.379235 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.637, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.651, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.679, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.786, 200, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.601, 172, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.49, 158, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.563, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.706, 187, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.355, 143, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.63, 176, 87]}]
{'': [0.0, 0.22094524793388517], 'false': [nan, 0.22094524793388517], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22009440895471882], 'false': [nan, 0.22009440895471893], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21839506172839426], 'false': [nan, 0.21839506172839426], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21124452160400164], 'false': [nan, 0.2112445216040023], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2230735975909717], 'false': [nan, 0.2230735975909712]}
{'': [nan, 0.22900458142440552], 'false': [nan, 0.22900458142440552]}
{'': [nan, 0.22519995039990134], 'false': [nan, 0.22519995039990134]}
{'': [0.0, 0.2167004102509454], 'false': [nan, 0.21670041025094436], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2351795841209837], 'false': [nan, 0.23517958412098156]}
{'': [0.0, 0.22137084532088172], 'false': [nan, 0.22137084532088172], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 12.953
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then if ( phenotype(A, F), enzyme(A, G) )
%   | | | then return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.02888064241658545;  // std dev = 2.409, 41.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return 0.28407486102543733;  // std dev = 3.634, 54.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=23 */
%   | | | else return 0.19148226843284485;  // std dev = 5.354, 129.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), phenotype(A, E) )
%   | then if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.8092067431258215;  // std dev = 0.232, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.16409443078839442;  // std dev = 0.077, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14968144665023236;  // std dev = 0.027, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.13383867212273126;  // std dev = 6.296, 189.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=57 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( phenotype(A, F), enzyme(E, G) )
%   | | then if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.6202524995907222;  // std dev = 0.251, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.059372748124063505;  // std dev = 3.718, 93.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=23 */
%   | | else if ( phenotype(E, I), interaction(J, E) )
%   | | | then return 0.16806149898453146;  // std dev = 4.925, 114.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=42 */
%   | | | else return 0.07785227431488298;  // std dev = 2.479, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.6520509591349487;  // std dev = 0.923, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.17508993907894366;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.013767538477041198;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( phenotype(A, F), enzyme(E, G) )
%   | | | then return 0.3947010856078815;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5091026496955129;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.11002117947673344;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(H, A), enzyme(A, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5809158355501751;  // std dev = 0.906, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1308041042521646;  // std dev = 3.670, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6986486103957277;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07373750654483721;  // std dev = 5.429, 167.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=47 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4050526506289501;  // std dev = 0.099, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.7062059591190105;  // std dev = 0.158, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.11438277218685229;  // std dev = 0.627, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.18582487815669385;  // std dev = 0.273, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0.03668917399480528;  // std dev = 3.306, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | else if ( interaction(G, A), location(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.4539644696268793;  // std dev = 0.875, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.09494133750173739;  // std dev = 5.020, 121.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=40 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.007252187567711099;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.010304777190735493;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3158102722059129;  // std dev = 0.093, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(E, F), phenotype(D, F) )
%   | | | then return 0.3203428009658524;  // std dev = 0.728, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5639172975518703;  // std dev = 0.230, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( complex(A, G), complex(E, G) )
%   | | | then return -0.07510164839200414;  // std dev = 1.134, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return 0.08383730203157587;  // std dev = 5.665, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5348086903388922;  // std dev = 0.143, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.15231888283604497;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.17101856113617384;  // std dev = 0.895, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.018971696871078466;  // std dev = 1.369, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.21037077227220258;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14163190006785914;  // std dev = 0.088, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.023632037051170417;  // std dev = 0.283, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.49895457840495283;  // std dev = 0.140, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.18822285249713538;  // std dev = 0.032, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6963687279047308;  // std dev = 0.405, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.2528082969617668;  // std dev = 0.070, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.03245772839205649;  // std dev = 2.232, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.08787998375964115;  // std dev = 4.227, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.4125824517269835;  // std dev = 1.279, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | | else return -0.0384119353746473;  // std dev = 0.703, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.1485098900810886;  // std dev = 0.240, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.19880080377559606;  // std dev = 0.180, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J), enzyme(J, K) )
%   | | | then return -0.08675752073014201;  // std dev = 0.873, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.027701971482252508;  // std dev = 2.015, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.057872031095954825;  // std dev = 2.039, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.15400113958300354;  // std dev = 3.708, 60.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=26 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.14820380356265628;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.04954869816967877;  // std dev = 0.230, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), interaction(D, F) )
%   | | then if ( enzyme(F, G), interaction(F, A) )
%   | | | then return -0.015464400963102472;  // std dev = 1.587, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.12733442416778004;  // std dev = 2.687, 50.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=23 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.17312827100986705;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.014399533976367418;  // std dev = 2.151, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3048296724140764;  // std dev = 2.534, 37.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=26 */
%   | | | else return -0.23858681835864406;  // std dev = 0.574, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0.3818977236460654;  // std dev = 0.830, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( phenotype(A, F), enzyme(D, G) )
%   | | then if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.1523263526286817;  // std dev = 0.216, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.03371447062661057;  // std dev = 1.261, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( phenotype(D, I), phenotype(A, I) )
%   | | | then return 0.13680960987140042;  // std dev = 1.158, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.04166102631009459;  // std dev = 4.774, 149.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=55 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( complex(A, L), complex(J, L) )
%   | | | then return 0.0387180032003932;  // std dev = 0.372, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.09408903268465835;  // std dev = 1.262, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( interaction(A, M), interaction(M, A) )
%   | | | then return 0.015431011954438337;  // std dev = 0.664, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.008268897921502458;  // std dev = 0.852, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '19.973', 'seconds']
Refined model CLL: -0.264093


******************************************
Best model found
******************************************
Results 

CLL : -0.253316 

AUC ROC : 0.95599 

AUC PR : 0.257067 

Precision : 0.254848 

Recall : 0.652482 

F1 : 0.366534 

Total Learning Time : 12.953 

Total Inference Time : 6.99969744682312 

Total revision time: 22.824661094665526
Best scored revision CLL: -0.264093


Results 

CLL : -0.253316 

AUC ROC : 0.95599 

AUC PR : 0.257067 

Precision : 0.254848 

Recall : 0.652482 

F1 : 0.366534 

Total Learning Time : 22.883809167861937 

Total Inference Time : 6.99969744682312 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.249
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19255407979404662;  // std dev = 8.320, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14820799916191668;  // std dev = 8.439, 330.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1304344940316804;  // std dev = 8.416, 326.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09035445426533473;  // std dev = 8.534, 347.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13268223629120848;  // std dev = 8.175, 291.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09685400835906464;  // std dev = 8.250, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06088302425395651;  // std dev = 8.359, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08563104367637271;  // std dev = 8.127, 285.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.015473871772269386;  // std dev = 8.457, 333.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05854233869142867;  // std dev = 8.167, 290.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.434', 'seconds']
Parameter learned model CLL:-0.37755 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.32, 207, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.439, 226, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.416, 222, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.534, 243, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.175, 187, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.25, 197, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.359, 213, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.127, 181, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.457, 229, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.167, 186, 104]}]
{'': [0.0, 0.22257834389636227], 'false': [nan, 0.22257834389636227], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21583103764921863], 'false': [nan, 0.21583103764921954]}
{'': [0.0, 0.2172456622379468], 'false': [nan, 0.2172456622379468], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.20988464317451477], 'false': [nan, 0.2098846431745144], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2296619076298096], 'false': [nan, 0.22966190762981217], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.226134369377822], 'false': [nan, 0.226134369377822], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2204420384320667], 'false': [nan, 0.2204420384320667], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.231751308094797], 'false': [nan, 0.23175130809479694], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21477333189044906], 'false': [nan, 0.21477333189044917], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23001189060642177], 'false': [nan, 0.23001189060642177], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 10.031
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), location(E, F) )
%   | | then if ( interaction(A, D), location(A, F) )
%   | | | then return 0.7613747415511246;  // std dev = 1.646, 31.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   | | | else return 0.35814893509951234;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.14185106490048766;  // std dev = 5.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0.141075764367806;  // std dev = 6.449, 205.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=58 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.7760529730804373;  // std dev = 0.148, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1254446385283914;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0.1276548201010303;  // std dev = 3.179, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | | else return 0.03584598332575066;  // std dev = 3.266, 69.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=14 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.8062572483155037;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( complex(H, J), enzyme(A, K) )
%   | | | then return 0.2875209006036303;  // std dev = 2.735, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.17624356280651005;  // std dev = 4.634, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.0764010210379114;  // std dev = 1.682, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.16263997396661897;  // std dev = 2.096, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1628246044496163;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( recursion_proteinclass(E, B), complex(E, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.5652685110588911;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7565361662640205;  // std dev = 0.121, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(E, D), location(A, G) )
%   | | | then return -0.034430710534424286;  // std dev = 2.367, 60.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=8 */
%   | | | else return 0.20552006309284318;  // std dev = 2.247, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6852608745991601;  // std dev = 2.391, 63.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=57 */
%   | | | else return -0.18034526281374905;  // std dev = 0.194, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( location(A, K) )
%   | | | then return 0.3012645053221749;  // std dev = 2.628, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.18573003232751623;  // std dev = 1.304, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12686731869496637;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D) )
%   | | then return 0.4114306191161372;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(D, E), phenotype(E, F) )
%   | | | then return 0.6264029913351744;  // std dev = 0.111, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6898891994466336;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.13655062448692085;  // std dev = 0.816, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6699369038077689;  // std dev = 0.225, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, I), location(A, J) )
%   | | | then return 0.013741066326033578;  // std dev = 3.769, 107.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=23 */
%   | | | else return 0.07065091948520602;  // std dev = 5.516, 193.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=57 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12311184436274913;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(F, A), complex(A, G) )
%   | | | then return 0.34874619912727445;  // std dev = 0.953, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.12697866476217415;  // std dev = 1.317, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( location(A, H) )
%   | | | then return 0.07596533258191088;  // std dev = 3.495, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   | | | else return -0.05477986800476112;  // std dev = 1.431, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.07608875706774218;  // std dev = 2.412, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return 0.13751136546476914;  // std dev = 3.552, 79.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=30 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.4094457251193459;  // std dev = 1.788, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.13351852388139307;  // std dev = 1.926, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11229224925854392;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then return 0.07220847126816628;  // std dev = 0.513, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.29275657661606014;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.47887198214963567;  // std dev = 0.194, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.4299513475392472;  // std dev = 1.636, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return -0.009766805341395719;  // std dev = 5.407, 238.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=52 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return -0.13413836867550594;  // std dev = 1.558, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | | else return -0.038871137028222404;  // std dev = 2.707, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09998050594961513;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, E), location(D, F) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.22515125016107476;  // std dev = 0.850, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.0584829901339199;  // std dev = 1.730, 40.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.3838350771206978;  // std dev = 1.051, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.03929366209758491;  // std dev = 4.742, 166.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=47 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.6393396255943088;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.24418813670315423;  // std dev = 0.167, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.09667847859507223;  // std dev = 2.353, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.007580259840557733;  // std dev = 2.379, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(E, F), complex(A, G) )
%   | | | then return 0.5613010378798223;  // std dev = 0.205, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2944071411083737;  // std dev = 1.163, 33.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.15154868583059786;  // std dev = 0.208, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0.00194724999798934;  // std dev = 2.921, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.35390657067514353;  // std dev = 0.213, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.1586985226544675;  // std dev = 3.461, 65.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=29 */
%   | | | else return 0.056274743977647146;  // std dev = 3.130, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08399761680118988;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), interaction(A, F) )
%   | | then return -0.11693578424755462;  // std dev = 0.669, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.17131526575260178;  // std dev = 0.068, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.29643084733575553;  // std dev = 0.232, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.0390987171738533;  // std dev = 0.534, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4224103570601251;  // std dev = 0.216, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, I), location(A, J) )
%   | | | then return -0.028591186561375822;  // std dev = 3.174, 99.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=23 */
%   | | | else return 0.036555329110152066;  // std dev = 5.030, 178.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=57 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07775642710132057;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), enzyme(D, F) )
%   | | then return 0.02360993760609827;  // std dev = 0.364, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.13855730338452152;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.29501280915307704;  // std dev = 0.265, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( complex(G, H), complex(A, I) )
%   | | | then return 0.08440553313907373;  // std dev = 1.358, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.05208746039046961;  // std dev = 1.230, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.1385136134348784;  // std dev = 2.714, 44.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=21 */
%   | | | else return 0.03931139338420715;  // std dev = 4.731, 144.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=48 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.933', 'seconds']
Refined model CLL: -0.27308


******************************************
Best model found
******************************************
Results 

CLL : -0.291228 

AUC ROC : 0.888941 

AUC PR : 0.207057 

Precision : 0.28169 

Recall : 0.377358 

F1 : 0.322581 

Total Learning Time : 10.031 

Total Inference Time : 5.915198087692261 

Total revision time: 19.30764415740967
Best scored revision CLL: -0.27308


Results 

CLL : -0.291228 

AUC ROC : 0.888941 

AUC PR : 0.207057 

Precision : 0.28169 

Recall : 0.377358 

F1 : 0.322581 

Total Learning Time : 19.36679223060608 

Total Inference Time : 5.915198087692261 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.207
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21893324882500279;  // std dev = 7.669, 255.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16759083702359226;  // std dev = 7.803, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11098027440008354;  // std dev = 7.987, 300.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12699543625075005;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11130757532704738;  // std dev = 7.750, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07442619820279425;  // std dev = 7.846, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.061171749325628764;  // std dev = 7.839, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05502538382531313;  // std dev = 7.803, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02493229571416722;  // std dev = 7.913, 288.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.023088161754380835;  // std dev = 7.893, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.572', 'seconds']
Parameter learned model CLL:-0.366978 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.669, 163, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.803, 180, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.987, 208, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.788, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.75, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.846, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.839, 185, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.803, 180, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.913, 196, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.893, 193, 92]}]
{'': [0.0, 0.23061899269511807], 'false': [nan, 0.23061899269511807], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22383217993079493], 'false': [nan, 0.22383217993079477], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21262222222222119], 'false': [nan, 0.21262222222222119], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2246364883401916], 'false': [nan, 0.22463648834019256], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.22664293342826697], 'false': [nan, 0.22664293342826694], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [nan, 0.2214171109155842], 'false': [nan, 0.2214171109155842]}
{'': [nan, 0.22181965097942072], 'false': [nan, 0.22181965097942072]}
{'': [0.0, 0.22383217993079632], 'false': [nan, 0.22383217993079477], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2173996913580253], 'false': [nan, 0.21739969135802345], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21860264696829845], 'false': [nan, 0.21860264696829845], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 5.54
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.15814893509951236;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.1343920290221645;  // std dev = 6.016, 181.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=50 */
%   | | | else return 0.20735528430586092;  // std dev = 3.784, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13983006309343016;  // std dev = 0.062, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.17356015271583436;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( location(A, F) )
%   | | | then return 0.18406799476510405;  // std dev = 6.712, 200.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=69 */
%   | | | else return 0.053210092968242535;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.7208163843162989;  // std dev = 0.203, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8148050723420839;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( phenotype(G, I), interaction(G, J) )
%   | | | then return 0.06430774966414926;  // std dev = 2.269, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return -0.11623660129708897;  // std dev = 0.950, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.17160888854637207;  // std dev = 3.752, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
%   | | | else return 0.07840033074503525;  // std dev = 5.730, 174.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=47 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(E, A), complex(A, F) )
%   | | | then return 0.5664836572308735;  // std dev = 0.231, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.663120090947841;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.5281846755289007;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.009602473385270472;  // std dev = 2.180, 35.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
%   | | | else return 0.08969926778705448;  // std dev = 6.815, 227.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A), complex(A, E) )
%   | | then return 0.14721195129762796;  // std dev = 0.601, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, F), interaction(G, A) )
%   | | | then return 0.304626361393062;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.48356034787720725;  // std dev = 0.178, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13651051882057103;  // std dev = 0.061, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.3976958596134965;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.11807522107716004;  // std dev = 6.901, 217.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=72 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.3481996409129819;  // std dev = 0.284, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.023058128854523293;  // std dev = 0.386, 77.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=17 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( phenotype(G, H), location(F, I) )
%   | | then if ( interaction(J, G), phenotype(J, H) )
%   | | | then return 0.15821601764447588;  // std dev = 2.651, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.049378154962684585;  // std dev = 2.906, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | else return -0.009045562897586646;  // std dev = 0.376, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( interaction(L, A) )
%   | | | then return 0.10353632124809904;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.27738067286746254;  // std dev = 1.420, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.00278459610058604;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.15180883314858193;  // std dev = 2.923, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(E, A) )
%   | then return 0.24097353762130502;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.34771868287865565;  // std dev = 0.168, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( enzyme(A, F), location(A, G) )
%   | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), enzyme(I, J) )
%   | | | then return 0.6623851553969412;  // std dev = 0.573, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.7330225310050977;  // std dev = 0.102, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.24000355059993558;  // std dev = 0.049, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( complex(A, M), interaction(K, K) )
%   | | | then return -0.0548432910009805;  // std dev = 0.889, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.10667099917938759;  // std dev = 3.254, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | else if ( interaction(N, A), interaction(A, P) )
%   | | | then return -0.155902404599704;  // std dev = 0.951, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.014114663548950182;  // std dev = 4.428, 103.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=29 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09654979560054089;  // std dev = 0.034, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.20268824272144262;  // std dev = 0.140, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(D, E), complex(A, F) )
%   | | | then return -0.1884288983440126;  // std dev = 0.179, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.02101273321208988;  // std dev = 2.092, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.22247620909596175;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.01623670746877229;  // std dev = 1.822, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return 0.06111150955977325;  // std dev = 4.997, 142.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=51 */
%   | | | else return 0.1431201509812874;  // std dev = 3.072, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07799653278775939;  // std dev = 0.001, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( recursion_proteinclass(E, B), complex(E, D) )
%   | | then if ( enzyme(A, F), interaction(G, A) )
%   | | | then return 0.15900522170728035;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.24038324640283393;  // std dev = 0.118, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, H), interaction(E, E) )
%   | | | then return 0.0555864763321044;  // std dev = 1.716, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.0602924802911464;  // std dev = 2.392, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( phenotype(I, K), interaction(L, I) )
%   | | | then return 0.11220897848091739;  // std dev = 2.238, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.0049245428013316;  // std dev = 2.758, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | else if ( location(A, M) )
%   | | | then return 0.07966796648092786;  // std dev = 4.418, 104.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=39 */
%   | | | else return 0.35746424961646706;  // std dev = 0.745, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.0718270669781997;  // std dev = 0.014, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(F, A) )
%   | | then if ( phenotype(F, G), phenotype(E, G) )
%   | | | then return 0.11859096732183314;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1729618973289548;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.22856448773682111;  // std dev = 0.147, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), complex(J, K) )
%   | | | then return 0.05570831322555261;  // std dev = 3.332, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return -0.05109060453068275;  // std dev = 2.450, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | else if ( enzyme(A, L), location(A, M) )
%   | | | then return 0.12179019755998365;  // std dev = 2.250, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | | else return 0.04434341182381879;  // std dev = 4.341, 89.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=30 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.918', 'seconds']
Refined model CLL: -0.304962


******************************************
Best model found
******************************************
Results 

CLL : -0.309803 

AUC ROC : 0.833102 

AUC PR : 0.138309 

Precision : 0.162222 

Recall : 0.263538 

F1 : 0.200825 

Total Learning Time : 5.54 

Total Inference Time : 2.5760746002197266 

Total revision time: 11.379839918136597
Best scored revision CLL: -0.304962


Results 

CLL : -0.309803 

AUC ROC : 0.833102 

AUC PR : 0.138309 

Precision : 0.162222 

Recall : 0.263538 

F1 : 0.200825 

Total Learning Time : 11.438987991333008 

Total Inference Time : 2.5760746002197266 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.147
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20077841717122585;  // std dev = 7.519, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.144636835206049;  // std dev = 7.688, 275.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16316204483935895;  // std dev = 7.462, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14725709734693448;  // std dev = 7.402, 237.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10662176566334862;  // std dev = 7.487, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07042214240751589;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07131961298478513;  // std dev = 7.495, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07295526464081609;  // std dev = 7.402, 237.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.014542908778824826;  // std dev = 7.649, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02379429233806813;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.581', 'seconds']
Parameter learned model CLL:-0.379869 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.519, 165, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.688, 189, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.462, 158, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.402, 151, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.487, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.579, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.495, 162, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.402, 151, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.649, 183, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.579, 173, 86]}]
{'': [0.0, 0.22523452008698336], 'false': [nan, 0.22523452008698336], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21492892561983337], 'false': [nan, 0.214928925619834], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22823165815641053], 'false': [nan, 0.22823165815641053]}
{'': [0.0, 0.23119514322847218], 'false': [nan, 0.23119514322847262], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22695012211313106], 'false': [nan, 0.226950122113132], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22179156542091008], 'false': [nan, 0.22179156542091008], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22652185223725207], 'false': [nan, 0.22652185223725207], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2311951432284705], 'false': [nan, 0.2311951432284708], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21749284835754176], 'false': [nan, 0.21749284835754268]}
{'': [0.0, 0.22179156542090867], 'false': [nan, 0.22179156542090867], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 5.783
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.12933537577747709;  // std dev = 6.830, 236.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=64 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109542;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5944734122109543;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.166537509147914;  // std dev = 6.573, 197.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=64 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.654639664928104;  // std dev = 0.122, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.0030941680716757066;  // std dev = 0.365, 108.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=20 */
%   else if ( interaction(A, F), complex(A, G) )
%   | then if ( interaction(F, H) )
%   | | then if ( complex(F, G) )
%   | | | then return 0.2794879322153346;  // std dev = 1.146, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.4848558808419788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.15152254750864544;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A), phenotype(A, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7404297214671783;  // std dev = 1.034, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return -0.18028737643830142;  // std dev = 0.056, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.24676064274674067;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.08387989018258919;  // std dev = 3.538, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4037990219861108;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, E), interaction(E, D) )
%   | | | then return -0.11262524136417751;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0.1077456172825301;  // std dev = 2.314, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.47989151863879376;  // std dev = 0.152, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5753632899736285;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.45047576264476286;  // std dev = 0.257, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.08667284112448828;  // std dev = 5.973, 191.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=56 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.37370196116138016;  // std dev = 0.211, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.31752236314762516;  // std dev = 0.647, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.014390174543246767;  // std dev = 3.153, 72.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=16 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.29841360787023297;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.34907193226075367;  // std dev = 0.114, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.021753572540853056;  // std dev = 1.965, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | | else return 0.11703116117314484;  // std dev = 5.206, 144.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=50 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12578448798230543;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then return 0.242363860546582;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( phenotype(A, F), phenotype(D, F) )
%   | | | then return 0.35446535471063867;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.42506860469182806;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(G, I), interaction(I, G) )
%   | | | then return -0.05493447767176693;  // std dev = 2.697, 67.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=10 */
%   | | | else return 0.1388523743086826;  // std dev = 2.091, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.30862302348685783;  // std dev = 0.164, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06210903333172043;  // std dev = 5.358, 164.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=48 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(A, A), recursion_proteinclass(D, B) )
%   | | then return 0.20213921989663464;  // std dev = 0.049, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, E), phenotype(A, F) )
%   | | | then return -0.17440975043381599;  // std dev = 0.937, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.05670447700683473;  // std dev = 1.525, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( complex(A, H), phenotype(A, I) )
%   | | | then return 0.6863508447568755;  // std dev = 0.158, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1119474115315735;  // std dev = 3.552, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.16450435869220126;  // std dev = 0.981, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.015164069296355394;  // std dev = 4.961, 143.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11259128101028373;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( location(A, F), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.1822948634930925;  // std dev = 0.099, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.588119636324511;  // std dev = 0.343, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, G), interaction(D, E) )
%   | | | then return -0.07587612751640906;  // std dev = 2.120, 52.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=6 */
%   | | | else return 0.06384749571684334;  // std dev = 3.948, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
%   | else if ( complex(A, H), phenotype(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.642266933018496;  // std dev = 0.428, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.2271439104442408;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( location(A, K) )
%   | | | then return 0.10420121737233881;  // std dev = 3.492, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | | else return 0.4242122736155127;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, C) )
%   | then return 0.008804925706217543;  // std dev = 0.325, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | else if ( interaction(E, A), enzyme(E, D) )
%   | | then return -0.12891783339710283;  // std dev = 0.283, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else return -0.042295361547422965;  // std dev = 0.369, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   else if ( interaction(A, F), enzyme(A, G) )
%   | then if ( interaction(F, F) )
%   | | then return 0.5452874131510823;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return 0.04655599261752432;  // std dev = 1.328, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.40794659543541806;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1567972828092775;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return -0.0625253034739593;  // std dev = 1.145, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.024754146747604046;  // std dev = 4.809, 141.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=43 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12011634901099685;  // std dev = 0.042, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), enzyme(G, E) )
%   | | | then return 0.5098834082942809;  // std dev = 0.403, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7054785957958715;  // std dev = 0.171, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(H, D), phenotype(H, I) )
%   | | | then return -0.2126379331261814;  // std dev = 0.115, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.2995177894383665;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.2647214345203573;  // std dev = 0.280, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.051770758805951486;  // std dev = 2.261, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return -0.033559627996928694;  // std dev = 3.978, 128.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=35 */
%   | | | else return -0.005396487711491548;  // std dev = 3.788, 90.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.689', 'seconds']
Refined model CLL: -0.271247


******************************************
Best model found
******************************************
Results 

CLL : -0.284292 

AUC ROC : 0.860852 

AUC PR : 0.143384 

Precision : 0.164948 

Recall : 0.339223 

F1 : 0.221965 

Total Learning Time : 5.783 

Total Inference Time : 2.447920799255371 

Total revision time: 11.106626682281494
Best scored revision CLL: -0.271247


Results 

CLL : -0.284292 

AUC ROC : 0.860852 

AUC PR : 0.143384 

Precision : 0.164948 

Recall : 0.339223 

F1 : 0.221965 

Total Learning Time : 11.165774755477905 

Total Inference Time : 2.447920799255371 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.202
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20338703033760755;  // std dev = 7.547, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17678256367567993;  // std dev = 7.547, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1084477165425466;  // std dev = 7.786, 287.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11481210704627524;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09997521614896569;  // std dev = 7.623, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10912576862356117;  // std dev = 7.465, 242.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04380522217732986;  // std dev = 7.719, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.046906918735217566;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03612540009714014;  // std dev = 7.658, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.043969162756688884;  // std dev = 7.571, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.747', 'seconds']
Parameter learned model CLL:-0.370133 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.547, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.547, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.786, 200, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.651, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.623, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.465, 155, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.719, 189, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.651, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.658, 180, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.571, 168, 87]}]
{'': [0.0, 0.22604875283446793], 'false': [nan, 0.22604875283446793], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22604875283446732], 'false': [nan, 0.2260487528344683], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21124452160400126], 'false': [nan, 0.21124452160400126], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2200944089547169], 'false': [nan, 0.22009440895471605], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22179651535458222], 'false': [nan, 0.2217965153545828], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23026091113994968], 'false': [nan, 0.23026091113994968], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2158553875236281], 'false': [nan, 0.2158553875236281], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22009440895471763], 'false': [nan, 0.2200944089547189], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21966923368261573], 'false': [nan, 0.21966923368261437], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22477508650519132], 'false': [nan, 0.22477508650519132]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 8.789
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( phenotype(A, F), phenotype(D, F) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07353355048412775;  // std dev = 3.314, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.16296176932411235;  // std dev = 6.295, 187.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=57 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(G, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( complex(D, F), enzyme(D, G) )
%   | | then if ( interaction(D, H) )
%   | | | then return 0.4119396277441365;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.18114117683270617;  // std dev = 1.975, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( recursion_proteinclass(D, B), phenotype(D, I) )
%   | | | then return 0.7772650657709802;  // std dev = 0.157, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.08320416410939618;  // std dev = 4.118, 93.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=23 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.8206514930160801;  // std dev = 0.159, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.15813713155016246;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.3371315259798839;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.19998677792454528;  // std dev = 3.818, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( phenotype(A, F), interaction(A, A) )
%   | | | then return 0.5410538674466692;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7388547631062362;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3454639762164332;  // std dev = 1.002, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( complex(G, H) )
%   | | | then return 0.04754775698412699;  // std dev = 3.183, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | | | else return -0.03806345029682173;  // std dev = 1.795, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | else if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.13537234134472023;  // std dev = 3.503, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | | else return 0.07915565387029301;  // std dev = 5.049, 137.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=38 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(D, G), interaction(F, H) )
%   | | | then return 0.5466847838572072;  // std dev = 0.186, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7872043445298363;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.631572620249736;  // std dev = 1.287, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.19983337368881082;  // std dev = 0.215, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.7005555380342858;  // std dev = 0.591, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.07997538795987492;  // std dev = 5.599, 174.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=50 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.08717956584770771;  // std dev = 0.723, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.03129020820688182;  // std dev = 1.212, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.3729436660514615;  // std dev = 0.239, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, F), complex(E, D) )
%   | | | then return -0.15383499517968668;  // std dev = 0.681, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | | else return 0.07270928591512715;  // std dev = 3.797, 81.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=25 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.17864177862051697;  // std dev = 1.022, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.020266757256919544;  // std dev = 1.916, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.15843867985466495;  // std dev = 3.110, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return 0.11864351665466948;  // std dev = 3.838, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F), location(A, G) )
%   | | | then return 0.33755471941717224;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6086722964027788;  // std dev = 0.111, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.19312234652636176;  // std dev = 0.111, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.02345449686530173;  // std dev = 2.345, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.4191935446072276;  // std dev = 0.318, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.07519005750562735;  // std dev = 3.621, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | | | else return 0.13522049849829307;  // std dev = 4.601, 94.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=36 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), phenotype(D, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.25473079392489967;  // std dev = 0.235, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1613084420846048;  // std dev = 0.789, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3985967705840405;  // std dev = 0.271, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14491472638314268;  // std dev = 0.052, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.020235788279849995;  // std dev = 4.162, 127.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=35 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.03587241345537344;  // std dev = 2.604, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | else return 0.10404971970881177;  // std dev = 4.246, 83.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=31 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), phenotype(G, E) )
%   | | | then return 0.4608793363223597;  // std dev = 0.325, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6159881909839605;  // std dev = 0.103, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.20569557892165105;  // std dev = 0.156, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.22189762320919684;  // std dev = 0.177, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.04691773029525185;  // std dev = 2.450, 54.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return 0.1308398117799651;  // std dev = 2.749, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | | else return 0.020568766662139686;  // std dev = 4.814, 122.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=38 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), interaction(A, D) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.04424183856227211;  // std dev = 1.040, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.5100362948047971;  // std dev = 1.184, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.16235284112912798;  // std dev = 0.754, 36.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=1 */
%   | | | else return 0.054692983052676135;  // std dev = 5.357, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.49167466347816713;  // std dev = 0.222, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.24323469805663409;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.37021713660062394;  // std dev = 1.111, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( interaction(A, A), phenotype(A, D) )
%   | then return -0.04298554517035125;  // std dev = 0.106, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else return 0.09508243459366032;  // std dev = 0.335, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   else if ( complex(A, E), interaction(F, A) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.24086433394224419;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.49773450788959306;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.06832513357811022;  // std dev = 3.071, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( interaction(J, H), location(A, K) )
%   | | | then return 0.05305550734900265;  // std dev = 4.263, 101.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=36 */
%   | | | else return -0.06444840432585212;  // std dev = 1.763, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.04388004716092103;  // std dev = 1.016, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.1503055856739188;  // std dev = 1.153, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.287', 'seconds']
Refined model CLL: -0.286288


******************************************
Best model found
******************************************
Results 

CLL : -0.30761 

AUC ROC : 0.912766 

AUC PR : 0.216064 

Precision : 0.269316 

Recall : 0.432624 

F1 : 0.331973 

Total Learning Time : 8.789 

Total Inference Time : 4.246805191040039 

Total revision time: 16.475535217285156
Best scored revision CLL: -0.286288


Results 

CLL : -0.30761 

AUC ROC : 0.912766 

AUC PR : 0.216064 

Precision : 0.269316 

Recall : 0.432624 

F1 : 0.331973 

Total Learning Time : 16.504182163238525 

Total Inference Time : 4.246805191040039 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.187
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2025197960266651;  // std dev = 8.257, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16714978515682932;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12402596435650935;  // std dev = 8.428, 328.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1335607669981434;  // std dev = 8.243, 300.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11980497558361426;  // std dev = 8.183, 292.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0812080941567536;  // std dev = 8.286, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0653335932325383;  // std dev = 8.286, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), function(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05324592362771651;  // std dev = 8.279, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.025215278683927266;  // std dev = 8.385, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.025032217509566485;  // std dev = 8.353, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.207', 'seconds']
Parameter learned model CLL:-0.373226 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.257, 198, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.313, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.428, 224, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.243, 196, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.183, 188, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.286, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.286, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), function(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.279, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.385, 217, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.353, 212, 104]}]
{'': [nan, 0.22577957107144483], 'false': [nan, 0.22577957107144483]}
{'': [0.0, 0.22293444328824233], 'false': [nan, 0.22293444328823908], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21653777513384778], 'false': [nan, 0.21653777513384778]}
{'': [0.0, 0.22648888888888952], 'false': [nan, 0.22648888888888583], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22931131544379726], 'false': [nan, 0.22931131544379696], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2243581528471958], 'false': [nan, 0.2243581528471958], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22435815284719476], 'false': [nan, 0.22435815284719476], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22471378661649988], 'false': [nan, 0.22471378661649927]}
{'': [0.0, 0.2190196135518858], 'false': [nan, 0.21901961355188584], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22079794904662828], 'false': [nan, 0.22079794904662828], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 8.083
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.07353355048412773;  // std dev = 3.314, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | | else if ( location(A, I), phenotype(A, J) )
%   | | | then return 0.2602107907696145;  // std dev = 4.829, 97.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=39 */
%   | | | else return 0.151627195969077;  // std dev = 4.368, 92.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=27 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.16380301874417966;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(D, E) )
%   | | | then return 0.8186939509762663;  // std dev = 0.097, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.7626355688588923;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( phenotype(G, F), enzyme(G, H) )
%   | | | then return 0.41135140767474443;  // std dev = 1.981, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.1395778181369421;  // std dev = 5.242, 131.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=41 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.5766162693538115;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.07485703421576298;  // std dev = 4.850, 132.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.6651987131295856;  // std dev = 0.106, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(C, D) )
%   | | then return -0.03572042673090658;  // std dev = 0.338, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.056519907869829335;  // std dev = 1.246, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.18917865571951775;  // std dev = 1.931, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.5199821617328443;  // std dev = 0.259, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then if ( complex(H, G), interaction(H, H) )
%   | | | then return -0.14444900295168495;  // std dev = 0.054, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.05557421951252543;  // std dev = 4.067, 92.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=23 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.05625892715194935;  // std dev = 3.783, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | | | else return 0.12830794480620963;  // std dev = 4.676, 103.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=32 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14721647608737368;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(F, A) )
%   | | then if ( interaction(D, F) )
%   | | | then return 0.4323912782093821;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6437225252282657;  // std dev = 0.143, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2033013698277991;  // std dev = 1.113, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(A, G), phenotype(G, H) )
%   | | | then return -0.06272583735368162;  // std dev = 1.483, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | | | else return 0.03295597490811142;  // std dev = 3.323, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return 0.03174860816929436;  // std dev = 2.663, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return 0.12975192799273255;  // std dev = 6.101, 173.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=59 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13389304976037547;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), enzyme(D, F) )
%   | | then return 0.007065981390121129;  // std dev = 0.676, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.325195651876766;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4811126508815713;  // std dev = 0.267, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.4816740482017053;  // std dev = 0.142, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1322543796847973;  // std dev = 0.728, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, I), complex(A, J) )
%   | | | then return 0.009165810017336117;  // std dev = 4.177, 111.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=23 */
%   | | | else return 0.12008854148644603;  // std dev = 6.062, 166.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=57 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11143507474848167;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( location(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), enzyme(G, E) )
%   | | | then return 0.4417508155446989;  // std dev = 0.409, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7009195119673487;  // std dev = 1.038, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else if ( location(H, D), recursion_proteinclass(H, B) )
%   | | | then return -0.2837656342426945;  // std dev = 0.587, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.2316522422275047;  // std dev = 0.225, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.4208574587830574;  // std dev = 1.080, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.02835980268639123;  // std dev = 3.773, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return 0.03351721926353447;  // std dev = 2.808, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return 0.20193717438184716;  // std dev = 3.771, 61.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09733087174898902;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), complex(A, F) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2531955008189872;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3266440675410008;  // std dev = 0.205, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, H), location(D, H) )
%   | | | then return 0.2522183156629575;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.19207857696541167;  // std dev = 0.743, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( location(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.553237952747553;  // std dev = 1.080, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return -0.1849332375213824;  // std dev = 0.160, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.04842231362446653;  // std dev = 3.915, 89.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=25 */
%   | | | else return -3.973598613621438E-4;  // std dev = 4.913, 129.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=35 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then return -0.13880840609622921;  // std dev = 0.847, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2639774925824811;  // std dev = 0.103, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( enzyme(A, E), location(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G), enzyme(H, I) )
%   | | | then return 0.3309707200697639;  // std dev = 0.888, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.48794979566346325;  // std dev = 0.154, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.16988729962587407;  // std dev = 0.028, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.451426737354184;  // std dev = 3.078, 51.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=38 */
%   | | | else return -0.24698380365423958;  // std dev = 0.522, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return 0.08363170499600944;  // std dev = 1.643, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.0022311849671326563;  // std dev = 3.361, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.04801835764680154;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), phenotype(A, E) )
%   | | then return 0.009804514330505406;  // std dev = 1.004, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(D, F) )
%   | | | then return 0.26017968508855727;  // std dev = 0.290, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.15776695235775476;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11647258480700651;  // std dev = 0.079, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.23503691331262644;  // std dev = 0.252, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.0356712193960099;  // std dev = 5.970, 257.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=80 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07232475083921344;  // std dev = 0.037, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.15334225994121914;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.211545616371194;  // std dev = 0.264, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( phenotype(E, F) )
%   | | | then return -0.005839462673397971;  // std dev = 3.763, 119.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=32 */
%   | | | else return -0.1567080938423911;  // std dev = 0.941, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.1865760343027108;  // std dev = 0.222, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, H), location(A, I) )
%   | | | then return 0.04924818862369484;  // std dev = 3.221, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   | | | else return 0.003557192685394338;  // std dev = 3.432, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.855', 'seconds']
Refined model CLL: -0.250825


******************************************
Best model found
******************************************
Results 

CLL : -0.239833 

AUC ROC : 0.933975 

AUC PR : 0.239963 

Precision : 0.275862 

Recall : 0.483019 

F1 : 0.351166 

Total Learning Time : 8.083 

Total Inference Time : 4.721693992614746 

Total revision time: 16.053873319625854
Best scored revision CLL: -0.250825


Results 

CLL : -0.239833 

AUC ROC : 0.933975 

AUC PR : 0.239963 

Precision : 0.275862 

Recall : 0.483019 

F1 : 0.351166 

Total Learning Time : 16.082520265579223 

Total Inference Time : 4.721693992614746 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.198
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18323727432212725;  // std dev = 7.880, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17508892684034777;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14204704829672912;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11434358763938973;  // std dev = 7.859, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07053216208635424;  // std dev = 7.998, 302.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08276288741084639;  // std dev = 7.853, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05454253080748783;  // std dev = 7.926, 290.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06236749351681212;  // std dev = 7.817, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07911753694974141;  // std dev = 7.643, 252.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.039621215107542906;  // std dev = 7.780, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.664', 'seconds']
Parameter learned model CLL:-0.375618 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.88, 191, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.788, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.832, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.859, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.998, 210, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.853, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.926, 198, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.817, 182, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.643, 160, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.78, 177, 92]}]
{'': [0.0, 0.21940591092409784], 'false': [nan, 0.21940591092409784], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22463648834019156], 'false': [nan, 0.22463648834019198], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2222222222222225], 'false': [nan, 0.2222222222222225], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2206122448979589], 'false': [nan, 0.22061224489796025], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21183281435024778], 'false': [nan, 0.21183281435024656], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22101463239167007], 'false': [nan, 0.22101463239167007], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2165992865636153], 'false': [nan, 0.2165992865636153], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22302733230326605], 'false': [nan, 0.22302733230326435], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [-5.782411586589357e-19, 0.23179642227261285], 'false': [nan, 0.2317964222726125], 'true': [nan, -5.782411586589357e-19], 'true,false': [nan, -5.782411586589357e-19], 'true,false,false': [nan, -5.782411586589357e-19]}
{'': [0.0, 0.22503834938710174], 'false': [nan, 0.22503834938710174], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 8.592
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.17393840878372288;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.16656015005278196;  // std dev = 6.756, 214.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=66 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.8104445404522477;  // std dev = 0.388, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | | | else return 0.1504734563221878;  // std dev = 3.666, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | else return -0.15952280062054647;  // std dev = 0.125, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( interaction(A, A) )
%   | | then return 0.013206937630432226;  // std dev = 0.790, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.01845850080348353;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( enzyme(A, F), phenotype(D, G) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.5328044399919476;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17929105639878867;  // std dev = 2.390, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.5825871588748491;  // std dev = 0.235, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.07152681798803504;  // std dev = 4.591, 157.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7316771951973783;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11544500425892056;  // std dev = 3.099, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.3985259055468319;  // std dev = 1.273, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.24038216086168487;  // std dev = 1.049, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( recursion_proteinclass(D, B), location(A, F) )
%   | | | then return 0.391723746489576;  // std dev = 0.015, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5356799261004752;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.14718176388663298;  // std dev = 0.116, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.10316614974147598;  // std dev = 5.054, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
%   | else if ( complex(A, G), phenotype(A, H) )
%   | | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.39025697894900685;  // std dev = 0.743, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.17566291135854634;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.16876727349748058;  // std dev = 1.695, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.24082135648787328;  // std dev = 2.817, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), location(A, F) )
%   | | then return 0.3130104329248541;  // std dev = 0.069, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.4142515428396211;  // std dev = 0.206, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H), complex(G, H) )
%   | | | then return 0.47255825281912145;  // std dev = 0.180, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10666030278706898;  // std dev = 0.913, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return -0.0020598476340040034;  // std dev = 3.538, 104.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=22 */
%   | | | else return 0.061388424843071894;  // std dev = 5.137, 173.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=50 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), interaction(F, A) )
%   | | then if ( complex(F, E) )
%   | | | then return 0.24094076232233863;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.327969028993038;  // std dev = 0.145, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.41631298690683555;  // std dev = 0.233, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.23198345375117652;  // std dev = 0.367, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.036249919781132824;  // std dev = 5.087, 208.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=58 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.11892975205788148;  // std dev = 2.270, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.19263384263216746;  // std dev = 2.450, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then return 0.20457752971581714;  // std dev = 0.056, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(E, A), complex(A, F) )
%   | | | then return 0.24366372420816054;  // std dev = 0.138, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3598601024938586;  // std dev = 0.128, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11567582036375347;  // std dev = 0.056, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.31103165420565054;  // std dev = 0.180, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.043913449974015306;  // std dev = 6.086, 247.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=72 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.17199381101575684;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.2499162041779176;  // std dev = 0.156, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), location(F, G) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.2801238482045506;  // std dev = 0.160, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.03214378841394304;  // std dev = 4.842, 182.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=50 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return -0.021760434263911086;  // std dev = 2.578, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | | else return 0.04828218274191441;  // std dev = 2.704, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( recursion_proteinclass(D, B), interaction(D, A) )
%   | | | then return 0.15013402040903773;  // std dev = 0.045, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3041191018822222;  // std dev = 0.270, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(E, F), interaction(F, A) )
%   | | | then return -0.14340403134814553;  // std dev = 0.392, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.025816282433900883;  // std dev = 4.143, 103.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=31 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then if ( interaction(A, I), phenotype(H, J) )
%   | | | then return 0.40787984766779867;  // std dev = 0.681, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.04987160290424378;  // std dev = 2.634, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.22739065956951232;  // std dev = 1.697, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.10705965627569684;  // std dev = 2.455, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), interaction(F, A) )
%   | | then return 0.1360618811904032;  // std dev = 0.085, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.21025793895016048;  // std dev = 0.124, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.19604603902310527;  // std dev = 0.123, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return -0.04091322727088015;  // std dev = 3.086, 90.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=20 */
%   | | | else return 0.0100307743702272;  // std dev = 5.258, 185.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=52 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '32.257', 'seconds']
Refined model CLL: -0.253227


******************************************
Best model found
******************************************
Results 

CLL : -0.25441 

AUC ROC : 0.973538 

AUC PR : 0.164472 

Precision : 0.149031 

Recall : 0.361011 

F1 : 0.21097 

Total Learning Time : 8.592 

Total Inference Time : 5.901087522506714 

Total revision time: 17.61636308670044
Best scored revision CLL: -0.253227


Results 

CLL : -0.25441 

AUC ROC : 0.973538 

AUC PR : 0.164472 

Precision : 0.149031 

Recall : 0.361011 

F1 : 0.21097 

Total Learning Time : 17.645010032653808 

Total Inference Time : 5.901087522506714 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.182
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19148226843284608;  // std dev = 7.572, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1639747220007788;  // std dev = 7.586, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15593137037481844;  // std dev = 7.495, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12518194327256565;  // std dev = 7.527, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08526362047128774;  // std dev = 7.629, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0532896304253592;  // std dev = 7.719, 280.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0771912240865186;  // std dev = 7.527, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), function(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07310843546487104;  // std dev = 7.462, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.049697138619506025;  // std dev = 7.511, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.018579441501869718;  // std dev = 7.629, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.354', 'seconds']
Parameter learned model CLL:-0.373387 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.572, 172, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.586, 174, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.495, 162, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.527, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.629, 180, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.719, 194, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.527, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), function(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.462, 158, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.511, 164, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.629, 180, 86]}]
{'': [0.0, 0.22222222222222285], 'false': [nan, 0.22222222222222285], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22136094674556178], 'false': [nan, 0.2213609467455611]}
{'': [0.0, 0.22652185223725277], 'false': [nan, 0.22652185223725277], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2248047367094981], 'false': [nan, 0.22480473670949783], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21878003278874023], 'false': [nan, 0.2187800327887405]}
{'': [0.0, 0.21280612244898123], 'false': [nan, 0.21280612244898123], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22480473670949927], 'false': [nan, 0.22480473670949927], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2282316581564091], 'false': [nan, 0.22823165815640858]}
{'': [nan, 0.2256640000000007], 'false': [nan, 0.22566400000000164]}
{'': [0.0, 0.21878003278873942], 'false': [nan, 0.21878003278873942], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 6.445
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.6914822684328454;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( complex(A, F), phenotype(A, G) )
%   | | | then return 0.26439893509951234;  // std dev = 2.778, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.1474890366223553;  // std dev = 6.365, 197.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=57 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7480454417003187;  // std dev = 0.172, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.4326678110854389;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.7426014517189888;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.046191828152654;  // std dev = 3.073, 56.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | | | else return 0.17056531828425628;  // std dev = 5.889, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5616474110619966;  // std dev = 0.078, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1123163781936064;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(E, A), interaction(F, E) )
%   | | | then return 0.18580014048972449;  // std dev = 5.192, 117.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=44 */
%   | | | else return 0.0890318194359313;  // std dev = 4.344, 96.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=26 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1453825066569528;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.502985348813846;  // std dev = 0.592, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.12546986146812789;  // std dev = 0.611, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( recursion_proteinclass(E, B) )
%   | | | then return 0.7453605051714446;  // std dev = 0.319, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.012054536725764892;  // std dev = 4.133, 127.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=23 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7822930661641883;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.21252817483700687;  // std dev = 0.058, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.12151273818644474;  // std dev = 3.039, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.2626827804554817;  // std dev = 3.065, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(C, E), interaction(A, E) )
%   | | then return 0.35247978565183785;  // std dev = 0.199, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.6508722682687293;  // std dev = 0.100, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then return 0.29508222121699834;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.09817352732021296;  // std dev = 0.482, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.10050132956604108;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( complex(A, I), location(A, J) )
%   | | | then return -0.012413333816966188;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.20972280180557626;  // std dev = 1.879, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( interaction(A, K), enzyme(A, L) )
%   | | | then return 0.09658088161730635;  // std dev = 2.640, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.024490234000503146;  // std dev = 5.732, 196.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=52 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1280774672166975;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.18803903185012089;  // std dev = 0.532, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.521287470995416;  // std dev = 0.382, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(H, D), phenotype(D, I) )
%   | | | then return -0.04771022761662779;  // std dev = 3.281, 80.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=16 */
%   | | | else return 0.048280935318604536;  // std dev = 3.441, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.3894285246979014;  // std dev = 0.594, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.014106418811373393;  // std dev = 3.031, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.4483408363782144;  // std dev = 1.144, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.09919643945070884;  // std dev = 2.821, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11096338411626469;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(D, E) )
%   | | | then return 0.2195757356339712;  // std dev = 0.115, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4762386818270062;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( recursion_proteinclass(D, B), phenotype(D, G) )
%   | | | then return 0.5272455059588531;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06719057762259184;  // std dev = 4.381, 103.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=32 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, I) )
%   | | | then return 0.3112623603720853;  // std dev = 0.202, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10105779492152211;  // std dev = 0.748, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(J, A), enzyme(A, K) )
%   | | | then return -0.06587114874082774;  // std dev = 2.385, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | | else return 0.004855908869086088;  // std dev = 4.053, 94.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5465618820473314;  // std dev = 0.245, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.22282953449960655;  // std dev = 0.074, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( interaction(E, A), phenotype(A, F) )
%   | then if ( interaction(G, E), interaction(G, A) )
%   | | then if ( interaction(H, G), interaction(I, H) )
%   | | | then return -0.04048970785086217;  // std dev = 1.037, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.06550140147667977;  // std dev = 0.842, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( location(A, J), location(E, J) )
%   | | | then return 0.22718938926714974;  // std dev = 2.786, 38.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   | | | else return 0.03802898554969778;  // std dev = 1.888, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.2876006632791196;  // std dev = 2.766, 38.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=24 */
%   | | | else return -0.23259601481917971;  // std dev = 0.311, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0.39805708770625564;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1483584785698752;  // std dev = 0.183, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( enzyme(E, G), enzyme(F, G) )
%   | | | then return -0.21834215397332937;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.03832426526770657;  // std dev = 1.609, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else if ( enzyme(E, H), phenotype(E, D) )
%   | | | then return 0.31550579759474046;  // std dev = 1.071, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -5.804068294985423E-4;  // std dev = 3.828, 88.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=26 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3969443470278017;  // std dev = 2.473, 42.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=32 */
%   | | | else return -0.19859011508682428;  // std dev = 0.354, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.09206909695419463;  // std dev = 0.904, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.10351333248060879;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07224942708086964;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.09661826649577569;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12528906955867383;  // std dev = 1.361, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.10900281334022617;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.07376311618219114;  // std dev = 0.091, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.42206149267787824;  // std dev = 0.936, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.3030790778123241;  // std dev = 0.445, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(A, H), phenotype(A, I) )
%   | | | then return -0.0018938213457672698;  // std dev = 3.273, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | | else return 0.08701206635467337;  // std dev = 4.103, 101.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=43 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.025', 'seconds']
Refined model CLL: -0.27262


******************************************
Best model found
******************************************
Results 

CLL : -0.27254 

AUC ROC : 0.953406 

AUC PR : 0.171444 

Precision : 0.183735 

Recall : 0.431095 

F1 : 0.257656 

Total Learning Time : 6.445 

Total Inference Time : 3.7127206325531006 

Total revision time: 13.02352419090271
Best scored revision CLL: -0.27262


Results 

CLL : -0.27254 

AUC ROC : 0.953406 

AUC PR : 0.171444 

Precision : 0.183735 

Recall : 0.431095 

F1 : 0.257656 

Total Learning Time : 13.05217113685608 

Total Inference Time : 3.7127206325531006 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.135
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17451257146314855;  // std dev = 7.712, 275.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1767269941769763;  // std dev = 7.571, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20706786429194712;  // std dev = 7.241, 219.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10540394771455867;  // std dev = 7.637, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07107699647584033;  // std dev = 7.725, 277.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1252641808021508;  // std dev = 7.335, 228.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03203868173204114;  // std dev = 7.731, 278.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06767408132123609;  // std dev = 7.490, 245.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03969111103486064;  // std dev = 7.571, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.009943685400273712;  // std dev = 7.692, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.585', 'seconds']
Parameter learned model CLL:-0.377976 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.712, 188, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.571, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.241, 132, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.637, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.725, 190, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.335, 141, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.731, 191, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.49, 158, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.571, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.692, 185, 87]}]
{'': [0.0, 0.21627768595041413], 'false': [nan, 0.21627768595041413], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22477508650518976], 'false': [nan, 0.22477508650518982], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23944454869581536], 'false': [nan, 0.23944454869581536], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22094524793388484], 'false': [nan, 0.22094524793388554], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.21543353881844005], 'false': [nan, 0.21543353881843938], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [0.0, 0.2359764542936289], 'false': [nan, 0.2359764542936289], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21501216293152559], 'false': [nan, 0.21501216293152559]}
{'': [0.0, 0.22900458142440736], 'false': [nan, 0.22900458142440716], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22477508650518957], 'false': [nan, 0.22477508650519012], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21754703719723245], 'false': [nan, 0.21754703719723245]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 7.506
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( enzyme(A, E), complex(A, F) )
%   | | | then return 0.14075763075168626;  // std dev = 3.054, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.22873717039363023;  // std dev = 6.297, 170.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=63 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( phenotype(A, E), interaction(F, A) )
%   | | | then return 0.10160183572309164;  // std dev = 4.750, 114.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=31 */
%   | | | else return 0.19891132231434153;  // std dev = 5.332, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), interaction(F, F) )
%   | | | then return 0.5759809980813939;  // std dev = 1.524, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.7852901696393899;  // std dev = 0.423, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.1800061916066224;  // std dev = 0.204, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(G, A), location(G, H) )
%   | | then if ( enzyme(G, I), complex(A, J) )
%   | | | then return 0.30467155580667793;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.13901310504747758;  // std dev = 4.882, 112.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=38 */
%   | | else return 0.5512156825451363;  // std dev = 0.870, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G) )
%   | | | then return 0.5849214447769078;  // std dev = 0.502, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.11147975266292409;  // std dev = 0.735, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.13924307162661692;  // std dev = 0.169, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.05214837480701929;  // std dev = 4.836, 144.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=40 */
%   | else if ( interaction(A, H), location(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5107370202913237;  // std dev = 0.849, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.13143726089720778;  // std dev = 2.459, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.15667188001614982;  // std dev = 1.651, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.07999558407169853;  // std dev = 3.149, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), phenotype(D, E) )
%   | | then return 0.12765608465942557;  // std dev = 0.826, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(D, F) )
%   | | | then return 0.5855178831429273;  // std dev = 0.272, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.47012025138912267;  // std dev = 0.092, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G), location(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4634227414595672;  // std dev = 1.520, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return -0.05654116606667615;  // std dev = 3.576, 115.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=18 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.1410535565278922;  // std dev = 3.396, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | | | else return 0.04481374369804723;  // std dev = 3.638, 76.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), interaction(F, D) )
%   | | then return 0.24316072085136362;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.35740644824646034;  // std dev = 0.088, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( phenotype(G, H), enzyme(G, I) )
%   | | | then return -0.21310781958704433;  // std dev = 0.243, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.005708175547616853;  // std dev = 2.257, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5237469375441034;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08912382750886763;  // std dev = 5.877, 183.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=61 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( phenotype(A, E), complex(A, F) )
%   | then return 0.007980193241829204;  // std dev = 0.345, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( enzyme(C, G), interaction(H, C) )
%   | | then return 0.07159775063439835;  // std dev = 0.387, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( phenotype(C, I) )
%   | | | then return 0.2638747524413292;  // std dev = 1.912, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.08746246925148823;  // std dev = 1.892, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   else if ( interaction(J, A), location(J, K) )
%   | then if ( interaction(L, J), interaction(M, L) )
%   | | then return 0.053576892472858746;  // std dev = 0.397, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   | | else if ( interaction(J, N), recursion_proteinclass(N, B) )
%   | | | then return 0.6651572090283273;  // std dev = 0.136, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2340465805035507;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, P), enzyme(P, Q) )
%   | | then return -0.11480522931852871;  // std dev = 0.322, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else return 0.10648047631857938;  // std dev = 0.428, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, A) )
%   | then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then return 0.24813565094427267;  // std dev = 0.105, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.10374877163718227;  // std dev = 0.105, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.05000061356639818;  // std dev = 1.919, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.1814283976145902;  // std dev = 2.020, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else if ( interaction(A, H), complex(A, I) )
%   | | | then return 0.12419077537213422;  // std dev = 2.143, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.035856879186603026;  // std dev = 5.103, 138.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=47 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08536241787922229;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), enzyme(E, F) )
%   | | then return 0.0977660552730275;  // std dev = 0.554, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.27802936886258967;  // std dev = 0.227, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( location(A, I), location(G, I) )
%   | | | then return -0.02495392396641377;  // std dev = 4.120, 126.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=33 */
%   | | | else return 0.04086171096731713;  // std dev = 2.910, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return -0.09565315161216882;  // std dev = 1.270, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.07485319813440289;  // std dev = 3.528, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( location(A, E) )
%   | then if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.34446680686500386;  // std dev = 0.232, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return -0.0554899611005449;  // std dev = 0.344, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | else return 0.39786047768979144;  // std dev = 0.694, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( phenotype(A, G), enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.5480716328855547;  // std dev = 0.106, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.22357593275015528;  // std dev = 0.107, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B), location(K, L) )
%   | | | then return 0.43758163338216405;  // std dev = 0.330, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.02542769538880354;  // std dev = 4.410, 109.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=30 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.10444314753518878;  // std dev = 0.602, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.06729689901054166;  // std dev = 1.492, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.847', 'seconds']
Refined model CLL: -0.292472


******************************************
Best model found
******************************************
Results 

CLL : -0.28434 

AUC ROC : 0.930178 

AUC PR : 0.190115 

Precision : 0.223801 

Recall : 0.446809 

F1 : 0.298225 

Total Learning Time : 7.506 

Total Inference Time : 7.152723550796509 

Total revision time: 17.709808794021605
Best scored revision CLL: -0.292472


Results 

CLL : -0.28434 

AUC ROC : 0.930178 

AUC PR : 0.190115 

Precision : 0.223801 

Recall : 0.446809 

F1 : 0.298225 

Total Learning Time : 17.808158126831053 

Total Inference Time : 7.152723550796509 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.25
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18726285915014584;  // std dev = 8.353, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16927492667785027;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13603424780108953;  // std dev = 8.366, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1372507934784188;  // std dev = 8.221, 297.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08219544397490637;  // std dev = 8.416, 326.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08240662220898798;  // std dev = 8.320, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07313690466828529;  // std dev = 8.279, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.047728412070706425;  // std dev = 8.346, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.014581914485282618;  // std dev = 8.491, 339.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04353452051350001;  // std dev = 8.293, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.108', 'seconds']
Parameter learned model CLL:-0.366199 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.353, 212, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.313, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.366, 214, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.221, 193, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.416, 222, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.32, 207, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.279, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.346, 211, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.491, 235, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.293, 203, 104]}]
{'': [0.0, 0.2207979490466277], 'false': [nan, 0.2207979490466277], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22293444328824283], 'false': [nan, 0.22293444328824], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22008623076618697], 'false': [nan, 0.22008623076618697], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22755047670872558], 'false': [nan, 0.22755047670872836]}
{'': [0.0, 0.21724566223794695], 'false': [nan, 0.21724566223794728], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22257834389636236], 'false': [nan, 0.22257834389636236]}
{'': [0.0, 0.22471378661650127], 'false': [nan, 0.22471378661650127], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22115394305870364], 'false': [nan, 0.22115394305870423], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21266783268506156], 'false': [nan, 0.2126678326850606]}
{'': [nan, 0.2240023766830419], 'false': [nan, 0.2240023766830419]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 11.303
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.6697431379980635;  // std dev = 3.248, 69.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   | | | else return -0.14185106490048763;  // std dev = 8.69e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10360348055405783;  // std dev = 4.514, 110.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=27 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.052806745544287735;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7194734122109544;  // std dev = 2.98e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), enzyme(H, I) )
%   | | | then return 0.06494437445804253;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.7376798555815866;  // std dev = 0.045, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.07372010427948339;  // std dev = 4.485, 132.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=31 */
%   | | | else return 0.16410922224922758;  // std dev = 5.373, 150.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=49 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(F, D) )
%   | | | then return 0.7153064528427765;  // std dev = 0.286, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.4164368865167182;  // std dev = 0.686, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.07203441584820755;  // std dev = 1.112, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return 0.06560069383565853;  // std dev = 3.387, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.584244269169525;  // std dev = 1.563, 29.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | | else return 0.06764260627811326;  // std dev = 4.874, 155.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=39 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.2569435682625584;  // std dev = 1.251, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.20253896033430413;  // std dev = 1.669, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(C, C), enzyme(C, E) )
%   | then return -0.05170062540913551;  // std dev = 0.331, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(F, G) )
%   | | | then return 0.5798301796073905;  // std dev = 0.308, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.08171404282361544;  // std dev = 0.625, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.0570240442327213;  // std dev = 1.406, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return 0.13407487549724356;  // std dev = 3.007, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.44325022658911606;  // std dev = 0.194, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then return 0.06917957898534942;  // std dev = 0.369, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.044438743913561285;  // std dev = 1.718, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.1693245612268618;  // std dev = 4.516, 105.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.21116464829414713;  // std dev = 0.757, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5393097416928339;  // std dev = 0.387, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(D, I), interaction(A, I) )
%   | | | then return -0.11226694886932344;  // std dev = 1.281, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return 0.03807843002089947;  // std dev = 2.446, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.3089320418459074;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.42517620100644904;  // std dev = 0.211, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.04812434965664143;  // std dev = 3.454, 75.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=21 */
%   | | | else return 0.12762431388073986;  // std dev = 4.790, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.31211579247888854;  // std dev = 0.087, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(D, F) )
%   | | then if ( phenotype(A, F), interaction(G, D) )
%   | | | then return -0.006585065245079702;  // std dev = 2.176, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | else return 0.07358448036467889;  // std dev = 3.217, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.21757653987055633;  // std dev = 0.029, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.05840627627290422;  // std dev = 0.559, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( location(A, K), location(J, K) )
%   | | | then return -0.012368034094137646;  // std dev = 2.638, 62.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | | | else return 0.17608239872375261;  // std dev = 1.181, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.007061917989500336;  // std dev = 1.926, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.1209290005345722;  // std dev = 4.046, 84.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=31 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10690040116873006;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), enzyme(D, F) )
%   | | then return -0.0746039368603952;  // std dev = 0.606, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.21771549759467262;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4052590550160829;  // std dev = 0.289, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), complex(G, J) )
%   | | | then return 0.05153266753177811;  // std dev = 5.447, 200.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=62 */
%   | | | else return -0.0751010466969694;  // std dev = 2.492, 54.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.056072402671474834;  // std dev = 1.626, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.16393726530661387;  // std dev = 2.124, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09711486065808995;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.4384863312605467;  // std dev = 3.521, 103.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=92 */
%   | | | else return -0.13150314520270465;  // std dev = 1.724, 41.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.19507295905471617;  // std dev = 0.423, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | | else return -0.23189357676748032;  // std dev = 0.223, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(J, A) )
%   | | | then return -0.13180757567996443;  // std dev = 0.407, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.010641231781635941;  // std dev = 1.679, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return 0.08617317902042447;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then return -6.566018136976773E-4;  // std dev = 0.295, 124.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), interaction(G, A) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.1238068550400893;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.06366200969728346;  // std dev = 1.781, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( phenotype(E, H), phenotype(A, H) )
%   | | | then return 0.22339871843485087;  // std dev = 0.734, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.02905049374223286;  // std dev = 2.349, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.07855382435552558;  // std dev = 1.014, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.17959225801360093;  // std dev = 1.790, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.07956611396372111;  // std dev = 2.998, 58.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=22 */
%   | | | else return -0.054771052768393946;  // std dev = 1.067, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, C), interaction(C, A) )
%   | | then return 0.3024793577372412;  // std dev = 0.212, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else return -0.04262526186531935;  // std dev = 0.378, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return -0.08848689208644758;  // std dev = 0.235, 128.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=17 */
%   else if ( complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.47637833424246867;  // std dev = 0.182, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.2041869384203513;  // std dev = 0.062, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.527786655667617;  // std dev = 0.201, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1847903054562628;  // std dev = 0.177, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.1294334235477073;  // std dev = 3.273, 66.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=30 */
%   | | | else return 0.03806720116215485;  // std dev = 1.536, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '29.768', 'seconds']
Refined model CLL: -0.233234


******************************************
Best model found
******************************************
Results 

CLL : -0.224538 

AUC ROC : 0.966205 

AUC PR : 0.339642 

Precision : 0.394231 

Recall : 0.464151 

F1 : 0.426343 

Total Learning Time : 11.303 

Total Inference Time : 9.62540316581726 

Total revision time: 24.187472608566285
Best scored revision CLL: -0.233234


Results 

CLL : -0.224538 

AUC ROC : 0.966205 

AUC PR : 0.339642 

Precision : 0.394231 

Recall : 0.464151 

F1 : 0.426343 

Total Learning Time : 24.285821941375733 

Total Inference Time : 9.62540316581726 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.165
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2053187464202672;  // std dev = 7.750, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18925035736884882;  // std dev = 7.685, 257.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16241927564589503;  // std dev = 7.677, 256.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09664528662913992;  // std dev = 7.906, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11822158728668251;  // std dev = 7.677, 256.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08112534660398171;  // std dev = 7.765, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06638002207939918;  // std dev = 7.758, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04150015293933318;  // std dev = 7.824, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04414855753394797;  // std dev = 7.758, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.021031881773110845;  // std dev = 7.839, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.654', 'seconds']
Parameter learned model CLL:-0.382443 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.75, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.685, 165, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.677, 164, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.906, 195, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.677, 164, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.765, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.758, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.824, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.758, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.839, 185, 92]}]
{'': [-6.938893903907228e-18, 0.22664293342826716], 'false': [nan, 0.22664293342826716], 'true': [nan, -6.938893903907228e-18], 'true,false': [nan, -6.938893903907228e-18], 'true,false,false': [nan, -6.938893903907228e-18]}
{'': [0.0, 0.22982936910475457], 'false': [nan, 0.22982936910475713], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23022460937499925], 'false': [nan, 0.23022460937499925], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [-1.1564823173178713e-18, 0.21780038606757354], 'false': [nan, 0.2178003860675731], 'true': [nan, -1.1564823173178713e-18], 'true,false': [nan, -1.1564823173178713e-18], 'true,false,false': [nan, -1.1564823173178713e-18]}
{'': [0.0, 0.2302246093750003], 'false': [nan, 0.2302246093749985], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22584129388825872], 'false': [nan, 0.22584129388825872]}
{'': [0.0, 0.22624229747300695], 'false': [nan, 0.22624229747300695], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22262479338843089], 'false': [nan, 0.22262479338843022], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22624229747300603], 'false': [nan, 0.2262422974730044], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.221819650979422], 'false': [nan, 0.221819650979422], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 5.521
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( complex(A, E), interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07833242133804422;  // std dev = 4.326, 109.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=24 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.16172036367094142;  // std dev = 5.960, 168.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=51 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(E, A), complex(A, F) )
%   | | | then return 0.7624301102507514;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8373007112956592;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14560760402167117;  // std dev = 0.040, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.21607601511543023;  // std dev = 2.926, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.12275073455502146;  // std dev = 6.681, 224.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=64 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(F, F), complex(A, H) )
%   | | | then return 0.23170069250317876;  // std dev = 1.126, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.08560975202209363;  // std dev = 1.897, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( interaction(I, D), interaction(J, I) )
%   | | | then return 0.36811305442940623;  // std dev = 2.053, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.1520323982312715;  // std dev = 3.426, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | else if ( interaction(A, K), phenotype(A, L) )
%   | | then if ( interaction(K, M), phenotype(M, L) )
%   | | | then return 0.05161988798577009;  // std dev = 1.996, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.12133917263300474;  // std dev = 2.350, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( interaction(A, N), interaction(N, P) )
%   | | | then return 0.17745638835571098;  // std dev = 3.163, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | | else return 0.10525925672608305;  // std dev = 3.825, 75.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=22 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D), enzyme(A, E) )
%   | then if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(F, A) )
%   | | | then return 0.5299063972777102;  // std dev = 0.092, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7775891906807679;  // std dev = 0.209, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.19987040036305553;  // std dev = 0.113, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.5159040167777704;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6376067842212798;  // std dev = 0.161, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.015619130547929131;  // std dev = 2.283, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return 0.1513866869052714;  // std dev = 5.708, 145.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=52 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), complex(A, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.37475594632362047;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.458149110163229;  // std dev = 0.179, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(D, F), location(A, G) )
%   | | | then return -0.4108506167520614;  // std dev = 0.162, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.4575073958843383;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.2228190162091808;  // std dev = 0.635, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6268331599226493;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.02436837304856597;  // std dev = 4.552, 125.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=31 */
%   | | | else return 0.12163538066754602;  // std dev = 4.962, 118.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=41 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.29479488660883824;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, D) )
%   | | then return 0.40804096185342037;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3306635804061859;  // std dev = 0.127, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.15687962986769793;  // std dev = 0.662, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.47308544028272337;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G) )
%   | | then if ( enzyme(A, H), interaction(G, G) )
%   | | | then return 0.14942446447158808;  // std dev = 1.744, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.00431437804198726;  // std dev = 4.524, 124.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=28 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.3540497550397261;  // std dev = 1.327, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.0829187337302632;  // std dev = 4.442, 95.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09611662879241084;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( location(A, F), phenotype(D, G) )
%   | | | then return -0.04039867652324818;  // std dev = 0.912, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.006935643969817742;  // std dev = 0.679, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( complex(A, H), complex(D, I) )
%   | | | then return 0.003081719090259664;  // std dev = 1.736, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.06557453365720162;  // std dev = 2.126, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.3839782102026095;  // std dev = 0.564, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.06250329965557302;  // std dev = 5.401, 151.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=51 */
%   | | else if ( phenotype(A, M), interaction(A, N) )
%   | | | then return 0.3469424050738347;  // std dev = 1.287, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.09616351475842032;  // std dev = 2.197, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08458354048694469;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), complex(A, F) )
%   | | then return 0.19577606961199295;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(D, G), interaction(H, A) )
%   | | | then return 0.24277051897493793;  // std dev = 0.152, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2893544787017365;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( interaction(A, J), enzyme(I, K) )
%   | | | then return -0.17608468563728272;  // std dev = 0.164, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.0017143447308781488;  // std dev = 3.129, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | else if ( interaction(A, L), phenotype(A, M) )
%   | | | then return -0.004256564555227146;  // std dev = 2.517, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.055675598781474;  // std dev = 5.491, 150.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.0847889205162326;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(E, B), interaction(A, G) )
%   | | | then return 0.17230566693739502;  // std dev = 0.065, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3350851267937053;  // std dev = 0.309, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, E), interaction(E, H) )
%   | | | then return -0.0784135490158233;  // std dev = 1.845, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.026270290529849333;  // std dev = 3.224, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6911880471095159;  // std dev = 0.467, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.28698359759601416;  // std dev = 0.042, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.2692505448626503;  // std dev = 0.135, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.02412104758883698;  // std dev = 4.806, 118.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=37 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07843675564840749;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.15241247691894816;  // std dev = 0.060, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.29327021562810635;  // std dev = 0.129, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(F, F), complex(A, H) )
%   | | | then return -0.2096610834314429;  // std dev = 0.309, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.03777289449253435;  // std dev = 4.130, 128.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=30 */
%   | | else if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return 0.10222678835673321;  // std dev = 1.909, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.01373784157293098;  // std dev = 4.853, 142.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=39 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.815', 'seconds']
Refined model CLL: -0.283993


******************************************
Best model found
******************************************
Results 

CLL : -0.297107 

AUC ROC : 0.888533 

AUC PR : 0.120528 

Precision : 0.121951 

Recall : 0.288809 

F1 : 0.17149 

Total Learning Time : 5.521 

Total Inference Time : 2.746668577194214 

Total revision time: 11.4067510471344
Best scored revision CLL: -0.283993


Results 

CLL : -0.297107 

AUC ROC : 0.888533 

AUC PR : 0.120528 

Precision : 0.121951 

Recall : 0.288809 

F1 : 0.17149 

Total Learning Time : 11.505100379943848 

Total Inference Time : 2.746668577194214 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.245
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19408643509951273;  // std dev = 7.557, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1378078044114553;  // std dev = 7.731, 282.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16094743786054355;  // std dev = 7.487, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13241877802834526;  // std dev = 7.503, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13309935441078907;  // std dev = 7.366, 233.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09749969121635531;  // std dev = 7.429, 240.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02063456037697071;  // std dev = 7.755, 286.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.013333780629171958;  // std dev = 7.772, 289.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.057035390305392585;  // std dev = 7.511, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.058071209852130844;  // std dev = 7.437, 241.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.759', 'seconds']
Parameter learned model CLL:-0.376647 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.557, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.731, 196, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.487, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.503, 163, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.366, 147, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.429, 154, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.755, 200, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.772, 203, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.86e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.511, 164, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.437, 155, 86]}]
{'': [0.0, 0.2230834960937506], 'false': [nan, 0.2230834960937506], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2119611689552831], 'false': [nan, 0.21196116895528275], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22695012211313148], 'false': [nan, 0.22695012211313148], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22609312753020228], 'false': [nan, 0.22609312753020264], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2328648529167975], 'false': [nan, 0.23286485291679712]}
{'': [0.0, 0.22993055555555414], 'false': [nan, 0.22993055555555414], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21027923125825293], 'false': [nan, 0.21027923125825293], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2090252750805193], 'false': [nan, 0.20902527508051916], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [1.1564823173178713e-18, 0.22566399999999964], 'false': [nan, 0.22566399999999903], 'true': [nan, 1.1564823173178713e-18], 'true,false': [nan, 1.1564823173178713e-18], 'true,false,false': [nan, 1.1564823173178713e-18]}
{'': [0.0, 0.22950706771577556], 'false': [nan, 0.22950706771577556], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 6.115
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( complex(A, E), interaction(A, F) )
%   | | | then return 0.07814893509951236;  // std dev = 2.929, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | | else return 0.18411578592824207;  // std dev = 6.306, 181.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=59 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), interaction(A, F) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.821650113130312;  // std dev = 0.110, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, G), interaction(E, G) )
%   | | | then return 0.016505793646487125;  // std dev = 2.396, 42.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | | | else return 0.19385077469904877;  // std dev = 4.437, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.182012158828557;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.08734593198116061;  // std dev = 3.572, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), enzyme(G, E) )
%   | | | then return 0.7332289946771193;  // std dev = 0.249, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8262521022253297;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.170212774101935;  // std dev = 0.067, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.0055989739792103605;  // std dev = 2.313, 42.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.7563774602082163;  // std dev = 0.234, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.12701676619394556;  // std dev = 5.894, 171.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=55 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(D, F) )
%   | | | then return 0.47826763284311935;  // std dev = 0.210, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return 0.2863226716773562;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.005683877229320879;  // std dev = 2.517, 54.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(A, K), interaction(K, I) )
%   | | | then return -0.019530724502777153;  // std dev = 0.907, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.1807358362457643;  // std dev = 4.859, 108.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=43 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.023598076038728814;  // std dev = 1.703, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.13323495225714818;  // std dev = 2.856, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( phenotype(D, E), complex(C, F) )
%   | | then return 0.06868510605682697;  // std dev = 0.617, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3473877857642648;  // std dev = 0.082, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.566944849428407;  // std dev = 0.223, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( enzyme(A, G), complex(A, H) )
%   | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.5866926089330928;  // std dev = 0.279, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.649063909320623;  // std dev = 0.090, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.15604301643851054;  // std dev = 0.096, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12601876040467228;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.266788033806148;  // std dev = 1.281, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.036332862433908424;  // std dev = 6.306, 211.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=56 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09579240705753513;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0.33435170517242113;  // std dev = 0.155, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6663675996600357;  // std dev = 0.462, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.1373032283115567;  // std dev = 0.105, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.20949299998823398;  // std dev = 0.095, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.24576942772476948;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.4687302074145003;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.28802542397296066;  // std dev = 0.835, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.03858631956553351;  // std dev = 5.944, 191.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=53 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08781039702179179;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.24540684129149587;  // std dev = 0.192, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.5441786666040866;  // std dev = 0.509, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( enzyme(E, F), phenotype(E, G) )
%   | | | then return -0.10850912784822583;  // std dev = 1.481, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | | else return 0.028912881220426043;  // std dev = 3.580, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6384214911112868;  // std dev = 0.481, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.25345369868169126;  // std dev = 0.038, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return 0.02457117269412446;  // std dev = 1.823, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.08801540638467094;  // std dev = 3.921, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.284369895229563;  // std dev = 0.230, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.050972391562496146;  // std dev = 2.238, 72.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.6442945163538345;  // std dev = 0.437, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.23220851614434412;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.031034146766364335;  // std dev = 2.275, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return 0.09505760370067991;  // std dev = 4.497, 110.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=43 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.39131445883760696;  // std dev = 1.118, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.25670136957036926;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then return 0.17289296526186487;  // std dev = 0.069, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.3525028503993791;  // std dev = 0.155, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then if ( phenotype(F, G) )
%   | | | then return 0.03703960321809984;  // std dev = 1.701, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return -0.08833846127584837;  // std dev = 2.046, 45.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.020663298983232437;  // std dev = 4.268, 117.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=36 */
%   | | | else return 0.11140751948982729;  // std dev = 3.088, 52.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07662055842795984;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(D, D), enzyme(A, F) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return -0.010252313582571976;  // std dev = 0.578, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.19564196825221156;  // std dev = 1.141, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( recursion_proteinclass(E, B), interaction(A, H) )
%   | | | then return 0.22430603510514674;  // std dev = 0.819, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.04252827608486458;  // std dev = 4.452, 150.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=35 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( complex(I, K), interaction(I, I) )
%   | | | then return 0.11507345329375471;  // std dev = 1.255, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.0454025243666161;  // std dev = 2.389, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.4606132386963598;  // std dev = 0.741, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10820176485620309;  // std dev = 2.540, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.943', 'seconds']
Refined model CLL: -0.275522


******************************************
Best model found
******************************************
Results 

CLL : -0.270994 

AUC ROC : 0.876622 

AUC PR : 0.234613 

Precision : 0.281755 

Recall : 0.431095 

F1 : 0.340782 

Total Learning Time : 6.115 

Total Inference Time : 2.648681640625 

Total revision time: 11.734657869338989
Best scored revision CLL: -0.275522


Results 

CLL : -0.270994 

AUC ROC : 0.876622 

AUC PR : 0.234613 

Precision : 0.281755 

Recall : 0.431095 

F1 : 0.340782 

Total Learning Time : 11.833007202148437 

Total Inference Time : 2.648681640625 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.128
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2431046873119018;  // std dev = 7.315, 226.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1422710354365124;  // std dev = 7.712, 275.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1378276224809362;  // std dev = 7.616, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11020588964679418;  // std dev = 7.644, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.117630268576165;  // std dev = 7.490, 245.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10007936826352401;  // std dev = 7.465, 242.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05168858731128211;  // std dev = 7.630, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05837222743035463;  // std dev = 7.532, 250.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05921255286724922;  // std dev = 7.456, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04509970345849931;  // std dev = 7.465, 242.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.679', 'seconds']
Parameter learned model CLL:-0.395256 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.315, 139, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.712, 188, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.616, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.644, 178, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.49, 158, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.465, 155, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.63, 176, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.532, 163, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.456, 154, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.465, 155, 87]}]
{'': [0.0, 0.23676482105098362], 'false': [nan, 0.23676482105098362], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21627768595041266], 'false': [nan, 0.2162776859504123], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.2222222222222232], 'false': [nan, 0.2222222222222232], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [0.0, 0.2205197579209687], 'false': [nan, 0.2205197579209691], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22900458142440652], 'false': [nan, 0.22900458142440724], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23026091113994948], 'false': [nan, 0.23026091113994948], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22137084532088055], 'false': [nan, 0.22137084532088055]}
{'': [0.0, 0.22689600000000082], 'false': [nan, 0.22689600000000026], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23067784645581096], 'false': [nan, 0.23067784645581266], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23026091113994956], 'false': [nan, 0.23026091113994956], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 10.541
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, E), location(A, F) )
%   | | then if ( enzyme(A, G), interaction(E, H) )
%   | | | then return 0.15226658215833588;  // std dev = 2.657, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.06867525088898604;  // std dev = 3.974, 95.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=20 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.21352083592595833;  // std dev = 5.265, 121.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, E), interaction(F, E) )
%   | | | then return 0.7971512033123993;  // std dev = 0.263, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.252072943590887;  // std dev = 1.250, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.15374382219085087;  // std dev = 0.030, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.27639911069234546;  // std dev = 3.144, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), phenotype(G, J) )
%   | | | then return 0.17520502990737477;  // std dev = 3.206, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return 0.4134535026802839;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.06521311186551115;  // std dev = 1.928, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.14005482538972636;  // std dev = 3.696, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.5361119778413781;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7210848716724467;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.31856337510976035;  // std dev = 0.754, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14007532066054706;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.11319181583158272;  // std dev = 2.773, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.2832842270882476;  // std dev = 2.508, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0.12535938432881938;  // std dev = 5.743, 156.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=50 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), enzyme(G, D) )
%   | | | then return 0.6040453725087589;  // std dev = 0.285, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.784128507219323;  // std dev = 0.056, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.20248919697754797;  // std dev = 0.139, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.4300103464089029;  // std dev = 0.065, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5959054793697217;  // std dev = 0.137, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.13451888627078148;  // std dev = 0.037, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.11047314128605235;  // std dev = 6.185, 184.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=61 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G), interaction(A, H) )
%   | | | then return 0.19709514353624225;  // std dev = 0.450, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5372878521104933;  // std dev = 0.426, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.12498666846233521;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.15672704938465;  // std dev = 2.706, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3688806249586408;  // std dev = 4.339, 95.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=61 */
%   | | | else return -0.21584825802870997;  // std dev = 0.289, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.05229394004343897;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.0045961613918779065;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.25422769783327864;  // std dev = 0.112, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.4404964180334685;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( phenotype(A, H), complex(F, I) )
%   | | | then return -0.1200570463801927;  // std dev = 0.844, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.006567944252430288;  // std dev = 3.052, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11988032648665219;  // std dev = 0.064, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.06364730022367047;  // std dev = 5.413, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(D, A), complex(D, C) )
%   | then return -0.047971235044044484;  // std dev = 0.270, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | else if ( complex(E, C), recursion_proteinclass(E, B) )
%   | | then return 0.6233468951471048;  // std dev = 0.080, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return -0.22232831126074445;  // std dev = 0.090, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(F, H), complex(F, I) )
%   | | then return 0.15640305265109458;  // std dev = 0.340, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 1.5758193680983458E-4;  // std dev = 0.363, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), interaction(L, A) )
%   | | | then return 0.24634553423819158;  // std dev = 1.302, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.006246753058394832;  // std dev = 2.100, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.17477290423910405;  // std dev = 2.489, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.10137464310304828;  // std dev = 1.038, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, G) )
%   | | | then return 0.392834454499706;  // std dev = 0.234, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.5913207436304454;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.15575759656268667;  // std dev = 0.067, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.23784637976147457;  // std dev = 0.061, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(I, J) )
%   | | | then return 0.2483468226948974;  // std dev = 0.264, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.04999421053977168;  // std dev = 0.652, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.052793899659522914;  // std dev = 4.016, 141.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=32 */
%   | | | else return 0.028817077018740023;  // std dev = 3.980, 101.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08302485146119298;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then if ( phenotype(A, F), phenotype(E, F) )
%   | | | then return 0.14361926754287968;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2184144097892139;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.32118217659022147;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.09202061591193858;  // std dev = 0.029, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.04082909780005265;  // std dev = 4.225, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
%   | | | else return 0.002237778830231689;  // std dev = 3.719, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return -0.0417636560342741;  // std dev = 0.755, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.38643411147513107;  // std dev = 0.701, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( interaction(G, A), interaction(G, D) )
%   | | | then return -0.1160821762199626;  // std dev = 0.876, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.08058005618030832;  // std dev = 2.304, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( location(A, I) )
%   | | | then return -0.08212581383437252;  // std dev = 2.406, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return 0.07430383336933799;  // std dev = 0.751, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.05410184967309159;  // std dev = 2.360, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return -0.031164384839411592;  // std dev = 3.540, 99.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=24 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.100', 'seconds']
Refined model CLL: -0.250363


******************************************
Best model found
******************************************
Results 

CLL : -0.254499 

AUC ROC : 0.950862 

AUC PR : 0.244088 

Precision : 0.305344 

Recall : 0.425532 

F1 : 0.355556 

Total Learning Time : 10.541 

Total Inference Time : 9.157985210418701 

Total revision time: 22.710003942489625
Best scored revision CLL: -0.250363


Results 

CLL : -0.254499 

AUC ROC : 0.950862 

AUC PR : 0.244088 

Precision : 0.305344 

Recall : 0.425532 

F1 : 0.355556 

Total Learning Time : 22.767592042922974 

Total Inference Time : 9.157985210418701 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.227
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16767274462332238;  // std dev = 8.474, 336.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18431428701559854;  // std dev = 8.236, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13167386365001088;  // std dev = 8.397, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13294284506387494;  // std dev = 8.257, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1217222942684623;  // std dev = 8.183, 292.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07527868288665576;  // std dev = 8.333, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06603767312902518;  // std dev = 8.300, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03315777892551838;  // std dev = 8.422, 327.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05041724119970664;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.047955509893492954;  // std dev = 8.221, 297.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.171', 'seconds']
Parameter learned model CLL:-0.377483 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.474, 232, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.236, 195, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.397, 219, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.257, 198, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.183, 188, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.333, 209, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.3, 204, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.422, 223, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.272, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.221, 193, 104]}]
{'': [nan, 0.21371882086167865], 'false': [nan, 0.21371882086167865]}
{'': [0.0, 0.22684310018903653], 'false': [nan, 0.22684310018903228], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21830938665183983], 'false': [nan, 0.21830938665183983]}
{'': [0.0, 0.22577957107144409], 'false': [nan, 0.22577957107144708], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22931131544379837], 'false': [nan, 0.22931131544379696], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [-1.1564823173178713e-18, 0.2218661005011791], 'false': [nan, 0.2218661005011791], 'true': [nan, -1.1564823173178713e-18], 'true,false': [nan, -1.1564823173178713e-18], 'true,false,false': [nan, -1.1564823173178713e-18]}
{'': [2.3129646346357427e-18, 0.22364648338674367], 'false': [nan, 0.22364648338674367], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [0.0, 0.21689158226486763], 'false': [nan, 0.21689158226486774], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22506925207756331], 'false': [nan, 0.22506925207756315]}
{'': [0.0, 0.22755047670872477], 'false': [nan, 0.22755047670872477], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 14.659
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7277141524908164;  // std dev = 1.615, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return -0.019044047356628024;  // std dev = 3.504, 114.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=14 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15525038437487385;  // std dev = 5.368, 138.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=41 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.1914822684328457;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14363222788387092;  // std dev = 0.026, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.7366049332824655;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( phenotype(D, F) )
%   | | | then return 0.21947341221095437;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( complex(A, H), enzyme(G, I) )
%   | | | then return 0.30274137923838196;  // std dev = 0.885, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.03126572222802552;  // std dev = 3.287, 87.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=17 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.7133953602636504;  // std dev = 0.910, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.10124857409815335;  // std dev = 6.706, 232.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=61 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5196417617949662;  // std dev = 0.244, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(E, F), enzyme(A, F) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.727921902551796;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.04979311134863013;  // std dev = 1.415, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( recursion_proteinclass(E, B), interaction(A, G) )
%   | | | then return 0.590322660519972;  // std dev = 1.546, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return 0.0637757240698329;  // std dev = 6.361, 231.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=55 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( phenotype(I, J) )
%   | | | then return 0.34784466140356063;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.144910930184033;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.15198947678238026;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.47268538289609435;  // std dev = 1.401, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15995028952442372;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.5556785228164818;  // std dev = 0.354, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.08763440611103816;  // std dev = 0.666, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.17103542963821816;  // std dev = 0.406, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0.15546856925837546;  // std dev = 6.206, 181.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=65 */
%   | else if ( interaction(F, A), enzyme(A, G) )
%   | | then return -0.005008548958091741;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.1424375092221318;  // std dev = 1.355, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.07465036444050674;  // std dev = 1.833, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1072854289082713;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, A), interaction(F, D) )
%   | | | then return 0.4237699713894447;  // std dev = 0.309, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.04653423425037714;  // std dev = 1.326, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.6684337151721577;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.059228902994847454;  // std dev = 2.912, 100.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=13 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7142285978289663;  // std dev = 0.475, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.22517946870598404;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.5654949973958715;  // std dev = 0.210, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.09265555852991718;  // std dev = 5.583, 148.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=47 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.23475347097278165;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.08485514844507365;  // std dev = 0.735, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(D, E), complex(A, F) )
%   | | | then return 0.5176826834766688;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.42010194088950753;  // std dev = 0.204, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then if ( complex(G, H), complex(A, H) )
%   | | | then return -0.08423070662708211;  // std dev = 0.792, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.0028465345105474216;  // std dev = 2.005, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.11718815465468986;  // std dev = 4.892, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
%   | | | else return 0.04793561295114697;  // std dev = 4.056, 90.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1028329481589713;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.15890116668755025;  // std dev = 0.691, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.6876366226841679;  // std dev = 0.449, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(H, A), enzyme(H, E) )
%   | | | then return -0.12288350633822354;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.22007185886790848;  // std dev = 0.181, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( complex(I, J), complex(A, J) )
%   | | | then return 0.2958010144542717;  // std dev = 0.259, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.017549394415156662;  // std dev = 1.194, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return -0.03022192142171764;  // std dev = 2.799, 82.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=20 */
%   | | | else return 0.035171924523191726;  // std dev = 5.470, 168.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=48 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return -0.014195121664065734;  // std dev = 0.800, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3844639541313604;  // std dev = 0.424, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( recursion_proteinclass(E, B) )
%   | | | then return 0.3243949466852044;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.08943981561309165;  // std dev = 2.683, 102.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=12 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.2550340031069349;  // std dev = 0.253, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(H, A), interaction(A, I) )
%   | | | then return 0.011988830400505421;  // std dev = 2.749, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | | else return 0.06947251635775863;  // std dev = 5.002, 128.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=43 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( enzyme(A, E), interaction(F, C) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2282344343454383;  // std dev = 0.127, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.09620028902022003;  // std dev = 0.307, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.31729573423847823;  // std dev = 0.143, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(C, H), complex(C, I) )
%   | | | then return 0.05183487910155863;  // std dev = 2.342, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return -0.05753733097613902;  // std dev = 2.339, 62.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   else if ( location(A, J) )
%   | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, A), interaction(L, K) )
%   | | | then return 0.4968164853834576;  // std dev = 2.340, 58.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=54 */
%   | | | else return -0.09869721848979578;  // std dev = 1.635, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else return -0.2137681981652925;  // std dev = 0.063, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return 0.4015239932022421;  // std dev = 1.109, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07292984406585468;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.3951571377491189;  // std dev = 2.772, 98.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=92 */
%   | | | else return -0.10964767533024022;  // std dev = 1.678, 44.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=5 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.10591261259805207;  // std dev = 0.159, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.19972603991208793;  // std dev = 0.404, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.38228930929635413;  // std dev = 0.763, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.31282541850095913;  // std dev = 0.479, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.0503477163614356;  // std dev = 1.211, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.036375061896800974;  // std dev = 0.994, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.046', 'seconds']
Refined model CLL: -0.209429


******************************************
Best model found
******************************************
Results 

CLL : -0.199695 

AUC ROC : 0.970409 

AUC PR : 0.37094 

Precision : 0.346369 

Recall : 0.467925 

F1 : 0.398074 

Total Learning Time : 14.659 

Total Inference Time : 12.347464323043823 

Total revision time: 30.3430906162262
Best scored revision CLL: -0.209429


Results 

CLL : -0.199695 

AUC ROC : 0.970409 

AUC PR : 0.37094 

Precision : 0.346369 

Recall : 0.467925 

F1 : 0.398074 

Total Learning Time : 30.40067871665955 

Total Inference Time : 12.347464323043823 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.149
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18908418689807358;  // std dev = 7.846, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19151514990401314;  // std dev = 7.685, 257.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16045679732387316;  // std dev = 7.702, 259.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10741567516729533;  // std dev = 7.859, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08953904045697038;  // std dev = 7.853, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07164191952792386;  // std dev = 7.859, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07632631278320946;  // std dev = 7.750, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05968692338696478;  // std dev = 7.758, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.032410757514524186;  // std dev = 7.846, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03921372576387765;  // std dev = 7.765, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.364', 'seconds']
Parameter learned model CLL:-0.379895 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.846, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.685, 165, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.702, 167, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.859, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.853, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.859, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.75, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.758, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.846, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.765, 175, 92]}]
{'': [nan, 0.221417110915585], 'false': [nan, 0.221417110915585]}
{'': [0.0, 0.22982936910475552], 'false': [nan, 0.22982936910475918], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2290365379168463], 'false': [nan, 0.2290365379168463], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22061224489795903], 'false': [nan, 0.22061224489796066]}
{'': [0.0, 0.22101463239167055], 'false': [nan, 0.22101463239167102], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22061224489795997], 'false': [nan, 0.22061224489795997]}
{'': [nan, 0.22664293342826616], 'false': [nan, 0.22664293342826616]}
{'': [0.0, 0.22624229747300614], 'false': [nan, 0.2262422974730044], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22141711091558505], 'false': [nan, 0.2214171109155832], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22584129388825852], 'false': [nan, 0.22584129388825852], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 6.708
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(D, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.7331489350995123;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.10205137412390239;  // std dev = 0.429, 123.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=30 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, G), complex(D, H) )
%   | | | then return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.12130682983635441;  // std dev = 2.714, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   else if ( phenotype(A, I), interaction(J, A) )
%   | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then return 0.07243464938522651;  // std dev = 0.410, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.1914822684328457;  // std dev = 2.708, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0.29404637099694825;  // std dev = 3.097, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.7771283072943795;  // std dev = 0.170, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.15524041947583977;  // std dev = 0.006, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.10650880888969023;  // std dev = 4.727, 111.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=31 */
%   | else if ( enzyme(A, F), complex(A, G) )
%   | | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.8075260516827676;  // std dev = 0.175, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.1673783615793118;  // std dev = 0.114, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.12342212862112584;  // std dev = 3.580, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | | else return 0.1932341792078549;  // std dev = 3.347, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1547333762821251;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.5719282580488614;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7784666577602138;  // std dev = 0.122, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.7643252877775959;  // std dev = 0.379, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.18058586306878496;  // std dev = 0.240, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.5642181501315533;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6818584003391829;  // std dev = 0.200, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.6802786804716222;  // std dev = 0.209, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09922940843336996;  // std dev = 5.472, 153.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=43 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.43804906038210556;  // std dev = 0.063, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(F, D), interaction(D, F) )
%   | | then return -0.10045983776575802;  // std dev = 0.216, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( interaction(G, D), location(G, H) )
%   | | | then return 0.0768923684295474;  // std dev = 2.564, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.20333860496939543;  // std dev = 1.907, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.5164003584962522;  // std dev = 0.096, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( interaction(L, A), interaction(K, M) )
%   | | | then return -0.06207544375723527;  // std dev = 1.103, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.11064367111379061;  // std dev = 3.710, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.16652953917178398;  // std dev = 2.580, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.12951380594622575;  // std dev = 2.922, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1607568583753781;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( enzyme(A, F) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.0031885873710030314;  // std dev = 1.419, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.12730383600378462;  // std dev = 2.417, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | else if ( location(D, E), interaction(D, I) )
%   | | | then return 0.04886441440940741;  // std dev = 3.233, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | | else return -0.028897139287519826;  // std dev = 1.982, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | else if ( phenotype(A, J) )
%   | | then if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.47403849648930124;  // std dev = 0.249, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03171488531617942;  // std dev = 2.257, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.1251630202136209;  // std dev = 2.651, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.2473233222592663;  // std dev = 2.776, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.3004768824258185;  // std dev = 0.094, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12926077286326212;  // std dev = 0.053, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.0300615948753714;  // std dev = 0.267, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(D, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.016510895463074743;  // std dev = 1.184, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.07314494918183403;  // std dev = 2.079, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else return -0.06851577572726918;  // std dev = 0.538, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.47593934588867115;  // std dev = 0.374, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, I), interaction(A, J) )
%   | | | then return 0.10521857798449687;  // std dev = 3.528, 73.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=26 */
%   | | | else return 0.05675486415187354;  // std dev = 4.644, 118.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.31853464039412016;  // std dev = 0.106, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( phenotype(A, F), interaction(D, G) )
%   | | then if ( interaction(H, E) )
%   | | | then return -0.04889708336891938;  // std dev = 1.398, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | | else return -0.3064842689970652;  // std dev = 0.274, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(D, I), complex(E, J) )
%   | | | then return -0.08642605066432209;  // std dev = 1.295, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | | else return 0.05069869625146155;  // std dev = 2.393, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | else if ( complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.5650683180483617;  // std dev = 0.778, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.21079425757234335;  // std dev = 0.404, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.40497119433355855;  // std dev = 0.734, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.068160948075449;  // std dev = 4.547, 104.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=36 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11869591316636474;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), interaction(F, D) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.29692538667022234;  // std dev = 0.498, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.029559604222004147;  // std dev = 3.004, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.35621205073441287;  // std dev = 0.207, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.04726646095453513;  // std dev = 3.000, 74.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), phenotype(H, I) )
%   | | | then return 0.09281329327303188;  // std dev = 2.930, 57.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=22 */
%   | | | else return -0.0068465878728564316;  // std dev = 3.016, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | else return 0.19366983324037879;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08242110436374613;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( enzyme(A, E), interaction(F, D) )
%   | | | then return 0.01066219350042718;  // std dev = 0.702, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.2740898288074677;  // std dev = 0.431, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(D, G), location(D, H) )
%   | | | then return 0.03285675874286834;  // std dev = 3.732, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   | | | else return -0.03609630787298977;  // std dev = 3.699, 115.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=27 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5463562474226792;  // std dev = 0.250, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.19970114704493508;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.03431060481556476;  // std dev = 1.680, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.062088185379141916;  // std dev = 1.955, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09398217767845563;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( interaction(D, D) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.170885628264137;  // std dev = 0.144, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.0425466495286397;  // std dev = 1.026, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.03304292750268987;  // std dev = 1.999, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | | else return 0.10857114921863903;  // std dev = 1.877, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5495885566465272;  // std dev = 0.799, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.22675453637744175;  // std dev = 0.404, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.043152451262933884;  // std dev = 2.518, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.011650016721613208;  // std dev = 3.661, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.520', 'seconds']
Refined model CLL: -0.244954


******************************************
Best model found
******************************************
Results 

CLL : -0.236109 

AUC ROC : 0.954196 

AUC PR : 0.217216 

Precision : 0.228715 

Recall : 0.494585 

F1 : 0.312785 

Total Learning Time : 6.708 

Total Inference Time : 2.667146921157837 

Total revision time: 12.420850879669189
Best scored revision CLL: -0.244954


Results 

CLL : -0.236109 

AUC ROC : 0.954196 

AUC PR : 0.217216 

Precision : 0.228715 

Recall : 0.494585 

F1 : 0.312785 

Total Learning Time : 12.478438980102538 

Total Inference Time : 2.667146921157837 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.175
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2164822684328461;  // std dev = 7.429, 240.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19410891742634553;  // std dev = 7.393, 236.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14867598457649267;  // std dev = 7.487, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08616086218109269;  // std dev = 7.701, 277.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09367834770779813;  // std dev = 7.572, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05903775073275708;  // std dev = 7.669, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06092522381352799;  // std dev = 7.594, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.051333937105262135;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02615011368054881;  // std dev = 7.662, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04330119195884366;  // std dev = 7.534, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.625', 'seconds']
Parameter learned model CLL:-0.369193 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.429, 154, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.393, 150, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.487, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.701, 191, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.572, 172, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.669, 186, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.594, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.579, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.662, 185, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.534, 167, 86]}]
{'': [0.0, 0.2299305555555561], 'false': [nan, 0.2299305555555561], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23161447859810333], 'false': [nan, 0.23161447859810333], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22695012211313167], 'false': [nan, 0.22695012211313167], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21407811909447524], 'false': [nan, 0.21407811909447563], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2222222222222215], 'false': [nan, 0.22222222222222116]}
{'': [nan, 0.21620891003460324], 'false': [nan, 0.21620891003460324]}
{'': [0.0, 0.2209304032530348], 'false': [nan, 0.2209304032530348], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22179156542090883], 'false': [nan, 0.22179156542090817], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21663648370801156], 'false': [nan, 0.21663648370801217], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2243746973081915], 'false': [nan, 0.2243746973081915], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 6.033
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.27481560176617903;  // std dev = 2.958, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.13493464938522662;  // std dev = 4.735, 112.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=31 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.20902612808196852;  // std dev = 3.603, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(F, G) )
%   | | | then return 0.42757709712051506;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7246530394913161;  // std dev = 0.060, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.15347603109409447;  // std dev = 0.069, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.16595207301779874;  // std dev = 5.367, 130.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=43 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.4200824885796212;  // std dev = 1.131, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14187049561500498;  // std dev = 0.060, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.07845522264140084;  // std dev = 4.273, 99.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( phenotype(E, F) )
%   | | | then return 0.5540870437340655;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6750314660063986;  // std dev = 0.164, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.7861109734720226;  // std dev = 0.100, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.70336965449691;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.7319812160534092;  // std dev = 0.252, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.13219787238126715;  // std dev = 0.104, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.13417951653329344;  // std dev = 6.417, 197.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=64 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( recursion_proteinclass(D, B), interaction(F, A) )
%   | | then if ( phenotype(F, E) )
%   | | | then return 0.4363261429827186;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6671758948046999;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38413497546696207;  // std dev = 1.173, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.030781266484420748;  // std dev = 4.118, 107.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=25 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), phenotype(I, J) )
%   | | | then return 0.6567383716116786;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4951228216179294;  // std dev = 0.228, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.03154877859597228;  // std dev = 2.132, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.14292519523036804;  // std dev = 4.496, 89.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=31 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.3623781635581747;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(E, D), interaction(A, E) )
%   | | then return -0.10004945335282453;  // std dev = 0.269, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | else if ( interaction(F, D) )
%   | | | then return 0.015197843110318672;  // std dev = 2.590, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.21229735586007795;  // std dev = 1.143, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.451076825681774;  // std dev = 0.091, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.22228355564622973;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.03467550864805551;  // std dev = 2.478, 48.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.19369849424303404;  // std dev = 1.750, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.08455674187647808;  // std dev = 4.787, 115.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=37 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return -0.01810790321746767;  // std dev = 0.236, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( enzyme(D, F), enzyme(A, F) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.040031908867426434;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.01882876589922662;  // std dev = 0.768, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(A, E), phenotype(A, G) )
%   | | | then return 0.02560318177341443;  // std dev = 1.246, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.173167124167768;  // std dev = 3.480, 53.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=23 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( interaction(H, J) )
%   | | | then return 0.08156110215933238;  // std dev = 3.451, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   | | | else return 0.4462089686518235;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.023957714512483085;  // std dev = 3.275, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | | else return -0.04439627355528921;  // std dev = 1.851, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( complex(E, F), interaction(E, G) )
%   | | then if ( enzyme(G, H), interaction(G, I) )
%   | | | then return 0.2311281371202934;  // std dev = 1.488, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.03850802233169457;  // std dev = 1.757, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.02708355037493167;  // std dev = 0.498, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3210003726701687;  // std dev = 1.282, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, A) )
%   | | | then return 0.26036693367644864;  // std dev = 0.131, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.4702108012066786;  // std dev = 0.143, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11422382704320676;  // std dev = 0.104, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.03214631785941654;  // std dev = 5.993, 190.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=58 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11244302647497578;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.0035011098871042534;  // std dev = 0.669, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2561808630001386;  // std dev = 0.216, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3538094447897413;  // std dev = 0.343, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, G), interaction(H, A) )
%   | | then if ( complex(H, I), interaction(A, J) )
%   | | | then return 0.0037901837707714687;  // std dev = 1.919, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.14698666373547012;  // std dev = 2.973, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.021593388266183233;  // std dev = 3.698, 101.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=25 */
%   | | | else return 0.043806040803264924;  // std dev = 4.066, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10557945623501952;  // std dev = 0.000516, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.17354181628580184;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.4065162151514316;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.08700853714904211;  // std dev = 2.822, 71.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=13 */
%   | | | else return 0.043662869808579224;  // std dev = 4.437, 89.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=30 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.7325388569438162;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.26937730703799834;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.3064884503633577;  // std dev = 0.260, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.03327019190409229;  // std dev = 3.347, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09568098304809697;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( enzyme(D, F), phenotype(A, G) )
%   | | then if ( complex(D, H), phenotype(D, I) )
%   | | | then return 0.021448094202446227;  // std dev = 1.987, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.22730298010788294;  // std dev = 1.513, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( complex(D, J) )
%   | | | then return 0.027768509852467968;  // std dev = 3.314, 70.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=26 */
%   | | | else return -0.04091974650827066;  // std dev = 4.013, 113.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=30 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( complex(A, L), location(A, M) )
%   | | | then return -0.10301854492132054;  // std dev = 1.263, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.13843004502890385;  // std dev = 1.819, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( interaction(A, N) )
%   | | | then return 0.4322518071914061;  // std dev = 1.207, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.020146607191451338;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.652', 'seconds']
Refined model CLL: -0.315168


******************************************
Best model found
******************************************
Results 

CLL : -0.32962 

AUC ROC : 0.755712 

AUC PR : 0.06828 

Precision : 0.107351 

Recall : 0.325088 

F1 : 0.161404 

Total Learning Time : 6.033 

Total Inference Time : 2.779796838760376 

Total revision time: 11.704679306030274
Best scored revision CLL: -0.315168


Results 

CLL : -0.32962 

AUC ROC : 0.755712 

AUC PR : 0.06828 

Precision : 0.107351 

Recall : 0.325088 

F1 : 0.161404 

Total Learning Time : 11.762267406463623 

Total Inference Time : 2.779796838760376 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.152
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18645082189196507;  // std dev = 7.644, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19944977868753705;  // std dev = 7.430, 238.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14558819206206414;  // std dev = 7.571, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17957035345085012;  // std dev = 7.230, 218.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09898867664131876;  // std dev = 7.515, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08418051717681116;  // std dev = 7.490, 245.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.028497771298370028;  // std dev = 7.712, 275.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), function(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.013677480232004003;  // std dev = 7.762, 283.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.040620801425546776;  // std dev = 7.594, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02566609267594411;  // std dev = 7.630, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.290', 'seconds']
Parameter learned model CLL:-0.376068 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.644, 178, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.43, 151, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.571, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.23, 131, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.515, 161, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.49, 158, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.712, 188, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), function(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.762, 196, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.594, 171, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.63, 176, 87]}]
{'': [0.0, 0.2205197579209692], 'false': [nan, 0.2205197579209692], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.23192218063696118], 'false': [nan, 0.2319221806369611]}
{'': [0.0, 0.2247750865051902], 'false': [nan, 0.2247750865051902], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2398156720814753], 'false': [nan, 0.23981567208147472]}
{'': [0.0, 0.22774128511966715], 'false': [nan, 0.2277412851196684], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22900458142440666], 'false': [nan, 0.22900458142440666], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2162776859504127], 'false': [nan, 0.2162776859504127], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21291313413827082], 'false': [nan, 0.21291313413827212]}
{'': [nan, 0.22349918875067643], 'false': [nan, 0.22349918875067484]}
{'': [nan, 0.221370845320882], 'false': [nan, 0.221370845320882]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 9.038
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), phenotype(E, G) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.16249676118646889;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( complex(A, H), phenotype(A, I) )
%   | | | then return 0.04564893509951222;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.14386322081379804;  // std dev = 3.381, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17814893509951232;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.15544623239680913;  // std dev = 3.932, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   | | | else return 0.24148226843284568;  // std dev = 3.766, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8133716791791411;  // std dev = 0.153, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, A) )
%   | then return -0.16870715251243035;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( location(A, D), interaction(E, A) )
%   | | then if ( complex(A, F), complex(E, F) )
%   | | | then return -0.01652344411905547;  // std dev = 1.298, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.16323147802705182;  // std dev = 6.626, 200.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=66 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.20114055421092272;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.5429718976076595;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14447367085184257;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.7933308914030055;  // std dev = 0.194, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.18629400908646898;  // std dev = 0.109, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( location(A, I), phenotype(G, J) )
%   | | | then return 0.1521861641577681;  // std dev = 4.574, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
%   | | | else return 0.4294926518022877;  // std dev = 1.499, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.11943265076141021;  // std dev = 4.308, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | | | else return 0.40077074101561067;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then if ( phenotype(A, D) )
%   | | then return 0.5232162492597654;  // std dev = 0.168, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.6178257672654262;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7145391199209415;  // std dev = 0.119, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.1808439228522432;  // std dev = 0.089, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), complex(A, H) )
%   | | | then return 0.12560760419363545;  // std dev = 1.849, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.008603168438041818;  // std dev = 2.887, 56.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | | else if ( interaction(I, A), location(A, J) )
%   | | | then return 0.11726636054122823;  // std dev = 5.732, 155.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=52 */
%   | | | else return -0.020617752802750296;  // std dev = 1.988, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14734546639322793;  // std dev = 0.036, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E), enzyme(A, F) )
%   | | | then return 0.06670407455816421;  // std dev = 1.014, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5602235950755285;  // std dev = 1.309, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.20257250528707807;  // std dev = 0.280, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0.03854223438514819;  // std dev = 3.777, 80.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.595585247415686;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.09899728598294875;  // std dev = 4.835, 112.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=37 */
%   | | | else return 0.2818841615785984;  // std dev = 1.209, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10593741475167015;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.3915226316630731;  // std dev = 0.150, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6696387309001853;  // std dev = 0.485, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return -0.1977433122937992;  // std dev = 0.323, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( interaction(G, A) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.38740468233439923;  // std dev = 0.285, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.008287690963240526;  // std dev = 5.503, 176.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=45 */
%   | | else return -0.1550645543450953;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10348532791528017;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), enzyme(G, D) )
%   | | | then return 0.3437545528314327;  // std dev = 0.201, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5303900408968114;  // std dev = 0.467, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.1514451618102801;  // std dev = 0.137, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.23469275196336348;  // std dev = 0.519, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(I, J) )
%   | | | then return 0.3605919587251319;  // std dev = 0.389, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.023206786559951415;  // std dev = 0.639, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.04583559538472594;  // std dev = 5.173, 137.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=42 */
%   | | | else return 0.2687971840341401;  // std dev = 1.312, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.24066364764812348;  // std dev = 0.243, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then return -0.1028723254473282;  // std dev = 0.182, 35.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | | else if ( interaction(C, H), phenotype(C, I) )
%   | | | then return 0.05008659676439632;  // std dev = 1.025, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.052619440345786514;  // std dev = 1.335, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.3376169632878513;  // std dev = 0.264, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( location(A, M), location(K, M) )
%   | | | then return 0.23522296983978014;  // std dev = 1.520, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.06844477727543788;  // std dev = 1.328, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.05851451928921374;  // std dev = 4.641, 131.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
%   | | | else return 0.001875995607378947;  // std dev = 1.806, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, C), interaction(C, A) )
%   | | then return 0.36118995297823275;  // std dev = 0.253, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return -0.13711671385664495;  // std dev = 0.745, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(C, A) )
%   | | then return -0.1700693379814493;  // std dev = 0.049, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.31680759595538305;  // std dev = 0.178, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.023393878802940207;  // std dev = 2.929, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   else if ( enzyme(A, F) )
%   | then return -0.0028103011084689524;  // std dev = 0.259, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(H, H), phenotype(A, I) )
%   | | | then return 0.2827011699191208;  // std dev = 1.330, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.08052076060641934;  // std dev = 3.758, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   | | else return 0.3118062564260104;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.02835238536937683;  // std dev = 0.233, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else if ( enzyme(F, C), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, F) )
%   | | | then return 0.38408272507873276;  // std dev = 0.398, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.02400846434920086;  // std dev = 1.055, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.1682837973742059;  // std dev = 0.220, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( interaction(H, A), location(H, I) )
%   | then if ( complex(A, J), interaction(A, K) )
%   | | then if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | | then return 0.423652889712177;  // std dev = 0.539, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.029278867840558897;  // std dev = 1.688, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( phenotype(H, M), enzyme(H, N) )
%   | | | then return -0.07768926739245138;  // std dev = 1.164, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.04035056506534612;  // std dev = 4.307, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
%   | else return 0.2984768276800705;  // std dev = 1.056, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.414', 'seconds']
Refined model CLL: -0.272025


******************************************
Best model found
******************************************
Results 

CLL : -0.299935 

AUC ROC : 0.887391 

AUC PR : 0.264491 

Precision : 0.269504 

Recall : 0.539007 

F1 : 0.359338 

Total Learning Time : 9.038 

Total Inference Time : 5.998668432235718 

Total revision time: 17.915845575332643
Best scored revision CLL: -0.272025


Results 

CLL : -0.299935 

AUC ROC : 0.887391 

AUC PR : 0.264491 

Precision : 0.269504 

Recall : 0.539007 

F1 : 0.359338 

Total Learning Time : 17.9428133392334 

Total Inference Time : 5.998668432235718 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.376
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19581127276185067;  // std dev = 8.300, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18634450023086965;  // std dev = 8.198, 294.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1201517518936394;  // std dev = 8.439, 330.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11771474484706614;  // std dev = 8.333, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08201697031451165;  // std dev = 8.428, 328.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08536168943660982;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.058528483371856024;  // std dev = 8.379, 320.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.048977093850010686;  // std dev = 8.366, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05866175801482894;  // std dev = 8.243, 300.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.020805736546876428;  // std dev = 8.403, 324.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.500', 'seconds']
Parameter learned model CLL:-0.366347 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.3, 204, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.198, 190, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.439, 226, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.333, 209, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.428, 224, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.313, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.379, 216, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.86e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.366, 214, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.243, 196, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.403, 220, 104]}]
{'': [0.0, 0.22364648338674364], 'false': [nan, 0.22364648338674364], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22860845018279471], 'false': [nan, 0.22860845018279521], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21583103764921854], 'false': [nan, 0.21583103764921854], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22186610050117786], 'false': [nan, 0.22186610050117653], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2165377751338487], 'false': [nan, 0.21653777513384817], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2229344432882428], 'false': [nan, 0.2229344432882428], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21937499999999938], 'false': [nan, 0.21937499999999938], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [1.1564823173178713e-18, 0.22008623076618694], 'false': [nan, 0.22008623076618763], 'true': [nan, 1.1564823173178713e-18], 'true,false': [nan, 1.1564823173178713e-18], 'true,false,false': [nan, 1.1564823173178713e-18]}
{'': [0.0, 0.22648888888888882], 'false': [nan, 0.22648888888888852], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21795458009449717], 'false': [nan, 0.21795458009449717], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 8.983
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, D), interaction(D, E) )
%   | | | then return 0.8236661764788221;  // std dev = 0.983, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | | else return 0.32873717039363;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0.174731849672378;  // std dev = 6.562, 199.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=63 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, H) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7840299621404385;  // std dev = 0.202, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( complex(A, E), interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5432861906627724;  // std dev = 1.647, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | | else return -0.02602312761483085;  // std dev = 3.200, 94.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=12 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.0608591755045341;  // std dev = 2.163, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.18936995739055418;  // std dev = 5.800, 147.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.5479283539941933;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.03285585476421345;  // std dev = 0.958, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, F), complex(D, G) )
%   | | | then return 0.6373094293570004;  // std dev = 0.075, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.784424160765961;  // std dev = 0.137, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.6820385052758943;  // std dev = 0.041, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.34314269748597276;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.025913238240340124;  // std dev = 2.787, 71.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | | | else return 0.13034593663563568;  // std dev = 6.555, 204.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=65 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(F, A), phenotype(A, E) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.4850064521899586;  // std dev = 0.167, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.049495311473826756;  // std dev = 2.832, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | | else if ( complex(D, G), location(A, H) )
%   | | | then return 0.3338327779110905;  // std dev = 1.914, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return 0.10843151413288185;  // std dev = 2.345, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( complex(A, K), interaction(I, J) )
%   | | | then return 0.17063231669193157;  // std dev = 2.403, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.0797095344451597;  // std dev = 5.258, 144.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=44 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.03646521241773438;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.0444243661929087;  // std dev = 1.868, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.309589891527516;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4104989207447464;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.16867754674431834;  // std dev = 0.147, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.05744968644343023;  // std dev = 2.948, 74.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), phenotype(F, H) )
%   | | | then return 0.43241902847372476;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5166704974438302;  // std dev = 0.101, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.12466838723805668;  // std dev = 5.647, 145.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=51 */
%   | | | else return 0.027949719093968355;  // std dev = 3.323, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.2581565539560048;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.009466443206095318;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, E), complex(D, F) )
%   | | | then return 0.41625591632012987;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.56121591765519;  // std dev = 0.253, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, G), location(A, H) )
%   | | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.6014279602275131;  // std dev = 0.883, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.18846612665037157;  // std dev = 0.583, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.07609569138720977;  // std dev = 5.555, 148.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=49 */
%   | | | else return 0.19851251478234747;  // std dev = 2.373, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, E) )
%   | | then if ( interaction(A, E), phenotype(A, F) )
%   | | | then return -0.02114659919498671;  // std dev = 0.754, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.265464010744172;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(D, G), phenotype(A, H) )
%   | | | then return 0.31988986129923674;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.41304638660643755;  // std dev = 0.257, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( location(A, I), phenotype(A, J) )
%   | | then if ( location(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.302472697433588;  // std dev = 4.077, 89.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=54 */
%   | | | else return -0.20548605145441162;  // std dev = 0.619, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.29667145185368665;  // std dev = 0.214, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.024186389088561654;  // std dev = 4.343, 120.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, A) )
%   | | then return 0.19626556257784536;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(E, A), enzyme(E, F) )
%   | | | then return 0.022295808634753132;  // std dev = 1.349, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.06981600113730052;  // std dev = 1.814, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.33944569746341263;  // std dev = 0.165, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.27401886074355813;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.04327426320594663;  // std dev = 3.551, 80.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
%   | | | else return 0.11594956462018219;  // std dev = 4.742, 119.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A) )
%   | | then return 0.16714775808784219;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, E), enzyme(D, E) )
%   | | | then return 0.22004489565292643;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.26814290882171427;  // std dev = 0.184, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( enzyme(A, G), interaction(A, F) )
%   | | | then return -0.16438137950877393;  // std dev = 0.802, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return -0.008391896539638129;  // std dev = 3.857, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   | | else if ( complex(A, H), enzyme(A, I) )
%   | | | then return 0.18320081633372517;  // std dev = 1.481, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.035755476104564074;  // std dev = 4.859, 140.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=46 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.3087917605548102;  // std dev = 1.245, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | | else return 0.550663033242156;  // std dev = 1.135, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.16969558817764094;  // std dev = 0.524, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.2454992916758084;  // std dev = 0.500, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( phenotype(A, J), interaction(K, A) )
%   | | then if ( interaction(A, L), interaction(L, K) )
%   | | | then return -0.04935223693117704;  // std dev = 1.736, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0.03196441936135502;  // std dev = 3.335, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   | | else if ( interaction(A, M), location(A, N) )
%   | | | then return 0.03638623819125902;  // std dev = 1.951, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.14526880906322145;  // std dev = 2.882, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.369', 'seconds']
Refined model CLL: -0.26577


******************************************
Best model found
******************************************
Results 

CLL : -0.286604 

AUC ROC : 0.939062 

AUC PR : 0.258399 

Precision : 0.269103 

Recall : 0.30566 

F1 : 0.286219 

Total Learning Time : 8.983 

Total Inference Time : 8.31376028060913 

Total revision time: 20.813313516616823
Best scored revision CLL: -0.26577


Results 

CLL : -0.286604 

AUC ROC : 0.939062 

AUC PR : 0.258399 

Precision : 0.269103 

Recall : 0.30566 

F1 : 0.286219 

Total Learning Time : 20.84028128051758 

Total Inference Time : 8.31376028060913 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.228
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20015637004375036;  // std dev = 7.780, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12686832400079104;  // std dev = 8.054, 312.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13518751838780396;  // std dev = 7.900, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16459554414371907;  // std dev = 7.598, 247.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10195683806262967;  // std dev = 7.803, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08557252550574852;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07671525773285842;  // std dev = 7.742, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.040186900656287196;  // std dev = 7.866, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05035242615318453;  // std dev = 7.758, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.024833612760051138;  // std dev = 7.846, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.599', 'seconds']
Parameter learned model CLL:-0.376518 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.78, 177, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.054, 220, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.9, 194, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.598, 155, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.803, 180, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.788, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.742, 172, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.866, 189, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.758, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.846, 186, 92]}]
{'': [0.0, 0.22503834938710165], 'false': [nan, 0.22503834938710165], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.20792241946088255], 'false': [nan, 0.20792241946087905], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.2182013790405407], 'false': [nan, 0.2182013790405407], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [0.0, 0.23373600616302342], 'false': [nan, 0.23373600616302467], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22383217993079702], 'false': [nan, 0.22383217993079677]}
{'': [2.3129646346357427e-18, 0.22463648834019265], 'false': [nan, 0.22463648834019265], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [0.0, 0.22704315886134058], 'false': [nan, 0.22704315886134058], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22020997707729018], 'false': [nan, 0.22020997707729045], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2262422974730069], 'false': [nan, 0.22624229747300498]}
{'': [0.0, 0.2214171109155834], 'false': [nan, 0.2214171109155834], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 5.452
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A), enzyme(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, F), phenotype(A, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.058148935099512356;  // std dev = 3.464, 75.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=15 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.26555634250691973;  // std dev = 2.553, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.1575501327043017;  // std dev = 5.919, 167.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=50 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.7350122940520396;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.8375082732506326;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.15487975274816057;  // std dev = 0.028, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.10506348062624576;  // std dev = 2.091, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( complex(A, H), phenotype(A, I) )
%   | | | then return 0.21431780408460444;  // std dev = 3.183, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return 0.1415488728565872;  // std dev = 6.126, 181.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=55 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then if ( phenotype(A, E), location(A, F) )
%   | | | then return 0.6050770094837125;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5515261231575115;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.6386096575973689;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6860952720210128;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( complex(I, J), interaction(K, I) )
%   | | | then return 0.34201548584349584;  // std dev = 0.826, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6962331891950568;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.06379402785636576;  // std dev = 5.441, 163.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=40 */
%   | | | else return 0.17623251811459645;  // std dev = 4.536, 90.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=32 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), location(A, G) )
%   | | | then return 0.45643154353179344;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.41047775941703224;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5558016291025296;  // std dev = 0.083, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.01583024208920125;  // std dev = 1.797, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | | else return 0.11854340909712048;  // std dev = 5.685, 154.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=50 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.27608237443615596;  // std dev = 2.178, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.1335369112541495;  // std dev = 2.987, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.3317601873072193;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4627038691914883;  // std dev = 0.068, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( location(D, E), interaction(D, D) )
%   | | then if ( complex(D, F) )
%   | | | then return -0.07973937345685424;  // std dev = 2.033, 40.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   | | | else return 0.17750326731005467;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(D, G), interaction(D, H) )
%   | | | then return 0.20434699915887755;  // std dev = 2.835, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 0.016642239101509086;  // std dev = 3.125, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.41938037291833385;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.2911164772081576;  // std dev = 0.972, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.13088673369065637;  // std dev = 4.797, 102.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=36 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( enzyme(A, E), interaction(F, A) )
%   | | then if ( phenotype(F, G), location(F, H) )
%   | | | then return 0.06434507207861594;  // std dev = 1.940, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.4824496626506686;  // std dev = 1.175, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( phenotype(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.596473630031371;  // std dev = 1.308, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return -0.245443116803228;  // std dev = 0.248, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.2392427033466168;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3539681158809951;  // std dev = 0.118, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.01651606554600312;  // std dev = 1.836, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.11397208579061778;  // std dev = 5.035, 112.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12791463314217075;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.24763668976157277;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16399930795193537;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return -0.1428878612535444;  // std dev = 0.800, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.04976136109155984;  // std dev = 1.190, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( complex(H, I), enzyme(A, J) )
%   | | | then return -0.03161529597075415;  // std dev = 1.692, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.1155874140564045;  // std dev = 3.347, 55.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=23 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.012449760658225987;  // std dev = 2.955, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return 0.04521018756959128;  // std dev = 4.672, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11638929895652675;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.19987951980743954;  // std dev = 0.070, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14278967351020813;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.27470705235327525;  // std dev = 0.182, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( phenotype(G, I), complex(G, J) )
%   | | | then return -0.011147486606228899;  // std dev = 2.421, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return -0.13780910437195265;  // std dev = 0.484, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return -0.025555189876099702;  // std dev = 3.553, 77.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=22 */
%   | | | else return 0.07193147615646084;  // std dev = 5.278, 132.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=46 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20427277687947173;  // std dev = 0.069, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), enzyme(F, D) )
%   | | | then return 0.5576299329837148;  // std dev = 0.425, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6934039481854551;  // std dev = 0.310, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( enzyme(G, D), interaction(A, G) )
%   | | | then return -0.1467226655105942;  // std dev = 0.251, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.2771269295522438;  // std dev = 0.405, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( location(A, J), location(H, J) )
%   | | | then return -0.004599733319133453;  // std dev = 2.646, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | | else return 0.2972847923540606;  // std dev = 1.481, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.046411124086192614;  // std dev = 1.845, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.054870271311617765;  // std dev = 3.725, 92.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10107719465108418;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(G, E) )
%   | | | then return -0.022021496641773244;  // std dev = 1.888, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0.1747199358399017;  // std dev = 1.116, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return -0.08911984410979319;  // std dev = 1.919, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return -0.028829823264171044;  // std dev = 2.260, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( location(J, K) )
%   | | | then return 0.3158332139969589;  // std dev = 1.343, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.03613345465815913;  // std dev = 0.399, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.07800388811215216;  // std dev = 2.509, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return -0.01021510254542242;  // std dev = 4.133, 101.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=30 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.078', 'seconds']
Refined model CLL: -0.28958


******************************************
Best model found
******************************************
Results 

CLL : -0.280695 

AUC ROC : 0.934718 

AUC PR : 0.14895 

Precision : 0.158351 

Recall : 0.263538 

F1 : 0.197832 

Total Learning Time : 5.452 

Total Inference Time : 2.7020492553710938 

Total revision time: 11.261032037734985
Best scored revision CLL: -0.28958


Results 

CLL : -0.280695 

AUC ROC : 0.934718 

AUC PR : 0.14895 

Precision : 0.158351 

Recall : 0.263538 

F1 : 0.197832 

Total Learning Time : 11.287999801635742 

Total Inference Time : 2.7020492553710938 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.227
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2021489350995129;  // std dev = 7.511, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17298766875764005;  // std dev = 7.527, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17205715828932408;  // std dev = 7.384, 235.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11372275634238417;  // std dev = 7.557, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07840684775551153;  // std dev = 7.642, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09966630268647368;  // std dev = 7.437, 241.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05537037667553423;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05888132817852345;  // std dev = 7.495, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.049480244547757145;  // std dev = 7.479, 246.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.014056276091507374;  // std dev = 7.778, 290.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.624', 'seconds']
Parameter learned model CLL:-0.371844 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.511, 164, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.527, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.384, 149, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.557, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.642, 182, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.437, 155, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.579, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.495, 162, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.479, 160, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.778, 204, 86]}]
{'': [0.0, 0.22566400000000053], 'false': [nan, 0.22566400000000053], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22480473670949916], 'false': [nan, 0.22480473670950052]}
{'': [0.0, 0.23203259393390638], 'false': [nan, 0.23203259393390638], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22308349609374908], 'false': [nan, 0.22308349609374964], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2179215860993551], 'false': [nan, 0.21792158609935464], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22950706771577653], 'false': [nan, 0.22950706771577653], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.221791565420909], 'false': [nan, 0.221791565420909], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2265218522372538], 'false': [nan, 0.22652185223725357], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22737788353493305], 'false': [nan, 0.2273778835349342]}
{'': [nan, 0.2086087990487525], 'false': [nan, 0.2086087990487525]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 8.712
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(F, H), complex(H, G) )
%   | | | then return 0.03556828993822205;  // std dev = 3.008, 62.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
%   | | | else return 0.28672036367094084;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.20100607795665484;  // std dev = 5.616, 140.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=48 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.7231348391360133;  // std dev = 0.046, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.4932726872238381;  // std dev = 0.894, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.15248934130793543;  // std dev = 0.037, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(E, F) )
%   | | | then return 0.7530460172114436;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2194734122109545;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.060939741161358994;  // std dev = 3.054, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return 0.13755398270090588;  // std dev = 6.015, 171.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1443828114462798;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.5611974257818286;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( complex(D, E), interaction(F, A) )
%   | | | then return -0.05040647635683429;  // std dev = 0.931, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.09133530728586964;  // std dev = 2.793, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.5771441982505289;  // std dev = 0.101, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.17759572182507924;  // std dev = 3.712, 60.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.6311074326836928;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12925843401483023;  // std dev = 4.815, 107.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=34 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14102182740230398;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.430928431044091;  // std dev = 0.120, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.7355394378215966;  // std dev = 0.361, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(D, F), complex(F, G) )
%   | | | then return -0.007394750311460997;  // std dev = 3.061, 71.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=13 */
%   | | | else return 0.08811381873300125;  // std dev = 3.572, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( location(A, J), location(H, J) )
%   | | | then return 0.36262982383097186;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.07691553811668629;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.47893198366185147;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0894468664374881;  // std dev = 3.454, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11665809960256095;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.3625007106953426;  // std dev = 0.962, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.6517883242726252;  // std dev = 1.841, 47.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=44 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.17432293190661288;  // std dev = 0.169, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.23184346679061477;  // std dev = 0.523, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.3251275461511367;  // std dev = 0.051, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.081848617804963;  // std dev = 1.767, 39.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.031360420622235236;  // std dev = 3.305, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return 0.13270716118661122;  // std dev = 1.957, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10516366381732331;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.5265400597058301;  // std dev = 2.125, 72.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=69 */
%   | | | else return 0.08678050354600801;  // std dev = 2.616, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.17374043722354562;  // std dev = 0.356, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.21772084835032915;  // std dev = 0.524, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( interaction(I, A) )
%   | | then return 0.2791523657425772;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.07660119924249327;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1025071667389433;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(F, A) )
%   | | then if ( interaction(D, F) )
%   | | | then return 0.17644970226302986;  // std dev = 0.118, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.06196923094742934;  // std dev = 0.687, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.3944700429209982;  // std dev = 0.150, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), interaction(A, H) )
%   | | then if ( interaction(A, G), interaction(H, G) )
%   | | | then return -0.11831570508535186;  // std dev = 0.103, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.008077151946028953;  // std dev = 3.090, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.11627826926201339;  // std dev = 1.656, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.023663957707563802;  // std dev = 4.123, 133.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=41 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.0934533943020298;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E) )
%   | | then if ( interaction(A, E), interaction(F, A) )
%   | | | then return 0.13881485563722565;  // std dev = 0.012, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1906649048323881;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.33957021369807094;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.09930130366134149;  // std dev = 0.062, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.1609303075623697;  // std dev = 1.987, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.03250099703978503;  // std dev = 4.766, 189.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=59 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.2592567944910231;  // std dev = 0.137, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( enzyme(A, F), complex(A, G) )
%   | | then if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.553701054668227;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.16469471635920488;  // std dev = 0.087, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.019760889566937986;  // std dev = 0.279, 121.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=32 */
%   else if ( interaction(A, A) )
%   | then return -0.04076869756348429;  // std dev = 0.094, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6179212331979287;  // std dev = 0.095, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.22203710350408407;  // std dev = 0.138, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.09969365918099883;  // std dev = 2.376, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return 0.03722317074569165;  // std dev = 2.351, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.11718676417341456;  // std dev = 0.144, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, D), interaction(F, A) )
%   | | then if ( interaction(G, F) )
%   | | | then return -0.07180357771642247;  // std dev = 0.678, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return -0.24024214499761945;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(H, A), interaction(H, D) )
%   | | | then return 0.08429431377938496;  // std dev = 0.869, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.04100735397999769;  // std dev = 2.100, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | else if ( interaction(I, A), enzyme(A, J) )
%   | | then if ( phenotype(I, K), phenotype(A, K) )
%   | | | then return -0.08998262938625921;  // std dev = 1.248, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.003896945353957527;  // std dev = 2.306, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return -0.026767927604203115;  // std dev = 1.346, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.03398356730820171;  // std dev = 3.413, 94.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=30 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '36.747', 'seconds']
Refined model CLL: -0.223419


******************************************
Best model found
******************************************
Results 

CLL : -0.241205 

AUC ROC : 0.979605 

AUC PR : 0.249088 

Precision : 0.24575 

Recall : 0.561837 

F1 : 0.341935 

Total Learning Time : 8.712 

Total Inference Time : 4.944567441940308 

Total revision time: 16.656366933822632
Best scored revision CLL: -0.223419


Results 

CLL : -0.241205 

AUC ROC : 0.979605 

AUC PR : 0.249088 

Precision : 0.24575 

Recall : 0.561837 

F1 : 0.341935 

Total Learning Time : 16.68333469772339 

Total Inference Time : 4.944567441940308 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.141
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16886322081379787;  // std dev = 7.744, 280.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19732115724483507;  // std dev = 7.456, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.166999269993113;  // std dev = 7.465, 242.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10974272733373173;  // std dev = 7.637, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11160702221395111;  // std dev = 7.515, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05512080395534781;  // std dev = 7.719, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08718090996394454;  // std dev = 7.473, 243.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07259530433257921;  // std dev = 7.456, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.047281803538496966;  // std dev = 7.515, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.024909673761010973;  // std dev = 7.586, 257.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.693', 'seconds']
Parameter learned model CLL:-0.387837 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.744, 193, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.456, 154, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.465, 155, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.637, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.515, 161, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.719, 189, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.473, 156, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.456, 154, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.515, 161, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.586, 170, 87]}]
{'': [0.0, 0.21417091836734786], 'false': [nan, 0.21417091836734786], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2306778464558109], 'false': [nan, 0.23067784645581066], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23026091113994832], 'false': [nan, 0.23026091113994832], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [-1.1564823173178713e-18, 0.22094524793388493], 'false': [nan, 0.22094524793388418], 'true': [nan, -1.1564823173178713e-18], 'true,false': [nan, -1.1564823173178713e-18], 'true,false,false': [nan, -1.1564823173178713e-18]}
{'': [0.0, 0.22774128511966762], 'false': [nan, 0.22774128511966693], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21585538752362812], 'false': [nan, 0.21585538752362812], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2298430117360161], 'false': [nan, 0.2298430117360161], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.23067784645581133], 'false': [nan, 0.23067784645581174]}
{'': [nan, 0.22774128511966774], 'false': [nan, 0.22774128511966604]}
{'': [0.0, 0.22392466199336852], 'false': [nan, 0.22392466199336852], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 7.852
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( enzyme(A, E), complex(A, F) )
%   | | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.14183687836192269;  // std dev = 5.353, 141.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=40 */
%   | | | else return 0.23519811542738056;  // std dev = 3.785, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E) )
%   | | then return 0.7329193997746851;  // std dev = 0.101, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5297323410353989;  // std dev = 0.803, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.16810245335205828;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.15995368229926293;  // std dev = 2.526, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.2033183313630802;  // std dev = 4.464, 91.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=34 */
%   | | | else return 0.14794976287097186;  // std dev = 4.584, 101.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=32 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then return 0.5520437342078007;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.663873403331688;  // std dev = 0.131, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), location(E, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1614182119650988;  // std dev = 0.077, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.07979863231005986;  // std dev = 4.626, 115.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=31 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.17873226178106275;  // std dev = 4.974, 112.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=42 */
%   | | | else return -0.015481719510296673;  // std dev = 1.490, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.2638381664306417;  // std dev = 0.676, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.6658787939646122;  // std dev = 0.321, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.08199633264157934;  // std dev = 1.518, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return 0.04266940703358047;  // std dev = 3.033, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4493589004145734;  // std dev = 0.106, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.14609030449703167;  // std dev = 3.378, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | | | else return 0.07500811425296705;  // std dev = 5.088, 128.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=37 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.3210815363774972;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.42429714386087064;  // std dev = 0.222, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1302370761659281;  // std dev = 0.724, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( location(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6457335938467389;  // std dev = 1.374, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | | | else return -0.1967771619505989;  // std dev = 0.350, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.3092947645393455;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.033213092319119314;  // std dev = 5.675, 175.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=44 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), phenotype(D, H) )
%   | | | then return 0.60244698672961;  // std dev = 0.605, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.21621654199077692;  // std dev = 0.725, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.21794301974646949;  // std dev = 0.272, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.09878017153357732;  // std dev = 4.279, 109.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=40 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( complex(A, K), interaction(A, L) )
%   | | | then return -0.08745511883493239;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.048812673548756534;  // std dev = 4.142, 100.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=29 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.04247546913561646;  // std dev = 0.949, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.27361413110587884;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.23289827850260364;  // std dev = 0.200, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5925403005078491;  // std dev = 0.883, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.1886925193429139;  // std dev = 0.384, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.05260653833489644;  // std dev = 4.612, 128.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=41 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.28529343087784104;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.12918483068890566;  // std dev = 1.190, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.03165692509166086;  // std dev = 3.792, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.26109746162777997;  // std dev = 0.121, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then if ( phenotype(D, E), complex(D, F) )
%   | | | then return 0.37023804601905647;  // std dev = 0.797, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.5866358373702203;  // std dev = 0.327, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.15357500878721456;  // std dev = 0.247, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0.048222776232012134;  // std dev = 5.639, 179.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=57 */
%   else if ( phenotype(A, G) )
%   | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.4611152601089632;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.15639363926859534;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( enzyme(A, I) )
%   | | then return -0.08664901201511324;  // std dev = 0.309, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.0842328258616681;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then return -0.02437477172718521;  // std dev = 0.241, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, E) )
%   | | | then return 0.29196062799397593;  // std dev = 1.023, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.09994062116743922;  // std dev = 0.456, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.1380835159516286;  // std dev = 0.139, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 3.689291888771227E-4;  // std dev = 2.991, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( location(A, J), location(H, J) )
%   | | | then return -0.005505484637782201;  // std dev = 1.916, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.22012114692063028;  // std dev = 0.788, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.08192302953918768;  // std dev = 1.689, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.1329998824488911;  // std dev = 3.711, 60.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=25 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08298521197277674;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), phenotype(G, D) )
%   | | | then return 0.35076845260901646;  // std dev = 0.253, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5127738780733596;  // std dev = 0.294, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.16360956951935374;  // std dev = 0.065, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.22774219450164837;  // std dev = 0.109, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(A, I), complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.45882851065160896;  // std dev = 0.969, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.2221473318825228;  // std dev = 0.356, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(A, L), interaction(L, A) )
%   | | | then return -0.058247952782866874;  // std dev = 1.596, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.026143245791723065;  // std dev = 4.972, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.221', 'seconds']
Refined model CLL: -0.25596


******************************************
Best model found
******************************************
Results 

CLL : -0.261153 

AUC ROC : 0.916466 

AUC PR : 0.231825 

Precision : 0.234811 

Recall : 0.507092 

F1 : 0.320988 

Total Learning Time : 7.852 

Total Inference Time : 5.576549053192139 

Total revision time: 16.295845716476443
Best scored revision CLL: -0.25596


Results 

CLL : -0.261153 

AUC ROC : 0.916466 

AUC PR : 0.231825 

Precision : 0.234811 

Recall : 0.507092 

F1 : 0.320988 

Total Learning Time : 16.39204356002808 

Total Inference Time : 5.576549053192139 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.196
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17619174855517042;  // std dev = 8.422, 327.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17518894586253417;  // std dev = 8.286, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1485480678032081;  // std dev = 8.293, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10683462632098559;  // std dev = 8.403, 324.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10608164476792303;  // std dev = 8.293, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0968388933871418;  // std dev = 8.228, 298.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.039598109418101754;  // std dev = 8.468, 335.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.054592876768600224;  // std dev = 8.327, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0206003175951269;  // std dev = 8.468, 335.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05026484671004069;  // std dev = 8.257, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.092', 'seconds']
Parameter learned model CLL:-0.366594 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.422, 223, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.286, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.293, 203, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.403, 220, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.293, 203, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.228, 194, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.468, 231, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.327, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.468, 231, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.257, 198, 104]}]
{'': [0.0, 0.21689158226486796], 'false': [nan, 0.21689158226486796], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [-2.3129646346357427e-18, 0.2243581528471956], 'false': [nan, 0.22435815284719732], 'true': [nan, -2.3129646346357427e-18], 'true,false': [nan, -2.3129646346357427e-18], 'true,false,false': [nan, -2.3129646346357427e-18]}
{'': [0.0, 0.2240023766830426], 'false': [nan, 0.2240023766830426], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [-1.1564823173178713e-18, 0.21795458009449764], 'false': [nan, 0.2179545800944975], 'true': [nan, -1.1564823173178713e-18], 'true,false': [nan, -1.1564823173178713e-18], 'true,false,false': [nan, -1.1564823173178713e-18]}
{'': [0.0, 0.22400237668304288], 'false': [nan, 0.2240023766830408], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22719697310931875], 'false': [nan, 0.22719697310931875]}
{'': [0.0, 0.2140699487636439], 'false': [nan, 0.2140699487636439], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2222222222222225], 'false': [nan, 0.22222222222222252]}
{'': [nan, 0.21406994876364535], 'false': [nan, 0.214069948763646]}
{'': [nan, 0.2257795710714455], 'false': [nan, 0.2257795710714455]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 12.5
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), interaction(D, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, G), complex(A, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.643863220813798;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return -0.03415875720818003;  // std dev = 2.499, 65.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=7 */
%   | | else if ( interaction(J, A), location(A, K) )
%   | | | then return 0.2045176501833125;  // std dev = 6.366, 179.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=62 */
%   | | | else return 0.3581489350995123;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.8468212209937979;  // std dev = 0.038, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.2785293312899486;  // std dev = 1.009, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7697684985014484;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.281935137473659;  // std dev = 1.469, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.054118167550434255;  // std dev = 3.946, 103.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=22 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.0067224769393046035;  // std dev = 2.024, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return 0.16215229887071958;  // std dev = 6.033, 165.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=55 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), interaction(A, F) )
%   | | | then return 0.7149396319158224;  // std dev = 1.213, 51.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=50 */
%   | | | else return 0.35331366659796704;  // std dev = 4.560, 86.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=47 */
%   | | else return -0.17919796979227748;  // std dev = 0.263, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( phenotype(H, I) )
%   | | | then return 0.08082702063009878;  // std dev = 1.617, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.18903521117082187;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.004620717596379862;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.4269593464624324;  // std dev = 0.165, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.13097674187407551;  // std dev = 0.594, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4389267196304278;  // std dev = 0.161, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5944196650047178;  // std dev = 0.071, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( complex(A, I), location(H, J) )
%   | | | then return -0.030796672805181464;  // std dev = 1.701, 40.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | | else return 0.09159945143805423;  // std dev = 5.754, 194.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=61 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.028715090923690997;  // std dev = 1.467, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.1868740094800424;  // std dev = 2.903, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), interaction(A, D) )
%   | | then return 0.15101396548433246;  // std dev = 0.673, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3634660683581038;  // std dev = 0.187, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4475597741979067;  // std dev = 0.074, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5839413820057391;  // std dev = 2.301, 62.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=56 */
%   | | | else return -0.18358866571979077;  // std dev = 0.479, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.02684839479717298;  // std dev = 2.369, 49.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | | else return 0.07466950856091113;  // std dev = 3.494, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( phenotype(C, E) )
%   | then if ( location(A, F), interaction(C, G) )
%   | | then return 0.05124491877744632;  // std dev = 0.307, 109.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=37 */
%   | | else return 0.23275054702897227;  // std dev = 1.141, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.023187520289370156;  // std dev = 0.263, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then return 0.4875788983677658;  // std dev = 0.240, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.2043167353933811;  // std dev = 0.084, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( phenotype(A, J), location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.2637348192014116;  // std dev = 2.659, 40.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=25 */
%   | | | else return -0.15386673351803581;  // std dev = 0.059, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.35950510299518645;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11465110435173999;  // std dev = 3.286, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08219783780781718;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), phenotype(A, F) )
%   | | then if ( phenotype(D, F) )
%   | | | then return 0.2729807484461487;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.21779912171434757;  // std dev = 0.539, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(D, G) )
%   | | | then return 0.4101172028622778;  // std dev = 0.125, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3367885281858;  // std dev = 0.227, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( enzyme(H, J), complex(A, K) )
%   | | | then return -0.08035022300129734;  // std dev = 1.764, 35.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
%   | | | else return 0.01647509897261989;  // std dev = 3.054, 91.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=26 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.27396201458154595;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.04729713914401827;  // std dev = 4.737, 160.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=51 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.4184343738326223;  // std dev = 0.137, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( enzyme(E, G), phenotype(A, H) )
%   | | | then return -0.4733958803883075;  // std dev = 0.151, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.07748795486081231;  // std dev = 0.706, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.013732726587628865;  // std dev = 0.328, 232.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=58 */
%   else if ( enzyme(A, I) )
%   | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.49869467248292493;  // std dev = 0.167, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.25718484932760133;  // std dev = 0.131, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(K, A), complex(A, L) )
%   | | then return 0.33057979661756137;  // std dev = 0.655, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.1746842824105528;  // std dev = 0.629, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08216303536009252;  // std dev = 1.209, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return -0.023132390396416257;  // std dev = 0.273, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), interaction(D, F) )
%   | | then if ( enzyme(F, E), phenotype(A, G) )
%   | | | then return 0.06189927546067958;  // std dev = 1.587, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.25342327080161975;  // std dev = 1.019, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.22764031108770555;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.03938772811931569;  // std dev = 2.173, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(H, I), interaction(I, I) )
%   | | | then return 0.037215085920543345;  // std dev = 1.775, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.16624825484770317;  // std dev = 3.130, 63.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=30 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.02057926538971246;  // std dev = 1.087, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.048460728474232856;  // std dev = 1.011, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(D, D), phenotype(D, C) )
%   | then return -0.05995516705798199;  // std dev = 0.225, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | else return 0.04784399850511633;  // std dev = 0.317, 140.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=53 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B), location(A, G) )
%   | | then return 0.3910059909464606;  // std dev = 0.125, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(F, E), location(A, H) )
%   | | | then return -0.1287472603496661;  // std dev = 0.887, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return 0.029572517058628768;  // std dev = 1.706, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.2890021618897102;  // std dev = 1.613, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.20923235048234082;  // std dev = 0.304, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.16372692099420635;  // std dev = 0.354, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.01724507818191387;  // std dev = 2.637, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.582', 'seconds']
Refined model CLL: -0.242281


******************************************
Best model found
******************************************
Results 

CLL : -0.253455 

AUC ROC : 0.970873 

AUC PR : 0.273609 

Precision : 0.241722 

Recall : 0.550943 

F1 : 0.336018 

Total Learning Time : 12.5 

Total Inference Time : 10.638198614120483 

Total revision time: 26.33913220977783
Best scored revision CLL: -0.242281


Results 

CLL : -0.253455 

AUC ROC : 0.970873 

AUC PR : 0.273609 

Precision : 0.241722 

Recall : 0.550943 

F1 : 0.336018 

Total Learning Time : 26.435330053329466 

Total Inference Time : 10.638198614120483 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.088
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19391535845717667;  // std dev = 7.817, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1698634175410293;  // std dev = 7.810, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13644023274644426;  // std dev = 7.859, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11320025715341436;  // std dev = 7.866, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09946230690929403;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06398991713682453;  // std dev = 7.932, 291.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.049574721218728086;  // std dev = 7.944, 293.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06037273084553392;  // std dev = 7.824, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.029801867052549377;  // std dev = 7.932, 291.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.021515156816891694;  // std dev = 7.944, 293.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.328', 'seconds']
Parameter learned model CLL:-0.35649 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.817, 182, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.81, 181, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.859, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.866, 189, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.832, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.932, 199, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.944, 201, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.824, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.932, 199, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.944, 201, 92]}]
{'': [nan, 0.2230273323032669], 'false': [nan, 0.2230273323032669]}
{'': [0.0, 0.2234298058473892], 'false': [nan, 0.22342980584738684], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2206122448979594], 'false': [nan, 0.2206122448979594]}
{'': [nan, 0.22020997707729054], 'false': [nan, 0.22020997707729023]}
{'': [nan, 0.22222222222222235], 'false': [nan, 0.22222222222222365]}
{'': [0.0, 0.21619961974941312], 'false': [nan, 0.21619961974941312], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21540146070425933], 'false': [nan, 0.21540146070425933], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [-1.1564823173178713e-18, 0.2226247933884304], 'false': [nan, 0.2226247933884288], 'true': [nan, -1.1564823173178713e-18], 'true,false': [nan, -1.1564823173178713e-18], 'true,false,false': [nan, -1.1564823173178713e-18]}
{'': [0.0, 0.2161996197494128], 'false': [nan, 0.21619961974941254], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21540146070425983], 'false': [nan, 0.21540146070425983], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 10.428
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F) )
%   | | then return 0.7025933795439562;  // std dev = 0.362, 45.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=38 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.14185106490048768;  // std dev = 5.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( interaction(G, A) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.1237739350995109;  // std dev = 0.442, 128.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=34 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.23314893509951234;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( complex(E, F) )
%   | | | then return 0.764534404893757;  // std dev = 0.168, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.4473172970379849;  // std dev = 0.741, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.15101267167276777;  // std dev = 0.126, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.09290415714316518;  // std dev = 4.500, 120.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=31 */
%   | else if ( phenotype(A, G), complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7497738690779141;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.13435760227079815;  // std dev = 0.120, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.09482346809273563;  // std dev = 1.607, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.23079752546267324;  // std dev = 4.141, 76.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=30 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6435696556676499;  // std dev = 0.091, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( complex(E, D) )
%   | | then if ( enzyme(A, F), phenotype(E, G) )
%   | | | then return 0.09325619114497705;  // std dev = 1.437, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.08029438106868267;  // std dev = 1.443, 35.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.06984378746896937;  // std dev = 1.508, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.25675777038217107;  // std dev = 1.515, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.6809884376535545;  // std dev = 0.911, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.1660235426201936;  // std dev = 0.188, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(M, A), interaction(A, N) )
%   | | | then return 0.06495261978440492;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.1367413663163414;  // std dev = 4.678, 117.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=39 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C) )
%   | then return 0.4127904143000623;  // std dev = 0.105, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(C, D), interaction(E, C) )
%   | | then return 0.5369112542253469;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.6680777247998818;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(A, H) )
%   | | | then return 0.6943452724556165;  // std dev = 0.660, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0.2121585190960682;  // std dev = 3.836, 77.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=36 */
%   | | else return -0.16130869361447905;  // std dev = 0.388, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( enzyme(A, I) )
%   | | then return -0.015583501317680486;  // std dev = 0.307, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else return -0.19770862242162404;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then return 0.042432885043143714;  // std dev = 0.312, 116.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=37 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(E, G), complex(G, H) )
%   | | then if ( interaction(E, E), enzyme(A, I) )
%   | | | then return 0.14000695153027345;  // std dev = 0.871, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.00798499732269575;  // std dev = 1.953, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( interaction(E, J) )
%   | | | then return 0.20498890764806277;  // std dev = 1.313, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.07032386805003472;  // std dev = 0.900, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then if ( phenotype(L, M) )
%   | | | then return 0.082362563132282;  // std dev = 1.029, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.39705626526039456;  // std dev = 1.078, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.058381678511022154;  // std dev = 1.245, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.10361984864005397;  // std dev = 3.279, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(E, F) )
%   | | | then return 0.3810943585837155;  // std dev = 0.913, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | | else return 0.6217229808493435;  // std dev = 0.131, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( phenotype(A, G), interaction(H, A) )
%   | | | then return -0.13053103304225894;  // std dev = 0.379, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.16362978094719055;  // std dev = 0.291, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.36842702021299456;  // std dev = 0.232, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11795330528204123;  // std dev = 0.013, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.1477854814549059;  // std dev = 2.061, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.08165560382147526;  // std dev = 3.969, 103.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=36 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12419974599351234;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.2698511782645819;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.031780812594163245;  // std dev = 0.354, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.02106219796935047;  // std dev = 1.401, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.040415346858347974;  // std dev = 1.208, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4665701637229782;  // std dev = 0.229, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.14744182041483314;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.368556629181054;  // std dev = 0.245, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.024954110380011666;  // std dev = 4.828, 213.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=64 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11924534590054145;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(F, A) )
%   | | then return 0.20696366583549525;  // std dev = 0.063, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.3513709612279167;  // std dev = 0.208, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G) )
%   | | then if ( location(A, H), location(G, H) )
%   | | | then return -0.019121783863885574;  // std dev = 3.044, 124.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=29 */
%   | | | else return 0.062028769393737034;  // std dev = 1.535, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.3190919138618004;  // std dev = 0.148, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.049370386791310436;  // std dev = 3.755, 110.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=36 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( enzyme(A, F), complex(A, G) )
%   | | then if ( phenotype(A, E) )
%   | | | then return -0.003219190567192854;  // std dev = 0.778, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.16871959704857445;  // std dev = 0.964, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(D, D), complex(A, H) )
%   | | | then return -0.0784947892956721;  // std dev = 0.881, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.01323037532446509;  // std dev = 2.421, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return -0.010159110534445525;  // std dev = 2.082, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | | else return 0.06666355271407126;  // std dev = 1.831, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.036224441910866344;  // std dev = 1.476, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.08967279001023729;  // std dev = 2.943, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09934080616271912;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, A) )
%   | then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then return 0.17115932082524168;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.10611441485873274;  // std dev = 0.051, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( complex(A, E) )
%   | | then if ( interaction(A, F), enzyme(A, G) )
%   | | | then return 0.06070135661274534;  // std dev = 1.402, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 0.004189962011156465;  // std dev = 2.588, 86.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.3880696563933318;  // std dev = 0.722, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.055200248016344364;  // std dev = 3.834, 116.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=42 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '220', 'milliseconds']
Refined model CLL: -0.22393


******************************************
Best model found
******************************************
Results 

CLL : -0.233464 

AUC ROC : 0.972094 

AUC PR : 0.322133 

Precision : 0.225352 

Recall : 0.693141 

F1 : 0.340124 

Total Learning Time : 10.428 

Total Inference Time : 7.880040407180786 

Total revision time: 21.186714616775514
Best scored revision CLL: -0.22393


Results 

CLL : -0.233464 

AUC ROC : 0.972094 

AUC PR : 0.322133 

Precision : 0.225352 

Recall : 0.693141 

F1 : 0.340124 

Total Learning Time : 21.28291246032715 

Total Inference Time : 7.880040407180786 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.159
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19408643509951273;  // std dev = 7.557, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1561515360810547;  // std dev = 7.629, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16242082368058267;  // std dev = 7.462, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08545120654421437;  // std dev = 7.749, 285.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10479833309277996;  // std dev = 7.557, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07181215305842174;  // std dev = 7.635, 267.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06933304126728482;  // std dev = 7.572, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.048067063306667254;  // std dev = 7.615, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.01970888522383572;  // std dev = 7.719, 280.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03182075910883581;  // std dev = 7.629, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.321', 'seconds']
Parameter learned model CLL:-0.358699 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.557, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.629, 180, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.462, 158, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.749, 199, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.557, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.635, 181, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.572, 172, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.615, 178, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.719, 194, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.629, 180, 86]}]
{'': [nan, 0.2230834960937506], 'false': [nan, 0.2230834960937506]}
{'': [0.0, 0.21878003278873792], 'false': [nan, 0.21878003278873745], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2282316581564109], 'false': [nan, 0.2282316581564109], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2106986765158507], 'false': [nan, 0.21069867651585047], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22308349609375056], 'false': [nan, 0.22308349609375078]}
{'': [nan, 0.21835065718413882], 'false': [nan, 0.21835065718413882]}
{'': [0.0, 0.22222222222222224], 'false': [nan, 0.22222222222222224], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21963957759412422], 'false': [nan, 0.21963957759412478], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21280612244898103], 'false': [nan, 0.21280612244898178], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2187800327887379], 'false': [nan, 0.2187800327887379]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 7.458
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7993254056877476;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( complex(A, F), interaction(G, A) )
%   | | then if ( enzyme(G, H), enzyme(D, I) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.07042249347191637;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( interaction(D, D), enzyme(D, J) )
%   | | | then return 0.011995088945666114;  // std dev = 1.840, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.17460463130204398;  // std dev = 4.134, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( phenotype(K, M), location(A, N) )
%   | | | then return 0.35814893509951223;  // std dev = 3.082, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.1706489350995123;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( complex(A, P) )
%   | | | then return 0.039967116917694;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.2029765213064089;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.17200352417196452;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.7587976311840067;  // std dev = 0.116, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, E), phenotype(E, G) )
%   | | | then return 0.30201663827229963;  // std dev = 2.363, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.06483472693723928;  // std dev = 1.704, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( enzyme(A, I), complex(H, J) )
%   | | | then return 0.1212521593522128;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2651816154643556;  // std dev = 2.741, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.10232134405736659;  // std dev = 4.794, 114.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=32 */
%   | | | else return 0.18968571298021947;  // std dev = 3.084, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1404370360885081;  // std dev = 0.036, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.5994781019021141;  // std dev = 0.136, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.35237983467926903;  // std dev = 0.656, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(D, G) )
%   | | | then return 0.82117195354306;  // std dev = 0.000490, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7123231139609272;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1820960950986216;  // std dev = 0.082, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6881583452180491;  // std dev = 0.048, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.09031469241954336;  // std dev = 6.763, 224.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=64 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14750671587590003;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( complex(E, D) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.45600015948571293;  // std dev = 0.150, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.022293200871924615;  // std dev = 1.918, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( interaction(E, F), enzyme(F, G) )
%   | | | then return 0.4562494478758898;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8006673468812767;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.6321005275703877;  // std dev = 0.120, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5151786025672326;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.025193734477895448;  // std dev = 5.034, 140.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=34 */
%   | | | else return 0.09200856406643458;  // std dev = 3.977, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( enzyme(A, E), interaction(D, C) )
%   | then if ( phenotype(D, F), location(A, G) )
%   | | then return 0.042728707379360444;  // std dev = 0.349, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.3320799667331789;  // std dev = 1.130, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( enzyme(D, H) )
%   | | then return 0.08266924756584378;  // std dev = 0.419, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0.002795577165965882;  // std dev = 0.360, 93.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=23 */
%   else if ( location(A, I) )
%   | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), interaction(K, J) )
%   | | | then return 0.6897655803774994;  // std dev = 1.426, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | | else return 0.186699717805688;  // std dev = 2.580, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | else return -0.23067814154464122;  // std dev = 0.043, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( interaction(A, L) )
%   | | then return 0.10627813912600255;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.08708904399430963;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3477849694483678;  // std dev = 0.218, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( enzyme(A, F), complex(D, E) )
%   | | then if ( enzyme(D, F) )
%   | | | then return 0.26151766761832884;  // std dev = 0.968, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.053877949643720245;  // std dev = 0.857, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( complex(D, E), interaction(G, A) )
%   | | | then return -0.13960277109820643;  // std dev = 0.716, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | | else return -0.05215755345062042;  // std dev = 2.153, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.1695734424407614;  // std dev = 0.040, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.06170989566049598;  // std dev = 1.881, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2154388541300796;  // std dev = 3.541, 55.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=24 */
%   | | | else return 0.05166087969975326;  // std dev = 3.621, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.0877422515631496;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.46537321444028434;  // std dev = 0.396, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, D), interaction(G, A) )
%   | | | then return -0.11424999869080306;  // std dev = 0.742, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.17972794585708027;  // std dev = 2.298, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), interaction(K, J) )
%   | | | then return 0.01337295727745642;  // std dev = 2.682, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return -0.08801811123365019;  // std dev = 0.852, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.24493263661878079;  // std dev = 1.057, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.030455135252622383;  // std dev = 4.821, 144.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10621350185520798;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, A) )
%   | then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.1963737634512902;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2582092162545869;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1387048697831028;  // std dev = 0.072, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.3245246481230382;  // std dev = 4.405, 109.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=75 */
%   | | | else return -0.22847441538887095;  // std dev = 0.525, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.01250360424189801;  // std dev = 1.227, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.12799653942683886;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, A), phenotype(A, F) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.0409462131390298;  // std dev = 1.055, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.3659681544963922;  // std dev = 0.518, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, H), phenotype(D, I) )
%   | | | then return 0.02141835733246694;  // std dev = 1.986, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.044375415441177554;  // std dev = 1.922, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(K, A), location(A, L) )
%   | | | then return -0.020534444326686156;  // std dev = 2.588, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.043105540528010786;  // std dev = 3.149, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.04210462101261114;  // std dev = 2.551, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | else return 0.21355776649715058;  // std dev = 1.411, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.33202761359583655;  // std dev = 0.300, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.2736334869734308;  // std dev = 0.169, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.11920130199584995;  // std dev = 1.563, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.01968473073364866;  // std dev = 2.144, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.20195582862905917;  // std dev = 0.043, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(A, K), location(A, L) )
%   | | | then return -0.10490234921418912;  // std dev = 1.111, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.04409538101328744;  // std dev = 3.688, 93.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=32 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.21169369690863898;  // std dev = 1.539, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.05450865339551461;  // std dev = 2.271, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.770', 'seconds']
Refined model CLL: -0.273874


******************************************
Best model found
******************************************
Results 

CLL : -0.276592 

AUC ROC : 0.925657 

AUC PR : 0.158973 

Precision : 0.159574 

Recall : 0.371025 

F1 : 0.223167 

Total Learning Time : 7.458 

Total Inference Time : 4.700766086578369 

Total revision time: 14.977642433166505
Best scored revision CLL: -0.273874


Results 

CLL : -0.276592 

AUC ROC : 0.925657 

AUC PR : 0.158973 

Precision : 0.159574 

Recall : 0.371025 

F1 : 0.223167 

Total Learning Time : 15.07384027671814 

Total Inference Time : 4.700766086578369 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.058
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21914478572191895;  // std dev = 7.456, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15639327224930163;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14855664034023852;  // std dev = 7.563, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10881963127334854;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07898146939996008;  // std dev = 7.712, 275.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07144463657347375;  // std dev = 7.672, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07153071492168389;  // std dev = 7.594, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.047202165145812144;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0613297009640725;  // std dev = 7.515, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03236340230234344;  // std dev = 7.608, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.338', 'seconds']
Parameter learned model CLL:-0.373988 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.456, 154, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.651, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.563, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.651, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.712, 188, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.672, 182, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.594, 171, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.651, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.515, 161, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.608, 173, 87]}]
{'': [nan, 0.23067784645581252], 'false': [nan, 0.23067784645581252]}
{'': [nan, 0.22009440895471805], 'false': [nan, 0.2200944089547173]}
{'': [nan, 0.22519995039990112], 'false': [nan, 0.22519995039990112]}
{'': [nan, 0.2200944089547182], 'false': [nan, 0.22009440895471966]}
{'': [0.0, 0.21627768595041422], 'false': [nan, 0.21627768595041502], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21881952985724368], 'false': [nan, 0.21881952985724368], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.22349918875067587], 'false': [nan, 0.22349918875067587], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [0.0, 0.22009440895471763], 'false': [nan, 0.2200944089547179], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22774128511966635], 'false': [nan, 0.2277412851196682], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22264792899408234], 'false': [nan, 0.22264792899408234]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 9.809
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, E), location(E, D) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995116;  // std dev = 2.06e-07, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else return -0.14185106490048763;  // std dev = 8.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( complex(A, J), complex(H, J) )
%   | | | then return -0.030739953789376676;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.21467067422994648;  // std dev = 5.136, 115.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=41 */
%   | | else if ( location(A, K) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( phenotype(D, E), location(D, F) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.7461114953671005;  // std dev = 0.081, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, G), phenotype(G, E) )
%   | | | then return 0.03463016760016691;  // std dev = 2.434, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | | else return 0.16215765478435368;  // std dev = 3.088, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | then return 0.8134213251210954;  // std dev = 0.113, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.16113986526351748;  // std dev = 0.069, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( interaction(I, A), enzyme(A, J) )
%   | then return 0.16039476499111857;  // std dev = 0.404, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then return 0.011867862912064991;  // std dev = 0.361, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.0362775811005428;  // std dev = 1.995, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.1479064227571355;  // std dev = 3.779, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, A) )
%   | then return 0.5689011497004136;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, E) )
%   | | then return 0.6573023044140051;  // std dev = 0.137, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7404804734582378;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.6480492479026476;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, G), interaction(H, A) )
%   | | then if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.013253886963086438;  // std dev = 2.859, 59.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | | else return 0.09979663631056236;  // std dev = 3.098, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | else if ( location(A, K) )
%   | | | then return 0.12398366508043526;  // std dev = 4.922, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
%   | | | else return 0.31262761820015394;  // std dev = 1.230, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( phenotype(D, E), phenotype(A, F) )
%   | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | then return 0.611224975077103;  // std dev = 0.294, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return -0.1734510327987806;  // std dev = 0.144, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( interaction(A, H) )
%   | | then return 0.5311322022300936;  // std dev = 0.827, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6006457099770673;  // std dev = 0.887, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.17490451368172932;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.5351778439735299;  // std dev = 0.075, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, K) )
%   | | then return 0.04692030029443902;  // std dev = 0.352, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | | else if ( location(A, L) )
%   | | | then return 0.10039042659318831;  // std dev = 4.046, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | | | else return 0.2663308147357706;  // std dev = 1.217, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1486875785558915;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( enzyme(D, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5140254725045562;  // std dev = 0.509, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.27124604186611045;  // std dev = 0.488, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.3194920371365552;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.018597178667144852;  // std dev = 2.579, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | else if ( interaction(G, A), location(G, H) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.23642102355164896;  // std dev = 1.287, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.09303264761146618;  // std dev = 5.178, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.12675659559899366;  // std dev = 1.292, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.47403049260081065;  // std dev = 0.745, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1212053831263815;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( complex(D, F), interaction(G, D) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.025705604028754277;  // std dev = 0.697, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.07006250421841481;  // std dev = 1.185, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( interaction(J, D), recursion_proteinclass(J, B) )
%   | | | then return 0.40340670223845576;  // std dev = 0.533, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.04063000843471411;  // std dev = 2.634, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | else if ( interaction(A, K), interaction(K, A) )
%   | | then if ( interaction(K, K) )
%   | | | then return 0.14999460960937824;  // std dev = 1.518, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.42123223000391735;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.08993267512200623;  // std dev = 4.634, 133.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=47 */
%   | | | else return 8.993023541475667E-4;  // std dev = 1.884, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), interaction(F, A) )
%   | | then return 0.058061595949474826;  // std dev = 0.617, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(D, A), complex(D, G) )
%   | | | then return 0.1605550387440361;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3631517656456837;  // std dev = 0.213, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5281139012114013;  // std dev = 2.082, 55.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=50 */
%   | | | else return -0.20145437282205073;  // std dev = 0.588, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return -0.00938276390773913;  // std dev = 3.495, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   | | | else return 0.08345229631876937;  // std dev = 1.557, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14595082438135434;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then return 0.15455147658025578;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.24353916685724442;  // std dev = 0.069, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.47481750766453007;  // std dev = 0.551, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.18983878161763554;  // std dev = 0.697, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( location(A, I) )
%   | | | then return 0.057131410071815915;  // std dev = 4.327, 127.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=43 */
%   | | | else return -0.08294210010346528;  // std dev = 1.452, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( complex(D, E) )
%   | | | then return 0.12257595551751677;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19086420115243402;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(D, F), enzyme(A, G) )
%   | | | then return -0.09618815005652542;  // std dev = 0.808, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.0072401135505449216;  // std dev = 1.909, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.18906129815777728;  // std dev = 0.078, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.2787417265419582;  // std dev = 0.150, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.023290997051897945;  // std dev = 4.782, 189.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=61 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), interaction(A, E) )
%   | then return 0.26678396489968;  // std dev = 0.285, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | else if ( interaction(C, D), interaction(D, A) )
%   | | then return -0.055568207529569806;  // std dev = 0.284, 104.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=21 */
%   | | else if ( complex(C, F) )
%   | | | then return -0.015368119920496137;  // std dev = 1.934, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | | | else return 0.057292545457015634;  // std dev = 2.986, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
%   else if ( phenotype(A, G) )
%   | then if ( phenotype(H, G), interaction(A, H) )
%   | | then return 0.06910200321234652;  // std dev = 0.543, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3048280573136569;  // std dev = 0.557, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return -0.02726942211718923;  // std dev = 1.254, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.27829858865491774;  // std dev = 0.263, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.01636111849142352;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.154', 'seconds']
Refined model CLL: -0.233603


******************************************
Best model found
******************************************
Results 

CLL : -0.251318 

AUC ROC : 0.97609 

AUC PR : 0.297329 

Precision : 0.36129 

Recall : 0.595745 

F1 : 0.449799 

Total Learning Time : 9.809 

Total Inference Time : 6.608120918273926 

Total revision time: 19.15301050376892
Best scored revision CLL: -0.233603


Results 

CLL : -0.251318 

AUC ROC : 0.97609 

AUC PR : 0.297329 

Precision : 0.36129 

Recall : 0.595745 

F1 : 0.449799 

Total Learning Time : 19.21147360038757 

Total Inference Time : 6.608120918273926 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.197
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17619174855517047;  // std dev = 8.422, 327.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1914840483784262;  // std dev = 8.183, 292.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13328200400988108;  // std dev = 8.372, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12777900573913323;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0945834590375836;  // std dev = 8.340, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06784656393957425;  // std dev = 8.397, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07489699987541747;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0622440272971982;  // std dev = 8.257, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05764004864475259;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.041965596846123984;  // std dev = 8.228, 298.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.284', 'seconds']
Parameter learned model CLL:-0.382564 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.422, 223, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.183, 188, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.372, 215, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.272, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.34, 210, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.397, 219, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.272, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.257, 198, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.206, 191, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.228, 194, 104]}]
{'': [0.0, 0.21689158226486793], 'false': [nan, 0.21689158226486793], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22931131544379812], 'false': [nan, 0.22931131544380004], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21973054510077464], 'false': [nan, 0.21973054510077464]}
{'': [nan, 0.22506925207756381], 'false': [nan, 0.22506925207756096]}
{'': [0.0, 0.2215100004056967], 'false': [nan, 0.221510000405694], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21830938665184255], 'false': [nan, 0.21830938665184255], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22506925207756182], 'false': [nan, 0.22506925207756182], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22577957107144317], 'false': [nan, 0.22577957107144422], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22825624820453785], 'false': [nan, 0.22825624820453833], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2271969731093188], 'false': [nan, 0.2271969731093188], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 11.161
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(D, F), interaction(A, G) )
%   | | | then return 0.02481560176617899;  // std dev = 2.236, 36.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | | else return 0.35814893509951234;  // std dev = 2.449, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( interaction(H, A), location(A, I) )
%   | | then if ( complex(A, J), interaction(A, H) )
%   | | | then return 0.25814893509951237;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.14724846116586277;  // std dev = 6.585, 211.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=61 */
%   | | else if ( interaction(K, A), enzyme(A, L) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.21529179224236947;  // std dev = 2.535, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.8354474012913313;  // std dev = 0.029, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, F), interaction(D, F) )
%   | | | then return 0.779367997144407;  // std dev = 0.120, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0885260908348747;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1484649426081151;  // std dev = 0.045, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.1563657878087595;  // std dev = 3.186, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6311008087539063;  // std dev = 1.004, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.1733505895838868;  // std dev = 6.644, 197.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=67 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), complex(A, E) )
%   | then return 0.37252093540525627;  // std dev = 0.787, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then return 0.5504215025082604;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7048157537483926;  // std dev = 0.043, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.8096216806769911;  // std dev = 0.086, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.1779393567954716;  // std dev = 0.225, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return 0.06852377119512713;  // std dev = 6.373, 214.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=56 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.4732846451752994;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.21448208057919418;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1053538403360727;  // std dev = 1.631, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.08211537392051144;  // std dev = 0.407, 127.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=41 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), complex(E, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.1322860890870769;  // std dev = 1.761, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.02180186794198721;  // std dev = 2.404, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( complex(E, I) )
%   | | | then return 0.18444060611510044;  // std dev = 3.050, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return 0.05440370604176284;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.6869616971130783;  // std dev = 0.434, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.19614857945858707;  // std dev = 0.058, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( location(A, M), interaction(N, A) )
%   | | | then return 0.24169988492725858;  // std dev = 2.712, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.4002266496667312;  // std dev = 1.188, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.39887394290046085;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.06171512645811979;  // std dev = 1.005, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.5079508872088625;  // std dev = 0.168, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.37849573907597844;  // std dev = 0.194, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), complex(A, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.5131841126342463;  // std dev = 1.332, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return -0.06710791080022747;  // std dev = 3.094, 92.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=12 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.12659305038046945;  // std dev = 5.096, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   | | | else return 0.034136299914590384;  // std dev = 3.150, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1429242028398698;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.5619108007804039;  // std dev = 2.825, 99.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=92 */
%   | | | else return -0.09690084458709643;  // std dev = 1.874, 38.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | else if ( complex(A, G), interaction(H, A) )
%   | | | then return -0.191588481901596;  // std dev = 0.569, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return -0.23412109431276273;  // std dev = 0.402, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( enzyme(A, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return -0.16022523875817496;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.20934996540519893;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.05661040029111064;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.040536208196689696;  // std dev = 1.411, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10150626154676667;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), interaction(F, F) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.04031028856400199;  // std dev = 2.350, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | | | else return 0.02757428039538491;  // std dev = 3.161, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3775652519752198;  // std dev = 2.358, 48.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=39 */
%   | | | else return -0.20760939001475778;  // std dev = 0.425, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then if ( enzyme(A, K), phenotype(J, I) )
%   | | | then return -0.08312651301983404;  // std dev = 1.194, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.007385396083632742;  // std dev = 1.444, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.22619873824627867;  // std dev = 1.365, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.0918867351378911;  // std dev = 2.256, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11551119712594518;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.23765391311773085;  // std dev = 0.079, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16727566622230136;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, G), location(G, H) )
%   | | | then return 0.45409004793316254;  // std dev = 0.275, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2767721309144287;  // std dev = 0.202, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( location(A, I), interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.15573561794570775;  // std dev = 2.106, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | | else return -0.06359017840743676;  // std dev = 2.579, 95.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=14 */
%   | | else if ( enzyme(A, L), location(A, M) )
%   | | | then return -0.0039611655205771396;  // std dev = 2.795, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return 0.0748908057121948;  // std dev = 3.874, 102.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=37 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09031090147382072;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.29679776550831943;  // std dev = 0.128, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6225368658827676;  // std dev = 0.325, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.15732867810792245;  // std dev = 0.088, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.2630344353461617;  // std dev = 0.502, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.2610758279422979;  // std dev = 0.392, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.09969569591072347;  // std dev = 0.891, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, K), interaction(A, L) )
%   | | | then return -0.042011229013691774;  // std dev = 2.816, 122.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=26 */
%   | | | else return 0.005554943313542564;  // std dev = 4.370, 142.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=44 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), interaction(A, F) )
%   | | then return -0.02311868844816904;  // std dev = 0.503, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.13021995288656205;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.25765368027619;  // std dev = 0.178, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, A) )
%   | | then return -0.08917294588855544;  // std dev = 0.062, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.010614328779255762;  // std dev = 2.428, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | | | else return 0.03051751004264001;  // std dev = 4.960, 203.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=66 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '29.853', 'seconds']
Refined model CLL: -0.226533


******************************************
Best model found
******************************************
Results 

CLL : -0.229858 

AUC ROC : 0.969895 

AUC PR : 0.376101 

Precision : 0.359375 

Recall : 0.433962 

F1 : 0.393162 

Total Learning Time : 11.161 

Total Inference Time : 9.094738006591797 

Total revision time: 23.588294942855836
Best scored revision CLL: -0.226533


Results 

CLL : -0.229858 

AUC ROC : 0.969895 

AUC PR : 0.376101 

Precision : 0.359375 

Recall : 0.433962 

F1 : 0.393162 

Total Learning Time : 23.646758039474488 

Total Inference Time : 9.094738006591797 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.125
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23213267493691103;  // std dev = 7.589, 246.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14147254008703294;  // std dev = 7.944, 293.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14834639484645787;  // std dev = 7.780, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11666284067300824;  // std dev = 7.824, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11139427116498431;  // std dev = 7.734, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07290318827014879;  // std dev = 7.839, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05866001170645298;  // std dev = 7.839, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06856786143092719;  // std dev = 7.710, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06417418258966559;  // std dev = 7.652, 253.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03538913723514718;  // std dev = 7.742, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.135', 'seconds']
Parameter learned model CLL:-0.389981 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.589, 154, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.944, 201, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.78, 177, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.824, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.734, 171, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.839, 185, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.839, 185, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.71, 168, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.652, 161, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.742, 172, 92]}]
{'': [0.0, 0.23411990217463224], 'false': [nan, 0.23411990217463224], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2154014607042595], 'false': [nan, 0.2154014607042615], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22503834938710016], 'false': [nan, 0.22503834938710016]}
{'': [0.0, 0.22262479338842986], 'false': [nan, 0.22262479338843055], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22744292963610793], 'false': [nan, 0.22744292963610843]}
{'': [nan, 0.22181965097942077], 'false': [nan, 0.22181965097942077]}
{'': [nan, 0.22181965097941989], 'false': [nan, 0.22181965097941989]}
{'': [-1.1564823173178713e-18, 0.22863905325443815], 'false': [nan, 0.22863905325443853], 'true': [nan, -1.1564823173178713e-18], 'true,false': [nan, -1.1564823173178713e-18], 'true,false,false': [nan, -1.1564823173178713e-18]}
{'': [nan, 0.2314049586776861], 'false': [nan, 0.23140495867768468]}
{'': [nan, 0.2270431588613414], 'false': [nan, 0.2270431588613414]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 6.048
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( phenotype(A, F), phenotype(E, F) )
%   | | | then return 0.01604367194161758;  // std dev = 2.248, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | | else return 0.2036034805540571;  // std dev = 4.987, 110.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=38 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.06648226843284567;  // std dev = 1.990, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.1364994505634299;  // std dev = 4.414, 97.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=27 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7434821409423545;  // std dev = 0.172, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.7965660761897768;  // std dev = 0.142, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.08714948153495496;  // std dev = 5.482, 161.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=41 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.4054173793905618;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.1782073506844554;  // std dev = 4.229, 80.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5494302462321596;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6660203343041561;  // std dev = 0.247, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(E, F) )
%   | | then return 0.6253041942640118;  // std dev = 0.152, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.31726217694129594;  // std dev = 0.762, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1665128314986693;  // std dev = 0.039, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.07086462404808223;  // std dev = 4.698, 119.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=30 */
%   | | else if ( interaction(H, A), enzyme(A, I) )
%   | | | then return 0.2889363444474075;  // std dev = 2.146, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.15369324137248583;  // std dev = 4.667, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13342762436320554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( phenotype(D, F), interaction(G, A) )
%   | | | then return 0.4848916146609449;  // std dev = 0.144, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.407906025679396;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(A, E) )
%   | | | then return -0.05581005148010642;  // std dev = 2.225, 44.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | | | else return 0.09273444666107644;  // std dev = 3.617, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7634518337014364;  // std dev = 0.471, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.19233578567389392;  // std dev = 0.093, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.16811853670819848;  // std dev = 2.929, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return 0.07268490683373184;  // std dev = 3.370, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, C) )
%   | then return 0.3256147787690063;  // std dev = 0.059, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.42374878457124776;  // std dev = 0.191, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( enzyme(F, G) )
%   | | then return -0.17893309715101297;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.25290883204661146;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.00874681163387662;  // std dev = 0.933, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( phenotype(I, K), interaction(L, I) )
%   | | | then return 0.18030188015683743;  // std dev = 3.154, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | | else return 0.08936830743586227;  // std dev = 4.400, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
%   | | else if ( location(A, M) )
%   | | | then return 0.04920897988763094;  // std dev = 3.588, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | | | else return 0.2753664782555994;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.3032940409620159;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, C), enzyme(A, E) )
%   | | then if ( complex(A, F), interaction(G, A) )
%   | | | then return 0.16427307590045787;  // std dev = 1.468, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.028009639467642875;  // std dev = 1.519, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.0863303017470474;  // std dev = 1.238, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.002231564508550542;  // std dev = 3.135, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   else if ( interaction(I, A), interaction(A, J) )
%   | then return 0.018946674277822362;  // std dev = 0.359, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.30662563415824684;  // std dev = 0.132, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.139305249649643;  // std dev = 2.243, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.06619340447936922;  // std dev = 4.819, 127.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=39 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), interaction(E, C) )
%   | then return 0.20615278266396073;  // std dev = 0.051, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2803699734339228;  // std dev = 0.064, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( phenotype(A, F), complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3923370046473484;  // std dev = 0.266, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6704338476481733;  // std dev = 0.281, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.18931028581029113;  // std dev = 0.043, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( phenotype(A, J), interaction(K, A) )
%   | | then if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | | then return 0.5220714774857492;  // std dev = 0.341, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2001398113241219;  // std dev = 0.080, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(M, A), complex(A, N) )
%   | | | then return -0.013626021697723341;  // std dev = 2.643, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | | else return 0.05063490167274465;  // std dev = 5.349, 140.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=44 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13957251810996812;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.13184561506220555;  // std dev = 0.981, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.5709281017592078;  // std dev = 1.053, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else if ( phenotype(A, F) )
%   | | | then return -0.16433294972796253;  // std dev = 0.256, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.22823229973314188;  // std dev = 0.557, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4959321098152052;  // std dev = 0.846, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.20347031106999897;  // std dev = 0.248, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.07276056604432199;  // std dev = 3.205, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | | else return 0.1774359756756287;  // std dev = 2.867, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2055957957360224;  // std dev = 0.110, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( location(E, F) )
%   | | | then return -0.1042393549092582;  // std dev = 0.060, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.033579858454619034;  // std dev = 0.462, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(E, G), complex(A, H) )
%   | | | then return 0.05611903745490184;  // std dev = 1.363, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return -0.021464427883751268;  // std dev = 1.381, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( interaction(I, J), interaction(J, J) )
%   | | | then return -0.12069509904095896;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.01082496447873602;  // std dev = 0.647, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.002444684265936893;  // std dev = 3.136, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.0705807958399629;  // std dev = 4.380, 99.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17619550528223132;  // std dev = 0.101, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( phenotype(D, F), complex(E, G) )
%   | | then if ( enzyme(A, H), enzyme(E, H) )
%   | | | then return -0.10463864606064499;  // std dev = 0.348, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.10288526022357516;  // std dev = 1.835, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.030982161558896517;  // std dev = 1.616, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return -0.15567626566892015;  // std dev = 0.948, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( phenotype(A, L), location(J, M) )
%   | | | then return -5.419660501615301E-5;  // std dev = 1.206, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.13825268672311156;  // std dev = 2.972, 44.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=21 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return 0.10831238596211282;  // std dev = 1.901, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.03762452472693221;  // std dev = 3.394, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.958', 'seconds']
Refined model CLL: -0.266436


******************************************
Best model found
******************************************
Results 

CLL : -0.259126 

AUC ROC : 0.952605 

AUC PR : 0.201187 

Precision : 0.225 

Recall : 0.617329 

F1 : 0.329797 

Total Learning Time : 6.048 

Total Inference Time : 2.5748257637023926 

Total revision time: 11.463266752243042
Best scored revision CLL: -0.266436


Results 

CLL : -0.259126 

AUC ROC : 0.952605 

AUC PR : 0.201187 

Precision : 0.225 

Recall : 0.617329 

F1 : 0.329797 

Total Learning Time : 11.521729848861694 

Total Inference Time : 2.5748257637023926 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.175
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18267723698630525;  // std dev = 7.622, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17705505716129089;  // std dev = 7.519, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16095512019345992;  // std dev = 7.462, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13479175696841536;  // std dev = 7.462, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07821130361529581;  // std dev = 7.649, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07594078829120325;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07454227472004708;  // std dev = 7.503, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07103742894844399;  // std dev = 7.437, 241.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02771715686901981;  // std dev = 7.601, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02311634314919064;  // std dev = 7.594, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.609', 'seconds']
Parameter learned model CLL:-0.377013 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.622, 179, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.519, 165, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.462, 158, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.462, 158, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.649, 183, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.579, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.503, 163, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.437, 155, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.601, 176, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.594, 175, 86]}]
{'': [0.0, 0.21920968316126796], 'false': [nan, 0.21920968316126796], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22523452008698291], 'false': [nan, 0.22523452008698308], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22823165815640822], 'false': [nan, 0.22823165815640822]}
{'': [0.0, 0.22823165815640925], 'false': [nan, 0.22823165815640908], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [-1.1564823173178713e-18, 0.21749284835753985], 'false': [nan, 0.2174928483575398], 'true': [nan, -1.1564823173178713e-18], 'true,false': [nan, -1.1564823173178713e-18], 'true,false,false': [nan, -1.1564823173178713e-18]}
{'': [0.0, 0.22179156542090853], 'false': [nan, 0.22179156542090853], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.226093127530201], 'false': [nan, 0.226093127530201], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22950706771577567], 'false': [nan, 0.22950706771577575], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2204999708641692], 'false': [nan, 0.22049997086416995], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2209304032530351], 'false': [nan, 0.2209304032530351]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 8.25
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.043334120284697554;  // std dev = 2.854, 54.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
%   | | | else return 0.14691898857544716;  // std dev = 6.197, 187.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=54 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.831568317334988;  // std dev = 0.118, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.15844554841100575;  // std dev = 0.035, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( interaction(A, H), phenotype(A, I) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.7353395955528769;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08748696771349676;  // std dev = 3.527, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7300508677722359;  // std dev = 0.059, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.16075745823653256;  // std dev = 5.191, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then if ( enzyme(A, G), phenotype(E, H) )
%   | | then return 0.30925906413524606;  // std dev = 0.923, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.09707948904851643;  // std dev = 0.359, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(I, C), recursion_proteinclass(I, B) )
%   | | then return 0.3581549789779992;  // std dev = 0.836, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.01566413436346324;  // std dev = 0.374, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.5662278285838552;  // std dev = 0.092, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1546598370296186;  // std dev = 0.064, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.12055441631023187;  // std dev = 2.562, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return 0.23889299762661365;  // std dev = 3.441, 51.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=22 */
%   | | | else return 0.1122304919735808;  // std dev = 3.971, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14573251546826438;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(D, F), interaction(D, A) )
%   | | then return 0.23773408681856995;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.4507559312251181;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.02412672529119064;  // std dev = 3.164, 76.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.3348675084988611;  // std dev = 0.640, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.6265611543715761;  // std dev = 0.194, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I) )
%   | | | then return 0.08510128109108474;  // std dev = 5.794, 176.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=50 */
%   | | | else return 0.40804286355026653;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12020354225912797;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), phenotype(D, F) )
%   | | then return 0.03707643469972196;  // std dev = 0.738, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.35530565995034163;  // std dev = 0.086, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.4309630662314145;  // std dev = 0.074, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14694060155935723;  // std dev = 0.065, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.03937529479844047;  // std dev = 4.446, 115.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=29 */
%   | | | else return 0.07952975077770687;  // std dev = 5.098, 134.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=41 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10350383070287464;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(D, F), enzyme(F, G) )
%   | | | then return 0.3579648982659971;  // std dev = 0.124, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.26162430668751513;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.04669378924412277;  // std dev = 1.470, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return 0.10157987587378729;  // std dev = 2.354, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.3549562265626025;  // std dev = 0.337, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.04505413179322218;  // std dev = 2.600, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return 0.22706399335396718;  // std dev = 2.631, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.10847906559633343;  // std dev = 4.479, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10033525785776032;  // std dev = 0.000613, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, F) )
%   | | | then return 0.2174698902184736;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.30525048256144915;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, D) )
%   | | | then return -0.12435639152634595;  // std dev = 0.549, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return 0.018160950002047052;  // std dev = 5.620, 171.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=47 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( complex(A, I) )
%   | | | then return -0.059340054704581494;  // std dev = 0.871, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.060505130937457095;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.17384024412503207;  // std dev = 2.609, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return 0.03818971444391258;  // std dev = 2.216, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08199803694116735;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.22201594864537447;  // std dev = 0.157, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.6291329082183706;  // std dev = 0.512, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.17548094306607;  // std dev = 0.707, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.0038942260710366715;  // std dev = 4.356, 118.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=31 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( complex(A, I), enzyme(H, J) )
%   | | | then return 0.2932877924309815;  // std dev = 1.178, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.023267202759338218;  // std dev = 3.548, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.32113950051349105;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.15053730530505943;  // std dev = 2.220, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( complex(D, F), interaction(D, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.13531391903230092;  // std dev = 2.001, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.02399650765890569;  // std dev = 1.257, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( interaction(D, I), phenotype(I, E) )
%   | | | then return 0.06638295090887442;  // std dev = 1.485, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.27084139605527974;  // std dev = 1.853, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, K) )
%   | | | then return 0.1880234680096511;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.41058494923509087;  // std dev = 0.231, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return -0.0558618174044181;  // std dev = 2.318, 48.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
%   | | | else return 0.04085171070276612;  // std dev = 4.843, 113.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=38 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then if ( complex(E, D) )
%   | | then return 0.4302089353040632;  // std dev = 0.290, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return -0.2215685642800365;  // std dev = 0.077, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.21208753566796582;  // std dev = 0.057, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.4188686847886521;  // std dev = 0.227, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( recursion_proteinclass(F, B) )
%   | | | then return 0.4887889886601781;  // std dev = 0.115, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.024143533386826694;  // std dev = 5.052, 139.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=36 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5274739465513916;  // std dev = 0.442, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.30335390714012744;  // std dev = 0.160, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.7592847567236833;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.585', 'seconds']
Refined model CLL: -0.289125


******************************************
Best model found
******************************************
Results 

CLL : -0.27684 

AUC ROC : 0.876123 

AUC PR : 0.162426 

Precision : 0.164425 

Recall : 0.388693 

F1 : 0.231092 

Total Learning Time : 8.25 

Total Inference Time : 4.10093355178833 

Total revision time: 15.265399742126466
Best scored revision CLL: -0.289125


Results 

CLL : -0.27684 

AUC ROC : 0.876123 

AUC PR : 0.162426 

Precision : 0.164425 

Recall : 0.388693 

F1 : 0.231092 

Total Learning Time : 15.323862838745118 

Total Inference Time : 4.10093355178833 

