Starting experiment 24_nell_finances_yeast 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.039
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21529179224236966;  // std dev = 7.171, 224.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=80 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G), phenotype(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, H), function(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), phenotype(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F) )
%   | | then if ( location(F, G), phenotype(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15646460902542675;  // std dev = 7.466, 253.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=83 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.11558456758223586;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.4965369485346168;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.14996186283336904;  // std dev = 7.333, 238.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=82 */
%   | | else return 0.05156675427779252;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.09195960432439486;  // std dev = 4.839, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11123486538149578;  // std dev = 5.953, 160.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=53 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(D, A), complex(D, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(C, E), complex(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07928473962946164;  // std dev = 7.486, 259.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=82 */
%   else if ( complex(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( enzyme(H, I), interaction(H, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10404513688174544;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, C), enzyme(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(B, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08347838875653837;  // std dev = 3.450, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   else if ( complex(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(I, J) )
%   | | then if ( phenotype(B, K) )
%   | | | then return -0.2520842987632624;  // std dev = 0.079, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0.10714406371939761;  // std dev = 6.646, 192.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=69 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.24813384333008523;  // std dev = 0.217, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10259000882139599;  // std dev = 5.244, 116.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=44 */
%   | else if ( interaction(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.030603498511151163;  // std dev = 5.437, 149.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), location(G, H) )
%   | | | then return 0.07212941384651214;  // std dev = 3.571, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | | else return -0.016885567390995743;  // std dev = 1.698, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.03295881698971454;  // std dev = 4.269, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   | | | else return 0.09506336475044855;  // std dev = 4.650, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( location(D, F) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0390703561579285;  // std dev = 3.790, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | else if ( interaction(G, D), location(G, H) )
%   | | | then return 0.003107679074192412;  // std dev = 1.175, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, I), complex(J, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.020118022136090426;  // std dev = 3.835, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | | | else return 0.09242451737155945;  // std dev = 4.921, 109.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=41 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(D, E) )
%   | | then return 0.08779580117483643;  // std dev = 4.136, 76.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(F, A), interaction(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.022893667610183757;  // std dev = 6.133, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '22.856', 'seconds']
Parameter learned model CLL:-0.357297 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), location(C, D)', 'true': 'phenotype(B, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E)', 'false,true,true': 'phenotype(B, F)', 'false,false': 'location(A, G), phenotype(B, G)', 'false,false,false': 'location(A, H), function(I, H)'}, {'true,true': [0.0, 0, 0], 'true,false': [7.171, 144, 80], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.155, 4, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.491, 4, 5]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'interaction(E, A), phenotype(B, E)', 'false,false': 'location(A, F)', 'false,false,true': 'location(F, G), phenotype(B, G)', 'false,false,false': 'interaction(H, A), enzyme(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.466, 170, 83], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [0.816, 1, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'interaction(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.333, 156, 82], 'false,false,false': [1.9, 13, 5]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.839, 75, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.953, 107, 53]}]
['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'phenotype(B, C)', 'true,false': 'complex(D, A), complex(D, C)', 'true,false,false': 'enzyme(C, E), complex(F, C)', 'false': 'complex(G, A)', 'false,false': 'interaction(A, H)', 'false,false,true': 'enzyme(H, I), interaction(H, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.486, 177, 82], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.793, 9, 5], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'complex(E, A)', 'true,false': 'complex(F, C), enzyme(A, G)', 'true,false,false': 'phenotype(B, C)', 'false': 'complex(H, A)', 'false,false': 'complex(I, J)', 'false,false,true': 'phenotype(B, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.45, 35, 18], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.079, 54, 0], 'false,false,true,false': [6.646, 123, 69], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'interaction(F, A), phenotype(B, F)', 'false,false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.217, 23, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [5.244, 72, 44], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.437, 106, 43], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(D, A), phenotype(B, D)', 'false,false': 'interaction(E, A), enzyme(E, F)', 'false,false,true': 'interaction(G, E), location(G, H)', 'false,false,false': 'interaction(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [3.571, 38, 20], 'false,false,true,false': [1.698, 11, 4], 'false,false,false,true': [4.269, 63, 28], 'false,false,false,false': [4.65, 62, 35]}]
['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(B, C)', 'false': 'interaction(D, A), enzyme(D, E)', 'false,true': 'location(D, F)', 'false,true,true': 'phenotype(B, F)', 'false,true,false': 'interaction(G, D), location(G, H)', 'false,false': 'location(A, I), complex(J, I)', 'false,false,false': 'enzyme(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.79, 47, 22], 'false,true,false,true': [1.175, 5, 2], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.835, 51, 22], 'false,false,false,false': [4.921, 68, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(D, E)', 'false': 'function(F, A), interaction(G, A)', 'false,false': 'complex(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [4.136, 47, 29], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [6.133, 125, 58]}]
{'': [0.2295918367346943, 0.24888888888888877], 'false': [0.22222222222222224, 0.2469135802469134], 'false,false': [nan, 0.2469135802469134], 'false,false,false': [nan, 0.2469135802469134], 'true': [nan, 0.2295918367346943], 'false,true': [0.22222222222222224, nan], 'false,true,true': [nan, 0.22222222222222224]}
{'': [nan, 0.2212630200874911], 'false': [nan, 0.22126302008749113], 'false,false': [0.22031754614036658, 0.2399999999999999], 'false,false,false': [0.2040816326530612, 0.2222222222222222], 'false,false,true': [nan, 0.22031754614036658]}
{'': [nan, 0.2247835470508855], 'false': [nan, 0.22478354705088802], 'false,false': [0.22593051030517697, 0.20061728395061723]}
{'': [nan, 0.21886295686239235], 'false': [0.21482968791153975, 0.22146007341664417], 'false,false': [nan, 0.22146007341664417], 'false,false,false': [nan, 0.22146007341664417]}
{'': [0.21638071926820177, 0.22963136641046925], 'false': [nan, 0.22963136641046925], 'false,false': [0.22963136641046925, nan], 'false,false,true': [nan, 0.22963136641046925], 'true': [nan, 0.21638071926820177], 'true,false': [nan, 0.21638071926820177], 'true,false,false': [nan, 0.2163807192682017]}
{'': [0.2246021666175601, 0.2016770036063731], 'true': [nan, 0.2246021666175601], 'true,false': [nan, 0.2246021666175601], 'true,false,false': [nan, 0.2246021666175601], 'false': [nan, 0.2016770036063718], 'false,false': [0.2016770036063718, nan], 'false,false,true': [0.00011442922816117539, 0.23003952282810325]}
{'': [nan, 0.20653553021071422], 'false': [0.21515906700849813, 0.19839679023185702], 'false,true': [0.0020471070409164077, 0.23706031184897214], 'false,true,false': [nan, 0.23706031184897214], 'false,false': [nan, 0.19839679023185702], 'false,false,false': [0.19839679023185702, nan]}
{'': [nan, 0.21367194973012893], 'false': [nan, 0.21367194973012898], 'false,false': [0.21549114163320038, 0.21293070520955837], 'false,false,true': [0.21985631449495302, 0.19231695707944535], 'false,false,false': [0.20027301061084637, 0.22293850967167636]}
{'': [nan, 0.2129765259428787], 'false': [0.2073114088026893, 0.21511673550651025], 'false,false': [nan, 0.2151167355065104], 'false,false,false': [0.20151762272526882, 0.22212736118669812], 'false,true': [0.20821628979957074, 0.1972176744441756], 'false,true,true': [nan, 0.20821628979957074], 'false,true,false': [0.1972176744441756, nan]}
{'': [0.22507275432533205, 0.20552696992335773], 'true': [nan, 0.22507275432533205], 'true,false': [0.22507275432533205, nan], 'false': [nan, 0.20552696992335767], 'false,false': [nan, 0.20552696992335767]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
5;false;phenotype(B, K).;true;true
6;;proteinclass(A, B) :- interaction(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 12.92
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( complex(A, E), phenotype(C, F) )
%   | then if ( interaction(C, G), phenotype(G, F) )
%   | | then if ( enzyme(G, H), interaction(C, C) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.2331489350995123;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else return 0.1544452313958086;  // std dev = 0.457, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( enzyme(A, I), interaction(C, J) )
%   | | then if ( interaction(J, K) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.5248156017661789;  // std dev = 0.471, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( complex(A, L), interaction(M, A) )
%   | then if ( phenotype(A, N) )
%   | | then return 0.2059750220560341;  // std dev = 0.476, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else return 0.3966104735610508;  // std dev = 0.499, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else return 0.1766674536180303;  // std dev = 0.466, 135.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( phenotype(C, E), interaction(F, C) )
%   | then return 0.20425674309722527;  // std dev = 0.490, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | else return 0.09720597553100482;  // std dev = 0.450, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   else if ( phenotype(A, G), interaction(H, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.005999094115225321;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( phenotype(H, G), interaction(H, H) )
%   | | | then return 0.36722086467435283;  // std dev = 1.486, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.1579129712635721;  // std dev = 3.768, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.384996245428382;  // std dev = 1.486, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.2494233292304328;  // std dev = 2.260, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( complex(A, M), enzyme(A, N) )
%   | | | then return 0.2870576609589452;  // std dev = 1.639, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.16331855940722106;  // std dev = 3.368, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(A, A) )
%   | then return 0.21538613266081544;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.053203165815684995;  // std dev = 0.438, 126.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=33 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), interaction(D, F) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.23708613861433303;  // std dev = 2.101, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.4834078630384493;  // std dev = 1.147, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.2214388782696682;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.07143887826966822;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then return 0.010070411701096727;  // std dev = 0.431, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.13187269434005133;  // std dev = 4.499, 92.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=30 */
%   | | | else return -0.047523202191661694;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then return 0.05174123893905257;  // std dev = 0.455, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | else return 0.11625227602927386;  // std dev = 0.476, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   else if ( interaction(F, A), location(A, G) )
%   | then if ( phenotype(A, H), location(F, I) )
%   | | then if ( location(A, I), interaction(J, F) )
%   | | | then return 0.1306443486992043;  // std dev = 3.267, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return 0.3275118827752872;  // std dev = 1.782, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(K, F), enzyme(F, L) )
%   | | | then return 0.25360689703660655;  // std dev = 1.571, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.08795374543469629;  // std dev = 4.319, 87.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=27 */
%   | else if ( interaction(A, M), enzyme(M, N) )
%   | | then if ( enzyme(A, N) )
%   | | | then return 0.036724596548185044;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.18900964857270458;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.44564875341799115;  // std dev = 1.148, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(A, E), complex(D, F) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.11787477601980315;  // std dev = 1.368, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3046803143656861;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.005704561118422064;  // std dev = 0.428, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.058352264228608404;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.42588815793523194;  // std dev = 1.481, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.045260722142242464;  // std dev = 3.685, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | | else return 0.09894240988495992;  // std dev = 4.678, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   else if ( interaction(A, K), interaction(K, A) )
%   | then return 0.40982045802322914;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2449747466168023;  // std dev = 0.976, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), interaction(A, E) )
%   | then return -0.008166174369499192;  // std dev = 0.460, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then return 0.26328852776302014;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.01519016671415973;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.12756902384412647;  // std dev = 1.545, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( phenotype(B, H) )
%   | then return -0.2750144641816617;  // std dev = 0.319, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.09968929520235943;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.31324842694060084;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.10266858884466855;  // std dev = 4.239, 76.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=29 */
%   | | | else return 0.16614926134159327;  // std dev = 3.645, 54.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=23 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.25178848614427174;  // std dev = 0.064, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( phenotype(A, E), interaction(A, A) )
%   | | then return 0.49074214064583166;  // std dev = 0.881, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, F), interaction(G, A) )
%   | | | then return 0.14348236972993367;  // std dev = 4.258, 71.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=32 */
%   | | | else return -0.007547501551406371;  // std dev = 2.440, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then if ( enzyme(A, I) )
%   | | then return 0.7201071159113219;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.05856120830221547;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.06282014733029805;  // std dev = 1.142, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(L, A), enzyme(L, M) )
%   | | then return -0.12784310357096995;  // std dev = 0.411, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else return 0.03172898823416972;  // std dev = 0.452, 102.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=31 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( complex(C, E), interaction(C, C) )
%   | then return -0.06555618679143904;  // std dev = 0.424, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( interaction(C, F), enzyme(A, G) )
%   | | then if ( phenotype(C, H), interaction(I, A) )
%   | | | then return 0.06840605075445878;  // std dev = 2.168, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.318719265888262;  // std dev = 1.255, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.017685158654727;  // std dev = 0.434, 82.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=23 */
%   else if ( interaction(J, A), location(J, K) )
%   | then if ( phenotype(J, L), interaction(J, J) )
%   | | then if ( location(A, K) )
%   | | | then return 0.09179109585485265;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.29287122104748636;  // std dev = 1.122, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( enzyme(A, M), interaction(J, J) )
%   | | | then return -0.21544898274570512;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.07442664605776776;  // std dev = 4.684, 102.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=36 */
%   | else return 0.24318425390383117;  // std dev = 0.969, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then if ( location(A, G), location(E, G) )
%   | | then return 0.014299222055647725;  // std dev = 0.432, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.196735165617699;  // std dev = 0.929, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.07178139001835754;  // std dev = 0.439, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   else if ( interaction(A, A) )
%   | then if ( interaction(A, H), enzyme(H, I) )
%   | | then return -0.11292664477966856;  // std dev = 0.419, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else return 0.11736844408605833;  // std dev = 1.030, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( phenotype(A, J) )
%   | | then if ( interaction(A, K) )
%   | | | then return 0.1105898630469517;  // std dev = 2.710, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.010460002841850419;  // std dev = 2.566, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( enzyme(A, L), complex(A, M) )
%   | | | then return 0.04760420830242719;  // std dev = 1.945, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.1170553896913263;  // std dev = 4.404, 83.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(C, C), interaction(E, A) )
%   | then return 0.024049367604829466;  // std dev = 0.441, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | else return -0.06965147908388164;  // std dev = 0.449, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   else if ( interaction(A, F), location(A, G) )
%   | then if ( interaction(H, A), enzyme(H, I) )
%   | | then return 0.4028548617166998;  // std dev = 0.810, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.04075143448681221;  // std dev = 1.885, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.2035072402865998;  // std dev = 1.312, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( enzyme(A, K) )
%   | | then if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.13510089131827938;  // std dev = 1.275, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.03623374427610993;  // std dev = 2.928, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else if ( interaction(N, A), location(N, P) )
%   | | | then return 0.0198359556529933;  // std dev = 4.122, 77.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=27 */
%   | | | else return 0.3346299777207958;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.758', 'seconds']
Refined model CLL: -0.409275


******************************************
Best model found
******************************************
Results 

CLL : -0.356333 

AUC ROC : 0.677249 

AUC PR : 0.010832 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.92 

Total Inference Time : 4.591688871383667 

Total revision time: 30.879949459075927
Best scored revision CLL: -0.357297


Results 

CLL : -0.356333 

AUC ROC : 0.677249 

AUC PR : 0.010832 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 31.1588028755188 

Total Inference Time : 4.591688871383667 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 6.08
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18596350463593364;  // std dev = 8.158, 302.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=99 */
%   else if ( interaction(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10814893509951236;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), phenotype(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F) )
%   | | then if ( location(F, G), phenotype(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1978959241251192;  // std dev = 7.858, 267.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=97 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.3339710467571098;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.2339710467571098;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.12653027083607638;  // std dev = 8.187, 307.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=99 */
%   | | else return 0.11078882263655088;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.09075020625713141;  // std dev = 4.787, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11730161771621565;  // std dev = 6.874, 213.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=71 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(D, A), complex(D, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(C, E), complex(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07721010069757282;  // std dev = 8.246, 316.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=99 */
%   else if ( complex(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( enzyme(H, I), interaction(H, J) )
%   | | | then return 0.11788919374922886;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.017705054272571016;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, C), enzyme(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(B, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08146962174734176;  // std dev = 4.176, 79.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=26 */
%   else if ( complex(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(I, J) )
%   | | then if ( phenotype(B, K) )
%   | | | then return -0.24669724924745395;  // std dev = 0.095, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return 0.23500769746346403;  // std dev = 6.347, 161.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=78 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.2333877107042846;  // std dev = 0.202, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1409782455071956;  // std dev = 5.506, 124.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=52 */
%   | else if ( interaction(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.06896047560050224;  // std dev = 5.661, 151.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), location(G, H) )
%   | | | then return 0.02994896261817782;  // std dev = 4.536, 103.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=32 */
%   | | | else return -0.019115938291122247;  // std dev = 2.447, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.10868083425658735;  // std dev = 4.106, 78.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=30 */
%   | | | else return 0.04683185026930747;  // std dev = 4.539, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( location(D, F) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048349160721778396;  // std dev = 5.021, 123.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G), complex(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.07212471972998706;  // std dev = 3.509, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | | | else return 0.057250449609387445;  // std dev = 5.001, 117.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=42 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(D, E) )
%   | | then return 0.03423469583005924;  // std dev = 5.472, 145.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=49 */
%   | | else return 0.05206942200326941;  // std dev = 0.760, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( function(F, A), interaction(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.034531400224227515;  // std dev = 5.770, 156.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=54 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '13.002', 'seconds']
Parameter learned model CLL:-0.362067 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), location(C, D)', 'true': 'phenotype(B, C)', 'false': 'interaction(E, A)', 'false,false': 'location(A, F), phenotype(B, F)', 'false,false,false': 'location(A, G), function(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [8.158, 203, 99], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.936, 15, 5]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'interaction(E, A), phenotype(B, E)', 'false,false': 'location(A, F)', 'false,false,true': 'location(F, G), phenotype(B, G)', 'false,false,false': 'interaction(H, A), enzyme(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.858, 170, 97], 'false,false,false,true': [1.225, 3, 3], 'false,false,false,false': [1.549, 6, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'interaction(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.187, 208, 99], 'false,false,false': [1.879, 12, 5]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.787, 75, 33], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.874, 142, 71]}]
['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'phenotype(B, C)', 'true,false': 'complex(D, A), complex(D, C)', 'true,false,false': 'enzyme(C, E), complex(F, C)', 'false': 'complex(G, A)', 'false,false': 'interaction(A, H)', 'false,false,true': 'enzyme(H, I), interaction(H, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [8.246, 217, 99], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.816, 2, 1], 'false,false,true,false': [1.789, 16, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'complex(E, A)', 'true,false': 'complex(F, C), enzyme(A, G)', 'true,false,false': 'phenotype(B, C)', 'false': 'complex(H, A)', 'false,false': 'complex(I, J)', 'false,false,true': 'phenotype(B, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.176, 53, 26], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.095, 66, 0], 'false,false,true,false': [6.347, 83, 78], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'interaction(F, A), phenotype(B, F)', 'false,false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.202, 38, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [5.506, 72, 52], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.661, 99, 52], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(D, A), phenotype(B, D)', 'false,false': 'interaction(E, A), enzyme(E, F)', 'false,false,true': 'interaction(G, E), location(G, H)', 'false,false,false': 'interaction(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [4.536, 71, 32], 'false,false,true,false': [2.447, 26, 9], 'false,false,false,true': [4.106, 48, 30], 'false,false,false,false': [4.539, 66, 33]}]
['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(B, C)', 'false': 'interaction(D, A), enzyme(D, E)', 'false,true': 'location(D, F)', 'false,true,true': 'phenotype(B, F)', 'false,false': 'location(A, G), complex(H, G)', 'false,false,false': 'enzyme(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [5.021, 82, 41], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.509, 37, 21], 'false,false,false,false': [5.001, 75, 42]}]
['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(D, E)', 'false': 'function(F, A), interaction(G, A)', 'false,false': 'complex(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.472, 96, 49], 'true,false,false': [0.76, 2, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.77, 102, 54]}]
{'': [0.22035217753607467, 0.18749999999999983], 'true': [nan, 0.22035217753607467], 'false': [nan, 0.18749999999999983], 'false,false': [nan, 0.18749999999999983], 'false,false,false': [nan, 0.18749999999999983]}
{'': [nan, 0.23238201827385868], 'false': [nan, 0.23238201827385874], 'false,false': [0.2312542892446566, 0.24609374999999978], 'false,false,false': [0.24999999999999992, 0.2399999999999999], 'false,false,true': [nan, 0.2312542892446566]}
{'': [nan, 0.21779734989180127], 'false': [nan, 0.21779734989179636], 'false,false': [0.21834833270811235, 0.20761245674740494]}
{'': [nan, 0.21872811178698348], 'false': [0.21215858274088226, 0.2218219519241728], 'false,false': [nan, 0.2218219519241728], 'false,false,false': [nan, 0.2218219519241728]}
{'': [0.21519957661254618, 0.17020573296282474], 'true': [nan, 0.21519957661254618], 'true,false': [nan, 0.21519957661254618], 'true,false,false': [nan, 0.21519957661254754], 'false': [nan, 0.17020573296282474], 'false,false': [0.17020573296282474, nan], 'false,false,true': [0.22222222222222224, 0.16000511173522852]}
{'': [0.22076301933903314, 0.2253686660795863], 'false': [nan, 0.22536866607958603], 'false,false': [0.22536866607958603, nan], 'false,false,true': [0.00013536319112908004, 0.2502350562773555], 'true': [nan, 0.22076301933903314], 'true,false': [nan, 0.22076301933903314], 'true,false,false': [nan, 0.22076301933903314]}
{'': [nan, 0.21246044490413674], 'false': [0.21254663293869516, 0.21223882940670424], 'false,true': [0.0010772773155060154, 0.24447709737948942], 'false,true,false': [nan, 0.24447709737948942], 'false,false': [nan, 0.21223882940670424], 'false,false,false': [0.21223882940670424, nan]}
{'': [nan, 0.20476500068751935], 'false': [nan, 0.2047650006875193], 'false,false': [0.19295066276351794, 0.21257358926756778], 'false,false,false': [0.21616027146251354, 0.20806199442482054], 'false,false,true': [0.19976717112602313, 0.17109385139879396]}
{'': [nan, 0.20990404289576636], 'false': [0.2049405877476145, 0.21331368428692582], 'false,false': [nan, 0.2133136842869258], 'false,false,false': [0.2123139250658098, 0.21373596486861463], 'false,true': [0.2049405877476145, nan], 'false,true,true': [nan, 0.2049405877476145]}
{'': [0.20621028693021087, 0.21338630442876544], 'false': [nan, 0.21338630442876555], 'false,false': [nan, 0.21338630442876555], 'true': [nan, 0.20621028693021087], 'true,false': [0.2064854371413439, 0.19259973011714102]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
5;false;phenotype(B, K).;true;true
6;;proteinclass(A, B) :- interaction(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 17.322
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(C, D), phenotype(A, E) )
%   | then if ( enzyme(D, F), complex(D, G) )
%   | | then return 0.058148935099512224;  // std dev = 0.400, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( interaction(C, C), phenotype(C, E) )
%   | | | then return 0.14386322081379807;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.2823913593419366;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | else if ( interaction(D, C), location(C, H) )
%   | | then if ( interaction(C, I), location(I, H) )
%   | | | then return 0.33183314562582816;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(C, A) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.221785298735876;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   else if ( interaction(J, A), interaction(J, J) )
%   | then return 0.3025933795439568;  // std dev = 0.497, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else return 0.16061807090198116;  // std dev = 0.459, 162.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=49 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(A, D) )
%   then if ( location(E, C), interaction(E, A) )
%   | then if ( phenotype(A, F), enzyme(E, D) )
%   | | then return 0.6335465854055106;  // std dev = 0.888, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(E, G), enzyme(E, H) )
%   | | | then return 0.39200929386800454;  // std dev = 1.270, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.27089239777817636;  // std dev = 2.894, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | else return 0.10914553485094448;  // std dev = 0.448, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   else if ( interaction(A, I), location(I, J) )
%   | then if ( location(A, J), phenotype(A, K) )
%   | | then return 0.19469226063738868;  // std dev = 0.484, 62.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=23 */
%   | | else return 0.062481930708522135;  // std dev = 0.444, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | else if ( interaction(L, A), enzyme(L, M) )
%   | | then return 0.14683328671656645;  // std dev = 0.463, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | else if ( phenotype(A, N), enzyme(A, P) )
%   | | | then return 0.03745081886287898;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2377898363303982;  // std dev = 3.542, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), interaction(E, A) )
%   | then return 0.060879176294650755;  // std dev = 0.451, 146.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=41 */
%   | else if ( interaction(A, F), interaction(C, F) )
%   | | then if ( complex(F, D) )
%   | | | then return 0.5399522844795122;  // std dev = 1.232, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.14348638767088961;  // std dev = 1.382, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.10247033216223712;  // std dev = 0.461, 106.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=32 */
%   else if ( enzyme(A, G), interaction(H, A) )
%   | then if ( location(A, I), location(H, I) )
%   | | then return 0.29713600500863824;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.48870756554704203;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.5716547851968075;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1503776155488519;  // std dev = 1.409, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.08432820037399245;  // std dev = 0.447, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then return 0.00657131903824138;  // std dev = 0.436, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | else if ( complex(A, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.4848073591313526;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2727167826851123;  // std dev = 1.420, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( enzyme(A, H), interaction(I, C) )
%   | | | then return -0.003971624048805275;  // std dev = 2.150, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.11429800049862995;  // std dev = 3.491, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   else if ( interaction(A, J), location(A, K) )
%   | then if ( interaction(L, A), enzyme(J, M) )
%   | | then return 0.4449042141769433;  // std dev = 0.462, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.10140591510365927;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.20774699607872665;  // std dev = 2.365, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else return 0.09454320875619983;  // std dev = 0.467, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( phenotype(E, D), interaction(E, E) )
%   | then return 0.014714118407759878;  // std dev = 0.458, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | else return 0.2830184926475787;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( complex(A, F), interaction(G, A) )
%   | then if ( complex(G, H) )
%   | | then if ( interaction(A, I), interaction(G, I) )
%   | | | then return 0.15897050924673325;  // std dev = 3.288, 43.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   | | | else return 0.34379741529001845;  // std dev = 1.884, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else return 0.032493400217490975;  // std dev = 0.460, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( enzyme(L, J), interaction(L, M) )
%   | | | then return 0.7437270444267482;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12204026692765169;  // std dev = 1.591, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.029145309778993857;  // std dev = 2.805, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.11978403519650582;  // std dev = 4.695, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(A, E), phenotype(A, F) )
%   | then return -0.10755008260262916;  // std dev = 0.465, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( location(A, H), location(G, H) )
%   | | | then return 0.37373651272432845;  // std dev = 1.224, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.013833155803904318;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.020075290035009716;  // std dev = 1.698, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.11109148146128922;  // std dev = 2.044, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   else if ( phenotype(B, K) )
%   | then return -0.27635168562447554;  // std dev = 0.054, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else if ( interaction(A, L) )
%   | | then return 0.10115976033973467;  // std dev = 0.487, 67.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=26 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.19375112029703626;  // std dev = 5.026, 103.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=47 */
%   | | | else return 0.3794034255123216;  // std dev = 1.348, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.2545238863277239;  // std dev = 0.067, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( complex(A, E), enzyme(A, F) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.11016982702920755;  // std dev = 1.498, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.209325057146088;  // std dev = 1.013, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.24550162185044658;  // std dev = 2.750, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | | else return 0.11923541671519917;  // std dev = 4.180, 69.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=31 */
%   else if ( interaction(J, A), phenotype(J, K) )
%   | then if ( phenotype(A, L), complex(J, M) )
%   | | then if ( enzyme(J, N) )
%   | | | then return 0.053310991329235016;  // std dev = 2.395, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.13826024759869135;  // std dev = 2.571, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else return 0.028655803286639164;  // std dev = 0.444, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
%   | else return 0.02305936221158039;  // std dev = 0.436, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then return -0.02230936691594678;  // std dev = 0.439, 134.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=40 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( interaction(F, F), interaction(G, A) )
%   | | then if ( phenotype(A, H), enzyme(F, I) )
%   | | | then return 0.10414274851268471;  // std dev = 1.992, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.08404834543845824;  // std dev = 2.091, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.4709798786427746;  // std dev = 0.814, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07314436973888476;  // std dev = 2.014, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( enzyme(J, L) )
%   | | | then return 0.23324295412127666;  // std dev = 2.725, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | | else return 0.1239316222451924;  // std dev = 3.115, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | else if ( enzyme(A, M) )
%   | | | then return -0.11118238964757562;  // std dev = 1.234, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.06100085799018522;  // std dev = 1.570, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), interaction(E, A) )
%   | then return -0.04199095766309334;  // std dev = 0.434, 146.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=41 */
%   | else if ( location(A, F), enzyme(A, G) )
%   | | then if ( phenotype(C, H) )
%   | | | then return 0.22323655209769416;  // std dev = 1.981, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.02822719724000906;  // std dev = 1.084, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.02469629189692823;  // std dev = 0.443, 99.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=30 */
%   else if ( enzyme(A, I), interaction(J, A) )
%   | then if ( phenotype(J, K) )
%   | | then return 0.3760170519374679;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.10546023501928595;  // std dev = 1.006, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(L, A), interaction(A, M) )
%   | | then return -0.021229817843806474;  // std dev = 0.443, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( phenotype(A, N), complex(A, P) )
%   | | | then return 0.028742979793307682;  // std dev = 1.381, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.15240831371997912;  // std dev = 2.331, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( enzyme(C, E), complex(A, F) )
%   | then if ( phenotype(A, D) )
%   | | then return 0.2335543438978594;  // std dev = 0.946, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.08022877617805814;  // std dev = 0.427, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else if ( interaction(C, G), interaction(G, G) )
%   | | then if ( enzyme(G, H), phenotype(A, D) )
%   | | | then return 0.2142884194771016;  // std dev = 1.732, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.08935612462612552;  // std dev = 2.688, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else if ( complex(C, I) )
%   | | | then return 0.09183493977929126;  // std dev = 2.059, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.0944478684763885;  // std dev = 1.829, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   else if ( interaction(A, J), complex(A, K) )
%   | then return -0.16023354202225634;  // std dev = 0.431, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( interaction(L, A), complex(L, M) )
%   | | then return -0.017035537520263065;  // std dev = 0.439, 138.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=41 */
%   | | else return -0.0808890271175775;  // std dev = 0.430, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.219', 'seconds']
Refined model CLL: -0.387942


******************************************
Best model found
******************************************
Results 

CLL : -0.370665 

AUC ROC : 0.662103 

AUC PR : 0.011045 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 17.322 

Total Inference Time : 8.531033039093018 

Total revision time: 46.1789148349762
Best scored revision CLL: -0.362067


Results 

CLL : -0.370665 

AUC ROC : 0.662103 

AUC PR : 0.011045 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 46.45776825141907 

Total Inference Time : 8.531033039093018 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.21
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18182043268405476;  // std dev = 6.732, 207.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=67 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G), phenotype(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, H), function(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23103029103171546;  // std dev = 3.714, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), phenotype(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F) )
%   | | then if ( location(F, G), phenotype(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15661751414796588;  // std dev = 7.757, 275.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=89 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12751570520419345;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.15800171203413885;  // std dev = 6.764, 202.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=70 */
%   | | else return 0.1592684898132065;  // std dev = 3.768, 62.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=22 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.09621410449709189;  // std dev = 5.113, 122.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=38 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09661177477160487;  // std dev = 6.092, 173.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=54 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(D, A), complex(D, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(C, E), complex(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16489172886973197;  // std dev = 6.506, 177.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=70 */
%   else if ( complex(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( enzyme(H, I), interaction(H, J) )
%   | | | then return 0.12439980333048249;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.056215736309583694;  // std dev = 3.563, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, C), enzyme(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(B, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0808826225947675;  // std dev = 3.247, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   else if ( complex(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(I, J) )
%   | | then if ( phenotype(B, K) )
%   | | | then return -0.2589363446280566;  // std dev = 0.027, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0.15673360112358928;  // std dev = 6.666, 183.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=76 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.23371397648748904;  // std dev = 0.168, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13101276686782723;  // std dev = 5.468, 123.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=51 */
%   | else if ( interaction(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.04727515411446828;  // std dev = 5.159, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), location(G, H) )
%   | | | then return -0.015343383210544447;  // std dev = 2.890, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return -0.15923860202620926;  // std dev = 0.913, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.0031685326905990948;  // std dev = 5.244, 141.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=41 */
%   | | | else return 0.12525446066139556;  // std dev = 4.599, 93.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=38 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( location(D, F) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02287349682881932;  // std dev = 2.940, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G), complex(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.016621090598341326;  // std dev = 4.534, 105.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=30 */
%   | | | else return 0.021677478441761596;  // std dev = 5.607, 154.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=49 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(D, E) )
%   | | then return 0.01949260769426324;  // std dev = 5.383, 140.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(F, A), interaction(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.011170225044809188;  // std dev = 5.572, 151.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=48 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '19.184', 'seconds']
Parameter learned model CLL:-0.356003 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), location(C, D)', 'true': 'phenotype(B, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E)', 'false,true,true': 'phenotype(B, F)', 'false,false': 'location(A, G), phenotype(B, G)', 'false,false,false': 'location(A, H), function(I, H)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.732, 140, 67], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.369, 5, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.714, 37, 22]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'interaction(E, A), phenotype(B, E)', 'false,false': 'location(A, F)', 'false,false,true': 'location(F, G), phenotype(B, G)', 'false,false,false': 'interaction(H, A), enzyme(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.757, 186, 89], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.449, 7, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'interaction(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.764, 132, 70], 'false,false,false': [3.768, 40, 22]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [5.113, 84, 38], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.092, 119, 54]}]
['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'phenotype(B, C)', 'true,false': 'complex(D, A), complex(D, C)', 'true,false,false': 'enzyme(C, E), complex(F, C)', 'false': 'complex(G, A)', 'false,false': 'interaction(A, H)', 'false,false,true': 'enzyme(H, I), interaction(H, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.506, 107, 70], 'false,true': [0.0, 0, 0], 'false,false,true,true': [1.595, 7, 4], 'false,false,true,false': [3.563, 43, 18], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'complex(E, A)', 'true,false': 'complex(F, C), enzyme(A, G)', 'true,false,false': 'phenotype(B, C)', 'false': 'complex(H, A)', 'false,false': 'complex(I, J)', 'false,false,true': 'phenotype(B, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.247, 31, 16], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.027, 41, 0], 'false,false,true,false': [6.666, 107, 76], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'interaction(F, A), phenotype(B, F)', 'false,false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.168, 27, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [5.468, 72, 51], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.159, 85, 41], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(D, A), phenotype(B, D)', 'false,false': 'interaction(E, A), enzyme(E, F)', 'false,false,true': 'interaction(G, E), location(G, H)', 'false,false,false': 'interaction(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [2.89, 32, 12], 'false,false,true,false': [0.913, 7, 1], 'false,false,false,true': [5.244, 100, 41], 'false,false,false,false': [4.599, 55, 38]}]
['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(B, C)', 'false': 'interaction(D, A), enzyme(D, E)', 'false,true': 'location(D, F)', 'false,true,true': 'phenotype(B, F)', 'false,false': 'location(A, G), complex(H, G)', 'false,false,false': 'enzyme(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.94, 29, 13], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.534, 75, 30], 'false,false,false,false': [5.607, 105, 49]}]
['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(D, E)', 'false': 'function(F, A), interaction(G, A)', 'false,false': 'complex(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.383, 96, 44], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.572, 103, 48]}]
{'': [0.21890825923592167, 0.2339051013588781], 'false': [0.2343749999999999, 0.23384085033036578], 'false,true': [0.2343749999999999, nan], 'false,true,true': [nan, 0.2343749999999999], 'false,false': [nan, 0.2338408503303645], 'false,false,false': [nan, 0.2338408503303645], 'true': [nan, 0.21890825923592167]}
{'': [nan, 0.21852634699536502], 'false': [nan, 0.2185263469953673], 'false,false': [0.21880623893542459, 0.21001211968567518], 'false,false,true': [nan, 0.21880623893542459], 'false,false,false': [nan, 0.21001211968567515]}
{'': [nan, 0.2270676674697185], 'false': [nan, 0.22706766746972], 'false,false': [0.22646973609328822, 0.22901453861186716]}
{'': [nan, 0.21441213080997543], 'false': [0.2142738675022092, 0.2145095690133459], 'false,false': [nan, 0.2145095690133459], 'false,false,false': [nan, 0.2145095690133459]}
{'': [0.2391238667988214, 0.21226531446738994], 'true': [nan, 0.2391238667988214], 'true,false': [nan, 0.2391238667988214], 'true,false,false': [nan, 0.23912386679882136], 'false': [nan, 0.21226531446738994], 'false,false': [0.21226531446738994, nan], 'false,false,true': [0.23140495867768598, 0.20810362909203886]}
{'': [0.2243784700198316, 0.2242339550526045], 'true': [nan, 0.2243784700198316], 'true,false': [nan, 0.2243784700198316], 'true,false,false': [nan, 0.2243784700198316], 'false': [nan, 0.22423395505260682], 'false,false': [0.22423395505260682, nan], 'false,false,true': [1.8164124865397885e-05, 0.242842908040022]}
{'': [nan, 0.21560247161829832], 'false': [0.21915691264840856, 0.21119320491006555], 'false,true': [0.0010463048228296398, 0.24309024343424088], 'false,true,false': [nan, 0.24309024343424088], 'false,false': [nan, 0.21119320491006555], 'false,false,false': [0.21119320491006555, nan]}
{'': [nan, 0.20681474544475856], 'false': [nan, 0.20681474544475845], 'false,false': [0.17932463961097142, 0.21147793743650523], 'false,false,false': [0.19505820675690524, 0.2273911656550505], 'false,false,true': [0.18978442895418307, 0.10427547714807014]}
{'': [nan, 0.2018206639002195], 'false': [0.2057801706627365, 0.2011395620696467], 'false,true': [0.2057801706627365, nan], 'false,true,true': [nan, 0.2057801706627365], 'false,false': [nan, 0.20113956206964698], 'false,false,false': [0.1958134715273889, 0.20417634674050805]}
{'': [0.20694113439388348, 0.205589865727064], 'true': [nan, 0.20694113439388348], 'true,false': [0.20694113439388348, nan], 'false': [nan, 0.205589865727064], 'false,false': [nan, 0.205589865727064]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
5;false;phenotype(B, K).;true;true
6;;proteinclass(A, B) :- interaction(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 12.569
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( interaction(D, E), interaction(E, F) )
%   | then if ( location(D, C) )
%   | | then return 0.16665957339738335;  // std dev = 0.462, 94.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=29 */
%   | | else return 0.29564893509951234;  // std dev = 0.496, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else return 0.11901850031690367;  // std dev = 0.439, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   else if ( interaction(G, A), location(G, H) )
%   | then if ( complex(G, I), enzyme(A, J) )
%   | | then if ( interaction(K, G), enzyme(K, J) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.41370449065506776;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(L, G), enzyme(L, M) )
%   | | | then return 0.12481560176617904;  // std dev = 2.422, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.1959867729373502;  // std dev = 4.069, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
%   | else if ( interaction(N, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( complex(A, D), enzyme(C, E) )
%   | then return 0.03662673001432175;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( phenotype(A, F), location(C, G) )
%   | | then return 0.4350074547385875;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, H), location(C, I) )
%   | | | then return 0.12002776533470134;  // std dev = 1.196, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.24070860676373423;  // std dev = 2.027, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   else if ( interaction(A, J), phenotype(J, K) )
%   | then if ( interaction(J, L), phenotype(A, K) )
%   | | then return 0.07441822548430828;  // std dev = 0.427, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else if ( enzyme(J, M), interaction(N, A) )
%   | | | then return 0.10935400274159447;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.30684953885015964;  // std dev = 2.995, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | else if ( phenotype(A, P), interaction(A, Q) )
%   | | then return 0.26491595712413923;  // std dev = 0.493, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.12505577984091448;  // std dev = 0.457, 159.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=47 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(D, E), location(A, F) )
%   | then return 0.08972682537630595;  // std dev = 0.452, 126.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=36 */
%   | else if ( location(D, G), location(C, G) )
%   | | then return 0.16068927071883196;  // std dev = 0.478, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | else return 0.3582372011154054;  // std dev = 0.500, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else if ( interaction(A, H), complex(H, I) )
%   | then if ( enzyme(A, J), interaction(H, K) )
%   | | then return 0.0681537591416428;  // std dev = 0.447, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( phenotype(H, L) )
%   | | | then return 0.3553511445369305;  // std dev = 1.312, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.10543145915713821;  // std dev = 1.881, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( phenotype(A, M), interaction(N, A) )
%   | | then return 0.09322778232125699;  // std dev = 0.452, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( enzyme(A, P) )
%   | | | then return 0.45952346438106795;  // std dev = 1.179, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.20058962847872905;  // std dev = 2.456, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(E, A), interaction(E, C) )
%   | then if ( interaction(A, E), complex(A, F) )
%   | | then return 0.2056979323251439;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.5295152814837216;  // std dev = 0.841, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, G), interaction(H, A) )
%   | | then if ( interaction(A, H), phenotype(C, I) )
%   | | | then return 0.12461552999032884;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2842415285931903;  // std dev = 1.418, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( complex(A, J), complex(C, K) )
%   | | | then return 0.09116987699430729;  // std dev = 1.877, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.2101004961440931;  // std dev = 1.980, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   else if ( interaction(A, L), enzyme(L, M) )
%   | then return 0.012983069590165024;  // std dev = 0.436, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( interaction(A, N), interaction(N, N) )
%   | | then return 0.05077937981697695;  // std dev = 0.462, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else return 0.12139654256839796;  // std dev = 0.475, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( interaction(E, C), location(C, F) )
%   | then if ( enzyme(A, G), interaction(E, E) )
%   | | then return 0.02463951557814123;  // std dev = 0.432, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( location(A, F) )
%   | | | then return 0.16884296331858736;  // std dev = 3.687, 56.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=23 */
%   | | | else return 0.04074774850464839;  // std dev = 1.696, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( interaction(H, C) )
%   | | then return 0.7536556254387525;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.10765825269184831;  // std dev = 0.471, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   else if ( interaction(I, A), enzyme(A, J) )
%   | then return -0.01243772057157427;  // std dev = 0.445, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then return 0.06222522813966033;  // std dev = 0.463, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.23350593882277193;  // std dev = 2.429, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.09268183032645233;  // std dev = 3.155, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then if ( enzyme(A, G) )
%   | | then if ( phenotype(F, H), complex(A, I) )
%   | | | then return 0.195894301066981;  // std dev = 1.304, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.13292790866396786;  // std dev = 1.312, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.5302088837447868;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.016857174971449354;  // std dev = 0.450, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   else if ( phenotype(B, J) )
%   | then return -0.27409083386632715;  // std dev = 0.304, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( complex(A, K), interaction(L, A) )
%   | | then if ( interaction(M, L) )
%   | | | then return 0.08677357051106463;  // std dev = 4.237, 74.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=28 */
%   | | | else return 0.4273946630699245;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, N), enzyme(A, P) )
%   | | | then return 0.48076640769030266;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.2073851667836453;  // std dev = 4.593, 84.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=40 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.2419367528464049;  // std dev = 0.193, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( complex(A, E) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.395875666142159;  // std dev = 1.682, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.08002169306440518;  // std dev = 3.277, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.24063009629931523;  // std dev = 1.289, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.009796758143790702;  // std dev = 3.753, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
%   else if ( interaction(J, A), interaction(K, J) )
%   | then if ( complex(J, L), enzyme(K, M) )
%   | | then if ( complex(K, N) )
%   | | | then return 0.1629264001277954;  // std dev = 1.284, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.3661310411178359;  // std dev = 1.058, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.06367352065780732;  // std dev = 0.473, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
%   | else return -0.04588577418605371;  // std dev = 0.438, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( location(A, E) )
%   | then return 0.005454303023663556;  // std dev = 0.453, 107.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=34 */
%   | else if ( interaction(A, A) )
%   | | then return -0.04122307636974576;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.13518423459995535;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( phenotype(A, G) )
%   | | then return -0.10267950203560763;  // std dev = 0.880, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( location(F, H) )
%   | | | then return 0.06216963605380317;  // std dev = 1.359, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.10496315998545151;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( enzyme(A, J), complex(I, K) )
%   | | | then return 0.029895675102863332;  // std dev = 2.415, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.13333554906402653;  // std dev = 4.289, 81.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=34 */
%   | | else return 0.006651661834149472;  // std dev = 0.418, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(A, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(E, G), location(G, C) )
%   | | then if ( interaction(G, H) )
%   | | | then return 0.09190939748421034;  // std dev = 2.359, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return -0.10903186707708286;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.6628188515514767;  // std dev = 0.118, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17050534079848317;  // std dev = 1.222, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(A, L), interaction(M, J) )
%   | | | then return -0.060357346874952915;  // std dev = 1.371, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.07270528363290832;  // std dev = 2.951, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else return -0.26522690759957074;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( location(A, N) )
%   | then return -0.009470405745409069;  // std dev = 0.453, 172.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=53 */
%   | else return -0.13745603876509177;  // std dev = 0.373, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return -0.07813762969262081;  // std dev = 0.453, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   else if ( complex(A, D) )
%   | then if ( interaction(E, A), complex(E, D) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.173997975352271;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.024165625815421903;  // std dev = 2.315, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.03505480920198952;  // std dev = 2.334, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.14055787599680894;  // std dev = 2.981, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | else if ( interaction(A, I) )
%   | | then if ( complex(I, J), location(A, K) )
%   | | | then return -0.02582981332082787;  // std dev = 2.508, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.11055730562359382;  // std dev = 2.636, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.013005174931247648;  // std dev = 3.192, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return -0.07444183205605154;  // std dev = 2.225, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.326', 'seconds']
Refined model CLL: -0.401285


******************************************
Best model found
******************************************
Results 

CLL : -0.340969 

AUC ROC : 0.682476 

AUC PR : 0.011078 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.569 

Total Inference Time : 3.532733678817749 

Total revision time: 31.07563681983948
Best scored revision CLL: -0.356003


Results 

CLL : -0.340969 

AUC ROC : 0.682476 

AUC PR : 0.011078 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 31.354490236282352 

Total Inference Time : 3.532733678817749 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.269
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22225149920207776;  // std dev = 6.719, 195.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=71 */
%   else if ( interaction(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19905802600860326;  // std dev = 3.144, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), phenotype(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F) )
%   | | then if ( location(F, G), phenotype(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1627694003591054;  // std dev = 7.439, 249.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=83 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.02888541440107733;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.33051770610999476;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.14766766369389311;  // std dev = 6.828, 207.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=71 */
%   | | else return 0.1551001460395263;  // std dev = 3.126, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.08691728048027783;  // std dev = 4.405, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10105311792920545;  // std dev = 6.279, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(D, A), complex(D, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(C, E), complex(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0831455993328952;  // std dev = 6.949, 222.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=71 */
%   else if ( complex(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( enzyme(H, I), interaction(H, J) )
%   | | | then return 0.16581656929517244;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.06283964406574691;  // std dev = 2.509, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, C), enzyme(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(B, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06149982326181191;  // std dev = 4.051, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   else if ( complex(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(I, J) )
%   | | then if ( phenotype(B, K) )
%   | | | then return -0.2512772422565592;  // std dev = 0.016, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0.14543346635334437;  // std dev = 6.112, 156.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=62 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.2330933132714217;  // std dev = 0.199, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15924840112339364;  // std dev = 5.426, 120.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=52 */
%   | else if ( interaction(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.0669441044718759;  // std dev = 4.644, 105.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), location(G, H) )
%   | | | then return 0.05931528313132554;  // std dev = 2.965, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.07248836517518388;  // std dev = 1.366, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.005416489373137798;  // std dev = 5.274, 150.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=42 */
%   | | | else return 0.045892703757669934;  // std dev = 4.163, 85.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( location(D, F) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.018488702458678282;  // std dev = 3.343, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G), complex(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.09685071699175649;  // std dev = 3.564, 58.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=22 */
%   | | | else return 0.04733675744536719;  // std dev = 5.437, 141.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=47 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(D, E) )
%   | | then return 0.050661925557030266;  // std dev = 5.327, 139.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(F, A), interaction(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06964895237762762;  // std dev = 4.816, 107.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=39 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '15.168', 'seconds']
Parameter learned model CLL:-0.353079 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), location(C, D)', 'true': 'phenotype(B, C)', 'false': 'interaction(E, A)', 'false,false': 'location(A, F), phenotype(B, F)', 'false,false,false': 'location(A, G), function(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.719, 124, 71], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.144, 29, 15]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'interaction(E, A), phenotype(B, E)', 'false,false': 'location(A, F)', 'false,false,true': 'location(F, G), phenotype(B, G)', 'false,false,false': 'interaction(H, A), enzyme(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.439, 166, 83], 'false,false,false,true': [0.894, 4, 1], 'false,false,false,false': [1.0, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'interaction(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.828, 136, 71], 'false,false,false': [3.126, 28, 15]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.405, 63, 28], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.279, 123, 58]}]
['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'phenotype(B, C)', 'true,false': 'complex(D, A), complex(D, C)', 'true,false,false': 'enzyme(C, E), complex(F, C)', 'false': 'complex(G, A)', 'false,false': 'interaction(A, H)', 'false,false,true': 'enzyme(H, I), interaction(H, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.949, 151, 71], 'false,true': [0.0, 0, 0], 'false,false,true,true': [1.897, 9, 6], 'false,false,true,false': [2.509, 21, 9], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'complex(E, A)', 'true,false': 'complex(F, C), enzyme(A, G)', 'true,false,false': 'phenotype(B, C)', 'false': 'complex(H, A)', 'false,false': 'complex(I, J)', 'false,false,true': 'phenotype(B, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.051, 52, 24], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.016, 44, 0], 'false,false,true,false': [6.112, 94, 62], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'interaction(F, A), phenotype(B, F)', 'false,false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.199, 49, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [5.426, 68, 52], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.644, 71, 34], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(D, A), phenotype(B, D)', 'false,false': 'interaction(E, A), enzyme(E, F)', 'false,false,true': 'interaction(G, E), location(G, H)', 'false,false,false': 'interaction(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [2.965, 27, 14], 'false,false,true,false': [1.366, 6, 3], 'false,false,false,true': [5.274, 108, 42], 'false,false,false,false': [4.163, 58, 27]}]
['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(B, C)', 'false': 'interaction(D, A), enzyme(D, E)', 'false,true': 'location(D, F)', 'false,true,true': 'phenotype(B, F)', 'false,false': 'location(A, G), complex(H, G)', 'false,false,false': 'enzyme(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.343, 38, 17], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.564, 36, 22], 'false,false,false,false': [5.437, 94, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(D, E)', 'false': 'function(F, A), interaction(G, A)', 'false,false': 'complex(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.327, 92, 47], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.816, 68, 39]}]
{'': [0.23153188691650228, 0.2246900826446276], 'true': [nan, 0.23153188691650228], 'false': [nan, 0.2246900826446276], 'false,false': [nan, 0.22469008264462761], 'false,false,false': [nan, 0.22469008264462761]}
{'': [nan, 0.2222321654259637], 'false': [nan, 0.22223216542596325], 'false,false': [0.2222237166553354, 0.22246588525401848], 'false,false,false': [0.15999999999999998, 0.250002664376223], 'false,false,true': [nan, 0.2222237166553354]}
{'': [nan, 0.22556843694773812], 'false': [nan, 0.22556843694773926], 'false,false': [0.22520805482609402, 0.2272575595140961]}
{'': [nan, 0.21633866592349799], 'false': [0.21322351124452163, 0.21783799648274493], 'false,false': [nan, 0.21783799648274493], 'false,false,false': [nan, 0.21783799648274493]}
{'': [0.21750208180727615, 0.22221261728958872], 'false': [nan, 0.22221261728958872], 'false,false': [0.22221261728958872, nan], 'false,false,true': [0.23993357266196588, 0.209817390560165], 'true': [nan, 0.21750208180727615], 'true,false': [nan, 0.21750208180727615], 'true,false,false': [nan, 0.21750208180727645]}
{'': [0.215975854921098, 0.2138206165241398], 'true': [nan, 0.215975854921098], 'true,false': [nan, 0.215975854921098], 'true,false,false': [nan, 0.215975854921098], 'false': [nan, 0.21382061652413983], 'false,false': [0.21382061652413983, nan], 'false,false,true': [5.787136860744481e-06, 0.23950389828272817]}
{'': [nan, 0.2059557476290806], 'false': [0.20611711955092274, 0.20541218788817558], 'false,true': [0.0008108634964685552, 0.24531932979569002], 'false,true,false': [nan, 0.24531932979569002], 'false,false': [nan, 0.20541218788817558], 'false,false,false': [0.20541218788817558, nan]}
{'': [nan, 0.19640429689334565], 'false': [nan, 0.1964042968933457], 'false,false': [0.21322839337415275, 0.1925206624412371], 'false,false,true': [0.2144848879924519, 0.20736206766099646], 'false,false,false': [0.1854656242573064, 0.20392499114534535]}
{'': [nan, 0.2110963883743752], 'false': [0.2031465683812072, 0.21288798352278182], 'false,false': [nan, 0.2128879835227812], 'false,false,false': [0.2189860162566456, 0.20966502682925198], 'false,true': [0.2031465683812072, nan], 'false,true,true': [nan, 0.2031465683812072]}
{'': [0.2041587747806895, 0.21672168777757034], 'false': [nan, 0.21672168777757028], 'false,false': [nan, 0.21672168777757028], 'true': [nan, 0.2041587747806895], 'true,false': [0.2041587747806895, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
5;false;phenotype(B, K).;true;true
6;;proteinclass(A, B) :- interaction(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 8.853
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( interaction(C, E), enzyme(E, F) )
%   | then if ( enzyme(C, F), interaction(G, A) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.1484715157446736;  // std dev = 0.454, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | else if ( phenotype(C, I), complex(C, J) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(C, K), complex(K, L) )
%   | | | then return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.3196873966379738;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else if ( enzyme(A, M), location(A, N) )
%   | then return 0.2528857772047755;  // std dev = 0.489, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | else return 0.14386322081379693;  // std dev = 0.452, 140.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), phenotype(C, F) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return 0.4976100100797783;  // std dev = 1.142, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(I, E), phenotype(E, J) )
%   | | | then return 0.1898217904924191;  // std dev = 3.491, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return 0.3918915775891;  // std dev = 1.492, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return 0.1178705978120367;  // std dev = 0.451, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   else if ( complex(A, K), interaction(A, L) )
%   | then if ( complex(L, K) )
%   | | then return 0.47855714236556834;  // std dev = 1.134, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.1194066235484316;  // std dev = 0.449, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( enzyme(A, M), interaction(N, A) )
%   | | then return 0.0819770830866012;  // std dev = 0.435, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( interaction(P, A), location(A, Q) )
%   | | | then return 0.15905750188361772;  // std dev = 3.852, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | | else return 0.09875774825512092;  // std dev = 2.718, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, A) )
%   then return 0.041888939683421056;  // std dev = 0.438, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(A, E) )
%   | | then if ( complex(D, F) )
%   | | | then return 0.37975665175019596;  // std dev = 1.073, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.4784681064657664;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(G, A), phenotype(A, H) )
%   | | | then return 0.34684196740140577;  // std dev = 1.646, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.14689459811044542;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | else if ( interaction(I, A), enzyme(A, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.27024344874273853;  // std dev = 2.721, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.12047925078390972;  // std dev = 2.186, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.11378821115371358;  // std dev = 4.316, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
%   | | | else return 0.20358205441971447;  // std dev = 3.117, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( interaction(A, E), interaction(F, A) )
%   | then return -0.04896664466033239;  // std dev = 0.421, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | else if ( interaction(A, G), phenotype(G, C) )
%   | | then return 0.004692130585811222;  // std dev = 0.451, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.07539081728527434;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.3338516156618493;  // std dev = 1.107, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( enzyme(A, J), complex(A, K) )
%   | then return 0.04423912587937499;  // std dev = 0.439, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( interaction(L, A), enzyme(L, M) )
%   | | then if ( interaction(A, N) )
%   | | | then return 0.12088486685082792;  // std dev = 2.130, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.4465353473427227;  // std dev = 1.171, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, P), interaction(P, A) )
%   | | | then return 0.1765062545742631;  // std dev = 2.220, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.10071853350519645;  // std dev = 5.575, 142.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=46 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then return -0.01814294637893916;  // std dev = 0.440, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.011797107122475281;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.45040049317612346;  // std dev = 1.175, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return -0.05790480062797489;  // std dev = 0.425, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   else if ( interaction(K, A), enzyme(K, L) )
%   | then return 0.03283799280745693;  // std dev = 0.446, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | else if ( interaction(M, A), complex(M, N) )
%   | | then if ( phenotype(A, P), phenotype(M, Q) )
%   | | | then return 0.4035119175174896;  // std dev = 1.370, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.14497368586785225;  // std dev = 3.028, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | else if ( interaction(A, R), interaction(S, A) )
%   | | | then return 0.031302411911130985;  // std dev = 2.663, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.12029787137175751;  // std dev = 4.005, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), complex(A, F) )
%   | then if ( enzyme(A, G), complex(E, F) )
%   | | then return 0.4376633619200181;  // std dev = 0.788, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(E, H) )
%   | | | then return 0.032211643416976986;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.13158080217010726;  // std dev = 1.084, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.03848729620728148;  // std dev = 0.437, 73.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=18 */
%   else if ( phenotype(B, I) )
%   | then return -0.26959371282358086;  // std dev = 0.346, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else if ( phenotype(A, J), interaction(K, A) )
%   | | then if ( phenotype(K, L), complex(A, M) )
%   | | | then return 0.30981725456663706;  // std dev = 1.692, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.11631190349901863;  // std dev = 4.056, 68.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=27 */
%   | | else if ( complex(A, N), enzyme(A, P) )
%   | | | then return 0.7428791254541689;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2878220335986948;  // std dev = 3.281, 44.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=24 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.2502138828776564;  // std dev = 0.060, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( complex(E, G) )
%   | | | then return 0.14611445341914678;  // std dev = 2.080, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.35289611223126605;  // std dev = 2.434, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.013022613102017064;  // std dev = 2.605, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.152920410966881;  // std dev = 3.104, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   else if ( phenotype(A, I), enzyme(A, J) )
%   | then return -0.05038317616379293;  // std dev = 0.465, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then return 0.028340787933223973;  // std dev = 0.444, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.12318586131191199;  // std dev = 2.835, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.25774478765582964;  // std dev = 1.591, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( interaction(A, A) )
%   | then return 0.30284160196957294;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(A, G) )
%   | | | then return -0.00579942341240644;  // std dev = 1.401, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.06182520684934308;  // std dev = 1.344, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return -0.1146218255522123;  // std dev = 0.431, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   else if ( interaction(H, A), interaction(A, H) )
%   | then return -0.022395197704069874;  // std dev = 0.417, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( phenotype(A, J), phenotype(I, J) )
%   | | | then return -0.03950256902572524;  // std dev = 1.187, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.2747421781200603;  // std dev = 1.789, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( interaction(K, A), enzyme(A, L) )
%   | | | then return 0.12415836596419777;  // std dev = 2.778, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | | else return 0.046241697198905654;  // std dev = 4.395, 94.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=32 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( complex(A, E), interaction(A, F) )
%   | then return 0.35829903596709406;  // std dev = 1.063, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( enzyme(A, D) )
%   | | then return -0.0949092425014165;  // std dev = 0.432, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.3525248444974965;  // std dev = 0.831, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08946331393177259;  // std dev = 2.196, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   else if ( enzyme(A, I) )
%   | then if ( enzyme(J, I), complex(J, K) )
%   | | then if ( complex(A, L), phenotype(J, M) )
%   | | | then return -0.20767921751404778;  // std dev = 1.951, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.02765441405470026;  // std dev = 2.150, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.20331858747155382;  // std dev = 1.407, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.034244026422221865;  // std dev = 1.699, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else return 0.03514956099881287;  // std dev = 0.446, 139.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=47 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(D, D) )
%   | then return -0.06807918997754296;  // std dev = 0.433, 104.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=28 */
%   | else if ( interaction(C, A), enzyme(C, E) )
%   | | then return -0.22733224537337665;  // std dev = 0.877, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.05488256749556648;  // std dev = 0.450, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( enzyme(A, H), complex(A, I) )
%   | | then return 0.2646313138209838;  // std dev = 0.918, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, G), complex(F, J) )
%   | | | then return 0.29822861988949395;  // std dev = 0.828, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0045640211423562775;  // std dev = 4.008, 77.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then return 0.43759429460425725;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, M) )
%   | | | then return 0.1733362886024299;  // std dev = 1.398, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.05694519683476479;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.133', 'seconds']
Refined model CLL: -0.404656


******************************************
Best model found
******************************************
Results 

CLL : -0.362457 

AUC ROC : 0.66442 

AUC PR : 0.010315 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.853 

Total Inference Time : 3.6882455348968506 

Total revision time: 25.792404195785522
Best scored revision CLL: -0.353079


Results 

CLL : -0.362457 

AUC ROC : 0.66442 

AUC PR : 0.010315 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 26.071257612228393 

Total Inference Time : 3.6882455348968506 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 5.604
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( function(C, A), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18521660427244468;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(F, G), location(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1127629638708374;  // std dev = 4.952, 122.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=34 */
%   | | else if ( function(H, A), phenotype(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15335154771441023;  // std dev = 6.007, 166.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( function(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13875493666125255;  // std dev = 7.666, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(C, D), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then return 0.1126788889398147;  // std dev = 5.343, 131.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=42 */
%   | else if ( interaction(E, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12052570218020581;  // std dev = 5.499, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( function(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, E) )
%   | | then if ( phenotype(E, F), function(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10326370665213079;  // std dev = 7.629, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( function(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( location(B, H) )
%   | | | then return -0.24532517077157376;  // std dev = 0.039, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | | else return 0.33373302161574114;  // std dev = 6.045, 150.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=87 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(A, D) )
%   | then if ( location(B, E) )
%   | | then return -0.2029839235422706;  // std dev = 0.034, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( location(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2269909766202652;  // std dev = 6.325, 161.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), location(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(E, A), phenotype(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return 0.020013565984592935;  // std dev = 7.023, 284.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=87 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(C, A), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), phenotype(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.02197841364888484;  // std dev = 4.852, 135.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=42 */
%   | | | else return 0.03674552377106966;  // std dev = 4.937, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( function(A, C), function(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), function(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.017960863946048986;  // std dev = 6.979, 273.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '7.732', 'seconds']
Parameter learned model CLL:-0.316486 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'function(C, A), enzyme(C, D)', 'false': 'function(E, A)', 'false,false': 'enzyme(A, F), location(B, F)', 'false,false,false': 'enzyme(A, G), interaction(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.651, 179, 87]}]
['proteinclass(A, B)', {'': 'enzyme(A, C), phenotype(C, D)', 'false': 'function(E, A), location(B, E)', 'false,false': 'enzyme(A, F)', 'false,false,true': 'enzyme(F, G), location(B, G)', 'false,false,false': 'function(H, A), phenotype(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.952, 88, 34], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.007, 113, 53]}]
['proteinclass(A, B)', {'': 'function(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'function(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.666, 181, 87]}]
['proteinclass(A, B)', {'': 'phenotype(C, D), location(B, C)', 'false': 'phenotype(A, D)', 'false,false': 'interaction(E, F), location(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [5.343, 89, 42], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.499, 92, 45]}]
['proteinclass(A, B)', {'': 'function(C, A)', 'false': 'complex(D, A)', 'false,false': 'function(A, E)', 'false,false,true': 'phenotype(E, F), function(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.629, 176, 87], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(A, C), phenotype(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'location(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.039, 104, 0], 'false,false,true,false': [6.045, 63, 87], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(A, D)', 'false,true': 'location(B, E)', 'false,true,false': 'location(B, D)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.034, 102, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.325, 74, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(D, A), location(B, D)', 'false,false': 'function(E, A), phenotype(E, F)', 'false,false,false': 'function(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.023, 197, 87], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(C, A), location(B, C)', 'false': 'function(D, A), phenotype(D, E)', 'false,false': 'enzyme(A, F), complex(G, F)', 'false,false,false': 'phenotype(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.852, 93, 42], 'false,false,false,false': [4.937, 93, 45]}]
['proteinclass(A, B)', {'': 'function(A, C), function(C, D)', 'false': 'interaction(E, A), function(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [6.979, 186, 87]}]
{'': [nan, 0.22009440895471846], 'false': [nan, 0.22009440895471846], 'false,false': [nan, 0.22009440895471846], 'false,false,false': [nan, 0.22009440895471846]}
{'': [nan, 0.21082899305555516], 'false': [nan, 0.21082899305555658], 'false,false': [0.2010212308519214, 0.21733923646392736], 'false,false,false': [nan, 0.21733923646392736], 'false,false,true': [nan, 0.2010212308519214]}
{'': [nan, 0.2192640836760481], 'false': [nan, 0.2192640836760481], 'false,false': [nan, 0.2192640836760481]}
{'': [nan, 0.21936328973852276], 'false': [0.21789190554626944, 0.22074013675231563], 'false,false': [nan, 0.22074013675231563], 'false,false,false': [nan, 0.22074013675231563]}
{'': [nan, 0.22131434056033042], 'false': [nan, 0.22131434056033042], 'false,false': [0.22131434056033042, nan], 'false,false,true': [nan, 0.22131434056033042]}
{'': [nan, 0.22492628047905294], 'false': [nan, 0.22492628047905294], 'false,false': [0.22492628047905294, nan], 'false,false,true': [1.4532182620844522e-05, 0.2435734683093169]}
{'': [nan, 0.19600640516400822], 'false': [0.19600640516400822, nan], 'false,true': [1.1494329445121203e-05, 0.24847519931412973], 'false,true,false': [nan, 0.24847519931412973]}
{'': [nan, 0.1736866409342611], 'false': [nan, 0.1736866409342611], 'false,false': [nan, 0.1736866409342611], 'false,false,false': [0.1736866409342611, nan]}
{'': [nan, 0.17554550604491492], 'false': [nan, 0.17554550604491492], 'false,false': [nan, 0.17554550604491512], 'false,false,false': [0.17435206384444493, 0.1766051682523467]}
{'': [nan, 0.1784309691959905], 'false': [nan, 0.17843096919599047], 'false,false': [nan, 0.1784309691959905]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- location(B, H).;true;true
6;;proteinclass(A, B) :- location(B, E).;true;true


Refining candidate
***************************
Model training time 20.684
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( phenotype(A, E), interaction(A, F) )
%   | then if ( interaction(F, G), phenotype(G, E) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, H) )
%   | | then return 0.13087620782678497;  // std dev = 0.445, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( enzyme(A, J), phenotype(A, K) )
%   | then if ( interaction(A, L) )
%   | | then if ( interaction(L, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.16584124279182003;  // std dev = 0.462, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else return 0.16475270868441863;  // std dev = 0.461, 212.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=65 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.16662698089716443;  // std dev = 0.471, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   else if ( enzyme(A, D) )
%   | then if ( interaction(A, E), phenotype(A, F) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.058741135785635015;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(G, D), interaction(G, G) )
%   | | | then return 0.5368574682635446;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.2868426035596428;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( phenotype(H, J), interaction(H, H) )
%   | | | then return 0.4083157690999197;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.1568871976713485;  // std dev = 4.040, 75.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.23688719767134833;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.503553864338015;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(E, A), phenotype(A, F) )
%   | then return -0.024308377448980168;  // std dev = 0.437, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( location(A, G), location(C, G) )
%   | | then if ( interaction(C, H), interaction(A, H) )
%   | | | then return 0.12675771804336425;  // std dev = 1.594, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.2795365638866762;  // std dev = 1.582, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.034765887850500686;  // std dev = 0.435, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   else if ( interaction(I, A), phenotype(I, J) )
%   | then if ( interaction(K, I), enzyme(K, L) )
%   | | then if ( interaction(M, K) )
%   | | | then return 0.2159548354058584;  // std dev = 4.344, 78.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=32 */
%   | | | else return 0.025102654494328212;  // std dev = 1.534, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(N, I), interaction(N, N) )
%   | | | then return 0.14618092276405598;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.4559007122001537;  // std dev = 1.651, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else return 0.08599392551867116;  // std dev = 0.449, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( complex(D, E), location(C, F) )
%   | then if ( complex(C, G), location(A, F) )
%   | | then if ( interaction(A, H), interaction(D, H) )
%   | | | then return 0.0883338060347379;  // std dev = 2.732, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.3165602360805475;  // std dev = 2.828, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | else if ( interaction(C, C), location(D, F) )
%   | | | then return 0.26332997233645866;  // std dev = 1.594, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.07253808409455156;  // std dev = 5.102, 123.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=37 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.39221313688719484;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.30096971975633763;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5287170224003069;  // std dev = 0.842, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( phenotype(A, J), interaction(A, K) )
%   | then return -0.09071791204256156;  // std dev = 0.410, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else return 0.06945831097246485;  // std dev = 0.464, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( enzyme(A, E), interaction(F, A) )
%   | then return -0.05287231723325176;  // std dev = 0.455, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( interaction(C, G), enzyme(G, H) )
%   | | then if ( interaction(G, G), complex(A, I) )
%   | | | then return 0.06382998911620447;  // std dev = 1.450, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.2008305257702037;  // std dev = 1.978, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else return 0.016328029439035933;  // std dev = 0.449, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   else if ( location(A, J), interaction(A, A) )
%   | then return 0.40072074582674716;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( complex(A, M), interaction(A, N) )
%   | | | then return 0.2869406855789064;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0318700856342287;  // std dev = 2.736, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | else if ( enzyme(A, P) )
%   | | | then return 0.07217506775838652;  // std dev = 3.425, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.19158928350917187;  // std dev = 4.042, 66.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=29 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.29124202020317236;  // std dev = 0.054, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(F, A), enzyme(A, G) )
%   | | then if ( location(A, H), location(F, H) )
%   | | | then return 0.27621844425376385;  // std dev = 1.961, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.10282305921029988;  // std dev = 1.717, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( complex(D, I), enzyme(D, J) )
%   | | | then return 0.250493907252263;  // std dev = 1.725, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.5311338134595632;  // std dev = 2.041, 27.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=22 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(M, K), interaction(K, M) )
%   | | | then return 0.19612847515871976;  // std dev = 3.065, 39.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=19 */
%   | | | else return 0.0159570680614362;  // std dev = 2.146, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.1402044089512482;  // std dev = 1.701, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.32111874961962;  // std dev = 2.402, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.23805339510228135;  // std dev = 0.484, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(D, E), complex(A, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return -0.05043099844690213;  // std dev = 1.189, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.2098364851346465;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.3027782197447813;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.07775607838551617;  // std dev = 2.078, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), interaction(I, J) )
%   | | | then return 0.29213484364200404;  // std dev = 2.825, 35.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=22 */
%   | | | else return 0.6578225682500622;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.22000335758770903;  // std dev = 4.204, 71.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=40 */
%   | | | else return 0.020521486133655654;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, D), complex(A, F) )
%   | | then return -0.07234864729131879;  // std dev = 0.415, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( location(D, G) )
%   | | | then return 0.13688200371425155;  // std dev = 3.606, 64.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=31 */
%   | | | else return -0.15960860164233612;  // std dev = 0.781, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return -0.08069793925971613;  // std dev = 0.355, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( enzyme(I, J), complex(H, K) )
%   | | then if ( interaction(H, I) )
%   | | | then return 0.18501367059199905;  // std dev = 0.991, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.014843435887734105;  // std dev = 2.083, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( complex(H, L) )
%   | | | then return -0.09567879456473616;  // std dev = 2.424, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return -0.002449607408350734;  // std dev = 3.417, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | else return 0.11170004314244476;  // std dev = 0.399, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( enzyme(D, E), complex(D, F) )
%   | then return -0.015481933357080339;  // std dev = 0.416, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( interaction(G, A), location(A, H) )
%   | | then return 0.19707084510338968;  // std dev = 0.419, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return -0.016341701483549614;  // std dev = 0.417, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else if ( interaction(I, A), phenotype(I, J) )
%   | then if ( complex(I, K), enzyme(I, L) )
%   | | then return 0.17544250858237986;  // std dev = 0.460, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return -0.05374171070525275;  // std dev = 0.418, 136.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=41 */
%   | else if ( interaction(A, M), location(A, N) )
%   | | then if ( location(M, N), interaction(P, A) )
%   | | | then return 0.21985071997781822;  // std dev = 0.833, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.14233678800665608;  // std dev = 1.480, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( interaction(Q, A), complex(Q, R) )
%   | | | then return 0.40598378260791684;  // std dev = 0.679, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04579706168997414;  // std dev = 2.974, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), interaction(E, D) )
%   | then return -0.0378154757365783;  // std dev = 0.413, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   | else return -0.33895877352038833;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(H, F), interaction(A, I) )
%   | | then return -0.036378879432561365;  // std dev = 0.405, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | else if ( interaction(F, F), complex(A, J) )
%   | | | then return -0.03964906849252033;  // std dev = 1.069, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1648788711746688;  // std dev = 1.986, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else if ( interaction(A, K), location(A, L) )
%   | | then if ( interaction(K, K) )
%   | | | then return 0.09037689990634142;  // std dev = 0.646, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4400509640073347;  // std dev = 0.907, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.09717227405898961;  // std dev = 2.534, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return -0.033240377713336135;  // std dev = 1.322, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.996', 'seconds']
Refined model CLL: -0.369519


******************************************
Best model found
******************************************
Results 

CLL : -0.314245 

AUC ROC : 0.804502 

AUC PR : 0.017786 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 20.684 

Total Inference Time : 6.491871356964111 

Total revision time: 45.54778803634643
Best scored revision CLL: -0.316486


Results 

CLL : -0.314245 

AUC ROC : 0.804502 

AUC PR : 0.017786 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 45.704323661804196 

Total Inference Time : 6.491871356964111 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.759
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( function(C, A), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18013035924811957;  // std dev = 8.397, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(F, G), location(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15830656265600787;  // std dev = 4.725, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | | else if ( function(H, A), phenotype(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1369048104657721;  // std dev = 7.039, 235.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( function(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14844330965476105;  // std dev = 8.319, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(C, D), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then return 0.0922342188605699;  // std dev = 6.685, 212.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=64 */
%   | else if ( interaction(E, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12122648583815118;  // std dev = 5.174, 121.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( function(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, E) )
%   | | then if ( phenotype(E, F), function(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12873557601234795;  // std dev = 8.186, 292.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=104 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( function(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( location(B, H) )
%   | | | then return -0.2505647815904302;  // std dev = 0.034, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | | else return 0.31797397869665456;  // std dev = 6.697, 183.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=104 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(A, D) )
%   | then if ( location(B, E) )
%   | | then return -0.2066205117198209;  // std dev = 0.031, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | else if ( location(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18758528762244364;  // std dev = 7.194, 207.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), location(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(E, A), phenotype(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return 0.05417943035920516;  // std dev = 7.480, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(C, A), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), phenotype(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.03824697197738166;  // std dev = 5.960, 187.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=64 */
%   | | | else return 0.02300280377412264;  // std dev = 4.691, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( function(A, C), function(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), function(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03540247456770996;  // std dev = 7.461, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '8.613', 'seconds']
Parameter learned model CLL:-0.32741 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'function(C, A), enzyme(C, D)', 'false': 'function(E, A)', 'false,false': 'enzyme(A, F), location(B, F)', 'false,false,false': 'enzyme(A, G), interaction(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.397, 219, 104]}]
['proteinclass(A, B)', {'': 'enzyme(A, C), phenotype(C, D)', 'false': 'function(E, A), location(B, E)', 'false,false': 'enzyme(A, F)', 'false,false,true': 'enzyme(F, G), location(B, G)', 'false,false,false': 'function(H, A), phenotype(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.725, 69, 33], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.039, 164, 71]}]
['proteinclass(A, B)', {'': 'function(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'function(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.319, 207, 104]}]
['proteinclass(A, B)', {'': 'phenotype(C, D), location(B, C)', 'false': 'phenotype(A, D)', 'false,false': 'interaction(E, F), location(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [6.685, 148, 64], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.174, 81, 40]}]
['proteinclass(A, B)', {'': 'function(C, A)', 'false': 'complex(D, A)', 'false,false': 'function(A, E)', 'false,false,true': 'phenotype(E, F), function(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [8.186, 188, 104], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(A, C), phenotype(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'location(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.034, 124, 0], 'false,false,true,false': [6.697, 79, 104], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(A, D)', 'false,true': 'location(B, E)', 'false,true,false': 'location(B, D)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.031, 117, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [7.194, 103, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(D, A), location(B, D)', 'false,false': 'function(E, A), phenotype(E, F)', 'false,false,false': 'function(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.48, 206, 104], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(C, A), location(B, C)', 'false': 'function(D, A), phenotype(D, E)', 'false,false': 'enzyme(A, F), complex(G, F)', 'false,false,false': 'phenotype(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.96, 123, 64], 'false,false,false,false': [4.691, 87, 40]}]
['proteinclass(A, B)', {'': 'function(A, C), function(C, D)', 'false': 'interaction(E, A), function(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.461, 208, 104]}]
{'': [nan, 0.21830938665184368], 'false': [nan, 0.21830938665184368], 'false,false': [nan, 0.21830938665184232], 'false,false,false': [nan, 0.21830938665184232]}
{'': [nan, 0.21336808460055212], 'false': [nan, 0.2133680846005536], 'false,false': [0.21885813148788863, 0.21084653689452398], 'false,false,true': [nan, 0.21885813148788863], 'false,false,false': [nan, 0.21084653689452398]}
{'': [nan, 0.22254785762268992], 'false': [nan, 0.22254785762268992], 'false,false': [nan, 0.22254785762268992]}
{'': [nan, 0.21477831364852512], 'false': [0.21079892548294413, 0.2212153389064588], 'false,false': [nan, 0.2212153389064588], 'false,false,false': [nan, 0.2212153389064588]}
{'': [nan, 0.2294933518964079], 'false': [nan, 0.2294933518964079], 'false,false': [0.2294933518964079, nan], 'false,false,true': [nan, 0.2294933518964079]}
{'': [nan, 0.22390993482633423], 'false': [nan, 0.22390993482633423], 'false,false': [0.22390993482633423, nan], 'false,false,true': [9.589900085364476e-06, 0.24506583651891475]}
{'': [nan, 0.19557532445727802], 'false': [0.19557532445727802, nan], 'false,true': [8.22706242872104e-06, 0.24999722798687055], 'false,true,false': [nan, 0.24999722798687055]}
{'': [nan, 0.18046997830191155], 'false': [nan, 0.18046997830191155], 'false,false': [nan, 0.18046997830191155], 'false,false,false': [0.18046997830191155, nan]}
{'': [nan, 0.18324025156392745], 'false': [nan, 0.18324025156392745], 'false,false': [nan, 0.1832402515639277], 'false,false,false': [0.18992959338643237, 0.17325219608160378]}
{'': [nan, 0.17841169803680548], 'false': [nan, 0.17841169803680548], 'false,false': [nan, 0.17841169803680548]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- location(B, H).;true;true
6;;proteinclass(A, B) :- location(B, E).;true;true


Refining candidate
***************************
Model training time 18.392
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( complex(C, D), interaction(E, C) )
%   | then if ( complex(E, D), location(A, F) )
%   | | then if ( enzyme(A, G), interaction(E, A) )
%   | | | then return 0.1273797043302816;  // std dev = 2.262, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.2015832785338566;  // std dev = 6.682, 198.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=68 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.21529179224236947;  // std dev = 0.479, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return 0.1034319539674369;  // std dev = 0.430, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   else if ( phenotype(A, J) )
%   | then if ( interaction(A, K), interaction(K, K) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(E, D), interaction(E, A) )
%   | then if ( complex(A, F), phenotype(A, G) )
%   | | then return 0.11572670702661389;  // std dev = 0.450, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | else if ( enzyme(A, H), interaction(D, E) )
%   | | | then return 0.15862480367404752;  // std dev = 2.602, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.28114115341706286;  // std dev = 3.717, 56.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=25 */
%   | else return 0.0994984117887445;  // std dev = 0.443, 164.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=44 */
%   else if ( interaction(I, A), enzyme(I, J) )
%   | then if ( interaction(I, K), interaction(K, A) )
%   | | then return 0.17841930360707478;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.17841930360707478;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(L, A), complex(L, M) )
%   | | then return 0.4090517846681319;  // std dev = 1.077, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, N), complex(A, P) )
%   | | | then return 0.4337386289033884;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18805770751672346;  // std dev = 1.586, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(C, E), interaction(E, C) )
%   | then return 0.05528073275401933;  // std dev = 0.434, 151.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=38 */
%   | else if ( interaction(D, C) )
%   | | then return 0.09063448822699238;  // std dev = 0.452, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else return 0.41741309049675596;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( location(A, F) )
%   | then if ( complex(A, G) )
%   | | then if ( interaction(H, A), phenotype(A, I) )
%   | | | then return 0.1707738050150439;  // std dev = 2.125, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.43336084828944466;  // std dev = 1.654, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.11401998904902363;  // std dev = 2.891, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0.19738688833655055;  // std dev = 3.914, 65.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=25 */
%   | else if ( enzyme(A, K) )
%   | | then return 0.03676572490663112;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.1535990450562664;  // std dev = 0.471, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(A, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then return 0.08905396772358977;  // std dev = 0.461, 85.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=26 */
%   | else return -0.009389297593240071;  // std dev = 0.433, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   else if ( interaction(G, A), enzyme(A, H) )
%   | then if ( phenotype(A, I), interaction(A, G) )
%   | | then return 0.08791914262103662;  // std dev = 0.452, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( enzyme(G, J), interaction(K, G) )
%   | | | then return 0.35040003598195135;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.20623026603718297;  // std dev = 2.418, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( interaction(A, L), complex(L, M) )
%   | | then if ( enzyme(L, N), phenotype(L, P) )
%   | | | then return 0.07024729191381802;  // std dev = 1.871, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.34773710505091476;  // std dev = 1.636, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(Q, A), interaction(Q, Q) )
%   | | | then return 0.20405723361141767;  // std dev = 1.493, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.10435953359418632;  // std dev = 4.525, 93.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=30 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( location(D, C), enzyme(A, E) )
%   | then if ( enzyme(D, F), complex(A, G) )
%   | | then return 0.5307438813691009;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(D, E), interaction(A, D) )
%   | | | then return 0.38771042993167015;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.12235230732365622;  // std dev = 3.306, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | else if ( interaction(A, H), interaction(D, D) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.12590424768274078;  // std dev = 2.801, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.4159925219500064;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.0807894586792849;  // std dev = 0.469, 170.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=55 */
%   else if ( interaction(I, A), complex(I, J) )
%   | then return -0.04045324376751612;  // std dev = 0.447, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then return 0.29436686981041227;  // std dev = 0.990, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.016404624441483374;  // std dev = 0.468, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.2656325845207449;  // std dev = 0.487, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then if ( phenotype(D, E), complex(D, G) )
%   | | | then return 0.32312866885658015;  // std dev = 1.998, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.7483796933296332;  // std dev = 0.063, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.4029541305132326;  // std dev = 2.510, 28.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   | | | else return 0.2154730154484782;  // std dev = 5.742, 131.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=63 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return -0.08789420394242527;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.24539540120943676;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.2009688669284432;  // std dev = 1.237, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.21282882337201903;  // std dev = 0.354, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( enzyme(A, F), complex(A, G) )
%   | | then return 0.37374079066256805;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, H), enzyme(E, I) )
%   | | | then return -0.058485262615514386;  // std dev = 1.877, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.0897602792125108;  // std dev = 3.991, 64.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=27 */
%   | else if ( enzyme(A, J) )
%   | | then if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.3828450035493673;  // std dev = 0.900, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.11499541419256334;  // std dev = 3.166, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.2988917057148762;  // std dev = 4.051, 69.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=42 */
%   | | | else return 0.435282219870769;  // std dev = 1.216, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(D, D), complex(D, E) )
%   | then if ( phenotype(A, F), phenotype(C, F) )
%   | | then if ( complex(C, E), interaction(D, C) )
%   | | | then return 0.14269144873060022;  // std dev = 1.965, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.2775678324172701;  // std dev = 1.308, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0.05338380182793769;  // std dev = 0.358, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( phenotype(D, G), phenotype(A, H) )
%   | | then if ( interaction(A, C), complex(A, I) )
%   | | | then return -0.10729068571689403;  // std dev = 1.398, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.014447854128771002;  // std dev = 2.650, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | else if ( interaction(D, J), enzyme(C, K) )
%   | | | then return 0.023627121159868918;  // std dev = 1.593, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.1747295123547171;  // std dev = 2.150, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   else if ( interaction(L, A), interaction(L, L) )
%   | then return -0.07444112549446966;  // std dev = 0.343, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | else return 0.02291861142410144;  // std dev = 0.428, 153.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=49 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( phenotype(D, E), interaction(D, D) )
%   | then return -0.029095090729026375;  // std dev = 0.386, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | else return 0.027641352239997596;  // std dev = 0.428, 116.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=39 */
%   else if ( complex(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), interaction(H, I) )
%   | | then if ( phenotype(I, J) )
%   | | | then return 0.06419177215199517;  // std dev = 1.073, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3493824483265508;  // std dev = 0.631, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.17944296636181037;  // std dev = 1.059, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( enzyme(A, K) )
%   | | then if ( enzyme(L, K), phenotype(L, M) )
%   | | | then return 0.06403332600919957;  // std dev = 1.848, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.037534104728950045;  // std dev = 1.661, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( location(A, N) )
%   | | | then return 0.04859321241615978;  // std dev = 3.972, 88.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=30 */
%   | | | else return 0.13182137110838618;  // std dev = 1.434, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( interaction(E, A), enzyme(E, D) )
%   | then return -0.2813113370089487;  // std dev = 0.830, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.04755965513085027;  // std dev = 0.393, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   else if ( interaction(A, F), phenotype(A, G) )
%   | then if ( phenotype(F, G), interaction(F, F) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.05361209143169414;  // std dev = 1.675, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.0677188572406719;  // std dev = 1.374, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(F, F) )
%   | | | then return 0.24255124655428417;  // std dev = 1.673, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.07692518105605751;  // std dev = 2.738, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(H, I) )
%   | | | then return 0.009267421604551894;  // std dev = 5.149, 155.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=50 */
%   | | | else return 0.4581918112271433;  // std dev = 0.730, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.07380174704990963;  // std dev = 0.384, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.313', 'seconds']
Refined model CLL: -0.350729


******************************************
Best model found
******************************************
Results 

CLL : -0.325591 

AUC ROC : 0.805337 

AUC PR : 0.018971 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 18.392 

Total Inference Time : 9.124069690704346 

Total revision time: 44.87957618331909
Best scored revision CLL: -0.32741


Results 

CLL : -0.325591 

AUC ROC : 0.805337 

AUC PR : 0.018971 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 45.03611180877685 

Total Inference Time : 9.124069690704346 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.859
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( function(C, A), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17321742825019726;  // std dev = 7.938, 292.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(F, G), location(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12803609881516667;  // std dev = 5.186, 130.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=38 */
%   | | else if ( function(H, A), phenotype(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17113213321555035;  // std dev = 5.991, 161.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( function(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1351440900188197;  // std dev = 7.901, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(C, D), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then return 0.13796931115615985;  // std dev = 5.051, 113.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | else if ( interaction(E, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15547955930100582;  // std dev = 5.806, 146.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=53 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( function(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, E) )
%   | | then if ( phenotype(E, F), function(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11920227609767439;  // std dev = 7.719, 261.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=92 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( function(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( location(B, H) )
%   | | | then return -0.25483795202923387;  // std dev = 0.050, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | | else return 0.273580677284853;  // std dev = 6.584, 174.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=92 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(A, D) )
%   | then if ( location(B, E) )
%   | | then return -0.2098709352905199;  // std dev = 0.040, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else if ( location(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2572447784099442;  // std dev = 6.306, 162.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), location(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(E, A), phenotype(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return 0.046585505452826165;  // std dev = 7.013, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(C, A), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), phenotype(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.026832199530339995;  // std dev = 4.581, 124.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=39 */
%   | | | else return 0.019517080692532798;  // std dev = 5.418, 162.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=53 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( function(A, C), function(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), function(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.041099812794842525;  // std dev = 6.944, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '16.934', 'seconds']
Parameter learned model CLL:-0.328177 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'function(C, A), enzyme(C, D)', 'false': 'function(E, A)', 'false,false': 'enzyme(A, F), location(B, F)', 'false,false,false': 'enzyme(A, G), interaction(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.938, 200, 92]}]
['proteinclass(A, B)', {'': 'enzyme(A, C), phenotype(C, D)', 'false': 'function(E, A), location(B, E)', 'false,false': 'enzyme(A, F)', 'false,false,true': 'enzyme(F, G), location(B, G)', 'false,false,false': 'function(H, A), phenotype(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [5.186, 92, 38], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.991, 107, 54]}]
['proteinclass(A, B)', {'': 'function(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'function(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.901, 194, 92]}]
['proteinclass(A, B)', {'': 'phenotype(C, D), location(B, C)', 'false': 'phenotype(A, D)', 'false,false': 'interaction(E, F), location(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [5.051, 74, 39], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.806, 93, 53]}]
['proteinclass(A, B)', {'': 'function(C, A)', 'false': 'complex(D, A)', 'false,false': 'function(A, E)', 'false,false,true': 'phenotype(E, F), function(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.719, 169, 92], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(A, C), phenotype(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'location(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.05, 110, 0], 'false,false,true,false': [6.584, 82, 92], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(A, D)', 'false,true': 'location(B, E)', 'false,true,false': 'location(B, D)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.04, 112, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.306, 70, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(D, A), location(B, D)', 'false,false': 'function(E, A), phenotype(E, F)', 'false,false,false': 'function(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.013, 180, 92], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(C, A), location(B, C)', 'false': 'function(D, A), phenotype(D, E)', 'false,false': 'enzyme(A, F), complex(G, F)', 'false,false,false': 'phenotype(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.581, 85, 39], 'false,false,false,false': [5.418, 109, 53]}]
['proteinclass(A, B)', {'': 'function(A, C), function(C, D)', 'false': 'interaction(E, A), function(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [6.944, 172, 92]}]
{'': [nan, 0.2158003377744429], 'false': [nan, 0.2158003377744429], 'false,false': [nan, 0.21580033777444263], 'false,false,false': [nan, 0.21580033777444263]}
{'': [nan, 0.21619961974941176], 'false': [nan, 0.21619961974941687], 'false,false': [0.2068639053254433, 0.2229080668184088], 'false,false,false': [nan, 0.2229080668184088], 'false,false,true': [nan, 0.2068639053254433]}
{'': [nan, 0.21827216101015556], 'false': [nan, 0.21827216101015556], 'false,false': [nan, 0.21827216101015556]}
{'': [nan, 0.22873794995230431], 'false': [0.22581911060747234, 0.23086328023437613], 'false,false': [nan, 0.23086328023437613], 'false,false,false': [nan, 0.23086328023437613]}
{'': [nan, 0.22829162901205832], 'false': [nan, 0.22829162901205832], 'false,false': [0.22829162901205832, nan], 'false,false,true': [nan, 0.22829162901205832]}
{'': [nan, 0.21889819391834725], 'false': [nan, 0.21889819391834725], 'false,false': [0.21889819391834725, nan], 'false,false,true': [2.259842574852526e-05, 0.249116811778525]}
{'': [nan, 0.19788276144405098], 'false': [0.19788276144405098, nan], 'false,true': [1.429248294122974e-05, 0.24549066391261212], 'false,true,false': [nan, 0.24549066391261212]}
{'': [nan, 0.18082375105259357], 'false': [nan, 0.18082375105259357], 'false,false': [nan, 0.18082375105259357], 'false,false,false': [0.18082375105259357, nan]}
{'': [nan, 0.1760349741080026], 'false': [nan, 0.1760349741080026], 'false,false': [nan, 0.17603497410800295], 'false,false,false': [0.16927185609108852, 0.1811884811682384]}
{'': [nan, 0.18262431587966618], 'false': [nan, 0.18262431587966604], 'false,false': [nan, 0.18262431587966618]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- location(B, H).;true;true
6;;proteinclass(A, B) :- location(B, E).;true;true


Refining candidate
***************************
Model training time 10.437
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( phenotype(A, E), enzyme(A, F) )
%   | then if ( complex(C, G), enzyme(C, F) )
%   | | then return 0.1438632208137979;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( complex(C, H) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( phenotype(A, D), interaction(A, A) )
%   | | then return 0.0803711573217344;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.5248156017661789;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.17158177092040786;  // std dev = 3.797, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   else if ( interaction(K, A), complex(K, L) )
%   | then return 0.11901850031690368;  // std dev = 0.439, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | else if ( interaction(A, M), interaction(M, M) )
%   | | then return 0.20950028645086372;  // std dev = 0.477, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | else return 0.1568502338008111;  // std dev = 0.458, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(D, E), interaction(E, D) )
%   | then if ( enzyme(A, F), interaction(G, C) )
%   | | then return 0.1033248916581775;  // std dev = 0.444, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( complex(D, H), complex(A, H) )
%   | | | then return 0.4569898857820668;  // std dev = 1.352, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.15589101114564627;  // std dev = 1.417, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(C, D) )
%   | | then return 0.8191001686972704;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, C), complex(C, J) )
%   | | | then return 0.5261044738357005;  // std dev = 1.197, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.27177343296527384;  // std dev = 1.497, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( interaction(K, A), interaction(L, K) )
%   | then if ( complex(K, M), complex(L, N) )
%   | | then return 0.10006017483370062;  // std dev = 0.438, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | else return 0.33458391777967617;  // std dev = 0.499, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else return 0.11197492162220761;  // std dev = 0.451, 110.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( location(A, E) )
%   | then if ( interaction(C, F), interaction(F, G) )
%   | | then if ( location(G, E) )
%   | | | then return 0.16282800648679632;  // std dev = 3.732, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   | | | else return 0.4159153532613734;  // std dev = 1.098, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.1409995878488117;  // std dev = 1.769, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.03902389416629377;  // std dev = 1.676, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else return 0.4240625071305928;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( phenotype(A, I), interaction(A, J) )
%   | then return 0.04294814862100691;  // std dev = 0.438, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | else if ( enzyme(A, K) )
%   | | then return 0.08787119256271585;  // std dev = 0.455, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.12319008799094662;  // std dev = 4.027, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
%   | | | else return 0.2296368684499864;  // std dev = 2.025, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(D, D), enzyme(A, E) )
%   | then return 0.16016988733580229;  // std dev = 0.489, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | else return 0.006583901436179477;  // std dev = 0.446, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   else if ( enzyme(A, F), phenotype(A, G) )
%   | then if ( interaction(H, A), interaction(I, H) )
%   | | then return -0.003211304024624958;  // std dev = 0.406, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.09161422196985325;  // std dev = 1.169, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.28009482853952905;  // std dev = 1.416, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( interaction(M, K), enzyme(A, N) )
%   | | | then return 0.1199172362103652;  // std dev = 1.665, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.2967636142829935;  // std dev = 2.649, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( interaction(A, P), complex(P, Q) )
%   | | | then return 0.2095015710142921;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.11946983323753144;  // std dev = 3.898, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( phenotype(C, E), complex(A, F) )
%   | then if ( phenotype(A, G), complex(C, F) )
%   | | then if ( interaction(C, H) )
%   | | | then return 0.08414916176680505;  // std dev = 1.629, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.045148265336713754;  // std dev = 1.215, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( complex(C, I), phenotype(A, E) )
%   | | | then return 0.39057566139248606;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15099038334406809;  // std dev = 2.670, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | else return 0.03801932563572178;  // std dev = 0.449, 99.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=28 */
%   else if ( interaction(J, A), location(J, K) )
%   | then if ( phenotype(J, L), complex(J, M) )
%   | | then return 0.04948463693468581;  // std dev = 0.451, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( phenotype(A, N), phenotype(J, P) )
%   | | | then return 0.3228378417822384;  // std dev = 1.560, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.14495356125064193;  // std dev = 3.978, 67.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=26 */
%   | else return 0.39244171073949957;  // std dev = 1.143, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.2757196634898052;  // std dev = 0.515, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( phenotype(D, F), enzyme(D, G) )
%   | | then if ( complex(D, E), interaction(H, D) )
%   | | | then return 0.0866401425769504;  // std dev = 1.150, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.009738375353803801;  // std dev = 1.190, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(I, D), interaction(J, I) )
%   | | | then return 0.2886407278969531;  // std dev = 3.281, 46.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=26 */
%   | | | else return 0.0708088657966985;  // std dev = 2.081, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( interaction(K, A), location(K, L) )
%   | | then if ( interaction(M, K), interaction(M, M) )
%   | | | then return 0.7039249445769002;  // std dev = 0.097, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.40418547556740286;  // std dev = 2.819, 36.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=24 */
%   | | else if ( phenotype(A, N), location(A, P) )
%   | | | then return 0.45983347320055507;  // std dev = 1.723, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.2354691095270824;  // std dev = 2.523, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.22967482458597868;  // std dev = 0.496, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( interaction(D, F) )
%   | | then if ( phenotype(D, G), enzyme(F, H) )
%   | | | then return 0.3940237173339287;  // std dev = 1.631, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.6815941567017781;  // std dev = 0.207, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(D, I) )
%   | | | then return 0.021485284525232868;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.27838739343434016;  // std dev = 1.078, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), interaction(K, K) )
%   | | | then return 0.20950358146599904;  // std dev = 2.407, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return 0.5374825308685945;  // std dev = 1.224, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.327010254223937;  // std dev = 2.076, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | | else return 0.10444888368383859;  // std dev = 3.946, 61.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( enzyme(A, E), interaction(D, A) )
%   | then if ( interaction(A, A) )
%   | | then return -2.914698802031629E-4;  // std dev = 0.777, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.4013447899943618;  // std dev = 0.633, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.027202626410537542;  // std dev = 0.400, 76.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
%   else if ( location(A, F) )
%   | then if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(H, H), complex(A, I) )
%   | | | then return 0.27048002744967425;  // std dev = 1.187, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.01958322448956017;  // std dev = 4.046, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
%   | | else if ( interaction(A, J), location(J, F) )
%   | | | then return 0.03157223263959169;  // std dev = 2.498, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0.1586487116256087;  // std dev = 2.183, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | else if ( interaction(A, A) )
%   | | then return -0.02553829247706174;  // std dev = 0.747, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.0676730242757148;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( enzyme(C, E), interaction(C, F) )
%   | then return -0.004112923693991618;  // std dev = 0.405, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | else if ( complex(A, G), phenotype(A, H) )
%   | | then if ( complex(C, G), phenotype(C, H) )
%   | | | then return 0.1809276915998233;  // std dev = 1.066, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.054273236977255834;  // std dev = 1.896, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(C, C), phenotype(A, I) )
%   | | | then return 0.008921817029177381;  // std dev = 1.106, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.11725039236213303;  // std dev = 3.247, 58.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=24 */
%   else if ( interaction(J, A) )
%   | then if ( interaction(K, J), complex(K, L) )
%   | | then if ( location(J, M), location(A, M) )
%   | | | then return 0.08766066300912805;  // std dev = 2.538, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return -0.006281204072941475;  // std dev = 2.209, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else return -0.0622455321222705;  // std dev = 0.379, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | else return -0.21094966165302179;  // std dev = 0.389, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( complex(A, E), complex(C, F) )
%   | then if ( interaction(G, C), complex(G, H) )
%   | | then if ( phenotype(C, I), phenotype(G, I) )
%   | | | then return 0.07268459748344297;  // std dev = 1.309, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.05625032011583958;  // std dev = 1.884, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else return 0.16319775285608712;  // std dev = 0.371, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else return -0.09479305511196061;  // std dev = 0.376, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   else if ( enzyme(A, J) )
%   | then if ( enzyme(K, J), complex(K, L) )
%   | | then if ( interaction(A, M), interaction(M, K) )
%   | | | then return 0.20935109766299462;  // std dev = 1.111, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.02867460613744117;  // std dev = 2.434, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.12881958320123332;  // std dev = 1.307, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.5243706932612979;  // std dev = 0.141, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.016285940308439373;  // std dev = 0.398, 128.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=39 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25.698', 'seconds']
Refined model CLL: -0.373534


******************************************
Best model found
******************************************
Results 

CLL : -0.333578 

AUC ROC : 0.801433 

AUC PR : 0.017639 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 10.437 

Total Inference Time : 3.6998212337493896 

Total revision time: 26.6331045589447
Best scored revision CLL: -0.328177


Results 

CLL : -0.333578 

AUC ROC : 0.801433 

AUC PR : 0.017639 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 26.789640184402465 

Total Inference Time : 3.6998212337493896 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.781
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( function(C, A), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22410638190802326;  // std dev = 7.384, 235.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(F, G), location(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16195550107152568;  // std dev = 4.320, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   | | else if ( function(H, A), phenotype(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21528883440485638;  // std dev = 5.964, 150.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( function(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11454278855697556;  // std dev = 7.672, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(C, D), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then return 0.14281540410184618;  // std dev = 5.811, 146.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=53 */
%   | else if ( interaction(E, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13749293976986973;  // std dev = 4.603, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( function(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, E) )
%   | | then if ( phenotype(E, F), function(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07023773358300485;  // std dev = 7.673, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( function(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( location(B, H) )
%   | | | then return -0.25850051009994784;  // std dev = 0.052, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | | else return 0.33034633791357576;  // std dev = 5.944, 146.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=86 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(A, D) )
%   | then if ( location(B, E) )
%   | | then return -0.21320891510776685;  // std dev = 0.037, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( location(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16175135404570778;  // std dev = 6.631, 176.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), location(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(E, A), phenotype(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return 0.037294521749914475;  // std dev = 6.901, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(C, A), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), phenotype(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.007119168612479123;  // std dev = 5.545, 169.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=53 */
%   | | | else return -0.007088370327308168;  // std dev = 4.409, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( function(A, C), function(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), function(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0324227841967168;  // std dev = 6.886, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '27.540', 'seconds']
Parameter learned model CLL:-0.319899 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'function(C, A), enzyme(C, D)', 'false': 'function(E, A)', 'false,false': 'enzyme(A, F), location(B, F)', 'false,false,false': 'enzyme(A, G), interaction(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.384, 149, 86]}]
['proteinclass(A, B)', {'': 'enzyme(A, C), phenotype(C, D)', 'false': 'function(E, A), location(B, E)', 'false,false': 'enzyme(A, F)', 'false,false,true': 'enzyme(F, G), location(B, G)', 'false,false,false': 'function(H, A), phenotype(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.32, 56, 28], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.964, 92, 58]}]
['proteinclass(A, B)', {'': 'function(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'function(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.672, 186, 86]}]
['proteinclass(A, B)', {'': 'phenotype(C, D), location(B, C)', 'false': 'phenotype(A, D)', 'false,false': 'interaction(E, F), location(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [5.811, 93, 53], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.603, 59, 33]}]
['proteinclass(A, B)', {'': 'function(C, A)', 'false': 'complex(D, A)', 'false,false': 'function(A, E)', 'false,false,true': 'phenotype(E, F), function(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.673, 186, 86], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(A, C), phenotype(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'location(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.052, 118, 0], 'false,false,true,false': [5.944, 60, 86], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(A, D)', 'false,true': 'location(B, E)', 'false,true,false': 'location(B, D)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.037, 99, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.631, 90, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(D, A), location(B, D)', 'false,false': 'function(E, A), phenotype(E, F)', 'false,false,false': 'function(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.901, 174, 86], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(C, A), location(B, C)', 'false': 'function(D, A), phenotype(D, E)', 'false,false': 'enzyme(A, F), complex(G, F)', 'false,false,false': 'phenotype(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.545, 116, 53], 'false,false,false,false': [4.409, 81, 33]}]
['proteinclass(A, B)', {'': 'function(A, C), function(C, D)', 'false': 'interaction(E, A), function(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [6.886, 169, 86]}]
{'': [nan, 0.23203259393390763], 'false': [nan, 0.23203259393390763], 'false,false': [nan, 0.23203259393390735], 'false,false,false': [nan, 0.23203259393390735]}
{'': [nan, 0.2324494119365909], 'false': [nan, 0.23244941193659038], 'false,false': [0.22222222222222263, 0.2371555555555546], 'false,false,false': [nan, 0.2371555555555546], 'false,false,true': [nan, 0.22222222222222263]}
{'': [nan, 0.21639369247475282], 'false': [nan, 0.21639369247475282], 'false,false': [nan, 0.21639369247475282]}
{'': [nan, 0.23091657160237525], 'false': [0.23131436694413568, 0.23026790962541602], 'false,false': [nan, 0.23026790962541602], 'false,false,false': [nan, 0.23026790962541602]}
{'': [nan, 0.21647492472214797], 'false': [nan, 0.21647492472214797], 'false,false': [0.21647492472214797, nan], 'false,false,true': [nan, 0.21647492472214797]}
{'': [nan, 0.21954365868230225], 'false': [nan, 0.21954365868230225], 'false,false': [0.21954365868230225, nan], 'false,false,true': [2.3165530532084497e-05, 0.24198178566513595]}
{'': [nan, 0.19228695627697118], 'false': [0.19228695627697118, nan], 'false,true': [1.4010468486675705e-05, 0.24982621505453226], 'false,true,false': [nan, 0.24982621505453226]}
{'': [nan, 0.18317768408166052], 'false': [nan, 0.18317768408166052], 'false,false': [nan, 0.18317768408166052], 'false,false,false': [0.18317768408166052, nan]}
{'': [nan, 0.17738330398478844], 'false': [nan, 0.17738330398478844], 'false,false': [nan, 0.17738330398478835], 'false,false,false': [0.1819296613250917, 0.17052298674426505]}
{'': [nan, 0.18592268135292817], 'false': [nan, 0.18592268135292803], 'false,false': [nan, 0.18592268135292817]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- location(B, H).;true;true
6;;proteinclass(A, B) :- location(B, E).;true;true


Refining candidate
***************************
Model training time 8.145
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( phenotype(D, E), interaction(D, D) )
%   | then return 0.10814893509951218;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(D, A), phenotype(A, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(D, G), phenotype(D, H) )
%   | | | then return 0.25814893509951237;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.41370449065506776;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else if ( complex(A, I), interaction(A, J) )
%   | then return 0.14075763075168626;  // std dev = 0.450, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( enzyme(A, M), complex(A, N) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.3105298874804647;  // std dev = 3.226, 42.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
%   | | else if ( interaction(A, P), enzyme(P, Q) )
%   | | | then return 0.26723984419042146;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.16926004621062332;  // std dev = 4.392, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, A), enzyme(A, C) )
%   then return -0.033333149617389944;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then if ( phenotype(D, F), phenotype(E, G) )
%   | | | then return 0.1393632151022898;  // std dev = 1.448, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.027792150458626513;  // std dev = 2.198, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else if ( interaction(H, A), enzyme(A, I) )
%   | | | then return 0.5042228433852056;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.17384964510573278;  // std dev = 2.559, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( interaction(A, L), enzyme(L, K) )
%   | | | then return 0.3167162019993041;  // std dev = 1.208, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.08597606722683455;  // std dev = 3.096, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | else if ( interaction(M, A), complex(A, N) )
%   | | | then return 0.2515873083818428;  // std dev = 2.743, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.17134270897029596;  // std dev = 4.789, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( enzyme(A, C) )
%   | then return 0.13861352858159434;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.32734123761803735;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, F), complex(A, G) )
%   | | | then return 0.320520684737167;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.19769218175648096;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( interaction(A, H), interaction(I, A) )
%   | then return 0.10062673731879075;  // std dev = 0.462, 94.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=29 */
%   | else if ( complex(A, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.18012014332540646;  // std dev = 2.483, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.43493991701450796;  // std dev = 1.363, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( location(A, L) )
%   | | | then return 0.13831896467230306;  // std dev = 4.621, 96.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=32 */
%   | | | else return 0.011440467641243148;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(C, D), phenotype(D, E) )
%   | then return 0.024911477001145297;  // std dev = 0.436, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | else return 0.20698803226014145;  // std dev = 0.501, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( phenotype(A, G), phenotype(F, G) )
%   | | then if ( complex(F, H), complex(A, I) )
%   | | | then return 0.17959732236107104;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.06077248590942622;  // std dev = 2.367, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( interaction(A, J), interaction(F, J) )
%   | | | then return 0.3579926369118743;  // std dev = 1.847, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.1486859532837966;  // std dev = 4.830, 100.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=37 */
%   | else if ( complex(A, K) )
%   | | then return 0.01744626031861268;  // std dev = 0.444, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.025068977176538946;  // std dev = 1.731, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.1680145267341914;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( interaction(E, A), interaction(E, E) )
%   | then return -0.006268692959990224;  // std dev = 0.429, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else return 0.07948233186610482;  // std dev = 0.477, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( complex(F, H), interaction(F, F) )
%   | | then return -0.00882653921678603;  // std dev = 0.421, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(A, I), location(A, J) )
%   | | | then return 0.08312688963476493;  // std dev = 3.548, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.16262880252171072;  // std dev = 3.385, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | else if ( interaction(A, K), phenotype(A, L) )
%   | | then if ( interaction(K, K), phenotype(K, L) )
%   | | | then return 0.008473457173449495;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1545103017343846;  // std dev = 2.056, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.05858012634321704;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3259600911640283;  // std dev = 1.973, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.26948207220904014;  // std dev = 0.276, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( complex(D, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.48405393774155947;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.20675874318251636;  // std dev = 1.648, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.22824084243529774;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.742728437767221;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( phenotype(A, K), phenotype(I, K) )
%   | | | then return 0.512101045872952;  // std dev = 0.922, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.07516235152309249;  // std dev = 2.533, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else if ( interaction(A, L), enzyme(A, M) )
%   | | | then return 0.15185222564376685;  // std dev = 2.159, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.2491533037261755;  // std dev = 4.879, 97.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.22291932479369844;  // std dev = 0.238, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(D, F), interaction(D, G) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.5998052759925959;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6851889081156047;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(D, J) )
%   | | | then return 0.18402530706758088;  // std dev = 2.158, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.462245189724834;  // std dev = 0.926, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, K) )
%   | | then if ( complex(K, L), enzyme(A, M) )
%   | | | then return 0.3645996805569507;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.15649849464492852;  // std dev = 3.429, 47.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.3773334872493271;  // std dev = 1.979, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | | else return 0.21110080359202385;  // std dev = 3.148, 39.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( interaction(E, C), complex(E, F) )
%   | then if ( interaction(A, G), complex(G, D) )
%   | | then if ( interaction(C, C), phenotype(E, H) )
%   | | | then return 0.10867026333171315;  // std dev = 1.237, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.028941421100994923;  // std dev = 1.805, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( enzyme(C, I) )
%   | | | then return 0.3396011928949742;  // std dev = 0.955, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.10564547680232199;  // std dev = 1.435, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else return -0.1606130030707842;  // std dev = 0.360, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   else if ( interaction(J, A), phenotype(A, K) )
%   | then return 0.004964653796937255;  // std dev = 0.414, 103.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=32 */
%   | else if ( interaction(A, L), enzyme(L, M) )
%   | | then return 0.010921386233882734;  // std dev = 0.409, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else if ( location(A, N) )
%   | | | then return 0.14122750888074304;  // std dev = 2.798, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | | | else return -0.0219553583234765;  // std dev = 1.141, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then return 0.34357170047546454;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( location(A, F), complex(C, G) )
%   | | then if ( interaction(C, H), enzyme(H, I) )
%   | | | then return 0.32674045260865264;  // std dev = 0.821, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.03040403465113788;  // std dev = 1.370, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.01866709723103659;  // std dev = 0.388, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   else if ( enzyme(A, J), interaction(A, K) )
%   | then if ( interaction(L, A), complex(A, M) )
%   | | then return 0.36449013023337884;  // std dev = 0.691, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.00846512246812763;  // std dev = 0.401, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( interaction(A, N), enzyme(N, P) )
%   | | then return -0.051630807945427966;  // std dev = 0.398, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | else if ( interaction(Q, A), interaction(R, Q) )
%   | | | then return -0.01856237363181864;  // std dev = 4.021, 96.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=28 */
%   | | | else return 0.06324055871774469;  // std dev = 2.771, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( location(A, E), interaction(F, A) )
%   | then return -0.13528170191258312;  // std dev = 0.365, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | else return 0.21429057867766566;  // std dev = 0.843, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H), phenotype(H, I) )
%   | | then if ( interaction(H, J), complex(H, K) )
%   | | | then return -0.03970873493753228;  // std dev = 3.234, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | | else return 0.08726039883979037;  // std dev = 2.179, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.2913068487874878;  // std dev = 1.232, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.06484011516829347;  // std dev = 2.498, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else if ( interaction(N, A), phenotype(N, P) )
%   | | then if ( interaction(N, N) )
%   | | | then return 0.1789177793070385;  // std dev = 1.005, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.016546228072406972;  // std dev = 3.645, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
%   | | else return -0.08079339085030586;  // std dev = 0.372, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.088', 'seconds']
Refined model CLL: -0.357428


******************************************
Best model found
******************************************
Results 

CLL : -0.319169 

AUC ROC : 0.801832 

AUC PR : 0.017263 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.145 

Total Inference Time : 3.1130032539367676 

Total revision time: 23.0394352684021
Best scored revision CLL: -0.319899


Results 

CLL : -0.319169 

AUC ROC : 0.801832 

AUC PR : 0.017263 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 23.195970893859865 

Total Inference Time : 3.1130032539367676 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.936
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), interaction(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19535823742509348;  // std dev = 7.594, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(C, E), phenotype(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, A) )
%   | | | then return 0.1963024996643523;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.16599946936132193;  // std dev = 3.055, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   else if ( location(F, A), phenotype(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), phenotype(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20409470745656003;  // std dev = 4.043, 70.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=26 */
%   | | else if ( location(I, A), enzyme(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1609104108371489;  // std dev = 5.375, 131.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12142948110077124;  // std dev = 7.723, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.12354203060037991;  // std dev = 4.751, 101.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=34 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18526396310743665;  // std dev = 5.647, 133.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=53 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E) )
%   | | then if ( enzyme(E, F), location(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07803019342818888;  // std dev = 7.519, 260.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=83 */
%   | | else return 0.15251793540641667;  // std dev = 0.491, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( phenotype(B, H) )
%   | | | then return -0.2563296024349142;  // std dev = 0.045, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0.15580479108937054;  // std dev = 7.151, 211.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=87 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.2098339214663781;  // std dev = 0.045, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13028822243743923;  // std dev = 6.961, 199.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=83 */
%   | else if ( location(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01307768501905429;  // std dev = 1.637, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), enzyme(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.06514865633625179;  // std dev = 7.105, 231.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=83 */
%   | | | else return -0.04605912670145741;  // std dev = 1.704, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), enzyme(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.0020822391372980094;  // std dev = 4.758, 118.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
%   | | | else return 0.04681661209257776;  // std dev = 5.644, 152.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=53 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), location(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.014110445054915736;  // std dev = 7.425, 275.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '18.247', 'seconds']
Parameter learned model CLL:-0.357301 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), interaction(C, D)', 'false': 'location(E, A)', 'false,false': 'interaction(A, F), phenotype(B, F)', 'false,false,false': 'interaction(A, G), function(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.594, 171, 87]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(C, E), phenotype(B, E)', 'true,false,false': 'interaction(A, A)', 'false': 'location(F, A), phenotype(B, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), phenotype(B, H)', 'false,false,false': 'location(I, A), enzyme(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.595, 7, 4], 'true,false,false,false': [3.055, 28, 14], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.043, 44, 26], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.375, 88, 43]}]
['proteinclass(A, B)', {'': 'location(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'location(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.723, 189, 87]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.751, 67, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.647, 80, 53]}]
['proteinclass(A, B)', {'': 'location(C, A)', 'false': 'complex(D, A)', 'false,false': 'location(A, E)', 'false,false,true': 'enzyme(E, F), location(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.519, 177, 83], 'false,false,false': [0.491, 6, 4]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'phenotype(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.045, 51, 0], 'false,false,true,false': [7.151, 124, 87], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'location(F, A), phenotype(B, F)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.045, 54, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.961, 116, 83], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.637, 9, 4]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(D, A), phenotype(B, D)', 'false,false': 'location(E, A), enzyme(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.105, 148, 83], 'false,false,false,false': [1.704, 12, 4]}]
['proteinclass(A, B)', {'': 'location(C, A), phenotype(B, C)', 'false': 'location(D, A), enzyme(D, E)', 'false,false': 'interaction(A, F), complex(G, F)', 'false,false,false': 'enzyme(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.758, 84, 34], 'false,false,false,false': [5.644, 99, 53]}]
['proteinclass(A, B)', {'': 'location(A, C), location(C, D)', 'false': 'function(E, A), location(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.425, 188, 87]}]
{'': [nan, 0.22349918875067695], 'false': [nan, 0.22349918875067695], 'false,false': [nan, 0.2234991887506771], 'false,false,false': [nan, 0.2234991887506771]}
{'': [0.2242791028835891, 0.22543996435731853], 'false': [nan, 0.22543996435731853], 'false,false': [0.23346938775510262, 0.22049997086416936], 'false,false,true': [nan, 0.23346938775510262], 'true': [nan, 0.2242791028835891], 'true,false': [nan, 0.2242791028835891], 'true,false,false': [0.2314049586776859, 0.22222222222222288], 'false,false,false': [nan, 0.22049997086416936]}
{'': [nan, 0.2161291662004472], 'false': [nan, 0.21612916620044711], 'false,false': [nan, 0.21612916620044711]}
{'': [nan, 0.23369018095704788], 'false': [0.22348916232420007, 0.23979250595245516], 'false,false': [nan, 0.23979250595245516], 'false,false,false': [nan, 0.23979250595245516]}
{'': [nan, 0.21851372624544096], 'false': [nan, 0.21851372624544096], 'false,false': [0.21743272797412608, 0.24127675476887256], 'false,false,true': [nan, 0.21743272797412608]}
{'': [nan, 0.2218013421392482], 'false': [nan, 0.2218013421392482], 'false,false': [0.2218013421392482, nan], 'false,false,true': [3.898367146176642e-05, 0.24233933967017102]}
{'': [nan, 0.21082141643778954], 'false': [0.21096194810097857, 0.20619321060832926], 'false,true': [3.802526973112958e-05, 0.24350633671785799], 'false,true,false': [nan, 0.24350633671785799], 'false,false': [nan, 0.20619321060832926], 'false,false,false': [nan, 0.20619321060832926]}
{'': [nan, 0.21688263221089105], 'false': [nan, 0.21688263221089105], 'false,false': [nan, 0.21688263221089105], 'false,false,false': [0.2185342645088851, 0.18147113219246516]}
{'': [nan, 0.20240051093845998], 'false': [nan, 0.20240051093845998], 'false,false': [nan, 0.2024005109384601], 'false,false,false': [0.19183781215796997, 0.20955550254828695]}
{'': [nan, 0.20046618363181967], 'false': [nan, 0.2004661836318197], 'false,false': [nan, 0.2004661836318197]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- phenotype(B, H).;true;true
6;;proteinclass(A, B) :- location(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 18.813
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then return 0.24703782398840124;  // std dev = 0.487, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | else return 0.09814893509951234;  // std dev = 0.427, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   else if ( interaction(A, E), enzyme(A, F) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(E, I) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(E, J) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( complex(A, K), enzyme(A, L) )
%   | | then return 0.08395538671241559;  // std dev = 0.418, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.2043027812533585;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   | | | else return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), complex(D, E) )
%   | then if ( interaction(D, A), complex(A, E) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.07736615115970406;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.0019171806448635236;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( enzyme(D, H), phenotype(C, I) )
%   | | | then return 0.24207126818645539;  // std dev = 2.307, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.13038702586234704;  // std dev = 6.429, 198.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=59 */
%   | else if ( interaction(A, J) )
%   | | then return 0.6240353916163625;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(A, K), interaction(L, C) )
%   | | | then return 0.16474948602180314;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.39775614630989736;  // std dev = 1.303, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( interaction(A, M), complex(M, N) )
%   | then return 0.045561976200459056;  // std dev = 0.415, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | else return -0.05568339765734049;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(C, E), phenotype(A, F) )
%   | then if ( interaction(A, E) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.21002777787636506;  // std dev = 1.298, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.07189871506954806;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.45733948815496855;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.031652464086232054;  // std dev = 0.427, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), interaction(I, A) )
%   | | then if ( complex(A, J), phenotype(I, K) )
%   | | | then return 0.15054221897638465;  // std dev = 3.826, 65.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | | | else return 0.09442790620043481;  // std dev = 4.757, 112.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=32 */
%   | | else if ( location(L, H), phenotype(L, M) )
%   | | | then return 0.3101761652715321;  // std dev = 2.343, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.01815830924753506;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.01685108831744705;  // std dev = 0.444, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then return -0.05237961346932496;  // std dev = 0.390, 55.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=10 */
%   | else return 0.20012750873674884;  // std dev = 0.493, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   else if ( interaction(G, A), interaction(A, G) )
%   | then if ( complex(A, H) )
%   | | then if ( interaction(G, G) )
%   | | | then return 0.27951596174167137;  // std dev = 1.411, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.05548288803779534;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.4838954364535071;  // std dev = 1.160, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( phenotype(J, K), interaction(A, L) )
%   | | | then return 0.0553718502708789;  // std dev = 1.881, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.36725066980457816;  // std dev = 2.261, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.17090222759978255;  // std dev = 2.948, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.07241193251601098;  // std dev = 4.018, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( location(D, C), interaction(E, D) )
%   | then if ( interaction(E, A), complex(A, F) )
%   | | then if ( complex(E, F), interaction(A, G) )
%   | | | then return 0.21141511750198283;  // std dev = 1.502, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.04131257685508481;  // std dev = 3.036, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | else if ( interaction(A, H), interaction(E, E) )
%   | | | then return 0.26014017224911085;  // std dev = 2.346, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.11744361412624486;  // std dev = 4.396, 85.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=30 */
%   | else return -0.005042249551502348;  // std dev = 0.445, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   else if ( interaction(A, I), complex(I, J) )
%   | then if ( enzyme(I, K) )
%   | | then return 0.44686159586305113;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.053143418122763804;  // std dev = 0.450, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( interaction(A, L), interaction(L, A) )
%   | | then return 0.12819530898823026;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.5207456906450455;  // std dev = 0.841, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(B, C) )
%   then return -0.2592036222607808;  // std dev = 0.278, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( interaction(A, D), complex(D, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.24640944947638418;  // std dev = 0.969, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.034326000258640806;  // std dev = 1.759, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( complex(D, E), enzyme(A, I) )
%   | | | then return 0.3891670123105308;  // std dev = 0.857, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11747376095108193;  // std dev = 3.772, 59.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=23 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.20436883253432764;  // std dev = 1.858, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.42594099051272216;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.2256889057818837;  // std dev = 2.487, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.14765511763292374;  // std dev = 4.343, 78.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.21799212298029913;  // std dev = 0.238, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then if ( interaction(G, F), interaction(G, E) )
%   | | | then return 0.13973803396346554;  // std dev = 6.018, 148.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=64 */
%   | | | else return -0.0442005884704855;  // std dev = 2.824, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.4969246531473083;  // std dev = 0.846, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.11603283277193276;  // std dev = 1.461, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( interaction(A, I), enzyme(I, J) )
%   | then return 0.10529716713704673;  // std dev = 1.094, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.044719433763995474;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, A), location(A, D) )
%   | then return -0.1090075239290675;  // std dev = 0.412, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else return -0.011741094433385686;  // std dev = 0.438, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(E, F), phenotype(E, G) )
%   | | then if ( complex(E, H) )
%   | | | then return 0.12970562450737216;  // std dev = 1.323, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3719040553928927;  // std dev = 0.669, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, I), location(E, J) )
%   | | | then return 0.013065081008666444;  // std dev = 3.561, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return 0.07975120690821327;  // std dev = 4.328, 87.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=32 */
%   | else if ( enzyme(A, K) )
%   | | then if ( enzyme(L, K), interaction(M, L) )
%   | | | then return 0.050217405700506666;  // std dev = 1.295, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.1903831373019229;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.18964949502398204;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then return -0.02980408302319744;  // std dev = 0.445, 145.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=42 */
%   else if ( enzyme(A, E) )
%   | then if ( enzyme(F, E), interaction(F, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.1202681717586277;  // std dev = 1.867, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.2930640521598014;  // std dev = 1.190, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.243198336207039;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.006321732109088102;  // std dev = 1.419, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( phenotype(A, K), complex(A, L) )
%   | | then if ( interaction(M, A), phenotype(M, K) )
%   | | | then return -0.11790120144931603;  // std dev = 1.520, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.20558199714146613;  // std dev = 0.944, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.1418383035272916;  // std dev = 2.062, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.02057247464394853;  // std dev = 3.150, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( interaction(E, A), phenotype(E, C) )
%   | then if ( complex(E, F), interaction(G, E) )
%   | | then if ( enzyme(G, H), interaction(G, G) )
%   | | | then return -0.06287972546164668;  // std dev = 1.212, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.08863878841659528;  // std dev = 1.752, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0.1888226879157651;  // std dev = 1.240, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( complex(I, D), interaction(I, A) )
%   | | then return 0.028598098008328274;  // std dev = 0.463, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.19338617454402943;  // std dev = 1.412, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.38773859415782663;  // std dev = 1.169, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(A, L) )
%   | then return -0.015135128202902587;  // std dev = 0.460, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | else if ( interaction(M, A), complex(M, N) )
%   | | then return 0.06086479516295036;  // std dev = 0.466, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | else return 0.11765043131513994;  // std dev = 0.464, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '30.434', 'seconds']
Refined model CLL: -0.396968


******************************************
Best model found
******************************************
Results 

CLL : -0.347694 

AUC ROC : 0.679293 

AUC PR : 0.010897 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 18.813 

Total Inference Time : 7.861714839935303 

Total revision time: 39.48841874504089
Best scored revision CLL: -0.357301


Results 

CLL : -0.347694 

AUC ROC : 0.679293 

AUC PR : 0.010897 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 39.59660451316833 

Total Inference Time : 7.861714839935303 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 5.121
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), interaction(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20950028645086466;  // std dev = 8.213, 296.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(C, E), phenotype(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, A) )
%   | | | then return 0.23068639764548324;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.13837870533779054;  // std dev = 4.076, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   else if ( location(F, A), phenotype(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), phenotype(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15167405196647052;  // std dev = 4.202, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | | else if ( location(I, A), enzyme(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1727916608033794;  // std dev = 5.849, 152.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14350711326809118;  // std dev = 8.306, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.10078379709978734;  // std dev = 4.747, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09879527363356083;  // std dev = 6.974, 225.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=71 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E) )
%   | | then if ( enzyme(E, F), location(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0940867873944971;  // std dev = 8.073, 296.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=97 */
%   | | else return 0.11556760731355738;  // std dev = 0.477, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( phenotype(B, H) )
%   | | | then return -0.2508654788082945;  // std dev = 0.027, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | | else return 0.17139595334833618;  // std dev = 7.748, 246.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=104 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.20683718980468296;  // std dev = 0.022, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13910483899477;  // std dev = 7.475, 229.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=97 */
%   | else if ( location(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03235393691831273;  // std dev = 2.156, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), enzyme(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.058721885376809786;  // std dev = 7.641, 289.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=97 */
%   | | | else return 0.039684763103305626;  // std dev = 2.133, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), enzyme(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.09630502968290972;  // std dev = 4.303, 83.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=33 */
%   | | | else return 0.025287168680466102;  // std dev = 6.681, 223.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=71 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), location(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.062092970715610214;  // std dev = 7.728, 290.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '8.900', 'seconds']
Parameter learned model CLL:-0.356086 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), interaction(C, D)', 'false': 'location(E, A)', 'false,false': 'interaction(A, F), phenotype(B, F)', 'false,false,false': 'interaction(A, G), function(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.213, 192, 104]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(C, E), phenotype(B, E)', 'true,false,false': 'interaction(A, A)', 'false': 'location(F, A), phenotype(B, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), phenotype(B, H)', 'false,false,false': 'location(I, A), enzyme(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.095, 3, 2], 'true,false,false,false': [4.076, 54, 24], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.202, 55, 26], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.849, 100, 52]}]
['proteinclass(A, B)', {'': 'location(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'location(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.306, 205, 104]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.747, 71, 33], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.974, 154, 71]}]
['proteinclass(A, B)', {'': 'location(C, A)', 'false': 'complex(D, A)', 'false,false': 'location(A, E)', 'false,false,true': 'enzyme(E, F), location(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [8.073, 199, 97], 'false,false,false': [0.477, 13, 7]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'phenotype(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.027, 84, 0], 'false,false,true,false': [7.748, 142, 104], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'location(F, A), phenotype(B, F)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.022, 52, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [7.475, 132, 97], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.156, 16, 7]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(D, A), phenotype(B, D)', 'false,false': 'location(E, A), enzyme(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.641, 192, 97], 'false,false,false,false': [2.133, 15, 7]}]
['proteinclass(A, B)', {'': 'location(C, A), phenotype(B, C)', 'false': 'location(D, A), enzyme(D, E)', 'false,false': 'interaction(A, F), complex(G, F)', 'false,false,false': 'enzyme(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.303, 50, 33], 'false,false,false,false': [6.681, 152, 71]}]
['proteinclass(A, B)', {'': 'location(A, C), location(C, D)', 'false': 'function(E, A), location(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.728, 186, 104]}]
{'': [nan, 0.22790357925493288], 'false': [nan, 0.22790357925493288], 'false,false': [nan, 0.22790357925493102], 'false,false,false': [nan, 0.22790357925493102]}
{'': [0.21512556249092832, 0.222697047283979], 'false': [nan, 0.22269704728397718], 'false,false': [0.21795458009449856, 0.22506925207756004], 'false,false,false': [nan, 0.22506925207756004], 'false,false,true': [nan, 0.21795458009449853], 'true': [nan, 0.21512556249092832], 'true,false': [nan, 0.21512556249092832], 'true,false,false': [0.24000000000000005, 0.21301775147929072]}
{'': [nan, 0.22324280456400156], 'false': [nan, 0.22324280456400095], 'false,false': [nan, 0.22324280456400095]}
{'': [nan, 0.21631551470499244], 'false': [0.2167034256920156, 0.21613496365858367], 'false,false': [nan, 0.21613496365858367], 'false,false,false': [nan, 0.21613496365858367]}
{'': [nan, 0.2206991659331638], 'false': [nan, 0.2206991659331638], 'false,false': [0.22020017092084157, 0.22765207064457305], 'false,false,true': [nan, 0.22020017092084157]}
{'': [nan, 0.21575416208461862], 'false': [nan, 0.2157541620846182], 'false,false': [0.2157541620846182, nan], 'false,false,true': [8.716170385764904e-06, 0.24403668347975754]}
{'': [nan, 0.2159223624587233], 'false': [0.2169141649800236, 0.2021171606074449], 'false,true': [9.006489711360643e-06, 0.24402131054580598], 'false,true,false': [nan, 0.24402131054580598], 'false,false': [nan, 0.2021171606074449], 'false,false,false': [nan, 0.2021171606074449]}
{'': [nan, 0.20239725752607057], 'false': [nan, 0.20239725752607057], 'false,false': [nan, 0.20239725752607057], 'false,false,false': [0.20203788529491323, 0.2067813266743759]}
{'': [nan, 0.2073806507151189], 'false': [nan, 0.2073806507151189], 'false,false': [nan, 0.20738065071511858], 'false,false,false': [0.22307903366074494, 0.20016973672822794]}
{'': [nan, 0.2059450195729939], 'false': [nan, 0.20594501957299394], 'false,false': [nan, 0.20594501957299394]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- phenotype(B, H).;true;true
6;;proteinclass(A, B) :- location(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 12.273
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return 0.15360348055405681;  // std dev = 0.456, 88.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=26 */
%   else if ( interaction(A, E), complex(A, F) )
%   | then if ( interaction(E, E), phenotype(E, G) )
%   | | then if ( complex(E, F) )
%   | | | then return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(E, H), interaction(E, I) )
%   | | | then return 0.524815601766179;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(J, A), enzyme(A, K) )
%   | | then if ( phenotype(J, L), interaction(M, J) )
%   | | | then return 0.21231560176617903;  // std dev = 3.313, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | | else return 0.4137044906550678;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( phenotype(A, N), interaction(P, A) )
%   | | | then return 0.22021790061675325;  // std dev = 3.660, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | | | else return 0.14582016797622446;  // std dev = 3.868, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( phenotype(C, E) )
%   | then if ( enzyme(A, F) )
%   | | then if ( complex(C, G), interaction(H, C) )
%   | | | then return 0.1676800830612771;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.07560235110052944;  // std dev = 1.501, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(I, C), enzyme(I, J) )
%   | | | then return 0.30998894998156235;  // std dev = 2.784, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return 0.19559035910813924;  // std dev = 2.536, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | else return 0.5457082771489049;  // std dev = 0.447, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(A, K), interaction(K, A) )
%   | then return 0.10913554172718627;  // std dev = 0.450, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | else if ( complex(A, L), enzyme(A, M) )
%   | | then return 0.09380153753548814;  // std dev = 0.443, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( enzyme(A, N), location(A, P) )
%   | | | then return 0.22222779056745406;  // std dev = 2.202, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.1533443504144203;  // std dev = 4.787, 105.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( enzyme(C, E), interaction(C, A) )
%   | then return 0.5323838334896064;  // std dev = 0.904, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then return 0.0884165405209785;  // std dev = 0.453, 118.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
%   | | else return -0.023114466810728006;  // std dev = 0.384, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   else if ( enzyme(A, H) )
%   | then if ( interaction(I, A), complex(I, J) )
%   | | then if ( phenotype(A, K), phenotype(I, K) )
%   | | | then return 0.3139397562837711;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.11565937990443806;  // std dev = 2.721, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | else return 0.02031032865537605;  // std dev = 0.418, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | else if ( location(A, L) )
%   | | then if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.17972347602227137;  // std dev = 4.314, 79.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=30 */
%   | | | else return 0.27399749071261587;  // std dev = 1.790, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else return 0.4113168435405993;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( interaction(E, A), phenotype(E, D) )
%   | then return 0.09845769303104365;  // std dev = 0.467, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | else if ( interaction(A, F), phenotype(F, D) )
%   | | then return 0.14351178988250865;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.20304000322150229;  // std dev = 1.316, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.5169662260558366;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(H, A), enzyme(H, I) )
%   | then if ( phenotype(H, J) )
%   | | then return 0.09187540007374544;  // std dev = 0.471, 82.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=27 */
%   | | else return -0.04837788837312551;  // std dev = 0.444, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( interaction(K, A), location(A, L) )
%   | | then if ( location(K, L) )
%   | | | then return 0.16636997789224017;  // std dev = 4.974, 105.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=40 */
%   | | | else return 0.02450473295150925;  // std dev = 2.116, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else return 0.015579457678634473;  // std dev = 0.419, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( interaction(E, A), complex(E, D) )
%   | then if ( phenotype(E, C) )
%   | | then if ( interaction(E, F), enzyme(F, G) )
%   | | | then return 0.24274933910097402;  // std dev = 1.563, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.026362944226472115;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return -0.025528501810362533;  // std dev = 0.424, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then return 0.44029073241561706;  // std dev = 0.833, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(J, D), interaction(K, J) )
%   | | | then return 0.13437421220936413;  // std dev = 2.840, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return -0.015940316740887583;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( location(A, L), interaction(A, M) )
%   | then if ( interaction(M, A), complex(M, N) )
%   | | then return -0.0030909260903614834;  // std dev = 0.447, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | else return 0.13883379629520443;  // std dev = 0.487, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | else return 0.027893987877733374;  // std dev = 0.450, 167.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=47 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(B, C) )
%   then return -0.26156824701087555;  // std dev = 0.296, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), phenotype(D, G) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.06101597673529949;  // std dev = 1.783, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.11925807935542793;  // std dev = 3.779, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.4614735193435727;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.18499415181168663;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( phenotype(J, K), complex(I, L) )
%   | | | then return 0.19623144173646892;  // std dev = 3.197, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   | | | else return 0.08088953850711411;  // std dev = 2.016, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( phenotype(A, M), location(A, N) )
%   | | | then return 0.23405508075969716;  // std dev = 3.332, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.3916206606455714;  // std dev = 2.382, 25.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.21933301384089515;  // std dev = 0.292, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then if ( complex(E, F), enzyme(A, G) )
%   | | | then return 0.0628452625405006;  // std dev = 2.008, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.21103574696528674;  // std dev = 3.300, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.06352471722665834;  // std dev = 3.798, 62.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=23 */
%   | | | else return 0.1283736483551126;  // std dev = 5.072, 103.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=46 */
%   else if ( interaction(J, A), interaction(K, J) )
%   | then if ( enzyme(A, L) )
%   | | then return 0.08538647674265407;  // std dev = 1.048, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(K, M) )
%   | | | then return -0.01575904560125865;  // std dev = 1.169, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.04925187539836233;  // std dev = 0.919, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else return 0.34421094787781964;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then return -0.014558019696055224;  // std dev = 0.427, 151.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=41 */
%   else if ( enzyme(A, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.0027543977557840855;  // std dev = 2.068, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.2163606578394936;  // std dev = 1.661, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.4646251196909346;  // std dev = 0.850, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2653774010185344;  // std dev = 1.241, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( location(A, J), complex(A, K) )
%   | | then if ( interaction(A, L), phenotype(L, M) )
%   | | | then return -0.001285715953126363;  // std dev = 2.835, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return 0.05576166521481095;  // std dev = 1.668, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return 0.12517906116828004;  // std dev = 1.704, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.04197299822537735;  // std dev = 3.361, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), location(E, F) )
%   | then if ( location(C, F) )
%   | | then if ( phenotype(A, G), interaction(H, C) )
%   | | | then return 0.05987010558167838;  // std dev = 2.699, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return -0.06819856248864284;  // std dev = 2.269, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else return 0.32488195689021154;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( location(A, I), phenotype(C, J) )
%   | | then if ( location(C, I), enzyme(A, K) )
%   | | | then return 0.4326557947220024;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19909022455596811;  // std dev = 2.408, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | else if ( interaction(C, L), interaction(L, A) )
%   | | | then return 0.24351422678405618;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.03405207558298369;  // std dev = 1.362, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( phenotype(A, M) )
%   | then return -0.04031864078461356;  // std dev = 0.427, 144.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=40 */
%   | else return 0.047531766560157646;  // std dev = 0.467, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then return -0.04972096658044703;  // std dev = 0.434, 75.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=21 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, E), complex(A, F) )
%   | | then if ( phenotype(E, G), complex(E, H) )
%   | | | then return 0.11289905040611906;  // std dev = 1.667, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.361171925013139;  // std dev = 1.259, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.2139828679542502;  // std dev = 0.998, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.040682684688088624;  // std dev = 1.992, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( phenotype(A, M), enzyme(K, N) )
%   | | | then return -0.04219943545398197;  // std dev = 2.266, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.03696163527329499;  // std dev = 4.852, 115.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=40 */
%   | | else if ( enzyme(A, P), complex(A, Q) )
%   | | | then return -0.07899532052936659;  // std dev = 0.741, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.07941573612334105;  // std dev = 2.964, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.515', 'seconds']
Refined model CLL: -0.372934


******************************************
Best model found
******************************************
Results 

CLL : -0.371921 

AUC ROC : 0.659382 

AUC PR : 0.010932 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.273 

Total Inference Time : 4.754571914672852 

Total revision time: 34.85275668525696
Best scored revision CLL: -0.356086


Results 

CLL : -0.371921 

AUC ROC : 0.659382 

AUC PR : 0.010932 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 34.960942453384405 

Total Inference Time : 4.754571914672852 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.027
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), interaction(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.192694389644967;  // std dev = 7.824, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(C, E), phenotype(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, A) )
%   | | | then return 0.1330369697335129;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.11564566538568681;  // std dev = 3.054, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   else if ( location(F, A), phenotype(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), phenotype(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1130369697335129;  // std dev = 5.020, 125.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=35 */
%   | | else if ( location(I, A), enzyme(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16637030306684622;  // std dev = 5.228, 123.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16142756464787242;  // std dev = 7.742, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.11201800590800863;  // std dev = 5.068, 117.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=38 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12632291402345416;  // std dev = 5.974, 159.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=54 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E) )
%   | | then if ( enzyme(E, F), location(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10441082899885476;  // std dev = 7.675, 263.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=89 */
%   | | else return 0.1044190003260463;  // std dev = 0.472, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( phenotype(B, H) )
%   | | | then return -0.2527650952725609;  // std dev = 0.033, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0.17702834803579015;  // std dev = 7.242, 214.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=92 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.2079771156154135;  // std dev = 0.031, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19016247554466068;  // std dev = 6.817, 186.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=89 */
%   | else if ( location(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21849031426681667;  // std dev = 1.224, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), enzyme(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.027773653501625684;  // std dev = 7.478, 269.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=89 */
%   | | | else return 0.0065880846022440594;  // std dev = 1.382, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), enzyme(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.010209427282357337;  // std dev = 4.919, 123.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=38 */
%   | | | else return 0.02680247095657991;  // std dev = 5.780, 162.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=54 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), location(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.02501541285365253;  // std dev = 7.520, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '15.820', 'seconds']
Parameter learned model CLL:-0.368532 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), interaction(C, D)', 'false': 'location(E, A)', 'false,false': 'interaction(A, F), phenotype(B, F)', 'false,false,false': 'interaction(A, G), function(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.824, 183, 92]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(C, E), phenotype(B, E)', 'true,false,false': 'interaction(A, A)', 'false': 'location(F, A), phenotype(B, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), phenotype(B, H)', 'false,false,false': 'location(I, A), enzyme(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.449, 7, 3], 'true,false,false,false': [3.054, 33, 13], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [5.02, 90, 35], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.228, 82, 41]}]
['proteinclass(A, B)', {'': 'location(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'location(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.742, 172, 92]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [5.068, 79, 38], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.974, 105, 54]}]
['proteinclass(A, B)', {'': 'location(C, A)', 'false': 'complex(D, A)', 'false,false': 'location(A, E)', 'false,false,true': 'enzyme(E, F), location(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.675, 174, 89], 'false,false,false': [0.472, 6, 3]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'phenotype(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.033, 43, 0], 'false,false,true,false': [7.242, 122, 92], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'location(F, A), phenotype(B, F)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.031, 45, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.817, 97, 89], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.224, 3, 3]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(D, A), phenotype(B, D)', 'false,false': 'location(E, A), enzyme(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.478, 180, 89], 'false,false,false,false': [1.382, 7, 3]}]
['proteinclass(A, B)', {'': 'location(C, A), phenotype(B, C)', 'false': 'location(D, A), enzyme(D, E)', 'false,false': 'interaction(A, F), complex(G, F)', 'false,false,false': 'enzyme(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.919, 85, 38], 'false,false,false,false': [5.78, 108, 54]}]
['proteinclass(A, B)', {'': 'location(A, C), location(C, D)', 'false': 'function(E, A), location(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.52, 186, 92]}]
{'': [nan, 0.22262479338843102], 'false': [nan, 0.22262479338843102], 'false,false': [nan, 0.22262479338843058], 'false,false,false': [nan, 0.22262479338843058]}
{'': [0.2040816326530618, 0.2125390218522379], 'false': [nan, 0.21253902185223508], 'false,false': [0.20160000000000067, 0.2222222222222229], 'false,false,false': [nan, 0.2222222222222229], 'true': [nan, 0.2040816326530618], 'true,false': [nan, 0.2040816326530618], 'true,false,false': [0.20999999999999988, 0.20274102079395137], 'false,false,true': [nan, 0.2016000000000005]}
{'': [nan, 0.2270615073960779], 'false': [nan, 0.22706150739607858], 'false,false': [nan, 0.22706150739607858]}
{'': [nan, 0.22239416462523762], 'false': [0.21949424257198905, 0.22444132403830744], 'false,false': [nan, 0.22444132403830744], 'false,false,false': [nan, 0.22444132403830744]}
{'': [nan, 0.22392837349333383], 'false': [nan, 0.22392837349333383], 'false,false': [0.22398030177584338, 0.22241091361766355], 'false,false,true': [nan, 0.22398030177584338]}
{'': [nan, 0.22980379492118402], 'false': [nan, 0.22980379492118405], 'false,false': [0.22980379492118405, nan], 'false,false,true': [2.519845718157572e-05, 0.24506739921108664]}
{'': [nan, 0.2269405319596548], 'false': [0.2260702534849975, 0.24951794293354998], 'false,false': [nan, 0.24951794293354998], 'false,false,false': [nan, 0.24951794293354998], 'false,true': [2.1975103615950393e-05, 0.2498797815253875], 'false,true,false': [nan, 0.2498797815253875]}
{'': [nan, 0.2073119423212023], 'false': [nan, 0.2073119423212023], 'false,false': [nan, 0.2073119423212023], 'false,false,false': [0.20790319771792032, 0.19097443085680163]}
{'': [nan, 0.20221301528200106], 'false': [nan, 0.20221301528200106], 'false,false': [nan, 0.2022130152820009], 'false,false,false': [0.19673505534540103, 0.2062533808432592]}
{'': [nan, 0.20342135934709388], 'false': [nan, 0.20342135934709393], 'false,false': [nan, 0.20342135934709393]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- phenotype(B, H).;true;true
6;;proteinclass(A, B) :- location(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 8.675
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(A, A), complex(A, E) )
%   | then return 0.088918165868743;  // std dev = 0.421, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( interaction(C, F), phenotype(F, G) )
%   | | then if ( interaction(F, H), location(A, I) )
%   | | | then return 0.28672036367094095;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 0.12481560176617888;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( enzyme(C, J) )
%   | | | then return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.42064893509951234;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   else if ( interaction(K, A), phenotype(K, L) )
%   | then if ( phenotype(A, M), interaction(N, K) )
%   | | then return 0.13087620782678508;  // std dev = 0.445, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( enzyme(A, P), interaction(Q, K) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.23024195835532632;  // std dev = 3.170, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | else return 0.13087620782678477;  // std dev = 0.445, 121.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=33 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.19333544018415125;  // std dev = 0.483, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | else return 0.09252852993714841;  // std dev = 0.442, 79.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=21 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, H), interaction(H, H) )
%   | | then if ( interaction(A, F), location(A, I) )
%   | | | then return 0.33094661969912703;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.11499777126817715;  // std dev = 1.198, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.08781039004090523;  // std dev = 0.445, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, L), interaction(A, L) )
%   | | | then return 0.5643817447587438;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2692304651210015;  // std dev = 1.503, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( complex(A, M), interaction(N, A) )
%   | | | then return 0.29475806925962306;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.16115450360641773;  // std dev = 3.941, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( phenotype(A, E), interaction(A, C) )
%   | then return 0.5559219889718512;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.0758593978182742;  // std dev = 0.451, 121.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=34 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( location(A, H), location(F, H) )
%   | | then if ( interaction(I, F), enzyme(I, J) )
%   | | | then return 0.32001509791052357;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.188413748962665;  // std dev = 1.899, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(F, K), interaction(K, L) )
%   | | | then return 0.317232033107458;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.4786453202661854;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, M) )
%   | | then if ( phenotype(A, N) )
%   | | | then return 0.13878947252343096;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.4027587865297779;  // std dev = 1.361, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.11112838890867943;  // std dev = 0.458, 113.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=34 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( complex(A, D) )
%   | then return -0.04103181063827945;  // std dev = 0.409, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | else return 0.09865173480191199;  // std dev = 0.456, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else if ( phenotype(A, E), complex(A, F) )
%   | then if ( interaction(G, A), location(G, H) )
%   | | then if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.02087134770990902;  // std dev = 1.226, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.18635182246518733;  // std dev = 3.015, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else return 0.5415086791979606;  // std dev = 0.877, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( location(A, L), location(K, L) )
%   | | | then return 0.12556893167976255;  // std dev = 2.906, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return 0.4111174777988489;  // std dev = 0.861, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.021606910423849286;  // std dev = 2.525, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.0922543635022521;  // std dev = 5.047, 120.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=37 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, D), complex(E, F) )
%   | then if ( complex(D, G) )
%   | | then if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.18450764288471583;  // std dev = 2.627, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.08405083781311652;  // std dev = 3.186, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | else if ( interaction(A, J), location(C, K) )
%   | | | then return 0.12335613852753546;  // std dev = 1.373, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.5426895912303017;  // std dev = 1.248, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.045478191786907145;  // std dev = 0.454, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   else if ( enzyme(A, L), interaction(A, M) )
%   | then if ( phenotype(A, N), phenotype(M, N) )
%   | | then return -0.03719081727390761;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(M, P), complex(P, Q) )
%   | | | then return 0.1336114164575366;  // std dev = 1.593, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.22173803983752116;  // std dev = 1.485, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0.036539563339956525;  // std dev = 0.450, 88.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=25 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(B, C) )
%   then return -0.262111807350913;  // std dev = 0.291, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( location(A, F), location(D, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.34386630389080736;  // std dev = 2.186, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return 0.09841579085478823;  // std dev = 2.501, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( complex(D, H), phenotype(A, I) )
%   | | | then return -0.018920256021190837;  // std dev = 1.717, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.07258299939307881;  // std dev = 2.149, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else if ( complex(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), interaction(L, M) )
%   | | | then return 0.41387450352364613;  // std dev = 1.631, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.10887908375636669;  // std dev = 1.742, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.10872235376397688;  // std dev = 3.273, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | | | else return 0.16784404036402595;  // std dev = 4.018, 67.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=27 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.2196988924580168;  // std dev = 0.301, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(E, E), complex(E, G) )
%   | | | then return 0.0024184654485968813;  // std dev = 1.419, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.3017103484937748;  // std dev = 2.014, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.03800027777372947;  // std dev = 4.461, 85.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=30 */
%   | | | else return 0.11147103604604632;  // std dev = 5.185, 112.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=46 */
%   else return 0.23816019812326417;  // std dev = 1.251, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( interaction(E, A), enzyme(E, D) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.2869655876043042;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.10806598985805699;  // std dev = 0.480, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return -0.02990718577427687;  // std dev = 0.435, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then if ( phenotype(A, I) )
%   | | then return -0.12908894446751823;  // std dev = 0.407, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else return 0.3053974095564942;  // std dev = 1.039, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(J, A), phenotype(A, K) )
%   | | then if ( interaction(J, J) )
%   | | | then return 0.046161795241652065;  // std dev = 1.334, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.26697422269548526;  // std dev = 2.187, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | else if ( enzyme(A, L), interaction(A, M) )
%   | | | then return 0.3027220903307637;  // std dev = 1.378, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.0497870215801425;  // std dev = 5.136, 123.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=42 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( interaction(E, A), enzyme(E, C) )
%   | then return 0.28976357047130524;  // std dev = 0.449, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( interaction(D, D), interaction(F, A) )
%   | | then return 0.10129681484740333;  // std dev = 0.449, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.026615161332174554;  // std dev = 1.982, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.09058001172704852;  // std dev = 1.748, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else if ( interaction(A, H), interaction(H, H) )
%   | then return -0.053022130958166956;  // std dev = 0.432, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( complex(I, K) )
%   | | | then return 0.12709423475378176;  // std dev = 2.509, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.042327875348780075;  // std dev = 3.079, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | else if ( interaction(L, A), complex(A, M) )
%   | | | then return 0.07836344045868571;  // std dev = 2.336, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return -0.011979500855539234;  // std dev = 3.680, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), interaction(E, F) )
%   | then return -0.07910241605136883;  // std dev = 0.446, 101.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=29 */
%   | else return -0.007461666643750531;  // std dev = 0.438, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(G, G), location(A, I) )
%   | | then return -0.10024284131456207;  // std dev = 0.428, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( interaction(H, A), location(G, J) )
%   | | | then return 0.37408409276311977;  // std dev = 0.696, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.006600482378619141;  // std dev = 2.214, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | else if ( complex(A, K) )
%   | | then if ( complex(L, K), phenotype(L, M) )
%   | | | then return 0.09927522356541188;  // std dev = 1.906, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return -0.001517703707317035;  // std dev = 1.859, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.0843686100271037;  // std dev = 2.299, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.16886584733959858;  // std dev = 3.152, 42.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.748', 'seconds']
Refined model CLL: -0.405547


******************************************
Best model found
******************************************
Results 

CLL : -0.351532 

AUC ROC : 0.681443 

AUC PR : 0.011028 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.675 

Total Inference Time : 3.251366138458252 

Total revision time: 25.837382652282717
Best scored revision CLL: -0.368532


Results 

CLL : -0.351532 

AUC ROC : 0.681443 

AUC PR : 0.011028 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 25.945568420410158 

Total Inference Time : 3.251366138458252 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.12
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), interaction(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.183906510857088;  // std dev = 7.615, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(C, E), phenotype(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, A) )
%   | | | then return 0.13425566935658248;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.16758900268991647;  // std dev = 3.742, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   else if ( location(F, A), phenotype(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), phenotype(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14536678046769413;  // std dev = 4.392, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   | | else if ( location(I, A), enzyme(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14334657844749227;  // std dev = 4.847, 110.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1648602514585296;  // std dev = 7.464, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.11944422194151036;  // std dev = 4.321, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1355584276903727;  // std dev = 6.142, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E) )
%   | | then if ( enzyme(E, F), location(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07519089967076571;  // std dev = 7.559, 266.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=83 */
%   | | else return 0.06385364738939783;  // std dev = 0.459, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( phenotype(B, H) )
%   | | | then return -0.25036266187887485;  // std dev = 0.025, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | | else return 0.18834733182048521;  // std dev = 6.948, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.20638915166833874;  // std dev = 0.017, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20358418701913308;  // std dev = 6.500, 169.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=83 */
%   | else if ( location(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1110917934430815;  // std dev = 1.328, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), enzyme(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.043773783599874515;  // std dev = 7.040, 250.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=83 */
%   | | | else return 0.018726202920428356;  // std dev = 1.400, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), enzyme(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.04546416887527394;  // std dev = 4.078, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   | | | else return 0.056362320991527506;  // std dev = 5.782, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), location(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.027943572507875318;  // std dev = 7.095, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '16.401', 'seconds']
Parameter learned model CLL:-0.358249 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), interaction(C, D)', 'false': 'location(E, A)', 'false,false': 'interaction(A, F), phenotype(B, F)', 'false,false,false': 'interaction(A, G), function(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.615, 178, 86]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(C, E), phenotype(B, E)', 'true,false,false': 'interaction(A, A)', 'false': 'location(F, A), phenotype(B, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), phenotype(B, H)', 'false,false,false': 'location(I, A), enzyme(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.449, 7, 3], 'true,false,false,false': [3.742, 42, 21], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.392, 62, 28], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.847, 76, 34]}]
['proteinclass(A, B)', {'': 'location(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'location(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.464, 158, 86]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.321, 56, 28], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.142, 108, 58]}]
['proteinclass(A, B)', {'': 'location(C, A)', 'false': 'complex(D, A)', 'false,false': 'location(A, E)', 'false,false,true': 'enzyme(E, F), location(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.559, 183, 83], 'false,false,false': [0.459, 7, 3]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'phenotype(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.025, 83, 0], 'false,false,true,false': [6.948, 110, 86], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'location(F, A), phenotype(B, F)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.017, 62, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.5, 86, 83], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.328, 5, 3]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(D, A), phenotype(B, D)', 'false,false': 'location(E, A), enzyme(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.04, 167, 83], 'false,false,false,false': [1.4, 7, 3]}]
['proteinclass(A, B)', {'': 'location(C, A), phenotype(B, C)', 'false': 'location(D, A), enzyme(D, E)', 'false,false': 'interaction(A, F), complex(G, F)', 'false,false,false': 'enzyme(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.078, 53, 28], 'false,false,false,false': [5.782, 104, 58]}]
['proteinclass(A, B)', {'': 'location(A, C), location(C, D)', 'false': 'function(E, A), location(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.095, 177, 86]}]
{'': [nan, 0.21963957759412384], 'false': [nan, 0.21963957759412384], 'false,false': [nan, 0.21963957759412397], 'false,false,false': [nan, 0.21963957759412397]}
{'': [0.2206793019328203, 0.2139], 'true': [nan, 0.2206793019328203], 'true,false': [nan, 0.2206793019328203], 'true,false,false': [0.21000000000000005, 0.22222222222222204], 'false': [nan, 0.2139000000000009], 'false,false': [0.21432098765432095, 0.21355371900826448], 'false,false,true': [nan, 0.2143209876543209], 'false,false,false': [nan, 0.21355371900826448]}
{'': [nan, 0.22831646121228005], 'false': [nan, 0.22831646121228], 'false,false': [nan, 0.22831646121228]}
{'': [nan, 0.22563928429755775], 'false': [0.22231150759463378, 0.22723597117398328], 'false,false': [nan, 0.22723597117398328], 'false,false,false': [nan, 0.22723597117398328]}
{'': [nan, 0.21462642280963995], 'false': [nan, 0.21462642280963995], 'false,false': [0.2147858243519185, 0.21026246549897296], 'false,false,true': [nan, 0.2147858243519185]}
{'': [nan, 0.21324112648988547], 'false': [nan, 0.21324112648988552], 'false,false': [0.21324112648988552, nan], 'false,false,true': [7.386883006011137e-06, 0.2462820408347071]}
{'': [nan, 0.21604504792861287], 'false': [0.21588230383918536, 0.22044680303029543], 'false,false': [nan, 0.22044680303029543], 'false,false,false': [nan, 0.22044680303029543], 'false,true': [4.848762679946029e-06, 0.24996806876883193], 'false,true,false': [nan, 0.24996806876883193]}
{'': [nan, 0.19817379700321103], 'false': [nan, 0.19817379700321103], 'false,false': [nan, 0.19817379700321103], 'false,false,false': [0.19824031008259518, 0.19590771877063215]}
{'': [nan, 0.20603811281283393], 'false': [nan, 0.20603811281283393], 'false,false': [nan, 0.2060381128128338], 'false,false,false': [0.2052688477576276, 0.2063831554339205]}
{'': [nan, 0.19140626399666316], 'false': [nan, 0.19140626399666316], 'false,false': [nan, 0.19140626399666316]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- phenotype(B, H).;true;true
6;;proteinclass(A, B) :- location(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 9.066
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( interaction(E, D), phenotype(E, F) )
%   | then if ( phenotype(D, G), interaction(A, H) )
%   | | then if ( complex(H, I), phenotype(D, F) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(D, F), phenotype(A, J) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19148226843284566;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | else if ( phenotype(D, K) )
%   | | then return 0.13592671287729013;  // std dev = 0.448, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( phenotype(A, M), complex(A, N) )
%   | then return 0.11814893509951237;  // std dev = 0.439, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | else return 0.1914822684328448;  // std dev = 0.471, 144.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=48 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), enzyme(E, F) )
%   | then return 0.10692360203729298;  // std dev = 0.449, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | else return 0.279859712527804;  // std dev = 0.497, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   else if ( complex(A, G), interaction(A, H) )
%   | then if ( location(A, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.33983482178698193;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.4842314766724995;  // std dev = 1.124, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.1505206975641012;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( complex(K, L) )
%   | | | then return 0.17563730536984368;  // std dev = 4.041, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
%   | | | else return 0.30356026943379844;  // std dev = 2.377, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( interaction(M, A), enzyme(A, N) )
%   | | | then return 0.09058340635284785;  // std dev = 2.104, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.20913774084090617;  // std dev = 2.738, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( enzyme(C, F) )
%   | | then return 0.3436043323060463;  // std dev = 0.502, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.1508713953812185;  // std dev = 0.479, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else return 0.09071270778401802;  // std dev = 0.460, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   else if ( interaction(A, G), interaction(G, G) )
%   | then if ( complex(A, H), enzyme(G, I) )
%   | | then return 0.07848492291312403;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( enzyme(G, J), interaction(A, A) )
%   | | | then return 0.4844787812679084;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3065225572327278;  // std dev = 1.409, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then return -0.015487026646513073;  // std dev = 0.409, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.10708360745610565;  // std dev = 2.988, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return 0.20591690084859793;  // std dev = 3.631, 55.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=22 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(D, E), interaction(A, E) )
%   | then if ( interaction(E, F), interaction(F, D) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.09575418818374178;  // std dev = 2.319, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.3393327287126742;  // std dev = 1.657, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else return -0.008900016449188012;  // std dev = 0.415, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( interaction(I, A), interaction(I, D) )
%   | | then return 0.7787214577154197;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, J), phenotype(D, C) )
%   | | | then return 0.4849995695673289;  // std dev = 0.981, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.15546282184163068;  // std dev = 2.217, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   else if ( location(A, K) )
%   | then if ( interaction(A, A), complex(A, L) )
%   | | then return 0.44378799821860965;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.09476357719403845;  // std dev = 0.467, 155.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=50 */
%   | else return 0.27950665238306105;  // std dev = 1.220, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( enzyme(C, E), interaction(F, A) )
%   | then return 0.15860193095559288;  // std dev = 0.499, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else return -0.004975388394244757;  // std dev = 0.441, 123.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=32 */
%   else if ( phenotype(A, G) )
%   | then if ( phenotype(H, G), complex(H, I) )
%   | | then if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.08011946469292257;  // std dev = 3.173, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return 0.2502631743327278;  // std dev = 1.711, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( phenotype(L, G), enzyme(L, M) )
%   | | | then return 0.0833496874796112;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5525540089425987;  // std dev = 0.897, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( enzyme(A, N) )
%   | | then if ( interaction(P, A), complex(P, Q) )
%   | | | then return 0.04202891561567519;  // std dev = 1.907, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.45643007230918536;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.012503340567762023;  // std dev = 0.446, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(B, C) )
%   then return -0.28954951618583047;  // std dev = 0.071, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(H, F), interaction(A, I) )
%   | | | then return -0.030915753791803783;  // std dev = 1.882, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.11649654240354182;  // std dev = 2.220, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.36393086544208036;  // std dev = 0.750, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.12996573805754447;  // std dev = 2.604, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | else if ( interaction(L, A), enzyme(L, M) )
%   | | then if ( interaction(A, N), interaction(N, P) )
%   | | | then return -0.022229372252905437;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.28833542507294607;  // std dev = 1.788, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(A, A), phenotype(A, Q) )
%   | | | then return 0.7479931440670193;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2221280498064373;  // std dev = 4.779, 90.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.22513041565492564;  // std dev = 0.366, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then if ( phenotype(E, F), enzyme(A, G) )
%   | | | then return -0.023582420670911302;  // std dev = 1.118, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.40094692128650145;  // std dev = 2.346, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.12694522592807422;  // std dev = 4.746, 92.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=41 */
%   | | | else return 0.28268339933081693;  // std dev = 2.916, 34.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   else if ( interaction(J, A) )
%   | then return 0.0881492654224053;  // std dev = 1.058, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.025870558551712608;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( phenotype(A, E), phenotype(D, F) )
%   | then if ( interaction(G, D), complex(G, H) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.040885861403839645;  // std dev = 1.121, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.13650548418547276;  // std dev = 1.462, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(J, D) )
%   | | | then return 0.1339963288803151;  // std dev = 1.489, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.017009996482699137;  // std dev = 1.179, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then return 0.30121743670960655;  // std dev = 1.076, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(D, M) )
%   | | | then return 0.11764724044082016;  // std dev = 2.014, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.04212022254371831;  // std dev = 1.125, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( phenotype(A, N), interaction(A, P) )
%   | then return -0.0696622392173915;  // std dev = 0.432, 76.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
%   | else return 0.006884572502119669;  // std dev = 0.439, 124.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=39 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( enzyme(A, E), interaction(F, C) )
%   | then return -0.042678897752273716;  // std dev = 0.433, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | else if ( interaction(G, C), interaction(H, G) )
%   | | then if ( interaction(A, I), interaction(H, I) )
%   | | | then return 0.011610858064238233;  // std dev = 2.043, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.37465438622555114;  // std dev = 1.430, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.1548873630833189;  // std dev = 1.476, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.08937816326155588;  // std dev = 1.671, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   else if ( interaction(A, L) )
%   | then if ( complex(L, M), interaction(L, L) )
%   | | then return -0.11443783758310269;  // std dev = 0.428, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else return 0.04154310818330803;  // std dev = 0.435, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
%   | else if ( enzyme(A, N) )
%   | | then return -5.071026853263958E-4;  // std dev = 0.444, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else return -0.05879515510133528;  // std dev = 0.429, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( interaction(D, A) )
%   | then return -0.18383786479599004;  // std dev = 0.411, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( interaction(D, D), complex(D, E) )
%   | | then return 0.2024881054089404;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, F), interaction(G, A) )
%   | | | then return 0.03817551892847346;  // std dev = 1.886, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.09127159226258054;  // std dev = 1.655, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   else if ( phenotype(A, H), interaction(I, A) )
%   | then return -0.0015274082838811027;  // std dev = 0.437, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.049046093843346725;  // std dev = 0.935, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.14415981904207245;  // std dev = 1.197, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.3896569524531894;  // std dev = 0.900, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.04542154560898136;  // std dev = 4.029, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.211', 'seconds']
Refined model CLL: -0.394521


******************************************
Best model found
******************************************
Results 

CLL : -0.372494 

AUC ROC : 0.664475 

AUC PR : 0.010316 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.066 

Total Inference Time : 3.4328455924987793 

Total revision time: 25.557506214141846
Best scored revision CLL: -0.358249


Results 

CLL : -0.372494 

AUC ROC : 0.664475 

AUC PR : 0.010316 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 25.665691982269287 

Total Inference Time : 3.4328455924987793 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.052
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2044692814198589;  // std dev = 7.231, 231.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=80 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G), phenotype(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, H), function(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15226658215833588;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), phenotype(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F) )
%   | | then if ( location(F, G), phenotype(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16322744724779692;  // std dev = 7.447, 250.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=83 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.1171070998965665;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2313928141822808;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.13720862855445076;  // std dev = 7.409, 248.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=82 */
%   | | else return 0.23191888310535425;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.1666322690542383;  // std dev = 4.582, 89.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=34 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09051887710184546;  // std dev = 6.058, 173.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=53 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(D, A), complex(D, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(C, E), complex(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10681954216805964;  // std dev = 7.338, 239.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=82 */
%   else if ( complex(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( enzyme(H, I), interaction(H, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13548593642584808;  // std dev = 1.753, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, C), enzyme(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(B, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.061006637921182126;  // std dev = 3.497, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   else if ( complex(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(I, J) )
%   | | then if ( phenotype(B, K) )
%   | | | then return -0.25737362672915115;  // std dev = 0.059, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0.173910288854502;  // std dev = 6.272, 160.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=69 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.23198550315402033;  // std dev = 0.144, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18609803924446205;  // std dev = 4.829, 94.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=44 */
%   | else if ( interaction(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.05976380612985396;  // std dev = 5.241, 127.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), location(G, H) )
%   | | | then return 0.07150779222555317;  // std dev = 3.462, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | | else return 0.011057334975489072;  // std dev = 1.635, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04664539983430678;  // std dev = 4.140, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | | else return 0.07296714018400259;  // std dev = 4.622, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( location(D, F) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.011169262460313764;  // std dev = 3.793, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | else if ( interaction(G, D), location(G, H) )
%   | | | then return 0.152294067673994;  // std dev = 1.018, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, I), complex(J, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.007176071268673944;  // std dev = 3.804, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | | else return 0.050553039241111854;  // std dev = 5.024, 115.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=41 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(D, E) )
%   | | then return 0.05389216433079761;  // std dev = 4.155, 78.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(F, A), interaction(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05024119184666923;  // std dev = 5.925, 160.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '23.942', 'seconds']
Parameter learned model CLL:-0.380446 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), location(C, D)', 'true': 'phenotype(B, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E)', 'false,true,true': 'phenotype(B, F)', 'false,false': 'location(A, G), phenotype(B, G)', 'false,false,false': 'location(A, H), function(I, H)'}, {'true,true': [0.0, 0, 0], 'true,false': [7.231, 151, 80], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.0, 2, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.879, 12, 5]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'interaction(E, A), phenotype(B, E)', 'false,false': 'location(A, F)', 'false,false,true': 'location(F, G), phenotype(B, G)', 'false,false,false': 'interaction(H, A), enzyme(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.447, 167, 83], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'interaction(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.409, 166, 82], 'false,false,false': [1.708, 7, 5]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.582, 55, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.058, 120, 53]}]
['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'phenotype(B, C)', 'true,false': 'complex(D, A), complex(D, C)', 'true,false,false': 'enzyme(C, E), complex(F, C)', 'false': 'complex(G, A)', 'false,false': 'interaction(A, H)', 'false,false,true': 'enzyme(H, I), interaction(H, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.338, 157, 82], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.753, 8, 5], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'complex(E, A)', 'true,false': 'complex(F, C), enzyme(A, G)', 'true,false,false': 'phenotype(B, C)', 'false': 'complex(H, A)', 'false,false': 'complex(I, J)', 'false,false,true': 'phenotype(B, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.497, 38, 18], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.059, 47, 0], 'false,false,true,false': [6.272, 91, 69], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'interaction(F, A), phenotype(B, F)', 'false,false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.144, 24, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [4.829, 50, 44], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.241, 84, 43], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(D, A), phenotype(B, D)', 'false,false': 'interaction(E, A), enzyme(E, F)', 'false,false,true': 'interaction(G, E), location(G, H)', 'false,false,false': 'interaction(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [3.462, 36, 20], 'false,false,true,false': [1.635, 8, 4], 'false,false,false,true': [4.14, 52, 28], 'false,false,false,false': [4.622, 62, 35]}]
['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(B, C)', 'false': 'interaction(D, A), enzyme(D, E)', 'false,true': 'location(D, F)', 'false,true,true': 'phenotype(B, F)', 'false,true,false': 'interaction(G, D), location(G, H)', 'false,false': 'location(A, I), complex(J, I)', 'false,false,false': 'enzyme(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.793, 47, 22], 'false,true,false,true': [1.018, 2, 2], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.804, 49, 22], 'false,false,false,false': [5.024, 74, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(D, E)', 'false': 'function(F, A), interaction(G, A)', 'false,false': 'complex(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [4.155, 49, 29], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.925, 102, 58]}]
{'': [0.22638256404490215, 0.22222222222222207], 'true': [nan, 0.22638256404490215], 'false': [0.25, 0.20761245674740467], 'false,true': [0.25, nan], 'false,true,true': [nan, 0.25], 'false,false': [nan, 0.20761245674740467], 'false,false,false': [nan, 0.20761245674740467]}
{'': [nan, 0.22184171411445738], 'false': [nan, 0.22184171411445744], 'false,false': [0.22182334685036137, 0.2222222222222221], 'false,false,false': [0.20408163265306128, 0.24000000000000005], 'false,false,true': [nan, 0.22182334685036137]}
{'': [nan, 0.22272884327512], 'false': [nan, 0.2227288432751184], 'false,false': [0.2213312911893455, 0.24305555555555572]}
{'': [nan, 0.22152174148129883], 'false': [0.2359110138178063, 0.2121512323146257], 'false,false': [nan, 0.2121512323146257], 'false,false,false': [nan, 0.2121512323146257]}
{'': [0.22528911072073105, 0.2363881579975153], 'false': [nan, 0.2363881579975153], 'false,false': [0.2363881579975153, nan], 'false,false,true': [nan, 0.23638815799751534], 'true': [nan, 0.22528911072073105], 'true,false': [nan, 0.22528911072073105], 'true,false,false': [nan, 0.22528911072073168]}
{'': [0.21842749210425655, 0.22269271943796703], 'false': [nan, 0.2226927194379671], 'false,false': [0.2226927194379671, nan], 'false,false,true': [7.490951590670868e-05, 0.24585349653960184], 'true': [nan, 0.21842749210425655], 'true,false': [nan, 0.21842749210425655], 'true,false,false': [nan, 0.21842749210425655]}
{'': [nan, 0.2214248074832577], 'false': [0.2260908536066134, 0.21626789841772392], 'false,true': [0.0008665550873102612, 0.2480436386193322], 'false,true,false': [nan, 0.2480436386193322], 'false,false': [nan, 0.21626789841772392], 'false,false,false': [0.21626789841772392, nan]}
{'': [nan, 0.21725475124182286], 'false': [nan, 0.21725475124182286], 'false,false': [0.21611081322418446, 0.21769421554064253], 'false,false,false': [0.21426271456230622, 0.2202111741227712], 'false,false,true': [0.21403838701812786, 0.22277274675768124]}
{'': [nan, 0.21374433559847433], 'false': [0.21233736903998884, 0.21427047786355882], 'false,false': [nan, 0.21427047786355888], 'false,false,false': [0.20379903661980825, 0.219463313963602], 'false,true': [0.20853302043703836, 0.25913747100779755], 'false,true,false': [0.25913747100779755, nan], 'false,true,true': [nan, 0.20853302043703836]}
{'': [0.22133698553489886, 0.21942585540726953], 'true': [nan, 0.22133698553489886], 'true,false': [0.22133698553489886, nan], 'false': [nan, 0.21942585540726944], 'false,false': [nan, 0.21942585540726944]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
5;false;phenotype(B, K).;true;true
6;;proteinclass(A, B) :- interaction(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 23.417
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(E, A), enzyme(C, F) )
%   | then return 0.1914822684328457;  // std dev = 0.471, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | else return 0.10233498161114027;  // std dev = 0.430, 86.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=21 */
%   else if ( complex(A, G) )
%   | then if ( interaction(H, A), complex(H, G) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(I, G), interaction(I, J) )
%   | | | then return 0.35814893509951234;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( interaction(M, K), location(K, N) )
%   | | | then return 0.3966104735610508;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.19148226843284552;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(P, A), phenotype(P, Q) )
%   | | | then return 0.12644161802634163;  // std dev = 2.837, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.18122585817643502;  // std dev = 3.770, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(A, A), complex(A, E) )
%   | then return 0.027047708608660025;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( phenotype(A, D), enzyme(C, F) )
%   | | then return 0.5815964372902397;  // std dev = 0.851, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, D), enzyme(A, G) )
%   | | | then return 0.08921750901101327;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.2746853092069944;  // std dev = 3.840, 60.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=26 */
%   else if ( interaction(H, A), complex(A, I) )
%   | then if ( complex(H, I) )
%   | | then return 0.5170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(H, J) )
%   | | | then return 0.12207906396546118;  // std dev = 1.666, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.2927261275523352;  // std dev = 2.179, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( interaction(K, A) )
%   | | then return 0.1772276696273016;  // std dev = 0.476, 107.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=37 */
%   | | else return 0.00874113578563499;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then return 0.035835625597121376;  // std dev = 0.434, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( enzyme(F, C), complex(F, G) )
%   | | then if ( interaction(F, H) )
%   | | | then return 0.153960936008773;  // std dev = 1.773, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.41131739909708376;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.4752558852764117;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, I), phenotype(A, J) )
%   | then if ( phenotype(I, J), enzyme(I, K) )
%   | | then return -0.053517313882751695;  // std dev = 0.399, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.16807160327491363;  // std dev = 2.534, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.4662691196378515;  // std dev = 1.169, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, M), enzyme(A, N) )
%   | | then return 0.1621006950837781;  // std dev = 0.478, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else return 0.08930569711967364;  // std dev = 0.458, 155.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=46 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( interaction(A, A) )
%   | then return 0.5352060545828281;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(C, D) )
%   | | then if ( complex(A, E), complex(C, F) )
%   | | | then return 0.13287120754166334;  // std dev = 2.108, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.35901249178770994;  // std dev = 1.776, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else if ( enzyme(A, G), enzyme(C, G) )
%   | | | then return -0.03932760553622342;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.11993835375329269;  // std dev = 3.562, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then return -0.0030963847150807192;  // std dev = 0.425, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.05722795898314204;  // std dev = 0.451, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.4442014887726151;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14873971378656772;  // std dev = 3.498, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( enzyme(D, F), phenotype(A, E) )
%   | | then return -0.11011138012289419;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( complex(D, C) )
%   | | | then return 0.0768030071981206;  // std dev = 2.193, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.25572068986154545;  // std dev = 2.244, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else if ( complex(G, C), interaction(G, A) )
%   | | then return -0.12152451733285309;  // std dev = 0.432, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return 0.04222964790616039;  // std dev = 0.461, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   else if ( interaction(H, A), location(H, I) )
%   | then if ( interaction(J, H), interaction(K, J) )
%   | | then if ( complex(J, L), interaction(J, K) )
%   | | | then return 0.11955028565019123;  // std dev = 4.730, 96.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=36 */
%   | | | else return 0.3428240437884769;  // std dev = 1.701, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else return 0.03166738843362721;  // std dev = 0.456, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | else return 0.35632016749186407;  // std dev = 1.102, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(A, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.08253562280192797;  // std dev = 1.371, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3444270341051158;  // std dev = 1.045, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, H), complex(H, E) )
%   | | | then return 0.08331831480511603;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.05566762236339914;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.0158740670361913;  // std dev = 0.465, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   else if ( phenotype(B, I) )
%   | then return -0.2729157101513852;  // std dev = 0.212, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then return 0.07360524317483774;  // std dev = 0.478, 120.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=43 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return 0.0647514638502273;  // std dev = 2.011, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.2429370971907007;  // std dev = 3.149, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.275550625885472;  // std dev = 0.057, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then if ( interaction(E, A), phenotype(F, G) )
%   | | | then return 0.09448452235139812;  // std dev = 3.075, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | | else return 0.25316819704770105;  // std dev = 2.490, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.07562346264016787;  // std dev = 1.470, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.08343532826275518;  // std dev = 2.719, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   else if ( enzyme(A, J), phenotype(A, K) )
%   | then if ( complex(A, L) )
%   | | then return 0.1666458553974247;  // std dev = 1.217, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.12413095245759423;  // std dev = 0.417, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( interaction(M, A), location(M, N) )
%   | | then return 0.058693296795318026;  // std dev = 0.459, 102.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
%   | | else return -0.0642703633063878;  // std dev = 0.413, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( complex(C, E), interaction(F, C) )
%   | then if ( phenotype(C, G), interaction(A, H) )
%   | | then if ( phenotype(A, I), phenotype(F, I) )
%   | | | then return 0.043728344859960716;  // std dev = 2.616, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.187724135000843;  // std dev = 2.329, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( interaction(C, C), location(A, D) )
%   | | | then return -0.12763139416830108;  // std dev = 1.241, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.010638753498197017;  // std dev = 3.643, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then return -0.09948824654052567;  // std dev = 0.411, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | else return 4.325838396137572E-4;  // std dev = 0.436, 98.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=28 */
%   else if ( enzyme(A, L) )
%   | then if ( interaction(A, M), enzyme(M, N) )
%   | | then return 0.11800569061117742;  // std dev = 1.045, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.06841679754434571;  // std dev = 1.118, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.3928517560692798;  // std dev = 0.890, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( phenotype(A, E), complex(C, F) )
%   | then if ( complex(A, G), phenotype(C, E) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.11920729201642649;  // std dev = 1.235, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.15716419915088198;  // std dev = 1.848, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.0347245695500454;  // std dev = 1.529, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.07114935495137979;  // std dev = 3.078, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | else if ( interaction(J, C) )
%   | | then if ( enzyme(J, K), location(J, D) )
%   | | | then return 0.008076966768382916;  // std dev = 3.944, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
%   | | | else return 0.0830377160428648;  // std dev = 3.773, 65.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=25 */
%   | | else return 0.2128649956924783;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( enzyme(A, L) )
%   | then return 1.7155085416920338E-4;  // std dev = 0.445, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else return -0.12997407008325335;  // std dev = 0.378, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( location(C, D) )
%   | then if ( interaction(E, C), location(E, D) )
%   | | then return -0.019093919448699835;  // std dev = 0.443, 197.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=57 */
%   | | else return -0.09625774282753596;  // std dev = 0.450, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( location(C, F) )
%   | | then if ( phenotype(C, G) )
%   | | | then return 0.09731590780639743;  // std dev = 2.049, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.17439781766597645;  // std dev = 1.519, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return -0.1354591823620382;  // std dev = 0.436, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( interaction(A, H), interaction(H, I) )
%   | then return 0.018642499989001457;  // std dev = 0.444, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( phenotype(A, J) )
%   | | then return 0.07119257774474474;  // std dev = 0.762, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.20002538040066004;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3599141741254314;  // std dev = 0.748, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.576', 'seconds']
Refined model CLL: -0.382983


******************************************
Best model found
******************************************
Results 

CLL : -0.369833 

AUC ROC : 0.677362 

AUC PR : 0.010797 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 23.417 

Total Inference Time : 9.496344327926636 

Total revision time: 46.24651660346985
Best scored revision CLL: -0.380446


Results 

CLL : -0.369833 

AUC ROC : 0.677362 

AUC PR : 0.010797 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 46.300250429153444 

Total Inference Time : 9.496344327926636 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.699
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18488160836683654;  // std dev = 8.164, 303.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=99 */
%   else if ( interaction(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15226658215833588;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), phenotype(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F) )
%   | | then if ( location(F, G), phenotype(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18206302727254683;  // std dev = 7.954, 279.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=97 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.16745412893915332;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.4055493670343914;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.1266214344592219;  // std dev = 8.200, 309.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=99 */
%   | | else return 0.1970137991944162;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.15937616472979202;  // std dev = 4.539, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09563440013629684;  // std dev = 7.001, 229.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=71 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(D, A), complex(D, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(C, E), complex(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12259995104001566;  // std dev = 7.979, 277.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=99 */
%   else if ( complex(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( enzyme(H, I), interaction(H, J) )
%   | | | then return 0.2519949363863587;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.09020156976323941;  // std dev = 1.636, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, C), enzyme(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(B, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07152332929087517;  // std dev = 4.171, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   else if ( complex(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(I, J) )
%   | | then if ( phenotype(B, K) )
%   | | | then return -0.25738195728027735;  // std dev = 0.087, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return 0.2185708631191751;  // std dev = 6.400, 164.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=78 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.2413757578216675;  // std dev = 0.190, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1651818414675883;  // std dev = 5.345, 115.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=52 */
%   | else if ( interaction(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.023767933218052224;  // std dev = 5.830, 174.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), location(G, H) )
%   | | | then return 0.04961167715112754;  // std dev = 4.456, 96.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=32 */
%   | | | else return -0.03409114616800053;  // std dev = 2.525, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.027883683716194523;  // std dev = 4.303, 96.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=30 */
%   | | | else return 0.07770408998960197;  // std dev = 4.419, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( location(D, F) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08334027441496414;  // std dev = 4.880, 109.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G), complex(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.00968810197923797;  // std dev = 3.626, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | | else return 0.05978137588664279;  // std dev = 5.004, 119.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=42 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(D, E) )
%   | | then return 0.008543868842501093;  // std dev = 5.552, 155.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=49 */
%   | | else return 0.031893685959528024;  // std dev = 0.723, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( function(F, A), interaction(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03266466431602355;  // std dev = 5.749, 160.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=54 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '10.580', 'seconds']
Parameter learned model CLL:-0.361989 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), location(C, D)', 'true': 'phenotype(B, C)', 'false': 'interaction(E, A)', 'false,false': 'location(A, F), phenotype(B, F)', 'false,false,false': 'location(A, G), function(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [8.164, 204, 99], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.879, 12, 5]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'interaction(E, A), phenotype(B, E)', 'false,false': 'location(A, F)', 'false,false,true': 'location(F, G), phenotype(B, G)', 'false,false,false': 'interaction(H, A), enzyme(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.954, 182, 97], 'false,false,false,true': [1.414, 6, 3], 'false,false,false,false': [1.309, 3, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'interaction(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.2, 210, 99], 'false,false,false': [1.754, 8, 5]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.539, 55, 33], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.001, 158, 71]}]
['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'phenotype(B, C)', 'true,false': 'complex(D, A), complex(D, C)', 'true,false,false': 'enzyme(C, E), complex(F, C)', 'false': 'complex(G, A)', 'false,false': 'interaction(A, H)', 'false,false,true': 'enzyme(H, I), interaction(H, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.979, 178, 99], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [1.636, 8, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'complex(E, A)', 'true,false': 'complex(F, C), enzyme(A, G)', 'true,false,false': 'phenotype(B, C)', 'false': 'complex(H, A)', 'false,false': 'complex(I, J)', 'false,false,true': 'phenotype(B, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.171, 52, 26], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.087, 61, 0], 'false,false,true,false': [6.4, 86, 78], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'interaction(F, A), phenotype(B, F)', 'false,false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.19, 36, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [5.345, 63, 52], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.83, 122, 52], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(D, A), phenotype(B, D)', 'false,false': 'interaction(E, A), enzyme(E, F)', 'false,false,true': 'interaction(G, E), location(G, H)', 'false,false,false': 'interaction(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [4.456, 64, 32], 'false,false,true,false': [2.525, 26, 9], 'false,false,false,true': [4.303, 66, 30], 'false,false,false,false': [4.419, 59, 33]}]
['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(B, C)', 'false': 'interaction(D, A), enzyme(D, E)', 'false,true': 'location(D, F)', 'false,true,true': 'phenotype(B, F)', 'false,false': 'location(A, G), complex(H, G)', 'false,false,false': 'enzyme(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [4.88, 68, 41], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.626, 45, 21], 'false,false,false,false': [5.004, 77, 42]}]
['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(D, E)', 'false': 'function(F, A), interaction(G, A)', 'false,false': 'complex(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.552, 106, 49], 'true,false,false': [0.723, 3, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.749, 106, 54]}]
{'': [0.21997843348691476, 0.20761245674740467], 'true': [nan, 0.21997843348691476], 'false': [nan, 0.20761245674740467], 'false,false': [nan, 0.20761245674740467], 'false,false,false': [nan, 0.20761245674740467]}
{'': [nan, 0.22822727312863766], 'false': [nan, 0.22822727312863722], 'false,false': [0.22676765704379087, 0.24609374999999983], 'false,false,false': [0.22222222222222232, 0.24489795918367357], 'false,false,true': [nan, 0.22676765704379087]}
{'': [nan, 0.21856071748981268], 'false': [nan, 0.2185607174898085], 'false,false': [0.21759809870496677, 0.2366863905325444]}
{'': [nan, 0.22042577703725252], 'false': [0.23410158360872702, 0.21404254271581846], 'false,false': [nan, 0.21404254271581846], 'false,false,false': [nan, 0.21404254271581846]}
{'': [0.22985550760635126, 0.22998128201656212], 'false': [nan, 0.22998128201656212], 'false,false': [0.22998128201656212, nan], 'false,false,true': [0.25, 0.22290524423600203], 'true': [nan, 0.22985550760635126], 'true,false': [nan, 0.22985550760635126], 'true,false,false': [nan, 0.22985550760635148]}
{'': [0.22301845306231455, 0.2268156736131163], 'false': [nan, 0.22681567361311605], 'false,false': [0.22681567361311605, nan], 'false,false,true': [0.0001245410158185549, 0.24971862207075818], 'true': [nan, 0.22301845306231455], 'true,false': [nan, 0.22301845306231455], 'true,false,false': [nan, 0.22301845306231455]}
{'': [nan, 0.2070258057268081], 'false': [0.2194420116973998, 0.19533133548200923], 'false,true': [0.0010006732126798873, 0.24841697964603102], 'false,true,false': [nan, 0.24841697964603102], 'false,false': [nan, 0.19533133548200923], 'false,false,false': [0.19533133548200923, nan]}
{'': [nan, 0.20256590395285987], 'false': [nan, 0.20256590395285987], 'false,false': [0.20162253273512185, 0.2029662721127085], 'false,false,false': [0.19284168428818452, 0.2122636179365886], 'false,false,true': [0.206845574390189, 0.18216218850474464]}
{'': [nan, 0.2116680676380054], 'false': [0.21846349522972025, 0.207027905754636], 'false,true': [0.21846349522972025, nan], 'false,true,true': [nan, 0.21846349522972025], 'false,false': [nan, 0.207027905754636], 'false,false,false': [0.19925476528606012, 0.21044383668647615]}
{'': [0.1971383880313132, 0.20653974465006328], 'false': [nan, 0.20653974465006328], 'false,false': [nan, 0.20653974465006328], 'true': [nan, 0.1971383880313132], 'true,false': [0.19883804493336638, 0.1307451851918031]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
5;false;phenotype(B, K).;true;true
6;;proteinclass(A, B) :- interaction(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 16.093
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( interaction(E, A), interaction(E, E) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(D, C), interaction(D, F) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( complex(D, G), interaction(D, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.32481560176617896;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then return 0.12799020494078223;  // std dev = 0.444, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2867203636709409;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.1505465959182261;  // std dev = 5.948, 171.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=50 */
%   | | | else return 0.25100607795665514;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( phenotype(D, E), complex(D, C) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.21666879112588616;  // std dev = 2.049, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.09184359509126172;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.2195467402759844;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.8398259735231979;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(D, G) )
%   | | then return 0.10864570886062057;  // std dev = 0.449, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.2633746520766172;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.49712678197725085;  // std dev = 0.824, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(I, A), interaction(I, I) )
%   | then return 0.05790250994718637;  // std dev = 0.431, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | else return 0.14027487093104513;  // std dev = 0.463, 175.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), interaction(C, E) )
%   | then if ( interaction(A, C), enzyme(A, F) )
%   | | then if ( complex(E, D) )
%   | | | then return 0.2473946911346888;  // std dev = 1.420, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.44209258522983896;  // std dev = 0.840, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, G), location(C, G) )
%   | | | then return 0.17500814893972494;  // std dev = 5.812, 143.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=53 */
%   | | | else return 0.10710639321332599;  // std dev = 3.269, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | else if ( enzyme(A, H) )
%   | | then return 0.309827928574547;  // std dev = 1.221, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.013714323158972056;  // std dev = 0.406, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   else if ( interaction(I, A), phenotype(I, J) )
%   | then if ( enzyme(I, K) )
%   | | then return 0.057034671690456375;  // std dev = 0.426, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else return 0.19479761823292152;  // std dev = 0.488, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else return 0.03878095816053041;  // std dev = 0.428, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( location(A, E), interaction(F, A) )
%   | then if ( complex(A, G), interaction(F, C) )
%   | | then return 0.09179789753700429;  // std dev = 0.465, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | else return 0.01459497924234886;  // std dev = 0.452, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | else if ( location(A, H), location(C, H) )
%   | | then return 0.06412279933401208;  // std dev = 0.445, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0.38789093270601116;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(I, A), interaction(J, I) )
%   | then if ( complex(A, K), interaction(J, J) )
%   | | then if ( complex(I, L) )
%   | | | then return 0.45562688764107556;  // std dev = 1.142, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.26697011567945594;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(J, J), interaction(I, J) )
%   | | | then return 0.10527823232666222;  // std dev = 3.435, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | | else return 0.1978309853743148;  // std dev = 4.358, 79.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=32 */
%   | else return 0.05227903432799278;  // std dev = 0.438, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then return 0.0282356618962804;  // std dev = 0.451, 156.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=44 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( complex(E, G), location(A, H) )
%   | | then if ( enzyme(E, I) )
%   | | | then return 0.15304496431324435;  // std dev = 2.743, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.03872171259120991;  // std dev = 4.142, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   | | else if ( interaction(E, J), enzyme(J, K) )
%   | | | then return 0.17116816796989504;  // std dev = 2.430, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.43944194294291994;  // std dev = 0.820, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, L) )
%   | | then if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.5316732308071672;  // std dev = 0.880, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4167782428831179;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, P) )
%   | | | then return 0.19262777162182831;  // std dev = 1.487, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.05917492084278014;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( enzyme(A, E), interaction(F, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then return -0.022447697542146722;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.15501216410677762;  // std dev = 1.486, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.020236429019578776;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(A, J), interaction(J, H) )
%   | | | then return 0.2841108638092972;  // std dev = 1.421, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.7798879150077731;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return 0.07750349425868905;  // std dev = 2.170, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.3234353322933279;  // std dev = 1.499, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else if ( phenotype(B, M) )
%   | then return -0.26178786511712265;  // std dev = 0.324, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0.16625951939420353;  // std dev = 0.497, 180.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=78 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.25751073633365723;  // std dev = 0.313, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( complex(A, E), interaction(A, A) )
%   | | then return 0.4866848726003192;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.12569163542736947;  // std dev = 4.786, 95.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=40 */
%   | | | else return 0.32603259881966495;  // std dev = 1.770, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( interaction(J, H) )
%   | | then if ( location(A, K), complex(H, L) )
%   | | | then return 0.10511920047939304;  // std dev = 4.219, 81.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=30 */
%   | | | else return -0.0021798426214509462;  // std dev = 2.436, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else return 0.34041978645706283;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(M, A), interaction(N, M) )
%   | | then return -0.052716561792148446;  // std dev = 0.425, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else return 0.015058301644691685;  // std dev = 0.445, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( interaction(A, A), complex(A, D) )
%   | then return -0.190699789796532;  // std dev = 0.396, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | else return -0.011639912973920525;  // std dev = 0.433, 86.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=24 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(A, G), complex(G, H) )
%   | | then return 0.25212627043497343;  // std dev = 0.980, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, I), location(E, I) )
%   | | | then return -0.03981102877946739;  // std dev = 2.893, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return 0.04510492210111168;  // std dev = 2.659, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | else if ( interaction(J, A), interaction(A, K) )
%   | | then if ( phenotype(J, L) )
%   | | | then return 0.09426751403406548;  // std dev = 2.212, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.4093222650279449;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.04657838554001673;  // std dev = 3.717, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
%   | | | else return 0.13633641566616642;  // std dev = 2.846, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(C, C), complex(A, E) )
%   | then if ( phenotype(A, D) )
%   | | then return 0.05312146354522803;  // std dev = 0.446, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return -0.17187383172177473;  // std dev = 0.417, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( interaction(C, C), interaction(A, F) )
%   | | then return 0.26149628885198895;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, C), complex(A, G) )
%   | | | then return 0.15418345571592806;  // std dev = 2.032, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.033363180513555954;  // std dev = 6.379, 195.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=66 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then return -0.10967467996508348;  // std dev = 0.421, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.2582905602516035;  // std dev = 0.433, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.022405280738476908;  // std dev = 1.116, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.07849923475369397;  // std dev = 1.058, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(D, F) )
%   | | then if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.1869694475369722;  // std dev = 1.815, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.08371876655961502;  // std dev = 2.517, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return -0.23975430804108386;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.041473442031627096;  // std dev = 1.466, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( complex(A, K), interaction(A, L) )
%   | | then return -0.04114455574778896;  // std dev = 0.426, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.044522019176043086;  // std dev = 5.756, 159.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=55 */
%   | | | else return -0.07528923880820806;  // std dev = 1.650, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   else if ( enzyme(A, P) )
%   | then return 0.09265476294688066;  // std dev = 1.072, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.0826684356191743;  // std dev = 0.425, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.533', 'seconds']
Refined model CLL: -0.384853


******************************************
Best model found
******************************************
Results 

CLL : -0.373619 

AUC ROC : 0.660759 

AUC PR : 0.010991 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 16.093 

Total Inference Time : 6.813069105148315 

Total revision time: 41.984517042160036
Best scored revision CLL: -0.361989


Results 

CLL : -0.373619 

AUC ROC : 0.660759 

AUC PR : 0.010991 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 42.03825086784363 

Total Inference Time : 6.813069105148315 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.266
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19653277348335205;  // std dev = 6.658, 198.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=67 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G), phenotype(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, H), function(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19148226843284544;  // std dev = 3.830, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), phenotype(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F) )
%   | | then if ( location(F, G), phenotype(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14403400318984805;  // std dev = 7.830, 286.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=89 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2123322280858711;  // std dev = 1.366, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.14983815296932093;  // std dev = 6.807, 207.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=70 */
%   | | else return 0.11227562266372534;  // std dev = 3.922, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.07265858810837142;  // std dev = 5.217, 134.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=38 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10904324512100828;  // std dev = 6.060, 169.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=54 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(D, A), complex(D, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(C, E), complex(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11991371218992064;  // std dev = 6.755, 201.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=70 */
%   else if ( complex(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( enzyme(H, I), interaction(H, J) )
%   | | | then return 0.03237308459626975;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.11558865512608382;  // std dev = 3.449, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, C), enzyme(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(B, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11360184846729066;  // std dev = 3.213, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   else if ( complex(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(I, J) )
%   | | then if ( phenotype(B, K) )
%   | | | then return -0.2496386358964084;  // std dev = 0.040, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0.1666010254627688;  // std dev = 6.661, 183.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=76 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.2230617933613265;  // std dev = 0.146, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16324849361178193;  // std dev = 5.347, 117.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=51 */
%   | else if ( interaction(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.048376341704703445;  // std dev = 5.200, 128.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=41 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), location(G, H) )
%   | | | then return 0.07677273824250541;  // std dev = 2.721, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.06136546975715921;  // std dev = 0.764, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04699413145775868;  // std dev = 5.083, 123.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
%   | | | else return 0.047270120896453466;  // std dev = 4.969, 116.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=38 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( location(D, F) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06394833327477743;  // std dev = 2.787, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G), complex(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.05325241047736466;  // std dev = 4.349, 88.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=30 */
%   | | | else return 0.058418424030635616;  // std dev = 5.452, 141.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=49 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(D, E) )
%   | | then return 0.026462002764049652;  // std dev = 5.231, 134.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(F, A), interaction(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.011560325706232994;  // std dev = 5.626, 152.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=48 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '23.757', 'seconds']
Parameter learned model CLL:-0.362961 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), location(C, D)', 'true': 'phenotype(B, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E)', 'false,true,true': 'phenotype(B, F)', 'false,false': 'location(A, G), phenotype(B, G)', 'false,false,false': 'location(A, H), function(I, H)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.658, 131, 67], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.477, 8, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.83, 44, 22]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'interaction(E, A), phenotype(B, E)', 'false,false': 'location(A, F)', 'false,false,true': 'location(F, G), phenotype(B, G)', 'false,false,false': 'interaction(H, A), enzyme(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.83, 197, 89], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.366, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'interaction(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.807, 137, 70], 'false,false,false': [3.922, 51, 22]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [5.217, 96, 38], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.06, 115, 54]}]
['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'phenotype(B, C)', 'true,false': 'complex(D, A), complex(D, C)', 'true,false,false': 'enzyme(C, E), complex(F, C)', 'false': 'complex(G, A)', 'false,false': 'interaction(A, H)', 'false,false,true': 'enzyme(H, I), interaction(H, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.755, 131, 70], 'false,true': [0.0, 0, 0], 'false,false,true,true': [1.732, 12, 4], 'false,false,true,false': [3.449, 35, 18], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'complex(E, A)', 'true,false': 'complex(F, C), enzyme(A, G)', 'true,false,false': 'phenotype(B, C)', 'false': 'complex(H, A)', 'false,false': 'complex(I, J)', 'false,false,true': 'phenotype(B, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.213, 29, 16], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.04, 55, 0], 'false,false,true,false': [6.661, 107, 76], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'interaction(F, A), phenotype(B, F)', 'false,false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.146, 24, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [5.347, 66, 51], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.2, 87, 41], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(D, A), phenotype(B, D)', 'false,false': 'interaction(E, A), enzyme(E, F)', 'false,false,true': 'interaction(G, E), location(G, H)', 'false,false,false': 'interaction(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [2.721, 20, 12], 'false,false,true,false': [0.764, 2, 1], 'false,false,false,true': [5.083, 82, 41], 'false,false,false,false': [4.969, 78, 38]}]
['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(B, C)', 'false': 'interaction(D, A), enzyme(D, E)', 'false,true': 'location(D, F)', 'false,true,true': 'phenotype(B, F)', 'false,false': 'location(A, G), complex(H, G)', 'false,false,false': 'enzyme(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.787, 23, 13], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.349, 58, 30], 'false,false,false,false': [5.452, 92, 49]}]
['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(D, E)', 'false': 'function(F, A), interaction(G, A)', 'false,false': 'complex(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.231, 90, 44], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.626, 104, 48]}]
{'': [0.22388021630445884, 0.21926125822229797], 'true': [nan, 0.22388021630445884], 'false': [0.1983471074380164, 0.22222222222222315], 'false,false': [nan, 0.22222222222222185], 'false,false,false': [nan, 0.22222222222222185], 'false,true': [0.1983471074380164, nan], 'false,true,true': [nan, 0.1983471074380164]}
{'': [nan, 0.21500270342897118], 'false': [nan, 0.2150027034289734], 'false,false': [0.21436227376032405, 0.2333603457434843], 'false,false,false': [nan, 0.23336034574348416], 'false,false,true': [nan, 0.21436227376032405]}
{'': [nan, 0.22070600111171576], 'false': [nan, 0.22070600111171385], 'false,false': [0.22384357823633208, 0.2107659453320721]}
{'': [nan, 0.21132332298725814], 'false': [0.20307478890012498, 0.21727811874575856], 'false,false': [nan, 0.21727811874575856], 'false,false,false': [nan, 0.21727811874575856]}
{'': [0.22700758645655336, 0.21710597369630746], 'true': [nan, 0.22700758645655336], 'true,false': [nan, 0.22700758645655336], 'true,false,false': [nan, 0.2270075864565534], 'false': [nan, 0.21710597369630746], 'false,false': [0.21710597369630746, nan], 'false,false,true': [0.18750000000000014, 0.22443786817847008]}
{'': [0.22939931380222722, 0.21723580297934114], 'true': [nan, 0.22939931380222722], 'true,false': [nan, 0.22939931380222722], 'true,false,false': [nan, 0.22939931380222722], 'false': [nan, 0.21723580297934156], 'false,false': [0.21723580297934156, nan], 'false,false,true': [2.926450610296818e-05, 0.24247843114462866]}
{'': [nan, 0.2185378159681936], 'false': [0.22400636126008883, 0.21124932679729513], 'false,true': [0.0008828366081061004, 0.24437347870085077], 'false,true,false': [nan, 0.24437347870085077], 'false,false': [nan, 0.21124932679729513], 'false,false,false': [0.21124932679729513, nan]}
{'': [nan, 0.21365828626295863], 'false': [nan, 0.213658286262959], 'false,false': [0.22825429872172712, 0.2114183176172994], 'false,false,true': [0.2313977041568997, 0.1945076040177026], 'false,false,false': [0.21008240747148832, 0.212834803829983]}
{'': [nan, 0.21285609029822752], 'false': [0.21575271567342236, 0.2123930532956601], 'false,true': [0.21575271567342236, nan], 'false,true,true': [nan, 0.21575271567342236], 'false,false': [nan, 0.21239305329565988], 'false,false,false': [0.21494963236598147, 0.2107872023136697]}
{'': [0.20424148140925316, 0.20820641525206043], 'false': [nan, 0.2082064152520605], 'false,false': [nan, 0.2082064152520605], 'true': [nan, 0.20424148140925316], 'true,false': [0.20424148140925316, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
5;false;phenotype(B, K).;true;true
6;;proteinclass(A, B) :- interaction(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 8.268
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C) )
%   | then return 0.1264416180263402;  // std dev = 0.443, 123.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=33 */
%   | else return 0.3126943896449669;  // std dev = 0.498, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( complex(A, H) )
%   | | then if ( interaction(I, F), interaction(J, I) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.21529179224236936;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( function(A, K), function(F, K) )
%   | | | then return 0.24703782398840124;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( interaction(L, A), complex(A, M) )
%   | | then return 0.10814893509951236;  // std dev = 0.433, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.221785298735876;  // std dev = 2.763, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.15973623668681391;  // std dev = 3.643, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return 0.10826397875985574;  // std dev = 0.447, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   else if ( complex(A, E), interaction(A, F) )
%   | then if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, G) )
%   | | | then return 0.593862995726759;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.17538300273310312;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(F, H), interaction(I, A) )
%   | | | then return 0.11596870331605848;  // std dev = 1.898, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.26465067229329653;  // std dev = 1.845, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( enzyme(A, L), complex(J, M) )
%   | | | then return 0.21043357437397572;  // std dev = 1.756, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.11935454428636044;  // std dev = 3.860, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return 0.12798760886149824;  // std dev = 1.689, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.19275435949285136;  // std dev = 4.472, 87.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( interaction(C, E), complex(A, F) )
%   | then return 0.1013312991347954;  // std dev = 0.460, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else if ( phenotype(C, G), location(A, H) )
%   | | then if ( interaction(C, C) )
%   | | | then return 0.3106152896220256;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.6399612383240351;  // std dev = 0.910, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(C, I) )
%   | | | then return 0.07998276881444234;  // std dev = 1.474, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.29883842524898396;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(J, A), enzyme(J, K) )
%   | then if ( interaction(A, J) )
%   | | then return 0.0771117531997989;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( complex(J, L), complex(A, L) )
%   | | | then return 0.32197999791715054;  // std dev = 1.418, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.12893064364982115;  // std dev = 1.667, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else return 0.11230474037271101;  // std dev = 0.463, 189.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(C, D), enzyme(A, E) )
%   | then return 0.026716819746602224;  // std dev = 0.444, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | else if ( complex(C, F), complex(A, G) )
%   | | then return 0.09793123721179244;  // std dev = 0.461, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | else return 0.1732978508802835;  // std dev = 0.488, 80.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=31 */
%   else if ( enzyme(A, H), location(A, I) )
%   | then if ( interaction(J, A), location(J, I) )
%   | | then return 0.5762039101233482;  // std dev = 0.911, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.3892559280421968;  // std dev = 1.083, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.21428148292611832;  // std dev = 1.847, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( interaction(A, L) )
%   | | then if ( complex(A, M), enzyme(L, N) )
%   | | | then return -0.028042728828102607;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.14544393840862344;  // std dev = 3.254, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | else return 0.30105566166354436;  // std dev = 0.500, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( enzyme(D, E), complex(C, F) )
%   | then if ( phenotype(D, G) )
%   | | then return 0.09974787207811583;  // std dev = 0.464, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.5576894954953114;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.267865400127044;  // std dev = 1.854, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( phenotype(A, J), location(D, K) )
%   | | then return 0.04451241045810972;  // std dev = 0.460, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | else if ( interaction(A, L), location(A, M) )
%   | | | then return 0.05535255710597862;  // std dev = 2.212, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.2190099666518784;  // std dev = 3.138, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
%   else if ( enzyme(A, N), interaction(P, A) )
%   | then return -0.03687620574294016;  // std dev = 0.450, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | else if ( interaction(A, Q), phenotype(A, R) )
%   | | then return -0.00914371994178507;  // std dev = 0.456, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | else return 0.1120061551731762;  // std dev = 0.479, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return 0.12226519947034038;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.005035234884745502;  // std dev = 1.897, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.08698722709222101;  // std dev = 1.605, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else return -0.02176439182980317;  // std dev = 0.429, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   else if ( phenotype(B, G) )
%   | then return -0.2736656847615151;  // std dev = 0.193, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( phenotype(A, J), complex(H, K) )
%   | | | then return 0.3707089235681578;  // std dev = 1.782, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.14402210330265353;  // std dev = 3.443, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return -0.01787084956260386;  // std dev = 1.866, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.12300506149420365;  // std dev = 5.080, 106.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=42 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.2467461644624966;  // std dev = 0.255, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.052144956344346335;  // std dev = 0.476, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   | | else return 0.1460118528795961;  // std dev = 0.489, 64.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=27 */
%   else if ( phenotype(A, F) )
%   | then if ( interaction(G, A), location(G, H) )
%   | | then if ( complex(A, I), complex(G, J) )
%   | | | then return 0.04175117523617143;  // std dev = 2.028, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.2962577159523188;  // std dev = 1.863, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else return -0.1499232797337115;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( complex(A, K) )
%   | | then return -0.03885942294875638;  // std dev = 0.434, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.12692868548327893;  // std dev = 2.378, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return -0.01300058943499111;  // std dev = 2.514, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( phenotype(D, E), complex(C, F) )
%   | then if ( phenotype(C, E), interaction(D, G) )
%   | | then return 0.035620723421742516;  // std dev = 0.442, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else return 0.219661392414615;  // std dev = 0.482, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return -0.07403280814285627;  // std dev = 0.405, 69.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=16 */
%   else if ( complex(A, H), phenotype(A, I) )
%   | then if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(L, J), phenotype(L, I) )
%   | | | then return 0.3855305365119128;  // std dev = 0.776, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.051704667829854715;  // std dev = 2.270, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else return 0.3179392350148459;  // std dev = 1.080, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( complex(A, M), interaction(N, A) )
%   | | then return -0.046754339223645185;  // std dev = 0.423, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( phenotype(A, P) )
%   | | | then return -0.021152315140736115;  // std dev = 2.835, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0.08803206640450688;  // std dev = 4.257, 81.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( complex(A, E), phenotype(D, F) )
%   | then if ( phenotype(A, F), interaction(D, D) )
%   | | then return 0.02506749377633369;  // std dev = 0.417, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(G, A), location(G, H) )
%   | | | then return 0.3904493499203572;  // std dev = 1.453, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.06545269273649944;  // std dev = 1.884, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( phenotype(A, I), interaction(D, C) )
%   | | then if ( phenotype(D, J) )
%   | | | then return 0.019487904801274446;  // std dev = 1.750, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.2900384418085982;  // std dev = 1.201, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.020599093998627336;  // std dev = 0.447, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   else if ( interaction(A, K), phenotype(A, L) )
%   | then return -0.1249891838858208;  // std dev = 0.410, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( interaction(M, A), phenotype(M, N) )
%   | | then return -0.013359996880862507;  // std dev = 0.455, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | | else return 0.022125481940800305;  // std dev = 0.449, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( complex(D, E), interaction(A, C) )
%   | then return -0.09380926093275627;  // std dev = 0.413, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | else if ( complex(A, F) )
%   | | then return 0.09537760051454977;  // std dev = 0.477, 64.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=26 */
%   | | else return -0.004860486734583112;  // std dev = 0.452, 76.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
%   else if ( interaction(G, A) )
%   | then if ( location(A, H), location(G, H) )
%   | | then return -0.039933662057202814;  // std dev = 0.457, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(G, I), interaction(I, J) )
%   | | | then return 0.4962157385867556;  // std dev = 0.953, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.08170734881257949;  // std dev = 1.070, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( complex(A, K), enzyme(A, L) )
%   | | then return -0.007467249530864667;  // std dev = 0.459, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.31084847357853984;  // std dev = 0.989, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.03609280548827352;  // std dev = 3.026, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.344', 'seconds']
Refined model CLL: -0.40004


******************************************
Best model found
******************************************
Results 

CLL : -0.355091 

AUC ROC : 0.682504 

AUC PR : 0.011086 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.268 

Total Inference Time : 3.2580831050872803 

Total revision time: 25.85213883781433
Best scored revision CLL: -0.362961


Results 

CLL : -0.355091 

AUC ROC : 0.682504 

AUC PR : 0.011086 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 25.905872663497924 

Total Inference Time : 3.2580831050872803 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.977
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18234984834152285;  // std dev = 6.927, 219.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=71 */
%   else if ( interaction(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2635543405049177;  // std dev = 2.986, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), phenotype(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F) )
%   | | then if ( location(F, G), phenotype(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1620067754166783;  // std dev = 7.460, 252.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=83 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.1678041353335796;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.0772686973274477;  // std dev = 1.227, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.1307952502700651;  // std dev = 6.950, 222.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=71 */
%   | | else return 0.09325797432432407;  // std dev = 3.253, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.09079483786919504;  // std dev = 4.424, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16120290079035915;  // std dev = 6.029, 156.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=58 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(D, A), complex(D, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(C, E), complex(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08008525923570896;  // std dev = 6.979, 227.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=71 */
%   else if ( complex(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( enzyme(H, I), interaction(H, J) )
%   | | | then return 0.18438827566509955;  // std dev = 1.853, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.07935111909455397;  // std dev = 2.474, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, C), enzyme(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(B, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03626573952259452;  // std dev = 4.118, 82.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=24 */
%   else if ( complex(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(I, J) )
%   | | then if ( phenotype(B, K) )
%   | | | then return -0.24916282504838855;  // std dev = 0.053, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0.17611270501378692;  // std dev = 5.971, 146.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=62 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.2348944069488517;  // std dev = 0.163, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19844544766528552;  // std dev = 5.232, 110.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=52 */
%   | else if ( interaction(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.05885299533535001;  // std dev = 4.655, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), location(G, H) )
%   | | | then return 0.042751282615236134;  // std dev = 2.986, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return 0.013994519377005445;  // std dev = 1.408, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.06413649916110714;  // std dev = 4.962, 123.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=42 */
%   | | | else return 0.03391805783510382;  // std dev = 4.229, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( location(D, F) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04277059502094995;  // std dev = 3.262, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G), complex(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.04019277878769296;  // std dev = 3.755, 67.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
%   | | | else return 0.021508104002373893;  // std dev = 5.436, 149.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=47 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(D, E) )
%   | | then return 0.016304243250555538;  // std dev = 5.437, 147.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(F, A), interaction(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.050940531324962686;  // std dev = 4.901, 115.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=39 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '19.655', 'seconds']
Parameter learned model CLL:-0.347962 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), location(C, D)', 'true': 'phenotype(B, C)', 'false': 'interaction(E, A)', 'false,false': 'location(A, F), phenotype(B, F)', 'false,false,false': 'location(A, G), function(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.927, 148, 71], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.986, 22, 15]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'interaction(E, A), phenotype(B, E)', 'false,false': 'location(A, F)', 'false,false,true': 'location(F, G), phenotype(B, G)', 'false,false,false': 'interaction(H, A), enzyme(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.46, 169, 83], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [1.227, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'interaction(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.95, 151, 71], 'false,false,false': [3.253, 36, 15]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.424, 65, 28], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.029, 98, 58]}]
['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'phenotype(B, C)', 'true,false': 'complex(D, A), complex(D, C)', 'true,false,false': 'enzyme(C, E), complex(F, C)', 'false': 'complex(G, A)', 'false,false': 'interaction(A, H)', 'false,false,true': 'enzyme(H, I), interaction(H, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.979, 156, 71], 'false,true': [0.0, 0, 0], 'false,false,true,true': [1.853, 8, 6], 'false,false,true,false': [2.474, 19, 9], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'complex(E, A)', 'true,false': 'complex(F, C), enzyme(A, G)', 'true,false,false': 'phenotype(B, C)', 'false': 'complex(H, A)', 'false,false': 'complex(I, J)', 'false,false,true': 'phenotype(B, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.118, 58, 24], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.053, 47, 0], 'false,false,true,false': [5.971, 84, 62], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'interaction(F, A), phenotype(B, F)', 'false,false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.163, 31, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [5.232, 58, 52], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.655, 74, 34], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(D, A), phenotype(B, D)', 'false,false': 'interaction(E, A), enzyme(E, F)', 'false,false,true': 'interaction(G, E), location(G, H)', 'false,false,false': 'interaction(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [2.986, 30, 14], 'false,false,true,false': [1.408, 8, 3], 'false,false,false,true': [4.962, 81, 42], 'false,false,false,false': [4.229, 59, 27]}]
['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(B, C)', 'false': 'interaction(D, A), enzyme(D, E)', 'false,true': 'location(D, F)', 'false,true,true': 'phenotype(B, F)', 'false,false': 'location(A, G), complex(H, G)', 'false,false,false': 'enzyme(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.262, 36, 17], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.755, 45, 22], 'false,false,false,false': [5.436, 102, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(D, E)', 'false': 'function(F, A), interaction(G, A)', 'false,false': 'complex(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.437, 100, 47], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.901, 76, 39]}]
{'': [0.21909468109505653, 0.24105186267348383], 'false': [nan, 0.24105186267348383], 'false,false': [nan, 0.2410518626734839], 'false,false,false': [nan, 0.2410518626734839], 'true': [nan, 0.21909468109505653]}
{'': [nan, 0.220063527666134], 'false': [nan, 0.2200635276661337], 'false,false': [0.22082596877917526, 0.1991419056177831], 'false,false,true': [nan, 0.22082596877917526], 'false,false,false': [0.2222222222222222, 0.18825133265431063]}
{'': [nan, 0.21591079625719023], 'false': [nan, 0.21591079625719017], 'false,false': [0.21757216233974494, 0.2075331489182186]}
{'': [nan, 0.22575389149498837], 'false': [0.21042288982208146, 0.2330420071672763], 'false,false': [nan, 0.2330420071672763], 'false,false,false': [nan, 0.2330420071672763]}
{'': [0.21454589007082633, 0.22987873416246676], 'false': [nan, 0.22987873416246676], 'false,false': [0.22987873416246676, nan], 'false,false,true': [0.24517984539385046, 0.21855057712663337], 'true': [nan, 0.21454589007082633], 'true,false': [nan, 0.21454589007082633], 'true,false,false': [nan, 0.21454589007082658]}
{'': [0.20675742787850457, 0.21809280022596034], 'false': [nan, 0.21809280022595887], 'false,false': [0.21809280022595887, nan], 'false,false,true': [6.0136962887958726e-05, 0.244237946557299], 'true': [nan, 0.20675742787850457], 'true,false': [nan, 0.20675742787850457], 'true,false,false': [nan, 0.20675742787850457]}
{'': [nan, 0.21578717668396333], 'false': [0.22656198792413593, 0.20060781145906426], 'false,true': [0.0008602836088023251, 0.2488831133036683], 'false,true,false': [nan, 0.2488831133036683], 'false,false': [nan, 0.20060781145906426], 'false,false,false': [0.20060781145906426, nan]}
{'': [nan, 0.20252970836198053], 'false': [nan, 0.20252970836198056], 'false,false': [0.1983220526142936, 0.20359195404616362], 'false,false,false': [0.2001807220846542, 0.207933402524377], 'false,false,true': [0.20266485455882438, 0.18028928369061825]}
{'': [nan, 0.20191833730087697], 'false': [0.2007248334893091, 0.20216405494478462], 'false,false': [nan, 0.20216405494478473], 'false,false,false': [0.21040850866032548, 0.19834852642442005], 'false,true': [0.2007248334893091, nan], 'false,true,true': [nan, 0.2007248334893091]}
{'': [0.20112013490912484, 0.20883235377921702], 'false': [nan, 0.20883235377921694], 'false,false': [nan, 0.20883235377921694], 'true': [nan, 0.20112013490912484], 'true,false': [0.20112013490912484, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
5;false;phenotype(B, K).;true;true
6;;proteinclass(A, B) :- interaction(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 7.793
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( interaction(A, E), enzyme(A, F) )
%   | then if ( phenotype(C, D), complex(C, G) )
%   | | then return 0.19148226843284558;  // std dev = 0.471, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(C, C) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0.1556695962565368;  // std dev = 0.457, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   else if ( interaction(A, H), enzyme(A, I) )
%   | then return 0.13087620782678508;  // std dev = 0.445, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2956489350995123;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.23996711691769368;  // std dev = 3.603, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.051506012460901585;  // std dev = 0.419, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else return 0.09153174729268035;  // std dev = 0.443, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( complex(A, F), enzyme(E, G) )
%   | | then return 0.08812331524632;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(E, H), complex(H, I) )
%   | | | then return 0.5807777703811488;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.23615618564041138;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( phenotype(J, L) )
%   | | | then return 0.06962466226938227;  // std dev = 3.014, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | | else return 0.22610072237526233;  // std dev = 1.899, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( enzyme(A, M), location(A, N) )
%   | | | then return 0.12734789453183426;  // std dev = 3.657, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | | else return 0.19255954823411492;  // std dev = 4.726, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( interaction(C, E), interaction(E, C) )
%   | then return 0.09324635498708408;  // std dev = 0.455, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | else return -0.05689370747383993;  // std dev = 0.356, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(A, H), enzyme(H, I) )
%   | | then return 0.4647924533752857;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( location(A, J), location(F, J) )
%   | | | then return 0.26481627531110913;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.11306884418190172;  // std dev = 1.666, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( enzyme(A, K), interaction(L, A) )
%   | | then if ( interaction(M, L), interaction(L, M) )
%   | | | then return 0.3037184171930397;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.1348248031204041;  // std dev = 2.847, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.07945103648530442;  // std dev = 4.010, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   | | | else return 0.13510378108502114;  // std dev = 3.255, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), complex(C, F) )
%   | then return 0.12197997092703229;  // std dev = 0.470, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else return 0.01970149803290992;  // std dev = 0.440, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   else if ( phenotype(A, G), enzyme(A, H) )
%   | then if ( interaction(A, I), phenotype(I, G) )
%   | | then return 0.06159675025584567;  // std dev = 0.446, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( enzyme(J, H), complex(J, K) )
%   | | | then return 0.41736693924021184;  // std dev = 1.348, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.15523159256751198;  // std dev = 1.968, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( interaction(L, A), interaction(L, L) )
%   | | then if ( interaction(A, M), enzyme(M, N) )
%   | | | then return -0.028713591084962728;  // std dev = 1.246, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.1979778514497325;  // std dev = 2.658, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else if ( interaction(A, P), enzyme(P, Q) )
%   | | | then return 0.15049003311609765;  // std dev = 2.886, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0.09276064219979543;  // std dev = 4.403, 92.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=28 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, E), enzyme(C, F) )
%   | then return -0.018755911582935898;  // std dev = 0.442, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then if ( interaction(G, C) )
%   | | | then return 0.21424413266526499;  // std dev = 1.649, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.7413584154602745;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(C, H), phenotype(A, I) )
%   | | | then return 0.3876481385666799;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.14154962693522297;  // std dev = 4.721, 96.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=36 */
%   else if ( interaction(A, J), enzyme(A, K) )
%   | then return -0.029287823868744175;  // std dev = 0.420, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else if ( phenotype(A, L), interaction(M, A) )
%   | | then return 0.03434045625463053;  // std dev = 0.433, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( location(A, N) )
%   | | | then return 0.13754684979289644;  // std dev = 3.044, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | | else return -0.04239217253992118;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(A, E), interaction(E, A) )
%   | then if ( complex(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.2081455409157778;  // std dev = 1.015, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.06471609612711911;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.6504125839709487;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.021468453532635975;  // std dev = 0.452, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   else if ( phenotype(B, H) )
%   | then return -0.256250646018082;  // std dev = 0.253, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.4141675829953141;  // std dev = 1.447, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.16676680607626107;  // std dev = 4.208, 71.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=31 */
%   | | else if ( location(A, L) )
%   | | | then return 0.07834038605795958;  // std dev = 3.709, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
%   | | | else return 0.2485656653810101;  // std dev = 1.232, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.2839785206791182;  // std dev = 0.088, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.22113405455628576;  // std dev = 1.678, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.018375821995384536;  // std dev = 2.199, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.1278489740119813;  // std dev = 2.693, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.34748083647905303;  // std dev = 3.167, 42.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( interaction(J, H), interaction(J, A) )
%   | | then return -0.06486637816797114;  // std dev = 0.419, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else return 0.06977104761394101;  // std dev = 0.456, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
%   | else if ( complex(A, K) )
%   | | then return -0.039480566448324136;  // std dev = 0.881, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.4226605313793323;  // std dev = 1.049, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then if ( complex(E, F) )
%   | | then return -0.13844393549103357;  // std dev = 0.428, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return -0.21430388109021417;  // std dev = 0.791, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.027446530154174274;  // std dev = 0.425, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   else if ( interaction(G, A), interaction(A, G) )
%   | then if ( complex(A, H) )
%   | | then return 0.07280925342359786;  // std dev = 1.031, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.20624328945373346;  // std dev = 0.393, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( phenotype(I, K) )
%   | | | then return 0.03267805391421487;  // std dev = 4.111, 80.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
%   | | | else return 0.21383154715592465;  // std dev = 1.762, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.1322777114046979;  // std dev = 1.727, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.017663135574967355;  // std dev = 4.069, 91.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=25 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.5794382354392994;  // std dev = 0.148, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(C, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.3500357842544492;  // std dev = 0.933, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.20449204410084468;  // std dev = 1.362, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.12774983902668602;  // std dev = 1.265, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.08039601083287576;  // std dev = 1.457, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   else if ( complex(A, I), interaction(J, A) )
%   | then if ( interaction(A, J), enzyme(A, K) )
%   | | then return -0.30252567658893686;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, L), phenotype(J, M) )
%   | | | then return 0.3413081250955684;  // std dev = 1.334, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.04630959446760406;  // std dev = 2.456, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | else return -0.0165512203695542;  // std dev = 0.435, 187.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=54 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), interaction(E, E) )
%   | then return -0.21604478109105238;  // std dev = 0.429, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(A, F) )
%   | | then if ( enzyme(F, D) )
%   | | | then return 0.10425653456832384;  // std dev = 1.069, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.003620931068848733;  // std dev = 1.979, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( location(A, G), location(C, G) )
%   | | | then return -0.10107118590509696;  // std dev = 1.784, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.015676662551978648;  // std dev = 1.159, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( phenotype(A, H), complex(A, I) )
%   | then return -0.04471524331343785;  // std dev = 0.433, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | else if ( interaction(J, A) )
%   | | then if ( complex(A, K), enzyme(A, L) )
%   | | | then return 0.42589279890586107;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.0489794231026589;  // std dev = 5.024, 122.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=43 */
%   | | else return -0.036321006899164565;  // std dev = 0.412, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.123', 'seconds']
Refined model CLL: -0.387718


******************************************
Best model found
******************************************
Results 

CLL : -0.354077 

AUC ROC : 0.66412 

AUC PR : 0.010285 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.793 

Total Inference Time : 3.4842212200164795 

Total revision time: 24.510532398223877
Best scored revision CLL: -0.347962


Results 

CLL : -0.354077 

AUC ROC : 0.66412 

AUC PR : 0.010285 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 24.56426622390747 

Total Inference Time : 3.4842212200164795 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 5.851
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( function(C, A), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19021000380180247;  // std dev = 7.623, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(F, G), location(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19897362596672824;  // std dev = 4.644, 93.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=34 */
%   | | else if ( function(H, A), phenotype(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1526593365510008;  // std dev = 6.007, 166.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( function(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15215004008873356;  // std dev = 7.556, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(C, D), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then return 0.14555001703107834;  // std dev = 5.178, 116.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=42 */
%   | else if ( interaction(E, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11448521238056052;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( function(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, E) )
%   | | then if ( phenotype(E, F), function(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09425233021376862;  // std dev = 7.615, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( function(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( location(B, H) )
%   | | | then return -0.2568729864911616;  // std dev = 0.057, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | | else return 0.27993399491278775;  // std dev = 6.352, 162.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=87 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(A, D) )
%   | then if ( location(B, E) )
%   | | then return -0.21027912798367357;  // std dev = 0.051, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | else if ( location(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26229828537144334;  // std dev = 6.076, 151.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), location(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(E, A), phenotype(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return 0.02207051106755217;  // std dev = 6.938, 278.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=87 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(C, A), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), phenotype(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.02536454501085945;  // std dev = 4.785, 127.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=42 */
%   | | | else return 0.015006810129013925;  // std dev = 5.026, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( function(A, C), function(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), function(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.003999880257260989;  // std dev = 7.023, 281.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '9.784', 'seconds']
Parameter learned model CLL:-0.320428 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'function(C, A), enzyme(C, D)', 'false': 'function(E, A)', 'false,false': 'enzyme(A, F), location(B, F)', 'false,false,false': 'enzyme(A, G), interaction(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.623, 175, 87]}]
['proteinclass(A, B)', {'': 'enzyme(A, C), phenotype(C, D)', 'false': 'function(E, A), location(B, E)', 'false,false': 'enzyme(A, F)', 'false,false,true': 'enzyme(F, G), location(B, G)', 'false,false,false': 'function(H, A), phenotype(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.644, 59, 34], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.007, 113, 53]}]
['proteinclass(A, B)', {'': 'function(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'function(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.556, 166, 87]}]
['proteinclass(A, B)', {'': 'phenotype(C, D), location(B, C)', 'false': 'phenotype(A, D)', 'false,false': 'interaction(E, F), location(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [5.178, 74, 42], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.487, 91, 45]}]
['proteinclass(A, B)', {'': 'function(C, A)', 'false': 'complex(D, A)', 'false,false': 'function(A, E)', 'false,false,true': 'phenotype(E, F), function(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.615, 174, 87], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(A, C), phenotype(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'location(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.057, 116, 0], 'false,false,true,false': [6.352, 75, 87], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(A, D)', 'false,true': 'location(B, E)', 'false,true,false': 'location(B, D)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.051, 117, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.076, 64, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(D, A), location(B, D)', 'false,false': 'function(E, A), phenotype(E, F)', 'false,false,false': 'function(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.938, 191, 87], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(C, A), location(B, C)', 'false': 'function(D, A), phenotype(D, E)', 'false,false': 'enzyme(A, F), complex(G, F)', 'false,false,false': 'phenotype(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.785, 85, 42], 'false,false,false,false': [5.026, 100, 45]}]
['proteinclass(A, B)', {'': 'function(A, C), function(C, D)', 'false': 'interaction(E, A), function(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.023, 194, 87]}]
{'': [nan, 0.22179651535458392], 'false': [nan, 0.22179651535458392], 'false,false': [nan, 0.2217965153545839], 'false,false,false': [nan, 0.2217965153545839]}
{'': [nan, 0.22307359759097367], 'false': [nan, 0.22307359759097306], 'false,false': [0.2319343276679385, 0.21733923646393044], 'false,false,true': [nan, 0.2319343276679385], 'false,false,false': [nan, 0.21733923646393044]}
{'': [nan, 0.22563933900918698], 'false': [nan, 0.22563933900918698], 'false,false': [nan, 0.22563933900918698]}
{'': [nan, 0.22609633928766318], 'false': [0.23112810519816718, 0.22136032243554626], 'false,false': [nan, 0.22136032243554626], 'false,false,false': [nan, 0.22136032243554626]}
{'': [nan, 0.22218571147167332], 'false': [nan, 0.22218571147167332], 'false,false': [0.22218571147167332, nan], 'false,false,true': [nan, 0.22218571147167332]}
{'': [nan, 0.2152058693244263], 'false': [nan, 0.2152058693244263], 'false,false': [0.2152058693244263, nan], 'false,false,true': [2.7999901998095763e-05, 0.24904370136273152]}
{'': [nan, 0.19268619824140457], 'false': [0.19268619824140457, nan], 'false,true': [2.2221231178372597e-05, 0.2444705945090356], 'false,true,false': [nan, 0.2444705945090356]}
{'': [nan, 0.1731600678258519], 'false': [nan, 0.1731600678258519], 'false,false': [nan, 0.1731600678258519], 'false,false,false': [0.1731600678258519, nan]}
{'': [nan, 0.17708705145015793], 'false': [nan, 0.17708705145015793], 'false,false': [nan, 0.17708705145015802], 'false,false,false': [0.1803005892898392, 0.17422234400754463]}
{'': [nan, 0.1755002389137306], 'false': [nan, 0.1755002389137305], 'false,false': [nan, 0.1755002389137306]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- location(B, H).;true;true
6;;proteinclass(A, B) :- location(B, E).;true;true


Refining candidate
***************************
Model training time 37.634
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( complex(C, E) )
%   | | then return 0.12130682983635446;  // std dev = 0.440, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( phenotype(C, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( complex(A, G), enzyme(A, H) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(C, I), location(C, J) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5248156017661789;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( interaction(A, K), complex(K, L) )
%   | then if ( interaction(K, M), complex(M, N) )
%   | | then return 0.13314893509951237;  // std dev = 0.447, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else return 0.2956489350995123;  // std dev = 0.496, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else return 0.1420199028414467;  // std dev = 0.451, 155.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=44 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( enzyme(A, E), interaction(A, C) )
%   | then return 0.5762738858828562;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, D), interaction(A, C) )
%   | | then return 0.04120003282874903;  // std dev = 0.405, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | else return 0.1564336177357165;  // std dev = 0.468, 145.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=47 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( complex(G, H) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.3411555346520432;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1013584224762941;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.8306264450400279;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then return 0.10808038290585681;  // std dev = 0.449, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return 0.0899666687525078;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.23035729904150454;  // std dev = 3.311, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(A, A), location(A, E) )
%   | then return -0.10643461577610583;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( phenotype(C, F) )
%   | | then if ( complex(C, G), interaction(H, C) )
%   | | | then return 0.09163992287367863;  // std dev = 3.148, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.300738469802782;  // std dev = 1.884, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return 0.025023678724150768;  // std dev = 0.423, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   else if ( interaction(I, A), interaction(I, I) )
%   | then return 0.09448901930052377;  // std dev = 0.455, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( complex(K, L), interaction(K, K) )
%   | | | then return 0.11882109945948753;  // std dev = 2.762, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.20955930764141417;  // std dev = 3.719, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.14198009999628713;  // std dev = 2.001, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.0565306499289826;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( location(D, C) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.04885354749966372;  // std dev = 2.987, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return 0.16896242346087212;  // std dev = 1.689, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return -0.03243080980522645;  // std dev = 0.410, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.3322770318388314;  // std dev = 1.379, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.10393762735916441;  // std dev = 4.055, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return 0.0012604559903256272;  // std dev = 2.460, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.08804405380338635;  // std dev = 4.097, 79.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=24 */
%   else if ( interaction(A, K), enzyme(K, L) )
%   | then return 0.43010224914216016;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.12272199187369136;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(C, E), interaction(F, A) )
%   | then if ( phenotype(A, G), complex(D, H) )
%   | | then if ( complex(A, I), complex(C, H) )
%   | | | then return 0.13047433404292;  // std dev = 2.144, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.4024461538081975;  // std dev = 1.353, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.019693662542340475;  // std dev = 0.461, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else if ( complex(D, J), interaction(D, C) )
%   | | then return 0.09539259163687559;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.5607220530556777;  // std dev = 0.870, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, K), complex(A, L) )
%   | then return 0.04143875854247847;  // std dev = 0.453, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | else if ( interaction(M, A), complex(M, N) )
%   | | then if ( interaction(P, M), interaction(M, P) )
%   | | | then return 0.09272965074283863;  // std dev = 3.501, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | | else return 0.20335349590757323;  // std dev = 1.989, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else return 0.07545533224624476;  // std dev = 0.461, 88.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=27 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.2601165649689769;  // std dev = 0.476, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), enzyme(F, E) )
%   | | then if ( interaction(F, G), phenotype(G, H) )
%   | | | then return 0.08313681891938289;  // std dev = 1.749, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.10097410759611312;  // std dev = 1.228, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( complex(D, I), phenotype(A, J) )
%   | | | then return 0.04817627097783453;  // std dev = 1.465, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.2790366011458992;  // std dev = 2.564, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.11138956625029904;  // std dev = 1.637, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.28699293237078266;  // std dev = 3.436, 49.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=27 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.2993094841637266;  // std dev = 2.395, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | | else return 0.516972021313094;  // std dev = 2.132, 25.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.20633916316497222;  // std dev = 0.408, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), interaction(A, G) )
%   | | then return 0.5743854648777144;  // std dev = 0.889, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.0163515796688391;  // std dev = 1.397, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.35345180544494514;  // std dev = 2.845, 35.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=23 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( location(J, L), location(A, L) )
%   | | | then return 0.24003014088299807;  // std dev = 1.979, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.5102091864295487;  // std dev = 0.939, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.26163843721656516;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.13835101658917107;  // std dev = 4.585, 85.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( location(A, D), interaction(A, A) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.08830371076977633;  // std dev = 0.941, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2490415995569349;  // std dev = 1.030, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, F), interaction(C, C) )
%   | | | then return 0.06684391743442553;  // std dev = 1.365, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.08779776866318618;  // std dev = 2.622, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | else if ( complex(A, G) )
%   | | then return -0.002773392267903597;  // std dev = 0.401, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | | else if ( enzyme(A, H), enzyme(C, I) )
%   | | | then return -0.05474518620079854;  // std dev = 1.545, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.07202769657635961;  // std dev = 4.252, 96.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=35 */
%   else if ( interaction(A, J), interaction(J, K) )
%   | then return 0.04337089276243129;  // std dev = 1.045, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.4631175289339655;  // std dev = 0.731, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(A, E), interaction(E, F) )
%   | then return 0.025104972765352573;  // std dev = 0.407, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | else if ( phenotype(A, G) )
%   | | then return 0.22425919320936816;  // std dev = 0.416, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | else if ( complex(D, H) )
%   | | | then return 0.03131976165197896;  // std dev = 1.663, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.18354089534379073;  // std dev = 1.033, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, I), interaction(I, I) )
%   | then if ( interaction(I, A), enzyme(A, J) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.11444976804276838;  // std dev = 1.371, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.22946799744132101;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.002686893131392071;  // std dev = 0.420, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( interaction(M, A), interaction(N, M) )
%   | | then return 0.05352965494177331;  // std dev = 0.426, 113.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=40 */
%   | | else return -0.061863236605803715;  // std dev = 0.397, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(D, D) )
%   | then if ( enzyme(A, E), interaction(F, A) )
%   | | then if ( enzyme(D, G) )
%   | | | then return 0.07292339770006992;  // std dev = 0.984, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.06976126262000709;  // std dev = 0.730, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, H), enzyme(H, I) )
%   | | | then return 0.30315069711530296;  // std dev = 1.526, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return -0.011469698460605013;  // std dev = 0.778, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( complex(D, J), phenotype(D, K) )
%   | | then return -0.06713450625036016;  // std dev = 0.390, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.37877447108023077;  // std dev = 0.617, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1297437260769775;  // std dev = 1.379, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( complex(A, M), phenotype(A, N) )
%   | then return -0.08492357504044022;  // std dev = 0.392, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | else return 0.022910514988272162;  // std dev = 0.422, 158.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=54 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.752', 'seconds']
Refined model CLL: -0.357122


******************************************
Best model found
******************************************
Results 

CLL : -0.318448 

AUC ROC : 0.804438 

AUC PR : 0.017766 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 37.634 

Total Inference Time : 14.815883874893188 

Total revision time: 70.51885925292969
Best scored revision CLL: -0.320428


Results 

CLL : -0.318448 

AUC ROC : 0.804438 

AUC PR : 0.017766 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 70.67442856788635 

Total Inference Time : 14.815883874893188 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.679
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( function(C, A), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20597502205603466;  // std dev = 8.236, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(F, G), location(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13393392950441219;  // std dev = 4.797, 109.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=33 */
%   | | else if ( function(H, A), phenotype(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16767452692168833;  // std dev = 6.864, 211.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( function(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15584980478234386;  // std dev = 8.235, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(C, D), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then return 0.15491662678459497;  // std dev = 6.338, 172.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=64 */
%   | else if ( interaction(E, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11038500428859097;  // std dev = 5.185, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( function(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, E) )
%   | | then if ( phenotype(E, F), function(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10162029003061789;  // std dev = 8.264, 303.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=104 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( function(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( location(B, H) )
%   | | | then return -0.26087515881081186;  // std dev = 0.060, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | | else return 0.3015261413860571;  // std dev = 6.745, 185.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=104 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(A, D) )
%   | then if ( location(B, E) )
%   | | then return -0.2132243771515554;  // std dev = 0.050, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | else if ( location(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2334014940326941;  // std dev = 6.791, 187.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), location(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(E, A), phenotype(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return 0.012327374400550485;  // std dev = 7.670, 332.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=104 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(C, A), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), phenotype(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.030547767263089158;  // std dev = 5.890, 187.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=64 */
%   | | | else return 0.023398837418239317;  // std dev = 4.692, 128.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=40 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( function(A, C), function(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), function(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.02227875751332147;  // std dev = 7.467, 324.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '7.763', 'seconds']
Parameter learned model CLL:-0.328454 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'function(C, A), enzyme(C, D)', 'false': 'function(E, A)', 'false,false': 'enzyme(A, F), location(B, F)', 'false,false,false': 'enzyme(A, G), interaction(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.236, 195, 104]}]
['proteinclass(A, B)', {'': 'enzyme(A, C), phenotype(C, D)', 'false': 'function(E, A), location(B, E)', 'false,false': 'enzyme(A, F)', 'false,false,true': 'enzyme(F, G), location(B, G)', 'false,false,false': 'function(H, A), phenotype(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.797, 76, 33], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.864, 140, 71]}]
['proteinclass(A, B)', {'': 'function(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'function(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.235, 195, 104]}]
['proteinclass(A, B)', {'': 'phenotype(C, D), location(B, C)', 'false': 'phenotype(A, D)', 'false,false': 'interaction(E, F), location(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [6.338, 108, 64], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.185, 82, 40]}]
['proteinclass(A, B)', {'': 'function(C, A)', 'false': 'complex(D, A)', 'false,false': 'function(A, E)', 'false,false,true': 'phenotype(E, F), function(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [8.264, 199, 104], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(A, C), phenotype(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'location(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.06, 140, 0], 'false,false,true,false': [6.745, 81, 104], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(A, D)', 'false,true': 'location(B, E)', 'false,true,false': 'location(B, D)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.05, 129, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.791, 83, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(D, A), location(B, D)', 'false,false': 'function(E, A), phenotype(E, F)', 'false,false,false': 'function(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.67, 228, 104], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(C, A), location(B, C)', 'false': 'function(D, A), phenotype(D, E)', 'false,false': 'enzyme(A, F), complex(G, F)', 'false,false,false': 'phenotype(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.89, 123, 64], 'false,false,false,false': [4.692, 88, 40]}]
['proteinclass(A, B)', {'': 'function(A, C), function(C, D)', 'false': 'interaction(E, A), function(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.467, 220, 104]}]
{'': [nan, 0.22684310018903814], 'false': [nan, 0.22684310018903814], 'false,false': [nan, 0.22684310018903633], 'false,false,false': [nan, 0.22684310018903633]}
{'': [nan, 0.219374999999999], 'false': [nan, 0.21937500000000298], 'false,false': [0.2110933423112535, 0.22326542530491073], 'false,false,false': [nan, 0.22326542530491073], 'false,false,true': [nan, 0.2110933423112535]}
{'': [nan, 0.2268232788965048], 'false': [nan, 0.2268232788965048], 'false,false': [nan, 0.2268232788965048]}
{'': [nan, 0.22857832400507885], 'false': [0.23355907744528223, 0.22039611745990983], 'false,false': [nan, 0.22039611745990983], 'false,false,false': [nan, 0.22039611745990983]}
{'': [nan, 0.2253689198239536], 'false': [nan, 0.2253689198239536], 'false,false': [0.2253689198239536, nan], 'false,false,true': [nan, 0.2253689198239536]}
{'': [nan, 0.2175642845568275], 'false': [nan, 0.2175642845568275], 'false,false': [0.2175642845568275, nan], 'false,false,true': [2.5548195548198904e-05, 0.24593794347812747]}
{'': [nan, 0.1941466448425453], 'false': [0.1941466448425453, nan], 'false,true': [1.9171497251106352e-05, 0.2466323432064133], 'false,true,false': [nan, 0.2466323432064133]}
{'': [nan, 0.17720844308064682], 'false': [nan, 0.17720844308064682], 'false,false': [nan, 0.17720844308064682], 'false,false,false': [0.17720844308064682, nan]}
{'': [nan, 0.18003649387251983], 'false': [nan, 0.18003649387251983], 'false,false': [nan, 0.1800364938725191], 'false,false,false': [0.18552404217827115, 0.17198918894097404]}
{'': [nan, 0.1720725664295139], 'false': [nan, 0.17207256642951396], 'false,false': [nan, 0.1720725664295139]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- location(B, H).;true;true
6;;proteinclass(A, B) :- location(B, E).;true;true


Refining candidate
***************************
Model training time 18.342
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( phenotype(A, E) )
%   | then return 0.1956489350995111;  // std dev = 0.473, 80.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
%   | else return 0.07481560176617903;  // std dev = 0.412, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( complex(G, H) )
%   | | then if ( interaction(G, F), interaction(F, I) )
%   | | | then return 0.26555634250691973;  // std dev = 2.553, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.15444523139580862;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.15814893509951217;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.15639454913460007;  // std dev = 3.454, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | | else return 0.20430278125335852;  // std dev = 3.431, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), interaction(A, E) )
%   | then if ( interaction(E, E) )
%   | | then return 0.6326256282615583;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(E, F), enzyme(F, G) )
%   | | | then return 0.287171082807013;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.8326256282615582;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(H, D), interaction(H, H) )
%   | | then return 0.33262562826155834;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(I, C), interaction(I, A) )
%   | | | then return 0.23262562826155847;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.1183399139758441;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   else if ( interaction(J, A), enzyme(A, K) )
%   | then if ( phenotype(A, L), enzyme(J, M) )
%   | | then return 0.40325478759444633;  // std dev = 0.493, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else return 0.166877619716882;  // std dev = 0.472, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | else return 0.13198686746057528;  // std dev = 0.456, 182.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then return 0.019323244239924695;  // std dev = 0.445, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | else return 0.20633092987919183;  // std dev = 0.488, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( complex(F, G), enzyme(A, H) )
%   | | then if ( phenotype(F, I) )
%   | | | then return 0.2898201353328395;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4158293989421908;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.08249606560885747;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.19158964897488612;  // std dev = 1.934, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( phenotype(A, K), interaction(L, A) )
%   | | then return 0.10260505452500013;  // std dev = 0.456, 115.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | else if ( interaction(A, M), location(A, N) )
%   | | | then return 0.21130079429640217;  // std dev = 2.879, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.1242950696951784;  // std dev = 4.055, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( enzyme(C, E), complex(A, F) )
%   | then return 0.030078027114994146;  // std dev = 0.436, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | else return 0.11610927257136958;  // std dev = 0.480, 103.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=36 */
%   else if ( enzyme(A, G), location(A, H) )
%   | then if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I) )
%   | | | then return 0.46404494160153764;  // std dev = 1.229, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.08663582074927274;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( location(L, H), interaction(L, A) )
%   | | | then return 0.2294904094515497;  // std dev = 2.100, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.08539480221856696;  // std dev = 1.447, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( phenotype(A, M), complex(A, N) )
%   | | then return -0.04902564502563498;  // std dev = 0.372, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( interaction(P, A), interaction(Q, P) )
%   | | | then return 0.12627225769682177;  // std dev = 4.633, 97.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=32 */
%   | | | else return 0.2923937682666964;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(A, E), complex(D, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.07714177449671653;  // std dev = 1.373, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.28844600576469415;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, G), interaction(A, D) )
%   | | | then return 0.08293370238238316;  // std dev = 2.013, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.026232404293931172;  // std dev = 3.102, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( location(H, C), location(I, C) )
%   | | | then return 0.12722965343174028;  // std dev = 4.119, 72.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=27 */
%   | | | else return 0.5778034146939456;  // std dev = 0.872, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.04284209942056386;  // std dev = 3.014, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.10849279955064614;  // std dev = 4.329, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   else return 0.006415005853436999;  // std dev = 0.442, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.26371859872027925;  // std dev = 0.482, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( enzyme(D, H), interaction(G, G) )
%   | | | then return 0.6109153261580369;  // std dev = 0.949, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.2768321799682156;  // std dev = 3.247, 43.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=24 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return 0.5055217164270374;  // std dev = 0.871, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.14473743541898132;  // std dev = 3.151, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | else if ( enzyme(A, K) )
%   | | then if ( enzyme(L, K), interaction(L, M) )
%   | | | then return 0.31540549957150577;  // std dev = 2.076, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.2411045141819016;  // std dev = 1.996, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( location(A, N) )
%   | | | then return 0.41702178548189983;  // std dev = 3.236, 47.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=31 */
%   | | | else return 0.2492178426307614;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.2235025107423702;  // std dev = 0.464, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( complex(A, F), interaction(A, G) )
%   | | then if ( enzyme(E, H) )
%   | | | then return 0.054073359478763204;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.15495105256222796;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(E, D), complex(E, I) )
%   | | | then return 0.09426299405565122;  // std dev = 1.418, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.399626095320899;  // std dev = 2.366, 30.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=22 */
%   | else if ( phenotype(A, J) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.1949865120777283;  // std dev = 4.174, 70.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=37 */
%   | | | else return 0.3513911675239837;  // std dev = 1.655, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( interaction(A, M), interaction(N, A) )
%   | | | then return 0.2670070230621036;  // std dev = 2.392, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | | else return 0.09942722698971342;  // std dev = 2.928, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(C, E), location(E, F) )
%   | then if ( interaction(E, C), enzyme(A, G) )
%   | | then return -0.07449707276519979;  // std dev = 0.387, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | else return 0.0354394662272786;  // std dev = 0.420, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | else return -0.15960939572212426;  // std dev = 0.381, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   else if ( interaction(H, A), enzyme(H, I) )
%   | then if ( interaction(J, H), interaction(J, J) )
%   | | then if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.022424576669545768;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.26551597343119776;  // std dev = 1.414, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else return 0.031275816823938075;  // std dev = 0.412, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | else if ( enzyme(A, M), complex(A, N) )
%   | | then if ( interaction(P, A), complex(P, Q) )
%   | | | then return 0.26805698791261295;  // std dev = 0.827, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.07885327653867347;  // std dev = 1.391, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.02585538571704418;  // std dev = 0.412, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(A, E) )
%   | | then return 0.04219581863322272;  // std dev = 0.434, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return -0.1818483033854579;  // std dev = 0.391, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then return 0.08916670234786427;  // std dev = 0.925, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(I, A), interaction(A, J) )
%   | | | then return 0.04235494733217589;  // std dev = 0.935, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.01815826934698896;  // std dev = 2.033, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   else if ( phenotype(A, K), interaction(A, L) )
%   | then return 0.0013012954565930703;  // std dev = 0.412, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   | else if ( interaction(M, A), complex(M, N) )
%   | | then if ( interaction(P, M), enzyme(P, Q) )
%   | | | then return 0.048727772371207845;  // std dev = 3.208, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return 0.16702989021786668;  // std dev = 3.173, 52.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=24 */
%   | | else return 0.026371907561075297;  // std dev = 0.401, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(A, D) )
%   then if ( location(E, C), interaction(A, E) )
%   | then return 0.03807898305405775;  // std dev = 0.420, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | else return -0.1238311157232263;  // std dev = 0.391, 78.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=19 */
%   else if ( phenotype(A, F), location(A, G) )
%   | then if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.278970683240035;  // std dev = 0.990, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.041038543128051254;  // std dev = 2.136, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.12663601583426018;  // std dev = 2.023, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.005794059219362684;  // std dev = 3.633, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | else if ( interaction(A, L), enzyme(L, M) )
%   | | then return 0.3369452812199667;  // std dev = 0.395, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return 0.1195808426432572;  // std dev = 2.379, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.04372136360258134;  // std dev = 2.592, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21.172', 'seconds']
Refined model CLL: -0.354213


******************************************
Best model found
******************************************
Results 

CLL : -0.323679 

AUC ROC : 0.805929 

AUC PR : 0.019058 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 18.342 

Total Inference Time : 14.90383768081665 

Total revision time: 50.2190037689209
Best scored revision CLL: -0.328454


Results 

CLL : -0.323679 

AUC ROC : 0.805929 

AUC PR : 0.019058 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 50.374573083877564 

Total Inference Time : 14.90383768081665 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.904
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( function(C, A), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17982725677783407;  // std dev = 7.900, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(F, G), location(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1596052766193784;  // std dev = 5.065, 117.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=38 */
%   | | else if ( function(H, A), phenotype(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19243484587279092;  // std dev = 5.890, 151.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( function(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12137103340697872;  // std dev = 7.953, 294.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(C, D), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then return 0.15745280267337153;  // std dev = 4.964, 106.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=39 */
%   | else if ( interaction(E, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08843460802921804;  // std dev = 6.093, 177.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=53 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( function(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, E) )
%   | | then if ( phenotype(E, F), function(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09841253612523689;  // std dev = 7.856, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( function(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( location(B, H) )
%   | | | then return -0.24903464221560218;  // std dev = 0.076, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | | | else return 0.2543357943251974;  // std dev = 6.755, 183.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=92 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(A, D) )
%   | then if ( location(B, E) )
%   | | then return -0.2048649528449056;  // std dev = 0.059, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else if ( location(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2577956020519345;  // std dev = 6.383, 165.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), location(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(E, A), phenotype(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return 0.0405778506753355;  // std dev = 7.152, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(C, A), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), phenotype(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.009009847379205621;  // std dev = 4.738, 123.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=39 */
%   | | | else return 0.043712457998688885;  // std dev = 5.406, 159.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=53 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( function(A, C), function(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), function(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.02513849395613955;  // std dev = 7.110, 290.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '17.093', 'seconds']
Parameter learned model CLL:-0.314315 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'function(C, A), enzyme(C, D)', 'false': 'function(E, A)', 'false,false': 'enzyme(A, F), location(B, F)', 'false,false,false': 'enzyme(A, G), interaction(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.9, 194, 92]}]
['proteinclass(A, B)', {'': 'enzyme(A, C), phenotype(C, D)', 'false': 'function(E, A), location(B, E)', 'false,false': 'enzyme(A, F)', 'false,false,true': 'enzyme(F, G), location(B, G)', 'false,false,false': 'function(H, A), phenotype(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [5.065, 79, 38], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.89, 97, 54]}]
['proteinclass(A, B)', {'': 'function(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'function(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.953, 202, 92]}]
['proteinclass(A, B)', {'': 'phenotype(C, D), location(B, C)', 'false': 'phenotype(A, D)', 'false,false': 'interaction(E, F), location(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.964, 67, 39], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.093, 124, 53]}]
['proteinclass(A, B)', {'': 'function(C, A)', 'false': 'complex(D, A)', 'false,false': 'function(A, E)', 'false,false,true': 'phenotype(E, F), function(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.856, 187, 92], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(A, C), phenotype(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'location(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.076, 115, 0], 'false,false,true,false': [6.755, 91, 92], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(A, D)', 'false,true': 'location(B, E)', 'false,true,false': 'location(B, D)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.059, 104, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.383, 73, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(D, A), location(B, D)', 'false,false': 'function(E, A), phenotype(E, F)', 'false,false,false': 'function(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.152, 191, 92], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(C, A), location(B, C)', 'false': 'function(D, A), phenotype(D, E)', 'false,false': 'enzyme(A, F), complex(G, F)', 'false,false,false': 'phenotype(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.738, 84, 39], 'false,false,false,false': [5.406, 106, 53]}]
['proteinclass(A, B)', {'': 'function(A, C), function(C, D)', 'false': 'interaction(E, A), function(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.11, 198, 92]}]
{'': [nan, 0.21820137904054107], 'false': [nan, 0.21820137904054107], 'false,false': [nan, 0.21820137904054077], 'false,false,false': [nan, 0.21820137904054077]}
{'': [nan, 0.2254399643573179], 'false': [nan, 0.22543996435731828], 'false,false': [0.21930016801811583, 0.22972676636989667], 'false,false,false': [nan, 0.22972676636989667], 'false,false,true': [nan, 0.21930016801811583]}
{'': [nan, 0.21513246209020054], 'false': [nan, 0.21513246209020054], 'false,false': [nan, 0.21513246209020054]}
{'': [nan, 0.21938673867304923], 'false': [0.2324848696322659, 0.20975844757289577], 'false,false': [nan, 0.20975844757289577], 'false,false,false': [nan, 0.20975844757289577]}
{'': [nan, 0.22118507115167454], 'false': [nan, 0.22118507115167454], 'false,false': [0.22118507115167454, nan], 'false,false,true': [nan, 0.22118507115167454]}
{'': [nan, 0.2131854640329962], 'false': [nan, 0.2131854640329962], 'false,false': [0.2131854640329962, nan], 'false,false,true': [5.066228905719544e-05, 0.24934106880944326]}
{'': [nan, 0.20224685717095625], 'false': [0.20224685717095625, nan], 'false,true': [3.336073241405186e-05, 0.24694539487826403], 'false,true,false': [nan, 0.24694539487826403]}
{'': [nan, 0.1807481240076167], 'false': [nan, 0.1807481240076167], 'false,false': [nan, 0.1807481240076167], 'false,false,false': [0.1807481240076167, nan]}
{'': [nan, 0.18352431663493515], 'false': [nan, 0.18352431663493515], 'false,false': [nan, 0.18352431663493557], 'false,false,false': [0.18250610622066704, 0.18378672162373064]}
{'': [nan, 0.17432731747204933], 'false': [nan, 0.1743273174720499], 'false,false': [nan, 0.17432731747204933]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- location(B, H).;true;true
6;;proteinclass(A, B) :- location(B, E).;true;true


Refining candidate
***************************
Model training time 8.874
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(A, D), complex(C, E) )
%   | then return 0.1123862232351056;  // std dev = 0.435, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(F, F), phenotype(F, H) )
%   | | | then return 0.2265699877310913;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.5010060779566552;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( phenotype(A, I), location(C, J) )
%   | | | then return 0.35814893509951234;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.1562258581764341;  // std dev = 4.665, 104.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=31 */
%   else if ( interaction(A, K), interaction(K, L) )
%   | then if ( phenotype(A, M), complex(L, N) )
%   | | then return 0.17633075328133055;  // std dev = 0.466, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( complex(L, P), phenotype(L, Q) )
%   | | | then return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.5504566274072046;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(D, E), location(A, F) )
%   | then if ( enzyme(A, G), interaction(A, H) )
%   | | then if ( enzyme(H, G), complex(A, I) )
%   | | | then return 0.10466245730891689;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.37166652346968393;  // std dev = 1.653, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(J, D), interaction(D, J) )
%   | | | then return 0.08303653227249994;  // std dev = 2.866, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.15464364384647608;  // std dev = 3.384, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | else if ( complex(D, K), phenotype(A, L) )
%   | | then return 0.5509376603160232;  // std dev = 0.447, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(D, D), location(A, M) )
%   | | | then return 0.11077510426404663;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.2776282629008253;  // std dev = 2.663, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   else if ( phenotype(A, N), interaction(A, P) )
%   | then return 0.1838233388642794;  // std dev = 0.482, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | else return 0.07051962720211956;  // std dev = 0.436, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( complex(C, D), complex(A, D) )
%   | then if ( interaction(E, A), complex(E, D) )
%   | | then return 0.11504031267261733;  // std dev = 0.473, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else return 0.38070720789943835;  // std dev = 0.492, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else return 0.08394130694924497;  // std dev = 0.454, 119.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=35 */
%   else if ( enzyme(A, F), phenotype(A, G) )
%   | then if ( interaction(H, A), phenotype(H, G) )
%   | | then return 0.03367414116038292;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(I, G), interaction(I, J) )
%   | | | then return 0.5434078089984329;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19759518218866629;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( phenotype(A, K) )
%   | | then return 0.09125766919597095;  // std dev = 0.462, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.13820589150262488;  // std dev = 3.679, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0.289785531775121;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, E), interaction(F, C) )
%   | then if ( enzyme(A, G), interaction(E, H) )
%   | | then return 0.04559423924381578;  // std dev = 0.447, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( complex(E, I), complex(F, D) )
%   | | | then return 0.2150326190528504;  // std dev = 1.785, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.09995381374683693;  // std dev = 1.853, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( enzyme(C, J), phenotype(A, K) )
%   | | then return 0.5196733835282015;  // std dev = 0.902, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(L, C), complex(L, M) )
%   | | | then return 0.26498809907161863;  // std dev = 2.397, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.08346004052512178;  // std dev = 2.374, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   else if ( interaction(N, A), interaction(A, N) )
%   | then return -0.057062318266816674;  // std dev = 0.406, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else if ( enzyme(A, P), complex(A, Q) )
%   | | then return 0.17932282350055215;  // std dev = 0.492, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | else return 0.07263722242581838;  // std dev = 0.464, 124.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=38 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( complex(C, E) )
%   | then return 0.06805635446618519;  // std dev = 0.469, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | else return -0.05234862125471444;  // std dev = 0.414, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   else if ( enzyme(A, F), complex(A, G) )
%   | then if ( enzyme(H, F), interaction(H, I) )
%   | | then if ( complex(I, G) )
%   | | | then return 0.04846825428764106;  // std dev = 2.490, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.41522176070626604;  // std dev = 0.799, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.03165233980694014;  // std dev = 0.425, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( phenotype(J, L) )
%   | | | then return 0.09474909679361765;  // std dev = 2.778, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.3039025735705325;  // std dev = 2.204, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.2200711180849435;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.0690587815758771;  // std dev = 4.244, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return -0.2861747044543549;  // std dev = 0.060, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return -0.256278183799366;  // std dev = 0.224, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( interaction(F, A), enzyme(A, G) )
%   | then if ( phenotype(F, H), phenotype(A, H) )
%   | | then return 0.5503299878860973;  // std dev = 0.895, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(I, F), location(F, J) )
%   | | | then return 0.08784919631442291;  // std dev = 3.290, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return 0.3063737827010833;  // std dev = 1.975, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.5171670231516764;  // std dev = 1.254, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.1663075581837317;  // std dev = 2.615, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( interaction(A, P), interaction(P, P) )
%   | | | then return 0.2576411799686051;  // std dev = 2.411, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return 0.45705282801734454;  // std dev = 2.911, 41.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=29 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.22643375578160327;  // std dev = 0.047, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   else if ( enzyme(A, D) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.1357245027550061;  // std dev = 2.180, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.27011302767532225;  // std dev = 2.501, 26.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
%   | | else if ( enzyme(H, D), complex(H, I) )
%   | | | then return 0.5504466577411326;  // std dev = 0.951, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.2599167922340003;  // std dev = 1.703, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( interaction(A, J), interaction(J, A) )
%   | | then if ( phenotype(A, K), location(A, L) )
%   | | | then return -8.597185564375165E-4;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5777226706007068;  // std dev = 0.182, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.08607528835541935;  // std dev = 3.608, 54.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=23 */
%   | | | else return 0.16543618700392443;  // std dev = 3.590, 52.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then return 0.09025958487240876;  // std dev = 0.411, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else return -0.023984398583112458;  // std dev = 0.410, 95.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=27 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( complex(A, H), complex(F, H) )
%   | | then return 0.20022425722271336;  // std dev = 1.034, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(F, I), enzyme(I, J) )
%   | | | then return -0.05727970064367878;  // std dev = 1.364, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.0024334901965092776;  // std dev = 2.383, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( complex(A, L) )
%   | | | then return 0.12977271560270456;  // std dev = 1.140, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.47396321055354457;  // std dev = 0.737, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.03679916974610256;  // std dev = 2.823, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.1344314869443299;  // std dev = 2.621, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( phenotype(A, E), interaction(C, C) )
%   | then if ( phenotype(C, E) )
%   | | then return 0.3333537566876372;  // std dev = 1.033, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( enzyme(A, F) )
%   | | | then return -0.008158561278050487;  // std dev = 1.230, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.14298733614219908;  // std dev = 0.942, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( location(A, G) )
%   | | then return -0.048103631907547684;  // std dev = 0.414, 89.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=26 */
%   | | else return -0.22577557558916264;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( complex(A, H) )
%   | then if ( interaction(I, A), interaction(J, I) )
%   | | then if ( complex(I, K), enzyme(J, L) )
%   | | | then return 0.03378105521365208;  // std dev = 1.860, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.25618738459741897;  // std dev = 1.997, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else return 0.019760109023719812;  // std dev = 0.384, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return 0.015128882126445307;  // std dev = 0.419, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( enzyme(A, D) )
%   | then return 0.002717744283540971;  // std dev = 0.420, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | else return -0.05730419830974839;  // std dev = 0.414, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   else if ( enzyme(A, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then return 0.13352782983497927;  // std dev = 0.394, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( enzyme(H, E), complex(H, I) )
%   | | | then return -0.009106611776299327;  // std dev = 1.578, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return -0.13756250393272365;  // std dev = 1.650, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( interaction(A, J), interaction(K, A) )
%   | | then if ( interaction(L, K), interaction(J, M) )
%   | | | then return 0.1495115199572405;  // std dev = 1.279, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.45957577242955233;  // std dev = 0.693, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return -0.11059488272993805;  // std dev = 0.821, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.0866740196532276;  // std dev = 3.497, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.225', 'seconds']
Refined model CLL: -0.358695


******************************************
Best model found
******************************************
Results 

CLL : -0.32092 

AUC ROC : 0.800901 

AUC PR : 0.017553 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.874 

Total Inference Time : 3.1672661304473877 

Total revision time: 25.265801313400267
Best scored revision CLL: -0.314315


Results 

CLL : -0.32092 

AUC ROC : 0.800901 

AUC PR : 0.017553 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 25.421370628356932 

Total Inference Time : 3.1672661304473877 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.501
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( function(C, A), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1790444574875725;  // std dev = 7.642, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(F, G), location(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15310868682668205;  // std dev = 4.369, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | | else if ( function(H, A), phenotype(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16447232319031843;  // std dev = 6.236, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( function(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1361119862106903;  // std dev = 7.621, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(C, D), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then return 0.14805170454647287;  // std dev = 5.832, 148.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=53 */
%   | else if ( interaction(E, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12307158313247846;  // std dev = 4.691, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( function(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, E) )
%   | | then if ( phenotype(E, F), function(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10333270411327253;  // std dev = 7.548, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( function(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( location(B, H) )
%   | | | then return -0.25302187518125807;  // std dev = 0.025, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | | else return 0.3281889887755789;  // std dev = 6.000, 148.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=86 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(A, D) )
%   | then if ( location(B, E) )
%   | | then return -0.20866439065328649;  // std dev = 0.020, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( location(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2076494852218184;  // std dev = 6.374, 163.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), location(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(E, A), phenotype(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return 0.03445401320968099;  // std dev = 6.922, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(C, A), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), phenotype(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.028728633874052136;  // std dev = 5.392, 159.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=53 */
%   | | | else return 0.01841644153283521;  // std dev = 4.355, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( function(A, C), function(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), function(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06497615966455533;  // std dev = 6.541, 237.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '28.665', 'seconds']
Parameter learned model CLL:-0.333399 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'function(C, A), enzyme(C, D)', 'false': 'function(E, A)', 'false,false': 'enzyme(A, F), location(B, F)', 'false,false,false': 'enzyme(A, G), interaction(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.642, 182, 86]}]
['proteinclass(A, B)', {'': 'enzyme(A, C), phenotype(C, D)', 'false': 'function(E, A), location(B, E)', 'false,false': 'enzyme(A, F)', 'false,false,true': 'enzyme(F, G), location(B, G)', 'false,false,false': 'function(H, A), phenotype(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.369, 60, 28], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.236, 118, 58]}]
['proteinclass(A, B)', {'': 'function(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'function(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.621, 179, 86]}]
['proteinclass(A, B)', {'': 'phenotype(C, D), location(B, C)', 'false': 'phenotype(A, D)', 'false,false': 'interaction(E, F), location(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [5.832, 95, 53], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.691, 66, 33]}]
['proteinclass(A, B)', {'': 'function(C, A)', 'false': 'complex(D, A)', 'false,false': 'function(A, E)', 'false,false,true': 'phenotype(E, F), function(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.548, 169, 86], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(A, C), phenotype(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'location(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.025, 116, 0], 'false,false,true,false': [6.0, 62, 86], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(A, D)', 'false,true': 'location(B, E)', 'false,true,false': 'location(B, D)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.02, 97, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.374, 77, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(D, A), location(B, D)', 'false,false': 'function(E, A), phenotype(E, F)', 'false,false,false': 'function(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.922, 171, 86], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(C, A), location(B, C)', 'false': 'function(D, A), phenotype(D, E)', 'false,false': 'enzyme(A, F), complex(G, F)', 'false,false,false': 'phenotype(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.392, 106, 53], 'false,false,false,false': [4.355, 67, 33]}]
['proteinclass(A, B)', {'': 'function(A, C), function(C, D)', 'false': 'interaction(E, A), function(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [6.541, 151, 86]}]
{'': [nan, 0.21792158609935472], 'false': [nan, 0.21792158609935472], 'false,false': [nan, 0.2179215860993546], 'false,false,false': [nan, 0.2179215860993546]}
{'': [nan, 0.21963957759412212], 'false': [nan, 0.21963957759412242], 'false,false': [0.21694214876032972, 0.22094524793388326], 'false,false,false': [nan, 0.22094524793388326], 'false,false,true': [nan, 0.21694214876032972]}
{'': [nan, 0.2191945404651058], 'false': [nan, 0.2191945404651058], 'false,false': [nan, 0.2191945404651058]}
{'': [nan, 0.22694781632652025], 'false': [0.2298498015213966, 0.22223559641396895], 'false,false': [nan, 0.22223559641396895], 'false,false,false': [nan, 0.22223559641396895]}
{'': [nan, 0.22343066444275692], 'false': [nan, 0.22343066444275692], 'false,false': [0.22343066444275692, nan], 'false,false,true': [nan, 0.22343066444275692]}
{'': [nan, 0.2195575359000574], 'false': [nan, 0.2195575359000574], 'false,false': [0.2195575359000574, nan], 'false,false,true': [5.186452904160471e-06, 0.24320916795106262]}
{'': [nan, 0.19680913815981607], 'false': [0.19680913815981607, nan], 'false,true': [4.0048827403981386e-06, 0.24926563953506223], 'false,true,false': [nan, 0.24926563953506223]}
{'': [nan, 0.1864113975782645], 'false': [nan, 0.1864113975782645], 'false,false': [nan, 0.1864113975782645], 'false,false,false': [0.1864113975782645, nan]}
{'': [nan, 0.1855023895818077], 'false': [nan, 0.1855023895818077], 'false,false': [nan, 0.18550238958180745], 'false,false,false': [0.18286193248318422, 0.18963543347892586]}
{'': [nan, 0.18052630682513465], 'false': [nan, 0.18052630682513487], 'false,false': [nan, 0.18052630682513465]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- location(B, H).;true;true
6;;proteinclass(A, B) :- location(B, E).;true;true


Refining candidate
***************************
Model training time 9.479
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( phenotype(A, E), phenotype(D, E) )
%   | then if ( enzyme(D, F), complex(A, G) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.11621345122854458;  // std dev = 0.438, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | else if ( interaction(A, D), phenotype(C, H) )
%   | | then return 0.6081489350995123;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(C, D), phenotype(C, I) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2110901115701006;  // std dev = 3.413, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   else if ( location(A, J) )
%   | then if ( interaction(A, K), complex(K, L) )
%   | | then return 0.13592671287729013;  // std dev = 0.448, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.1568502338008104;  // std dev = 4.016, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   | | | else return 0.23652731347789074;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | else return 0.0803711573217344;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( phenotype(D, E), location(A, F) )
%   | then if ( interaction(G, D), interaction(D, G) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.15362918445657348;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.2529856414047482;  // std dev = 2.149, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else return 0.09419983464316146;  // std dev = 0.450, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( complex(J, C) )
%   | | | then return 0.4971293433928538;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.5842128739141152;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( phenotype(A, L), interaction(M, A) )
%   | then if ( interaction(M, N), interaction(A, N) )
%   | | then return 0.23556454339420568;  // std dev = 0.502, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.12808230379701435;  // std dev = 0.456, 87.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=26 */
%   | else return 0.10712314192000985;  // std dev = 0.446, 117.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=32 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( complex(C, D) )
%   | then return -0.007825065418605266;  // std dev = 0.419, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | else return 0.08873759217669282;  // std dev = 0.470, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   else if ( interaction(E, A), complex(A, F) )
%   | then if ( phenotype(A, G), phenotype(E, H) )
%   | | then if ( interaction(I, E), phenotype(I, G) )
%   | | | then return 0.29223225769127503;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16761709649065823;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0.02466679581046547;  // std dev = 0.439, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | else if ( interaction(A, J), enzyme(A, K) )
%   | | then if ( phenotype(J, L) )
%   | | | then return 0.1743621116445136;  // std dev = 1.969, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.48307790704017606;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.06054226883095672;  // std dev = 1.951, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.15128974509186163;  // std dev = 5.339, 128.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=43 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), enzyme(D, E) )
%   | then if ( interaction(D, F), location(A, G) )
%   | | then if ( enzyme(F, E), location(F, G) )
%   | | | then return 0.3469498096866683;  // std dev = 1.830, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.022419590018217757;  // std dev = 1.478, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0.5902258500078286;  // std dev = 0.863, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( complex(H, C), interaction(I, H) )
%   | | then if ( interaction(J, A), enzyme(I, K) )
%   | | | then return 0.38093285860010684;  // std dev = 1.076, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.06700154283345185;  // std dev = 2.405, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else return 0.2866853074037533;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, L), complex(L, M) )
%   | then if ( interaction(L, N), interaction(N, P) )
%   | | then return 0.096443324407985;  // std dev = 0.461, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | else return 0.45177743685331895;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.08257957057794875;  // std dev = 0.457, 146.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=43 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, A), phenotype(A, C) )
%   then return 0.28859582396127664;  // std dev = 1.232, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( complex(A, D), phenotype(A, E) )
%   | then if ( phenotype(F, E), enzyme(F, G) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.3507224898678268;  // std dev = 1.312, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.11781419036082579;  // std dev = 2.060, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( phenotype(J, E), interaction(J, J) )
%   | | | then return 0.10796546537977153;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.007605940502443811;  // std dev = 1.214, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( enzyme(A, M) )
%   | | | then return 0.04636234550322356;  // std dev = 3.569, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | | else return 0.11714328489471428;  // std dev = 4.240, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return -0.05451823663298918;  // std dev = 1.830, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.06453650905580481;  // std dev = 3.556, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.2680625091894802;  // std dev = 0.057, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( complex(D, F), phenotype(D, G) )
%   | | then if ( interaction(D, H), interaction(H, A) )
%   | | | then return 0.39502655488036237;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.22732105521069795;  // std dev = 1.674, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.7226389530046392;  // std dev = 0.116, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.37104305323981424;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(J, A), interaction(A, K) )
%   | | then if ( interaction(L, J), phenotype(L, M) )
%   | | | then return 0.1761519454189844;  // std dev = 3.231, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   | | | else return 0.3836584080783989;  // std dev = 1.589, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.49813530270426304;  // std dev = 1.715, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.27590114088057;  // std dev = 3.844, 59.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=31 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.21947351870783324;  // std dev = 0.429, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( location(A, F), location(E, F) )
%   | | then if ( interaction(G, E), interaction(G, A) )
%   | | | then return 0.2686919922604125;  // std dev = 2.114, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return 0.118683325349798;  // std dev = 3.801, 58.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=27 */
%   | | else if ( complex(E, H) )
%   | | | then return 0.1024384207841376;  // std dev = 1.020, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6802758989172091;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), phenotype(K, J) )
%   | | | then return 0.25419419061789195;  // std dev = 2.115, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return 0.6047595619971174;  // std dev = 0.960, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.32876693669911033;  // std dev = 2.032, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.13294433144422593;  // std dev = 1.959, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C) )
%   | then if ( interaction(C, E), phenotype(A, F) )
%   | | then if ( complex(A, G), phenotype(E, F) )
%   | | | then return -0.16531565031880582;  // std dev = 1.368, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.12967313062518124;  // std dev = 1.508, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( phenotype(A, H), phenotype(E, H) )
%   | | | then return -0.29789630136124334;  // std dev = 0.868, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.1565229040472011;  // std dev = 1.791, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else return 0.16105233350138315;  // std dev = 0.413, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( interaction(I, A), phenotype(I, J) )
%   | then if ( complex(I, K), enzyme(A, L) )
%   | | then return 0.12733370258851703;  // std dev = 0.400, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return -0.09909433831964999;  // std dev = 1.394, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.014719454859602294;  // std dev = 4.077, 95.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=30 */
%   | else return 0.07276955635829596;  // std dev = 0.414, 76.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=27 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( location(A, E), interaction(F, A) )
%   | then if ( location(F, E), phenotype(F, G) )
%   | | then if ( complex(F, H) )
%   | | | then return 0.22202207872633214;  // std dev = 0.981, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.05597746988257827;  // std dev = 1.070, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.14944628187770395;  // std dev = 0.402, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return -0.17868766920913026;  // std dev = 0.375, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( enzyme(A, I), interaction(J, A) )
%   | then if ( complex(J, K), interaction(A, L) )
%   | | then return -0.027268443383848758;  // std dev = 0.396, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0.16027738641108785;  // std dev = 0.412, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | else if ( interaction(A, M), interaction(M, A) )
%   | | then return 0.06327371477313422;  // std dev = 0.406, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return -0.060738894385652956;  // std dev = 2.802, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0.012779085875902227;  // std dev = 4.456, 115.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( phenotype(C, E), complex(A, F) )
%   | then if ( complex(C, F), phenotype(A, G) )
%   | | then if ( interaction(C, H), interaction(H, A) )
%   | | | then return -0.05487069760473291;  // std dev = 1.116, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.27885699283903753;  // std dev = 0.913, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return -0.11525783605229198;  // std dev = 0.381, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.01994034446318872;  // std dev = 0.393, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   else if ( interaction(A, I), complex(I, J) )
%   | then return 0.009716089406972519;  // std dev = 0.403, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
%   | else if ( complex(A, K), phenotype(A, L) )
%   | | then if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.16720345186928792;  // std dev = 0.833, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2619687794745227;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(P, A), interaction(Q, P) )
%   | | | then return 0.06365528423031129;  // std dev = 3.781, 77.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=28 */
%   | | | else return -0.010931842827938175;  // std dev = 2.467, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.878', 'seconds']
Refined model CLL: -0.352515


******************************************
Best model found
******************************************
Results 

CLL : -0.3328 

AUC ROC : 0.801525 

AUC PR : 0.01724 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.479 

Total Inference Time : 3.391202926635742 

Total revision time: 23.608163814544675
Best scored revision CLL: -0.333399


Results 

CLL : -0.3328 

AUC ROC : 0.801525 

AUC PR : 0.01724 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 23.76373312950134 

Total Inference Time : 3.391202926635742 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.021
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), interaction(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17109857538728176;  // std dev = 7.731, 278.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(C, E), phenotype(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, A) )
%   | | | then return 0.14371139707133745;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.19499344835338814;  // std dev = 2.996, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   else if ( location(F, A), phenotype(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), phenotype(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18737044073038062;  // std dev = 4.107, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
%   | | else if ( location(I, A), enzyme(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17728893064887025;  // std dev = 5.322, 126.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12713443680471292;  // std dev = 7.705, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.09588489156386924;  // std dev = 4.855, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12242648347662548;  // std dev = 5.944, 159.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=53 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E) )
%   | | then if ( enzyme(E, F), location(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1113694392093198;  // std dev = 7.394, 243.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=83 */
%   | | else return 0.03749807857508426;  // std dev = 0.442, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( phenotype(B, H) )
%   | | | then return -0.24980922883793807;  // std dev = 0.031, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | | else return 0.2389219391752265;  // std dev = 6.671, 178.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=87 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.20674248703764275;  // std dev = 0.016, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13211048026564276;  // std dev = 6.880, 193.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=83 */
%   | else if ( location(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10400039270770366;  // std dev = 1.542, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), enzyme(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.05672929089644608;  // std dev = 7.043, 235.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=83 */
%   | | | else return -0.07402096988244622;  // std dev = 1.750, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), enzyme(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.023737499507519744;  // std dev = 4.606, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.011180979165173969;  // std dev = 5.728, 176.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=53 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), location(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.003889330210830894;  // std dev = 7.462, 275.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '17.585', 'seconds']
Parameter learned model CLL:-0.359126 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), interaction(C, D)', 'false': 'location(E, A)', 'false,false': 'interaction(A, F), phenotype(B, F)', 'false,false,false': 'interaction(A, G), function(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.731, 191, 87]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(C, E), phenotype(B, E)', 'true,false,false': 'interaction(A, A)', 'false': 'location(F, A), phenotype(B, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), phenotype(B, H)', 'false,false,false': 'location(I, A), enzyme(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.664, 9, 4], 'true,false,false,false': [2.996, 25, 14], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.107, 48, 26], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.322, 83, 43]}]
['proteinclass(A, B)', {'': 'location(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'location(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.705, 187, 87]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.855, 77, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.944, 106, 53]}]
['proteinclass(A, B)', {'': 'location(C, A)', 'false': 'complex(D, A)', 'false,false': 'location(A, E)', 'false,false,true': 'enzyme(E, F), location(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.394, 160, 83], 'false,false,false': [0.442, 11, 4]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'phenotype(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.031, 70, 0], 'false,false,true,false': [6.671, 91, 87], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'location(F, A), phenotype(B, F)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.016, 41, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.88, 110, 83], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.542, 7, 4]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(D, A), phenotype(B, D)', 'false,false': 'location(E, A), enzyme(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.043, 152, 83], 'false,false,false,false': [1.75, 14, 4]}]
['proteinclass(A, B)', {'': 'location(C, A), phenotype(B, C)', 'false': 'location(D, A), enzyme(D, E)', 'false,false': 'interaction(A, F), complex(G, F)', 'false,false,false': 'enzyme(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.606, 70, 34], 'false,false,false,false': [5.728, 123, 53]}]
['proteinclass(A, B)', {'': 'location(A, C), location(C, D)', 'false': 'function(E, A), location(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.462, 188, 87]}]
{'': [nan, 0.21501216293152609], 'false': [nan, 0.21501216293152609], 'false,false': [nan, 0.21501216293152636], 'false,false,false': [nan, 0.21501216293152636]}
{'': [0.2263313609467453, 0.2259750000000007], 'true': [nan, 0.2263313609467453], 'true,false': [nan, 0.2263313609467453], 'true,false,false': [0.2130177514792898, 0.23011176857330676], 'false': [nan, 0.22597499999999898], 'false,false': [0.2279035792549315, 0.2248047367094992], 'false,false,true': [nan, 0.2279035792549303], 'false,false,false': [nan, 0.2248047367094992]}
{'': [nan, 0.21667840264490307], 'false': [nan, 0.21667840264490312], 'false,false': [nan, 0.21667840264490312]}
{'': [nan, 0.21834063378750165], 'false': [0.21238525371324657, 0.22220855354278235], 'false,false': [nan, 0.22220855354278235], 'false,false,false': [nan, 0.22220855354278235]}
{'': [nan, 0.22356543720387284], 'false': [nan, 0.22356543720387284], 'false,false': [0.2250079052719555, 0.19505774273723606], 'false,false,true': [nan, 0.2250079052719555]}
{'': [nan, 0.22782037132313285], 'false': [nan, 0.22782037132313296], 'false,false': [0.22782037132313296, nan], 'false,false,true': [1.3315838259332833e-05, 0.24998777520717125]}
{'': [nan, 0.218780289123524], 'false': [0.21886296244432282, 0.2160881935272682], 'false,true': [6.107147883253522e-06, 0.24523760170127085], 'false,true,false': [nan, 0.24523760170127085], 'false,false': [nan, 0.2160881935272682], 'false,false,false': [nan, 0.2160881935272682]}
{'': [nan, 0.20931766167103896], 'false': [nan, 0.20931766167103896], 'false,false': [nan, 0.20931766167103896], 'false,false,false': [0.2111036406104715, 0.17012137364325713]}
{'': [nan, 0.19297611165799153], 'false': [nan, 0.19297611165799153], 'false,false': [nan, 0.19297611165799206], 'false,false,false': [0.20396863395927195, 0.18642196856556195]}
{'': [nan, 0.20245414999193226], 'false': [nan, 0.2024541499919323], 'false,false': [nan, 0.2024541499919323]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- phenotype(B, H).;true;true
6;;proteinclass(A, B) :- location(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 19.136
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( location(A, D) )
%   | then return 0.11188027838309446;  // std dev = 0.435, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(E, E) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3844647245731965;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), interaction(J, A) )
%   | | | then return 0.2265699877310913;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.12957750652808375;  // std dev = 3.721, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return 0.08037115732173453;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.2719420385477882;  // std dev = 3.751, 58.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( phenotype(C, E), interaction(F, C) )
%   | then if ( phenotype(F, G), location(A, H) )
%   | | then return 0.13075626080581496;  // std dev = 0.459, 123.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=37 */
%   | | else return -0.01970216835943985;  // std dev = 0.361, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then return 0.5090803365494858;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.07827203401644445;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2739165565663957;  // std dev = 2.107, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   else if ( interaction(L, A), location(A, M) )
%   | then if ( interaction(L, L) )
%   | | then return 0.5933905792696518;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(L, N), location(L, M) )
%   | | | then return 0.3972058817002106;  // std dev = 1.302, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.18113467840588537;  // std dev = 3.858, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
%   | else return 0.1152158139519949;  // std dev = 0.448, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( complex(C, E) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.09858916125721405;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.25454612975623087;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.811737191555781;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2918242259393983;  // std dev = 1.390, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0.11142028957269388;  // std dev = 0.459, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   else if ( enzyme(A, H) )
%   | then if ( enzyme(I, H), phenotype(I, J) )
%   | | then return 0.13517615421199927;  // std dev = 0.472, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.12695950075239246;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.28454161170738224;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0.0998641644817315;  // std dev = 0.460, 139.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=42 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), location(F, C) )
%   | | then if ( complex(D, G), complex(A, G) )
%   | | | then return 0.31785520676263807;  // std dev = 1.408, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.11818721979043531;  // std dev = 5.336, 124.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=43 */
%   | | else if ( interaction(A, H), interaction(H, D) )
%   | | | then return 0.13996119958403336;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.014607147340324686;  // std dev = 2.282, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( phenotype(J, K), phenotype(I, K) )
%   | | | then return 0.45074355417503864;  // std dev = 0.833, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04675318637956494;  // std dev = 1.666, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.3652441064992872;  // std dev = 1.327, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.20452465330747227;  // std dev = 3.196, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   else return 0.0026882376586581597;  // std dev = 0.415, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then return 0.03183678103669985;  // std dev = 0.455, 87.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=25 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( interaction(F, E), interaction(F, F) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.1540825993957179;  // std dev = 1.899, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.07887235622088178;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(F, G), enzyme(A, G) )
%   | | | then return 0.28436210596812883;  // std dev = 0.996, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.47637794845306924;  // std dev = 0.921, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.05341105691787702;  // std dev = 2.239, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.19078569479001298;  // std dev = 2.402, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.02669010073184672;  // std dev = 4.645, 106.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=30 */
%   | | | else return 0.17648303199974588;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(B, C) )
%   then return -0.2676468791455993;  // std dev = 0.309, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( phenotype(E, H), phenotype(F, H) )
%   | | | then return 0.24444096974566057;  // std dev = 1.230, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.025148396779636865;  // std dev = 1.883, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( phenotype(A, I), enzyme(E, J) )
%   | | | then return 0.6891098639159163;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.27049624268545086;  // std dev = 2.872, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | else if ( interaction(A, K), interaction(L, A) )
%   | | then if ( interaction(K, M) )
%   | | | then return 0.12681001090851238;  // std dev = 3.126, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return 0.4094166482208833;  // std dev = 1.791, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return -0.004058010771343571;  // std dev = 1.695, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.11319576902360323;  // std dev = 4.165, 73.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.21643401831522968;  // std dev = 0.221, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then if ( phenotype(E, G) )
%   | | | then return 0.17439827573754849;  // std dev = 4.765, 92.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=43 */
%   | | | else return 0.025190525109180798;  // std dev = 1.799, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(H, A), enzyme(A, I) )
%   | | | then return -0.047906632147471484;  // std dev = 2.761, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.10295144806027733;  // std dev = 3.793, 59.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=24 */
%   else if ( interaction(A, J), interaction(J, A) )
%   | then return 0.22591836660246187;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then return -0.014515066232922383;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.03894867979493503;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), location(C, F) )
%   | then if ( phenotype(C, G), enzyme(A, H) )
%   | | then return -0.1559575611324554;  // std dev = 0.456, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(A, I), enzyme(A, J) )
%   | | | then return 0.3235345263429591;  // std dev = 0.972, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.025440730956339683;  // std dev = 2.790, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | else return -0.12609569049906633;  // std dev = 0.431, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   else if ( interaction(K, A) )
%   | then if ( interaction(L, K), interaction(K, L) )
%   | | then return 0.060105789127452486;  // std dev = 0.461, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
%   | | else if ( interaction(M, K) )
%   | | | then return 0.2217523658201619;  // std dev = 2.019, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.02500862120219364;  // std dev = 1.615, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( interaction(A, N), complex(N, P) )
%   | | then return 0.5165944101855992;  // std dev = 0.799, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.026774045202574426;  // std dev = 0.836, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( phenotype(E, D), enzyme(A, F) )
%   | | then return -0.15388514335015113;  // std dev = 0.414, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( interaction(G, E), location(E, H) )
%   | | | then return 0.010414638495306472;  // std dev = 4.546, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | | | else return -0.11825239911983658;  // std dev = 1.251, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), enzyme(K, L) )
%   | | | then return 0.1442614997608704;  // std dev = 2.844, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | | else return 0.002164345614023499;  // std dev = 1.955, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(M, A), enzyme(A, N) )
%   | | | then return -0.05547287505788735;  // std dev = 1.923, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return -0.0044705092944293656;  // std dev = 3.207, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   else if ( interaction(A, A) )
%   | then return 0.03774624395674059;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.2951992561512088;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then return -0.15618399462848884;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(F, C), enzyme(F, G) )
%   | | | then return -0.022404103468950595;  // std dev = 1.644, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.18487300367694415;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( enzyme(A, H), phenotype(C, I) )
%   | | then return -0.07223309466359186;  // std dev = 0.441, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( location(A, J), location(C, J) )
%   | | | then return 0.27812186608157263;  // std dev = 1.497, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.03067813019105519;  // std dev = 1.384, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   else if ( interaction(K, A) )
%   | then if ( interaction(K, K), phenotype(A, L) )
%   | | then return -0.05896755368275392;  // std dev = 0.430, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else return 0.00982471088435794;  // std dev = 0.450, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
%   | else return -0.07673958464080156;  // std dev = 0.444, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.379', 'seconds']
Refined model CLL: -0.391924


******************************************
Best model found
******************************************
Results 

CLL : -0.347778 

AUC ROC : 0.679682 

AUC PR : 0.01099 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 19.136 

Total Inference Time : 7.856698751449585 

Total revision time: 39.99373882484436
Best scored revision CLL: -0.359126


Results 

CLL : -0.347778 

AUC ROC : 0.679682 

AUC PR : 0.01099 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 40.0982248134613 

Total Inference Time : 7.856698751449585 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.773
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), interaction(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1841677438769426;  // std dev = 8.372, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(C, E), phenotype(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, A) )
%   | | | then return 0.334219544690545;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1675528780238777;  // std dev = 4.000, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   else if ( location(F, A), phenotype(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), phenotype(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16755287802387775;  // std dev = 4.163, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | | else if ( location(I, A), enzyme(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20832026411500684;  // std dev = 5.705, 139.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1683414934576984;  // std dev = 8.145, 287.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.10527981605075558;  // std dev = 4.713, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10870102082069145;  // std dev = 6.895, 215.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=71 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E) )
%   | | then if ( enzyme(E, F), location(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09161109213728456;  // std dev = 8.048, 292.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=97 */
%   | | else return 0.12728789123311057;  // std dev = 0.482, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( phenotype(B, H) )
%   | | | then return -0.25854986118766005;  // std dev = 0.047, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return 0.2122505159061918;  // std dev = 7.420, 221.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=104 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.2123176358213621;  // std dev = 0.044, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14066407876317907;  // std dev = 7.362, 220.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=97 */
%   | else if ( location(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.015054928695321905;  // std dev = 2.206, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), enzyme(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.039468064015121866;  // std dev = 7.655, 293.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=97 */
%   | | | else return -0.02684134412717708;  // std dev = 2.212, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), enzyme(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.035776470053737595;  // std dev = 4.466, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   | | | else return 0.08717707715669963;  // std dev = 6.261, 182.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=71 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), location(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.02519236958031478;  // std dev = 7.863, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '7.560', 'seconds']
Parameter learned model CLL:-0.363229 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), interaction(C, D)', 'false': 'location(E, A)', 'false,false': 'interaction(A, F), phenotype(B, F)', 'false,false,false': 'interaction(A, G), function(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.372, 215, 104]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(C, E), phenotype(B, E)', 'true,false,false': 'interaction(A, A)', 'false': 'location(F, A), phenotype(B, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), phenotype(B, H)', 'false,false,false': 'location(I, A), enzyme(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.0, 2, 2], 'true,false,false,false': [4.0, 48, 24], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.163, 52, 26], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.705, 87, 52]}]
['proteinclass(A, B)', {'': 'location(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'location(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.145, 183, 104]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.713, 68, 33], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.895, 144, 71]}]
['proteinclass(A, B)', {'': 'location(C, A)', 'false': 'complex(D, A)', 'false,false': 'location(A, E)', 'false,false,true': 'enzyme(E, F), location(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [8.048, 195, 97], 'false,false,false': [0.482, 12, 7]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'phenotype(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.047, 76, 0], 'false,false,true,false': [7.42, 117, 104], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'location(F, A), phenotype(B, F)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.044, 72, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [7.362, 123, 97], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.206, 18, 7]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(D, A), phenotype(B, D)', 'false,false': 'location(E, A), enzyme(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.655, 196, 97], 'false,false,false,false': [2.212, 21, 7]}]
['proteinclass(A, B)', {'': 'location(C, A), phenotype(B, C)', 'false': 'location(D, A), enzyme(D, E)', 'false,false': 'interaction(A, F), complex(G, F)', 'false,false,false': 'enzyme(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.466, 65, 33], 'false,false,false,false': [6.261, 111, 71]}]
['proteinclass(A, B)', {'': 'location(A, C), location(C, D)', 'false': 'function(E, A), location(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.863, 205, 104]}]
{'': [nan, 0.2197305451007773], 'false': [nan, 0.2197305451007773], 'false,false': [nan, 0.2197305451007759], 'false,false,false': [nan, 0.2197305451007759]}
{'': [0.2250692520775627, 0.23024485548641901], 'false': [nan, 0.23024485548641835], 'false,false': [0.22222222222222257, 0.23414937115056086], 'false,false,false': [nan, 0.23414937115056086], 'true': [nan, 0.2250692520775627], 'true,false': [nan, 0.2250692520775627], 'true,false,false': [0.25, 0.22222222222222263], 'false,false,true': [nan, 0.22222222222222263]}
{'': [nan, 0.2311259605428466], 'false': [nan, 0.23112596054284762], 'false,false': [nan, 0.23112596054284762]}
{'': [nan, 0.22073588965081267], 'false': [0.21989289171369847, 0.2211281615945673], 'false,false': [nan, 0.2211281615945673], 'false,false,false': [nan, 0.2211281615945673]}
{'': [nan, 0.22250998501783584], 'false': [nan, 0.22250998501783584], 'false,false': [0.22179967215604832, 0.23223129972549664], 'false,false,true': [nan, 0.22179967215604832]}
{'': [nan, 0.22760337286353383], 'false': [nan, 0.22760337286353474], 'false,false': [0.22760337286353474, nan], 'false,false,true': [2.8845904165426306e-05, 0.24914501122760216]}
{'': [nan, 0.20799536476943153], 'false': [0.20876085802395744, 0.1947091535293162], 'false,true': [2.7403454692024692e-05, 0.24635130120734006], 'false,true,false': [nan, 0.24635130120734006], 'false,false': [nan, 0.1947091535293162], 'false,false,false': [nan, 0.1947091535293162]}
{'': [nan, 0.1981299912803527], 'false': [nan, 0.1981299912803527], 'false,false': [nan, 0.1981299912803527], 'false,false,false': [0.19998381413818597, 0.1747176551226633]}
{'': [nan, 0.2118260419453014], 'false': [nan, 0.2118260419453014], 'false,false': [nan, 0.21182604194530116], 'false,false,false': [0.20355422636827453, 0.21535538864308343]}
{'': [nan, 0.20009927891350132], 'false': [nan, 0.20009927891350135], 'false,false': [nan, 0.20009927891350135]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- phenotype(B, H).;true;true
6;;proteinclass(A, B) :- location(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 15.726
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( interaction(A, E), enzyme(E, C) )
%   | then return 0.10814893509951218;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then return 0.6081489350995123;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( interaction(J, A) )
%   | then if ( enzyme(J, K), phenotype(J, L) )
%   | | then if ( interaction(A, M), interaction(J, M) )
%   | | | then return 0.14075763075168626;  // std dev = 3.054, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.3146706742299471;  // std dev = 3.378, 46.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | | else return 0.15162719596907787;  // std dev = 0.455, 184.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=54 */
%   | else if ( phenotype(A, N) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.1326287353714655;  // std dev = 0.464, 132.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=41 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(E, D), enzyme(D, F) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.3401362739244182;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.11766984087302997;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( enzyme(E, G), interaction(D, H) )
%   | | | then return 0.668610294907432;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.28881753544692257;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( phenotype(A, K), phenotype(I, L) )
%   | | | then return 0.26142778042525333;  // std dev = 3.094, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | | else return 0.15063068388070508;  // std dev = 2.987, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else if ( enzyme(A, M), interaction(N, A) )
%   | | | then return 0.3386710089494229;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.11715618811249508;  // std dev = 2.648, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, A) )
%   | then return 0.042375847688336236;  // std dev = 0.440, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( interaction(A, D), location(D, C) )
%   | | then if ( complex(A, E), interaction(D, A) )
%   | | | then return 0.26668602688268384;  // std dev = 2.569, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.1360703129443037;  // std dev = 4.358, 86.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=29 */
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.16471842021376126;  // std dev = 3.241, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return 0.09504392107795374;  // std dev = 4.899, 116.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
%   else if ( enzyme(A, H) )
%   | then return 0.47819301517656854;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then return 0.12902074103426506;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.3084978770113688;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1970848361179026;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( phenotype(A, E) )
%   | then if ( enzyme(D, F), complex(D, G) )
%   | | then return 0.040577982507632074;  // std dev = 0.445, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( complex(D, H), phenotype(D, I) )
%   | | | then return 0.38209506115629854;  // std dev = 1.396, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.12053243697571646;  // std dev = 1.419, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else return 0.48881491541248856;  // std dev = 0.928, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, J), location(A, K) )
%   | then return 0.07245761374093215;  // std dev = 0.460, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | else if ( interaction(L, A), enzyme(L, M) )
%   | | then if ( phenotype(L, N) )
%   | | | then return 0.12723396580094987;  // std dev = 3.258, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | | else return -0.03924428913165714;  // std dev = 1.241, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(P, A), complex(P, Q) )
%   | | | then return 0.16386942911417957;  // std dev = 3.848, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | | | else return 0.1068419191463884;  // std dev = 2.737, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( location(A, E), location(C, E) )
%   | then return -0.001980242625401721;  // std dev = 0.453, 95.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=26 */
%   | else return 0.15509208177707381;  // std dev = 0.494, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   else if ( location(A, F), complex(A, G) )
%   | then if ( interaction(A, H), complex(H, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.22436295561026892;  // std dev = 2.679, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.761763991665096;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(K, G), interaction(K, L) )
%   | | | then return 0.04629548373973904;  // std dev = 1.866, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.23709964885667034;  // std dev = 1.718, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( phenotype(A, M), location(A, N) )
%   | | then return 0.06325703923607374;  // std dev = 0.461, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | else if ( enzyme(A, P) )
%   | | | then return 0.06681414810176135;  // std dev = 2.156, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.24652922366756505;  // std dev = 2.399, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(B, C) )
%   then return -0.2812330828705885;  // std dev = 0.325, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( complex(A, D) )
%   | then if ( interaction(E, A), location(A, F) )
%   | | then if ( enzyme(E, G), enzyme(A, H) )
%   | | | then return 0.4403135610665474;  // std dev = 0.938, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.13818870121606008;  // std dev = 4.482, 82.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=34 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.02135456649857396;  // std dev = 1.444, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.1262262390875265;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, K), phenotype(A, L) )
%   | | then if ( interaction(K, A), enzyme(K, M) )
%   | | | then return 0.042373642816521874;  // std dev = 2.040, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.28923387521487426;  // std dev = 1.994, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.41544145046366027;  // std dev = 2.627, 32.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
%   | | | else return 0.19940884856574798;  // std dev = 3.665, 54.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.2181595849258213;  // std dev = 0.347, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then if ( phenotype(E, F), interaction(A, A) )
%   | | | then return 0.5415686447989883;  // std dev = 0.898, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2111461784190678;  // std dev = 2.899, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.03279943603270176;  // std dev = 3.770, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   | | | else return 0.1410195565858297;  // std dev = 5.363, 114.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=54 */
%   else if ( interaction(A, I) )
%   | then return 0.36801728140989876;  // std dev = 0.749, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(K, A) )
%   | | | then return -0.10940665333537214;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.09331910449582513;  // std dev = 1.171, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.0852872930714226;  // std dev = 1.063, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( phenotype(C, E), interaction(F, D) )
%   | | then if ( phenotype(A, E), enzyme(F, G) )
%   | | | then return -0.05327935251026087;  // std dev = 3.613, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | | else return 0.03153006990135638;  // std dev = 3.576, 65.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | | else if ( enzyme(D, H) )
%   | | | then return 0.19912705682840925;  // std dev = 1.241, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.025468540697661135;  // std dev = 1.554, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( interaction(A, I), enzyme(C, J) )
%   | | then if ( interaction(I, C) )
%   | | | then return 0.019191348293175665;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4707706942469778;  // std dev = 0.738, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, C), interaction(C, K) )
%   | | | then return 0.03717372988792261;  // std dev = 4.544, 101.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=36 */
%   | | | else return 0.12808068981220358;  // std dev = 2.243, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   else return -0.09823994968745905;  // std dev = 0.402, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( interaction(C, C), phenotype(A, D) )
%   | then return -0.014983474846644598;  // std dev = 0.422, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else if ( complex(C, E), phenotype(C, F) )
%   | | then return 0.3144364457715835;  // std dev = 0.445, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( enzyme(C, G), complex(C, H) )
%   | | | then return -0.09454589583198976;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.12834292773669198;  // std dev = 1.974, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( interaction(I, A), interaction(I, I) )
%   | then return -0.09148453089030342;  // std dev = 0.437, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else if ( complex(A, J), location(A, K) )
%   | | then if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.15269393955120145;  // std dev = 1.579, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.04184515812168272;  // std dev = 3.055, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.015440024893287914;  // std dev = 4.818, 117.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=40 */
%   | | | else return -0.0715263438407455;  // std dev = 2.038, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, C), interaction(C, A) )
%   | then return 0.10266187708303856;  // std dev = 0.488, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else return -0.03817869795034121;  // std dev = 0.431, 124.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=36 */
%   else if ( enzyme(A, E), complex(A, F) )
%   | then if ( interaction(G, A), enzyme(G, E) )
%   | | then return -0.2816031349961598;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(H, E), interaction(H, I) )
%   | | | then return 0.13617000081065453;  // std dev = 1.238, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.059435121217692156;  // std dev = 1.410, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.1856520002431134;  // std dev = 1.662, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.028649431557659012;  // std dev = 4.456, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.04245116488787101;  // std dev = 1.741, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.36617729232287805;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.756', 'seconds']
Refined model CLL: -0.398204


******************************************
Best model found
******************************************
Results 

CLL : -0.378501 

AUC ROC : 0.661845 

AUC PR : 0.011012 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 15.726 

Total Inference Time : 5.108927965164185 

Total revision time: 38.42688290977478
Best scored revision CLL: -0.363229


Results 

CLL : -0.378501 

AUC ROC : 0.661845 

AUC PR : 0.011012 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 38.531368898391726 

Total Inference Time : 5.108927965164185 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.209
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), interaction(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17001334187917333;  // std dev = 7.957, 295.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(C, E), phenotype(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, A) )
%   | | | then return 0.136167811064763;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.1532409817964705;  // std dev = 2.980, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   else if ( location(F, A), phenotype(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), phenotype(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1933106682076194;  // std dev = 4.743, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   | | else if ( location(I, A), enzyme(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12288109777804863;  // std dev = 5.408, 143.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1648905035265297;  // std dev = 7.728, 262.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.18046554960588895;  // std dev = 4.801, 97.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=38 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07725231782585167;  // std dev = 6.195, 186.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=54 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E) )
%   | | then if ( enzyme(E, F), location(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09831674490357836;  // std dev = 7.722, 268.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=89 */
%   | | else return 0.18260751980042791;  // std dev = 0.496, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( phenotype(B, H) )
%   | | | then return -0.25288676771836616;  // std dev = 0.085, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0.1917705484736227;  // std dev = 7.162, 207.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=92 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.20652072839437305;  // std dev = 0.059, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08918699227101537;  // std dev = 7.440, 236.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=89 */
%   | else if ( location(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.018663870707533354;  // std dev = 1.423, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), enzyme(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.07736368922223327;  // std dev = 7.279, 250.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=89 */
%   | | | else return 0.10777452219462777;  // std dev = 1.319, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), enzyme(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.0028055268746743586;  // std dev = 4.944, 121.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=38 */
%   | | | else return 0.007879615165535075;  // std dev = 5.987, 179.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=54 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), location(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.032559141857201074;  // std dev = 7.585, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '15.948', 'seconds']
Parameter learned model CLL:-0.357933 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), interaction(C, D)', 'false': 'location(E, A)', 'false,false': 'interaction(A, F), phenotype(B, F)', 'false,false,false': 'interaction(A, G), function(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.957, 203, 92]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(C, E), phenotype(B, E)', 'true,false,false': 'interaction(A, A)', 'false': 'location(F, A), phenotype(B, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), phenotype(B, H)', 'false,false,false': 'location(I, A), enzyme(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.449, 7, 3], 'true,false,false,false': [2.98, 28, 13], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.743, 63, 35], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.408, 102, 41]}]
['proteinclass(A, B)', {'': 'location(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'location(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.728, 170, 92]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.801, 59, 38], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.195, 132, 54]}]
['proteinclass(A, B)', {'': 'location(C, A)', 'false': 'complex(D, A)', 'false,false': 'location(A, E)', 'false,false,true': 'enzyme(E, F), location(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.722, 179, 89], 'false,false,false': [0.496, 4, 3]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'phenotype(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.085, 57, 0], 'false,false,true,false': [7.162, 115, 92], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'location(F, A), phenotype(B, F)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.059, 54, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [7.44, 147, 89], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.423, 8, 3]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(D, A), phenotype(B, D)', 'false,false': 'location(E, A), enzyme(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.279, 161, 89], 'false,false,false,false': [1.319, 4, 3]}]
['proteinclass(A, B)', {'': 'location(C, A), phenotype(B, C)', 'false': 'location(D, A), enzyme(D, E)', 'false,false': 'interaction(A, F), complex(G, F)', 'false,false,false': 'enzyme(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.944, 83, 38], 'false,false,false,false': [5.987, 125, 54]}]
['proteinclass(A, B)', {'': 'location(A, C), location(C, D)', 'false': 'function(E, A), location(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.585, 184, 92]}]
{'': [nan, 0.21460499856363227], 'false': [nan, 0.21460499856363227], 'false,false': [nan, 0.21460499856363205], 'false,false,false': [nan, 0.21460499856363205]}
{'': [0.21530180699730886, 0.21590537353007086], 'false': [nan, 0.2159053735300706], 'false,false': [0.2295918367346947, 0.20450877793535213], 'false,false,true': [nan, 0.2295918367346944], 'true': [nan, 0.21530180699730886], 'true,false': [nan, 0.21530180699730886], 'true,false,false': [0.21000000000000002, 0.21653777513384914], 'false,false,false': [nan, 0.20450877793535213]}
{'': [nan, 0.22794374301999804], 'false': [nan, 0.22794374301999762], 'false,false': [nan, 0.22794374301999762]}
{'': [nan, 0.21946155203925127], 'false': [0.2376061224496227, 0.20634768925976174], 'false,false': [nan, 0.20634768925976174], 'false,false,false': [nan, 0.20634768925976174]}
{'': [nan, 0.22328017503902667], 'false': [nan, 0.22328017503902667], 'false,false': [0.22251259901000106, 0.245743289730261], 'false,false,true': [nan, 0.22251259901000106]}
{'': [nan, 0.22778850525669925], 'false': [nan, 0.22778850525669922], 'false,false': [0.22778850525669922, nan], 'false,false,true': [0.00012532131495852016, 0.24778879422859237]}
{'': [nan, 0.20349086357027255], 'false': [0.20412552555727978, 0.18407412299685919], 'false,true': [6.379679987693291e-05, 0.2345351159415292], 'false,true,false': [nan, 0.2345351159415292], 'false,false': [nan, 0.18407412299685919], 'false,false,false': [nan, 0.18407412299685919]}
{'': [nan, 0.21294780650895878], 'false': [nan, 0.21294780650895878], 'false,false': [nan, 0.21294780650895878], 'false,false,false': [0.21192492118347755, 0.24857979613015893]}
{'': [nan, 0.20096254898963362], 'false': [nan, 0.20096254898963362], 'false,false': [nan, 0.20096254898963423], 'false,false,false': [0.20202010452783578, 0.20023728070830252]}
{'': [nan, 0.20845301093453356], 'false': [nan, 0.20845301093453356], 'false,false': [nan, 0.20845301093453356]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- phenotype(B, H).;true;true
6;;proteinclass(A, B) :- location(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 8.581
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then return 0.5248156017661789;  // std dev = 0.471, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( interaction(F, D), interaction(G, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.28672036367094095;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.14386322081379807;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( complex(D, H) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( phenotype(A, I), complex(A, J) )
%   | then return 0.1289822684328457;  // std dev = 0.444, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | else if ( enzyme(A, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.32243464938522665;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else return 0.19148226843284427;  // std dev = 0.471, 102.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then return 0.2373259198916339;  // std dev = 0.493, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.07497462026754333;  // std dev = 0.435, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   else if ( enzyme(A, F) )
%   | then if ( complex(A, G), phenotype(A, H) )
%   | | then if ( interaction(A, I), phenotype(I, H) )
%   | | | then return 0.12628704443110736;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.25300729125166393;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else return 0.0835315731823184;  // std dev = 0.443, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), phenotype(K, L) )
%   | | | then return 0.23823320203438755;  // std dev = 2.450, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.6642623660722878;  // std dev = 0.910, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.18009186696369783;  // std dev = 3.773, 62.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=22 */
%   | | | else return 0.3332054912315484;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then return 0.08487019686959246;  // std dev = 0.454, 131.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=38 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), enzyme(F, G) )
%   | | then if ( interaction(A, H), complex(A, I) )
%   | | | then return 0.22108622838052655;  // std dev = 1.307, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.0830285944694508;  // std dev = 3.478, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.4184564034142387;  // std dev = 1.076, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.15585745570111506;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, L), phenotype(L, M) )
%   | | then if ( interaction(N, A), complex(A, P) )
%   | | | then return 0.16746763060868158;  // std dev = 1.363, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3994546324027827;  // std dev = 1.544, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( location(A, Q), interaction(A, R) )
%   | | | then return 0.0900635561314555;  // std dev = 1.870, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.21008848241564912;  // std dev = 3.070, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( phenotype(D, E), phenotype(A, E) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.0707528243263259;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.4582300730920198;  // std dev = 0.463, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( interaction(G, A), enzyme(D, H) )
%   | | then if ( complex(G, C), phenotype(D, I) )
%   | | | then return 0.12662429367502812;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3435819292038406;  // std dev = 1.470, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( enzyme(A, J), interaction(D, D) )
%   | | | then return 2.4973710130376733E-4;  // std dev = 1.714, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.1518705561715158;  // std dev = 2.197, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   else if ( location(A, K) )
%   | then if ( interaction(A, L), phenotype(A, M) )
%   | | then return 0.004939708519529786;  // std dev = 0.426, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | else return 0.09944294705784962;  // std dev = 0.472, 159.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=52 */
%   | else return 0.2636246106581977;  // std dev = 1.220, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( interaction(A, E), phenotype(E, F) )
%   | then if ( complex(C, G), interaction(E, H) )
%   | | then if ( interaction(H, E) )
%   | | | then return 0.22325280680910753;  // std dev = 1.211, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.061778736225125606;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( location(C, I), phenotype(A, F) )
%   | | | then return -0.048280725240180615;  // std dev = 1.495, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.0817889062372179;  // std dev = 1.791, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( interaction(J, C), interaction(K, J) )
%   | | then if ( interaction(C, J), interaction(K, K) )
%   | | | then return 0.027035138545219297;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.20256969078982806;  // std dev = 2.264, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( interaction(L, C), enzyme(L, M) )
%   | | | then return 0.458000235370944;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2756926450475021;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0.048172972330319384;  // std dev = 0.461, 207.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=63 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(B, C) )
%   then return -0.2746751819580631;  // std dev = 0.311, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), interaction(F, E) )
%   | | then if ( interaction(F, A), enzyme(A, G) )
%   | | | then return -0.07616882157899112;  // std dev = 1.514, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.16720831954265034;  // std dev = 2.580, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.08455621136800516;  // std dev = 1.812, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.08428530619379873;  // std dev = 1.793, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | else if ( interaction(I, A) )
%   | | then if ( location(I, J), location(A, J) )
%   | | | then return 0.19235343929072823;  // std dev = 4.515, 81.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=37 */
%   | | | else return 0.08746739034623081;  // std dev = 3.490, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.08438763020940752;  // std dev = 1.597, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.3892537788104094;  // std dev = 1.623, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.2200004083504449;  // std dev = 0.217, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( phenotype(A, E), interaction(A, F) )
%   | | then if ( phenotype(F, G) )
%   | | | then return 0.28001931796114665;  // std dev = 2.657, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | | | else return 0.1077514462314924;  // std dev = 1.967, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.15728960306689302;  // std dev = 4.106, 67.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=30 */
%   | | | else return 0.05602634830639138;  // std dev = 4.744, 97.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=36 */
%   else return 0.1805749318853678;  // std dev = 1.209, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( complex(A, D) )
%   | then if ( complex(C, D) )
%   | | then if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.19286006208868464;  // std dev = 1.303, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.016047968793831847;  // std dev = 1.033, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.04723201533405269;  // std dev = 0.440, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return 0.6443447100977766;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), phenotype(G, H) )
%   | then return -0.045146551509030394;  // std dev = 0.436, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   | else if ( complex(A, I) )
%   | | then if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.20578481949026606;  // std dev = 1.810, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return -0.05598308824699793;  // std dev = 3.353, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | else if ( location(A, L) )
%   | | | then return 0.07016157122388092;  // std dev = 4.402, 98.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=32 */
%   | | | else return -0.09306749834571566;  // std dev = 1.211, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( phenotype(A, E), phenotype(C, E) )
%   | then return -0.14760565248224006;  // std dev = 0.422, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | else if ( interaction(F, A), phenotype(C, G) )
%   | | then if ( interaction(H, F), interaction(C, C) )
%   | | | then return 0.19322640981055805;  // std dev = 1.213, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.008672911338271104;  // std dev = 1.911, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return -0.0748261469977152;  // std dev = 0.437, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   else if ( interaction(I, A), interaction(A, I) )
%   | then if ( location(A, J) )
%   | | then return -0.09159318731246209;  // std dev = 1.062, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.18486033911244779;  // std dev = 0.775, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then return 6.508192317984888E-4;  // std dev = 0.433, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   | | else if ( interaction(M, A), interaction(A, N) )
%   | | | then return 0.14735480406312867;  // std dev = 0.964, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.03986493041426826;  // std dev = 4.808, 108.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=37 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E) )
%   | then return -0.056565355996864644;  // std dev = 0.437, 99.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=28 */
%   | else return 0.21210336430921908;  // std dev = 0.486, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( phenotype(A, H), location(F, I) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.49038543727231854;  // std dev = 0.735, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0893058132861062;  // std dev = 2.369, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else return -0.0055919793815489335;  // std dev = 0.437, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.10298401996883311;  // std dev = 1.271, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.42371576036418884;  // std dev = 1.129, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(A, M), location(A, N) )
%   | | | then return 0.10232688162676266;  // std dev = 1.946, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.012325510224682713;  // std dev = 1.989, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.768', 'seconds']
Refined model CLL: -0.387256


******************************************
Best model found
******************************************
Results 

CLL : -0.338548 

AUC ROC : 0.683218 

AUC PR : 0.011149 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.581 

Total Inference Time : 3.3558480739593506 

Total revision time: 25.782438793182372
Best scored revision CLL: -0.357933


Results 

CLL : -0.338548 

AUC ROC : 0.683218 

AUC PR : 0.011149 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 25.886924781799316 

Total Inference Time : 3.3558480739593506 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.473
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), interaction(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20774243103447174;  // std dev = 7.479, 246.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(C, E), phenotype(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, A) )
%   | | | then return 0.20593349017034246;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.13528131625729928;  // std dev = 3.822, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   else if ( location(F, A), phenotype(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), phenotype(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13200875898754688;  // std dev = 4.424, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   | | else if ( location(I, A), enzyme(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14002439926125082;  // std dev = 4.847, 110.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15059215015316782;  // std dev = 7.533, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.11992821839817382;  // std dev = 4.318, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12177900588385471;  // std dev = 6.208, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E) )
%   | | then if ( enzyme(E, F), location(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10131967798114314;  // std dev = 7.423, 247.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=83 */
%   | | else return -0.0030994949928753136;  // std dev = 0.421, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( phenotype(B, H) )
%   | | | then return -0.2534972939354544;  // std dev = 0.036, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | | else return 0.16277886042644515;  // std dev = 7.090, 207.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=86 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.20798274054818197;  // std dev = 0.004, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16330279207805307;  // std dev = 6.764, 185.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=83 */
%   | else if ( location(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01541650466512085;  // std dev = 1.465, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), enzyme(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.07524069063106417;  // std dev = 6.916, 234.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=83 */
%   | | | else return 0.06230916519673957;  // std dev = 1.392, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), enzyme(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.09569464746927585;  // std dev = 3.875, 73.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=28 */
%   | | | else return 0.02026311541069958;  // std dev = 5.986, 185.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=58 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), location(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.022823637862512746;  // std dev = 7.250, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '16.829', 'seconds']
Parameter learned model CLL:-0.352622 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), interaction(C, D)', 'false': 'location(E, A)', 'false,false': 'interaction(A, F), phenotype(B, F)', 'false,false,false': 'interaction(A, G), function(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.479, 160, 86]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(C, E), phenotype(B, E)', 'true,false,false': 'interaction(A, A)', 'false': 'location(F, A), phenotype(B, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), phenotype(B, H)', 'false,false,false': 'location(I, A), enzyme(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.369, 5, 3], 'true,false,false,false': [3.822, 48, 21], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.424, 65, 28], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.847, 76, 34]}]
['proteinclass(A, B)', {'': 'location(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'location(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.533, 167, 86]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.318, 56, 28], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.208, 115, 58]}]
['proteinclass(A, B)', {'': 'location(C, A)', 'false': 'complex(D, A)', 'false,false': 'location(A, E)', 'false,false,true': 'enzyme(E, F), location(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.423, 164, 83], 'false,false,false': [0.421, 10, 3]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'phenotype(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.036, 82, 0], 'false,false,true,false': [7.09, 121, 86], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'location(F, A), phenotype(B, F)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.004, 60, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.764, 102, 83], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.465, 8, 3]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(D, A), phenotype(B, D)', 'false,false': 'location(E, A), enzyme(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.916, 151, 83], 'false,false,false,false': [1.392, 7, 3]}]
['proteinclass(A, B)', {'': 'location(C, A), phenotype(B, C)', 'false': 'location(D, A), enzyme(D, E)', 'false,false': 'interaction(A, F), complex(G, F)', 'false,false,false': 'enzyme(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.875, 45, 28], 'false,false,false,false': [5.986, 127, 58]}]
['proteinclass(A, B)', {'': 'location(A, C), location(C, D)', 'false': 'function(E, A), location(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.25, 172, 86]}]
{'': [nan, 0.22737788353493374], 'false': [nan, 0.22737788353493374], 'false,false': [nan, 0.22737788353493377], 'false,false,false': [nan, 0.22737788353493377]}
{'': [0.21453870804520253, 0.21213812516683359], 'true': [nan, 0.21453870804520253], 'true,false': [nan, 0.21453870804520253], 'true,false,false': [0.23437500000000008, 0.21172022684309982], 'false': [nan, 0.21213812516683078], 'false,false': [0.21042895132385353, 0.2135537190082656], 'false,false,false': [nan, 0.2135537190082656], 'false,false,true': [nan, 0.21042895132385322]}
{'': [nan, 0.22430200227533512], 'false': [nan, 0.22430200227533512], 'false,false': [nan, 0.22430200227533512]}
{'': [nan, 0.22252590596783114], 'false': [0.22200272233212953, 0.22277881773784772], 'false,false': [nan, 0.22277881773784772], 'false,false,false': [nan, 0.22277881773784772]}
{'': [nan, 0.22133862498183576], 'false': [nan, 0.22133862498183576], 'false,false': [0.22310332722696777, 0.1774510868239809], 'false,false,true': [nan, 0.22310332722696777]}
{'': [nan, 0.2091525331236445], 'false': [nan, 0.20915253312364454], 'false,false': [0.20915253312364454, nan], 'false,false,true': [1.6192463166601518e-05, 0.2428312053565701]}
{'': [nan, 0.2116237237639358], 'false': [0.21222011833445284, 0.195235443383213], 'false,true': [3.181389127471235e-07, 0.24728825631763277], 'false,true,false': [nan, 0.24728825631763277], 'false,false': [nan, 0.195235443383213], 'false,false,false': [nan, 0.195235443383213]}
{'': [nan, 0.20399888539788338], 'false': [nan, 0.20399888539788338], 'false,false': [nan, 0.20399888539788338], 'false,false,false': [0.2044272545956031, 0.19381467527815258]}
{'': [nan, 0.19825607894788433], 'false': [nan, 0.19825607894788433], 'false,false': [nan, 0.19825607894788363], 'false,false,false': [0.20567605521591137, 0.19371825893951014]}
{'': [nan, 0.20370621553391122], 'false': [nan, 0.20370621553391122], 'false,false': [nan, 0.20370621553391122]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- phenotype(B, H).;true;true
6;;proteinclass(A, B) :- location(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 11.667
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( enzyme(A, E), location(A, F) )
%   | then if ( interaction(G, C), interaction(C, G) )
%   | | then return 0.13087620782678508;  // std dev = 0.445, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( location(C, F), phenotype(C, H) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.19148226843284552;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(I, C), location(A, J) )
%   | | then if ( enzyme(I, K), location(I, J) )
%   | | | then return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.25288577720477545;  // std dev = 3.013, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( phenotype(A, L) )
%   | then return 0.13087620782678364;  // std dev = 0.445, 121.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=33 */
%   | else if ( interaction(A, M), interaction(M, M) )
%   | | then return 0.14386322081379807;  // std dev = 0.452, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else return 0.2812258581764354;  // std dev = 0.494, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A), location(D, C) )
%   | then if ( enzyme(D, E) )
%   | | then if ( phenotype(A, F), enzyme(A, G) )
%   | | | then return 0.14724662485358328;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.2638290932202669;  // std dev = 2.107, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.10845319942574651;  // std dev = 3.388, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | | else return 0.14962800914110094;  // std dev = 4.651, 99.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then return 0.4313678425465481;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.09145896494019387;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.2079112167620663;  // std dev = 3.170, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   else if ( interaction(N, A) )
%   | then return 0.12704826235689545;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return -0.012975437522930807;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( complex(A, D) )
%   | then return 0.1496245530201689;  // std dev = 0.480, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else return 0.010905693398558373;  // std dev = 0.405, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E) )
%   | | then if ( phenotype(E, H), enzyme(A, I) )
%   | | | then return 0.32081473671548016;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.10996907498088739;  // std dev = 2.325, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else return 0.3871566024238654;  // std dev = 1.102, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(K, J), enzyme(K, L) )
%   | | | then return 0.16876522738994662;  // std dev = 2.509, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.0857790039375733;  // std dev = 4.873, 116.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=33 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.13193402278237557;  // std dev = 2.476, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.27300529261771794;  // std dev = 1.801, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then return 0.45065072380390453;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.06765943034542433;  // std dev = 0.456, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(C, G) )
%   | | | then return 0.2578124006534673;  // std dev = 1.487, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.46450209485550525;  // std dev = 1.174, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( enzyme(C, H) )
%   | | | then return 0.12589943827994685;  // std dev = 1.637, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.39660118627924085;  // std dev = 1.073, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( location(A, I) )
%   | then if ( phenotype(A, J) )
%   | | then return 0.07326481917926297;  // std dev = 0.455, 141.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=41 */
%   | | else return 0.14560064144958795;  // std dev = 0.485, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | else return -0.032005528580585946;  // std dev = 0.426, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), complex(D, G) )
%   | | then if ( complex(A, G), complex(F, G) )
%   | | | then return 0.015251580342052639;  // std dev = 2.411, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.14020098915267779;  // std dev = 2.730, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | else if ( phenotype(A, E), interaction(D, D) )
%   | | | then return 0.0023902573401242844;  // std dev = 1.244, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.3377310805478153;  // std dev = 2.746, 31.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then if ( interaction(J, A), complex(J, I) )
%   | | | then return 0.41693637211219214;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13965767593279116;  // std dev = 1.757, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.007248535245360549;  // std dev = 2.574, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.07717348454000589;  // std dev = 4.314, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
%   else return -0.061461904840373276;  // std dev = 0.391, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(B, C) )
%   then return -0.26537126235035696;  // std dev = 0.331, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( phenotype(A, E), interaction(F, A) )
%   | | then if ( interaction(D, F), complex(D, G) )
%   | | | then return 0.028234564625595204;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.30437053979365725;  // std dev = 2.231, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | else if ( complex(D, H), location(A, I) )
%   | | | then return 0.13525407241016107;  // std dev = 2.934, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.032355119882018724;  // std dev = 3.082, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( complex(A, L) )
%   | | | then return 0.684022563568852;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.35522611497628914;  // std dev = 1.353, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( phenotype(A, M), interaction(A, N) )
%   | | | then return 0.5328796235367739;  // std dev = 0.898, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2072531400046712;  // std dev = 4.174, 70.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.22338298856616892;  // std dev = 0.276, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0.2402966334583069;  // std dev = 1.937, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.5843547315224467;  // std dev = 0.965, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.21565972327588806;  // std dev = 4.006, 64.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=34 */
%   | | | else return 0.10882060932935818;  // std dev = 4.424, 78.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=34 */
%   else if ( interaction(I, A) )
%   | then if ( interaction(I, I) )
%   | | then return -0.03981895524191235;  // std dev = 0.872, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.04271413134584794;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.12249118088768703;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( location(A, F), location(D, F) )
%   | | then return 0.36325925902064954;  // std dev = 0.701, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.08133261982425315;  // std dev = 0.870, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.07657323278184316;  // std dev = 0.419, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   else if ( interaction(A, G), location(A, H) )
%   | then if ( interaction(G, I), phenotype(G, J) )
%   | | then if ( phenotype(A, K), complex(G, L) )
%   | | | then return 0.0977793896793969;  // std dev = 2.435, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return -0.019545317481166745;  // std dev = 3.141, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else return -0.07835959806288953;  // std dev = 0.408, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | else if ( location(A, M) )
%   | | then if ( complex(A, N), enzyme(A, P) )
%   | | | then return -0.04860917804090595;  // std dev = 1.410, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.0787087791108513;  // std dev = 3.641, 64.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=24 */
%   | | else return -0.0538893561290971;  // std dev = 0.394, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return -0.01812832153157377;  // std dev = 0.438, 92.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=28 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), phenotype(F, G) )
%   | | then if ( complex(F, H), interaction(I, A) )
%   | | | then return 0.2331288345759724;  // std dev = 1.546, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.021893798703508972;  // std dev = 2.474, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.26847311684768593;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.004883498780185692;  // std dev = 2.209, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( complex(K, M) )
%   | | | then return 0.24558022469721907;  // std dev = 1.777, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.10708992381995149;  // std dev = 2.819, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else if ( enzyme(A, N), interaction(A, P) )
%   | | | then return -0.015464838467285205;  // std dev = 0.659, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.08985747612722002;  // std dev = 1.988, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( interaction(A, A), enzyme(A, D) )
%   | then return 0.009513181471323287;  // std dev = 0.617, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( phenotype(C, E) )
%   | | then return 0.10332640596746852;  // std dev = 0.435, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else return 0.26268549309407135;  // std dev = 1.052, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(A, H), complex(H, I) )
%   | | then if ( enzyme(F, J) )
%   | | | then return -0.010114292330439286;  // std dev = 1.347, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.2836349014200841;  // std dev = 0.968, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.09291635977575426;  // std dev = 0.433, 74.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then return -0.008099946177368995;  // std dev = 0.433, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( complex(A, M), interaction(N, A) )
%   | | | then return 0.18177401306956983;  // std dev = 1.331, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.053339186647504394;  // std dev = 3.941, 75.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=27 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.391', 'seconds']
Refined model CLL: -0.388373


******************************************
Best model found
******************************************
Results 

CLL : -0.366875 

AUC ROC : 0.664499 

AUC PR : 0.010313 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 11.667 

Total Inference Time : 4.108335256576538 

Total revision time: 29.49117292404175
Best scored revision CLL: -0.352622


Results 

CLL : -0.366875 

AUC ROC : 0.664499 

AUC PR : 0.010313 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 29.595658912658692 

Total Inference Time : 4.108335256576538 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.027
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18736704209539742;  // std dev = 7.325, 243.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=80 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G), phenotype(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, H), function(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1914822684328457;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), phenotype(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F) )
%   | | then if ( location(F, G), phenotype(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.156115995465899;  // std dev = 7.496, 257.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=83 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.3337766171675802;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16710995050091357;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.12240523161165802;  // std dev = 7.508, 262.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=82 */
%   | | else return 0.12286778832800849;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.15218172689183207;  // std dev = 4.659, 94.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=34 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1445510374332194;  // std dev = 5.853, 149.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=53 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(D, A), complex(D, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(C, E), complex(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11384390327371634;  // std dev = 7.303, 235.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=82 */
%   else if ( complex(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( enzyme(H, I), interaction(H, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05883101017049344;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, C), enzyme(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(B, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11962823507317677;  // std dev = 3.350, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   else if ( complex(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(I, J) )
%   | | then if ( phenotype(B, K) )
%   | | | then return -0.2560997194390577;  // std dev = 0.049, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0.14693558833927425;  // std dev = 6.423, 171.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=69 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.23333133293922487;  // std dev = 0.148, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16548738737442265;  // std dev = 4.937, 98.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=44 */
%   | else if ( interaction(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.040171773679050275;  // std dev = 5.333, 139.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), location(G, H) )
%   | | | then return 0.08037246153257281;  // std dev = 3.449, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | | else return -0.05091046408416102;  // std dev = 1.693, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.015336978064081585;  // std dev = 4.379, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | | else return 0.093897142796968;  // std dev = 4.581, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( location(D, F) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04239928528284328;  // std dev = 3.677, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   | | else if ( interaction(G, D), location(G, H) )
%   | | | then return 0.19195402743334877;  // std dev = 0.914, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, I), complex(J, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.0011036663214443049;  // std dev = 3.852, 76.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
%   | | | else return 0.05101139246355761;  // std dev = 5.042, 119.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=41 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(D, E) )
%   | | then return 0.053643096565780056;  // std dev = 4.179, 79.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(F, A), interaction(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.031017231652095672;  // std dev = 6.062, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '15.007', 'seconds']
Parameter learned model CLL:-0.367764 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), location(C, D)', 'true': 'phenotype(B, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E)', 'false,true,true': 'phenotype(B, F)', 'false,false': 'location(A, G), phenotype(B, G)', 'false,false,false': 'location(A, H), function(I, H)'}, {'true,true': [0.0, 0, 0], 'true,false': [7.325, 163, 80], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.0, 2, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.826, 10, 5]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'interaction(E, A), phenotype(B, E)', 'false,false': 'location(A, F)', 'false,false,true': 'location(F, G), phenotype(B, G)', 'false,false,false': 'interaction(H, A), enzyme(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.496, 174, 83], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'interaction(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.508, 180, 82], 'false,false,false': [1.854, 11, 5]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.659, 60, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.853, 96, 53]}]
['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'phenotype(B, C)', 'true,false': 'complex(D, A), complex(D, C)', 'true,false,false': 'enzyme(C, E), complex(F, C)', 'false': 'complex(G, A)', 'false,false': 'interaction(A, H)', 'false,false,true': 'enzyme(H, I), interaction(H, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.303, 153, 82], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.879, 12, 5], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'complex(E, A)', 'true,false': 'complex(F, C), enzyme(A, G)', 'true,false,false': 'phenotype(B, C)', 'false': 'complex(H, A)', 'false,false': 'complex(I, J)', 'false,false,true': 'phenotype(B, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.35, 30, 18], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.049, 45, 0], 'false,false,true,false': [6.423, 102, 69], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'interaction(F, A), phenotype(B, F)', 'false,false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.148, 21, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [4.937, 54, 44], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.333, 96, 43], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(D, A), phenotype(B, D)', 'false,false': 'interaction(E, A), enzyme(E, F)', 'false,false,true': 'interaction(G, E), location(G, H)', 'false,false,false': 'interaction(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [3.449, 34, 20], 'false,false,true,false': [1.693, 13, 4], 'false,false,false,true': [4.379, 74, 28], 'false,false,false,false': [4.581, 59, 35]}]
['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(B, C)', 'false': 'interaction(D, A), enzyme(D, E)', 'false,true': 'location(D, F)', 'false,true,true': 'phenotype(B, F)', 'false,true,false': 'interaction(G, D), location(G, H)', 'false,false': 'location(A, I), complex(J, I)', 'false,false,false': 'enzyme(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.677, 44, 22], 'false,true,false,true': [0.914, 2, 2], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.852, 54, 22], 'false,false,false,false': [5.042, 78, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(D, E)', 'false': 'function(F, A), interaction(G, A)', 'false,false': 'complex(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [4.179, 50, 29], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [6.062, 117, 58]}]
{'': [0.22083354502193137, 0.23268698060941817], 'false': [0.25, 0.22222222222222202], 'false,true': [0.25, nan], 'false,true,true': [nan, 0.25], 'false,false': [nan, 0.22222222222222202], 'false,false,false': [nan, 0.22222222222222202], 'true': [nan, 0.22083354502193137]}
{'': [nan, 0.21967407412530188], 'false': [nan, 0.21967407412530188], 'false,false': [0.218657295470052, 0.23999999999999994], 'false,false,false': [0.25, 0.22222222222222224], 'false,false,true': [nan, 0.218657295470052]}
{'': [nan, 0.21514190358150795], 'false': [nan, 0.21514190358150617], 'false,false': [0.2151600991196413, 0.21484375000000008]}
{'': [nan, 0.23030517693558944], 'false': [0.23093520254535496, 0.2298851869268795], 'false,false': [nan, 0.2298851869268795], 'false,false,false': [nan, 0.2298851869268795]}
{'': [0.2269504718688941, 0.20763170809946727], 'true': [nan, 0.2269504718688941], 'true,false': [nan, 0.2269504718688941], 'true,false,false': [nan, 0.2269504718688944], 'false': [nan, 0.20763170809946727], 'false,false': [0.20763170809946727, nan], 'false,false,true': [nan, 0.2076317080994674]}
{'': [0.23382801752738402, 0.21781340587290862], 'true': [nan, 0.23382801752738402], 'true,false': [nan, 0.23382801752738402], 'true,false,false': [nan, 0.23382801752738402], 'false': [nan, 0.2178134058729089], 'false,false': [0.2178134058729089, nan], 'false,false,true': [5.39244045561481e-05, 0.24127739521761243]}
{'': [nan, 0.2161755192742852], 'false': [0.22808703887632445, 0.20458588882190185], 'false,true': [0.0010373837248631617, 0.24867176493714244], 'false,true,false': [nan, 0.24867176493714244], 'false,false': [nan, 0.20458588882190185], 'false,false,false': [0.20458588882190185, nan]}
{'': [nan, 0.20877149809395978], 'false': [nan, 0.20877149809395978], 'false,false': [0.2110978936667868, 0.2078911943355251], 'false,false,true': [0.22035158315697276, 0.16859535420857213], 'false,false,false': [0.1880235129710107, 0.2232401835136916]}
{'': [nan, 0.20696783402503263], 'false': [0.20624032522772842, 0.20712072196516837], 'false,false': [nan, 0.2071207219651682], 'false,false,false': [0.1952567031019533, 0.21363920687324378], 'false,true': [0.20481232712017558, 0.2087137657254865], 'false,true,false': [0.2087137657254865, nan], 'false,true,true': [nan, 0.20481232712017558]}
{'': [0.2210641622324992, 0.20999880905919427], 'true': [nan, 0.2210641622324992], 'true,false': [0.2210641622324992, nan], 'false': [nan, 0.20999880905919477], 'false,false': [nan, 0.20999880905919477]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
5;false;phenotype(B, K).;true;true
6;;proteinclass(A, B) :- interaction(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 18.934
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( enzyme(E, C), interaction(F, E) )
%   | then return 0.13474467978036342;  // std dev = 0.447, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then if ( phenotype(G, I), location(A, J) )
%   | | then if ( complex(G, K), location(G, J) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5248156017661789;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.08621911053810885;  // std dev = 0.420, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | else if ( interaction(A, L) )
%   | | then if ( interaction(L, L) )
%   | | | then return 0.10814893509951237;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.2391013160518933;  // std dev = 3.147, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.1914822684328457;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.3181489350995113;  // std dev = 3.524, 50.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( complex(D, E), interaction(F, A) )
%   | then if ( location(A, G), interaction(F, D) )
%   | | then return 0.14959102153475204;  // std dev = 0.467, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.2391577591370046;  // std dev = 1.553, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.5130398393686355;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.05186450483789346;  // std dev = 0.422, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   else if ( interaction(I, A) )
%   | then if ( enzyme(I, J) )
%   | | then if ( phenotype(I, K), interaction(L, I) )
%   | | | then return 0.1936997313943138;  // std dev = 1.377, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3758539778544668;  // std dev = 1.916, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.24311374820944848;  // std dev = 2.773, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.1514368142388557;  // std dev = 4.545, 93.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=31 */
%   | else return 0.590866975238678;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( enzyme(D, E), location(A, F) )
%   | then if ( phenotype(A, G), location(D, F) )
%   | | then return 0.6011215829224482;  // std dev = 0.881, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.09771387424535605;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.4619153140039444;  // std dev = 1.168, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, J), complex(D, K) )
%   | | then return 0.03883954346140695;  // std dev = 0.424, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else return 0.1349034256276951;  // std dev = 0.471, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   else if ( interaction(L, A), enzyme(L, M) )
%   | then return 0.02863543776676568;  // std dev = 0.435, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | else if ( interaction(A, N), phenotype(N, P) )
%   | | then if ( phenotype(A, P) )
%   | | | then return 0.23439825175581155;  // std dev = 2.151, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.131566133822612;  // std dev = 2.286, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0.10109892632899188;  // std dev = 0.460, 95.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=29 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( complex(A, E), interaction(C, C) )
%   | then return 0.055398304165774154;  // std dev = 0.447, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else if ( location(A, F), interaction(G, A) )
%   | | then if ( complex(G, H), location(G, F) )
%   | | | then return 0.1507527327808452;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.41881929296338893;  // std dev = 1.868, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else return 0.5484937917029363;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(I, A), location(I, J) )
%   | then if ( enzyme(I, K) )
%   | | then if ( location(A, J), interaction(A, L) )
%   | | | then return -0.12370312505879744;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.04110723549901783;  // std dev = 2.649, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( complex(I, M), interaction(N, I) )
%   | | | then return 0.07298961724112787;  // std dev = 3.457, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | | else return 0.14399744978621784;  // std dev = 3.975, 68.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=25 */
%   | else return -0.0487292791528291;  // std dev = 0.407, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( complex(A, E), enzyme(A, F) )
%   | then return 0.17728955515577624;  // std dev = 0.499, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else return 0.04390710838296944;  // std dev = 0.460, 137.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=41 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then if ( interaction(I, A) )
%   | | then return -0.03231623788142165;  // std dev = 0.436, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.3368137447131768;  // std dev = 1.121, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.04168905011351094;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(A, M) )
%   | | | then return 0.20197031345702246;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.47146675026304646;  // std dev = 1.212, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(A, N), location(A, P) )
%   | | | then return 0.2516667118634663;  // std dev = 1.584, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.10696132623639805;  // std dev = 3.308, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(A, E), interaction(F, A) )
%   | then if ( complex(F, G), interaction(H, F) )
%   | | then if ( complex(H, G) )
%   | | | then return 0.2689416612906137;  // std dev = 1.197, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.09375770008197944;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.15410796995022322;  // std dev = 0.376, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then return 0.3827771072793624;  // std dev = 0.460, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.03775018498152047;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.1797526727823987;  // std dev = 1.229, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( phenotype(B, K) )
%   | then return -0.27197971460089676;  // std dev = 0.208, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( interaction(L, A), enzyme(L, M) )
%   | | then return -0.03600010994027655;  // std dev = 0.449, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | else return 0.1369743073301404;  // std dev = 0.492, 136.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=55 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.2670916628118263;  // std dev = 0.060, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( enzyme(A, E) )
%   | | then if ( interaction(F, A), location(A, G) )
%   | | | then return 0.17993369077669155;  // std dev = 2.489, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else return 0.6577389575986125;  // std dev = 0.090, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.16999842261900042;  // std dev = 2.499, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.07549938957051229;  // std dev = 3.072, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   else if ( complex(A, I), enzyme(A, J) )
%   | then return -0.03150208474226126;  // std dev = 0.421, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then return 0.015146467131203217;  // std dev = 0.444, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.08740476117142504;  // std dev = 2.917, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return -0.0414185214035499;  // std dev = 1.211, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(E, C), location(E, D) )
%   | then if ( phenotype(A, F), interaction(A, A) )
%   | | then return -0.07656040724626567;  // std dev = 0.415, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( phenotype(E, G), enzyme(C, H) )
%   | | | then return 0.13808343841195947;  // std dev = 2.200, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.01958408829421796;  // std dev = 6.195, 190.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=59 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( location(I, D) )
%   | | | then return 0.08684814469764192;  // std dev = 1.065, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.03951755610188704;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.4424043887283157;  // std dev = 0.767, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.20608566171739237;  // std dev = 1.222, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, L), enzyme(L, M) )
%   | then return -0.32813685979485174;  // std dev = 0.415, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else return -0.02765934117829403;  // std dev = 0.430, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return -0.04821198460515912;  // std dev = 0.434, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | else if ( enzyme(A, F), complex(C, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.09200883912219887;  // std dev = 1.291, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.11741289424965515;  // std dev = 0.873, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, C), enzyme(A, I) )
%   | | | then return -0.03703091527149508;  // std dev = 0.762, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.24363953293593654;  // std dev = 2.421, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   else if ( interaction(J, A), complex(J, K) )
%   | then if ( interaction(A, J) )
%   | | then return -0.15238201968583634;  // std dev = 0.345, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.06439901111902796;  // std dev = 1.899, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.05011663191563824;  // std dev = 3.654, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   | else return -0.051927041305002176;  // std dev = 0.440, 121.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.004914771498861453;  // std dev = 0.468, 84.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=29 */
%   | else return -0.14719951246578136;  // std dev = 0.407, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( interaction(G, A), interaction(F, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.18964212335628075;  // std dev = 1.260, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.08691346482898234;  // std dev = 1.631, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return -0.0446027418479275;  // std dev = 0.447, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( phenotype(A, J), interaction(H, H) )
%   | | | then return 0.05537052817241056;  // std dev = 1.076, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.23216460671113026;  // std dev = 2.617, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.04251509131645092;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.1644976417898103;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.277', 'seconds']
Refined model CLL: -0.398472


******************************************
Best model found
******************************************
Results 

CLL : -0.355002 

AUC ROC : 0.677882 

AUC PR : 0.010821 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 18.934 

Total Inference Time : 6.9687769412994385 

Total revision time: 39.90032056427002
Best scored revision CLL: -0.367764


Results 

CLL : -0.355002 

AUC ROC : 0.677882 

AUC PR : 0.010821 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 39.9498072013855 

Total Inference Time : 6.9687769412994385 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.753
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19036370020018087;  // std dev = 8.131, 298.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=99 */
%   else if ( interaction(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13592671287729013;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), phenotype(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F) )
%   | | then if ( location(F, G), phenotype(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17050151363678331;  // std dev = 8.021, 288.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=97 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.133360885312049;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.16669421864538228;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.14296170855259377;  // std dev = 8.117, 296.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=99 */
%   | | else return 0.1107314181605374;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.14113648622033328;  // std dev = 4.616, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12412137604928426;  // std dev = 6.854, 210.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=71 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(D, A), complex(D, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(C, E), complex(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12288156251735015;  // std dev = 7.959, 275.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=99 */
%   else if ( complex(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( enzyme(H, I), interaction(H, J) )
%   | | | then return 0.7758604580891713;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.06262654747713808;  // std dev = 1.691, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, C), enzyme(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(B, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10144277649574077;  // std dev = 4.069, 71.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=26 */
%   else if ( complex(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(I, J) )
%   | | then if ( phenotype(B, K) )
%   | | | then return -0.2583340014214895;  // std dev = 0.055, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | | else return 0.23772367920296855;  // std dev = 6.266, 157.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=78 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.24497698797212714;  // std dev = 0.299, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16447610080390898;  // std dev = 5.316, 113.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=52 */
%   | else if ( interaction(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.04497401771407655;  // std dev = 5.704, 159.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), location(G, H) )
%   | | | then return 0.006428030136378013;  // std dev = 4.561, 107.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=32 */
%   | | | else return -0.04172196138464529;  // std dev = 2.491, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.08656394566234724;  // std dev = 4.130, 76.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=30 */
%   | | | else return 0.0665724408930991;  // std dev = 4.413, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( location(D, F) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04204829183009764;  // std dev = 5.014, 123.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G), complex(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.03116001471720872;  // std dev = 3.555, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
%   | | | else return 0.017031303789887736;  // std dev = 5.086, 132.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=42 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(D, E) )
%   | | then return -0.004310433823064409;  // std dev = 5.619, 153.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=49 */
%   | | else return -0.010412862470690435;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( function(F, A), interaction(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.044632980398714904;  // std dev = 5.706, 152.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=54 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '10.778', 'seconds']
Parameter learned model CLL:-0.365201 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), location(C, D)', 'true': 'phenotype(B, C)', 'false': 'interaction(E, A)', 'false,false': 'location(A, F), phenotype(B, F)', 'false,false,false': 'location(A, G), function(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [8.131, 199, 99], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.9, 13, 5]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'interaction(E, A), phenotype(B, E)', 'false,false': 'location(A, F)', 'false,false,true': 'location(F, G), phenotype(B, G)', 'false,false,false': 'interaction(H, A), enzyme(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [8.021, 191, 97], 'false,false,false,true': [1.449, 7, 3], 'false,false,false,false': [1.633, 8, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'interaction(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.117, 197, 99], 'false,false,false': [1.879, 12, 5]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.616, 60, 33], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.854, 139, 71]}]
['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'phenotype(B, C)', 'true,false': 'complex(D, A), complex(D, C)', 'true,false,false': 'enzyme(C, E), complex(F, C)', 'false': 'complex(G, A)', 'false,false': 'interaction(A, H)', 'false,false,true': 'enzyme(H, I), interaction(H, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.959, 176, 99], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.691, 10, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'complex(E, A)', 'true,false': 'complex(F, C), enzyme(A, G)', 'true,false,false': 'phenotype(B, C)', 'false': 'complex(H, A)', 'false,false': 'complex(I, J)', 'false,false,true': 'phenotype(B, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.069, 45, 26], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.055, 81, 0], 'false,false,true,false': [6.266, 79, 78], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'interaction(F, A), phenotype(B, F)', 'false,false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.299, 29, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [5.316, 61, 52], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.704, 107, 52], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(D, A), phenotype(B, D)', 'false,false': 'interaction(E, A), enzyme(E, F)', 'false,false,true': 'interaction(G, E), location(G, H)', 'false,false,false': 'interaction(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [4.561, 75, 32], 'false,false,true,false': [2.491, 29, 9], 'false,false,false,true': [4.13, 46, 30], 'false,false,false,false': [4.413, 60, 33]}]
['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(B, C)', 'false': 'interaction(D, A), enzyme(D, E)', 'false,true': 'location(D, F)', 'false,true,true': 'phenotype(B, F)', 'false,false': 'location(A, G), complex(H, G)', 'false,false,false': 'enzyme(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [5.014, 82, 41], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.555, 40, 21], 'false,false,false,false': [5.086, 90, 42]}]
['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(D, E)', 'false': 'function(F, A), interaction(G, A)', 'false,false': 'complex(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.619, 104, 49], 'true,false,false': [0.816, 2, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.706, 98, 54]}]
{'': [0.2218481149497788, 0.20061728395061712], 'true': [nan, 0.2218481149497788], 'false': [nan, 0.20061728395061712], 'false,false': [nan, 0.20061728395061712], 'false,false,false': [nan, 0.20061728395061712]}
{'': [nan, 0.2229672457954992], 'false': [nan, 0.22296724579549942], 'false,false': [0.22340198786796417, 0.21694214876033044], 'false,false,true': [nan, 0.22340198786796417], 'false,false,false': [0.20999999999999988, 0.22222222222222213]}
{'': [nan, 0.2218458957711222], 'false': [nan, 0.22184589577112518], 'false,false': [0.2226069368040634, 0.2076124567474048]}
{'': [nan, 0.22541442648028517], 'false': [0.22910365011604916, 0.22369176671685614], 'false,false': [nan, 0.22369176671685614], 'false,false,false': [nan, 0.22369176671685614]}
{'': [0.23035190366411898, 0.22235504075076676], 'true': [nan, 0.23035190366411898], 'true,false': [nan, 0.23035190366411898], 'true,false,false': [nan, 0.23035190366411867], 'false': [nan, 0.22235504075076676], 'false,false': [0.22235504075076676, nan], 'false,false,true': [0.0, 0.20432403624507353]}
{'': [0.23322170991866822, 0.22021263804375174], 'true': [nan, 0.23322170991866822], 'true,false': [nan, 0.23322170991866822], 'true,false,false': [nan, 0.23322170991866822], 'false': [nan, 0.22021263804375082], 'false,false': [0.22021263804375082, nan], 'false,false,true': [3.706255422408492e-05, 0.2500587969494877]}
{'': [nan, 0.2154629259548228], 'false': [0.2268950491369539, 0.2046457256960592], 'false,true': [0.0030873668333575607, 0.2500936645278878], 'false,true,false': [nan, 0.2500936645278878], 'false,false': [nan, 0.2046457256960592], 'false,false,false': [0.2046457256960592, nan]}
{'': [nan, 0.20428925449834612], 'false': [nan, 0.20428925449834612], 'false,false': [0.18674521243379097, 0.21625545884494224], 'false,false,false': [0.22444018525013135, 0.20938713634785608], 'false,false,true': [0.19445500667596713, 0.16332521965114674]}
{'': [nan, 0.20153417823772798], 'false': [0.20439623343379915, 0.1995457739218051], 'false,true': [0.20439623343379915, nan], 'false,true,true': [nan, 0.20439623343379915], 'false,false': [nan, 0.1995457739218051], 'false,false,false': [0.20717493877342744, 0.1959570825321653]}
{'': [0.2066709394092758, 0.21416411584124617], 'false': [nan, 0.21416411584124617], 'false,false': [nan, 0.21416411584124617], 'true': [nan, 0.2066709394092758], 'true,false': [0.20636529614846189, 0.2222222222222222]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;proteinclass(A, B) :- interaction(C, A).;true;true
4;false;enzyme(H, I), interaction(H, J).;true;true
5;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
5;false;phenotype(B, K).;true;true


Refining candidate
***************************
Model training time 12.295
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( complex(C, E), phenotype(A, F) )
%   | | then if ( phenotype(C, G) )
%   | | | then return 0.2391013160518933;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.14386322081379804;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(I, A), enzyme(I, J) )
%   | then if ( interaction(K, I), enzyme(K, L) )
%   | | then if ( enzyme(A, M), complex(I, N) )
%   | | | then return 0.40360348055405776;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.2452457092930607;  // std dev = 2.712, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | else return 0.18314893509951236;  // std dev = 0.468, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | else return 0.14544175277907043;  // std dev = 0.452, 181.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then return 0.12410033823797642;  // std dev = 0.458, 212.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=63 */
%   else if ( enzyme(A, E) )
%   | then if ( complex(A, F) )
%   | | then if ( enzyme(G, E), phenotype(G, H) )
%   | | | then return 0.33950615929943895;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.17026661059152548;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.20161144789714897;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3779676977609772;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( interaction(K, M), interaction(M, K) )
%   | | | then return 0.4110561995482726;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.08950615929943895;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.10851417192889533;  // std dev = 2.088, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.2041777068210793;  // std dev = 3.277, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( enzyme(A, E), interaction(F, A) )
%   | then return 0.18775210307243909;  // std dev = 0.479, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else return 0.06066738561143518;  // std dev = 0.432, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   else if ( complex(A, G) )
%   | then if ( interaction(H, A), interaction(H, H) )
%   | | then return 0.5956506218520925;  // std dev = 0.917, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.129237752552866;  // std dev = 2.025, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.3713429260359384;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( complex(K, M), location(A, N) )
%   | | | then return 0.16760639942006708;  // std dev = 1.784, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.4594761355606459;  // std dev = 1.422, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(A, P), interaction(P, A) )
%   | | | then return 0.0262213910228622;  // std dev = 1.968, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.17303386534330592;  // std dev = 5.452, 127.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=47 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( enzyme(A, F), complex(A, G) )
%   | | then return 0.288904859500257;  // std dev = 1.210, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.02622843612328824;  // std dev = 0.441, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | else if ( phenotype(H, C), enzyme(H, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.09864803489259066;  // std dev = 3.453, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | | else return 0.1909234925351552;  // std dev = 3.607, 54.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
%   | | else return 0.037981496172239206;  // std dev = 0.433, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   else if ( interaction(A, K), phenotype(K, L) )
%   | then return -0.009486598473573367;  // std dev = 0.436, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | else if ( interaction(M, A), complex(M, N) )
%   | | then if ( phenotype(M, P), location(A, Q) )
%   | | | then return 0.14545063592793486;  // std dev = 3.069, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return 0.010224002606966;  // std dev = 1.710, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return -0.0026119305168121145;  // std dev = 0.429, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), interaction(F, F) )
%   | | then return 0.10693109992724313;  // std dev = 0.483, 120.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=43 */
%   | | else return 0.03988378118318305;  // std dev = 0.452, 139.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=39 */
%   | else if ( phenotype(A, G), complex(A, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.17626953817934407;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.047564677057983944;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.08485331508320791;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.27991596819974385;  // std dev = 2.507, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   else if ( enzyme(K, L), interaction(K, M) )
%   | then if ( complex(A, N) )
%   | | then return 0.371341477648087;  // std dev = 1.108, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.014673301639881377;  // std dev = 0.442, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then if ( phenotype(A, G), enzyme(E, H) )
%   | | then return 0.0028687464117276604;  // std dev = 0.432, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | else if ( phenotype(A, I), phenotype(E, I) )
%   | | | then return 0.2815556125093145;  // std dev = 1.772, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.045413465558047476;  // std dev = 2.294, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | else return -0.10466504126135928;  // std dev = 0.418, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( phenotype(B, J) )
%   | then return -0.25948035136519393;  // std dev = 0.250, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( phenotype(A, K), interaction(L, A) )
%   | | then if ( complex(L, M), interaction(L, L) )
%   | | | then return 0.37903821144038413;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | else return 0.22356388462705057;  // std dev = 3.972, 63.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=30 */
%   | | else if ( interaction(A, N), interaction(P, A) )
%   | | | then return 0.2551679043601528;  // std dev = 2.228, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.11551087765500308;  // std dev = 3.987, 66.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( phenotype(A, D) )
%   | then return -0.02125683955948719;  // std dev = 0.436, 132.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=35 */
%   | else if ( enzyme(C, E) )
%   | | then return -0.001768165402778246;  // std dev = 0.437, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | else return 0.07972369347877364;  // std dev = 0.467, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
%   else if ( complex(A, F), location(A, G) )
%   | then if ( interaction(A, H), enzyme(H, I) )
%   | | then return 0.28019942353343186;  // std dev = 0.958, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.008235578431809035;  // std dev = 0.445, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then if ( interaction(J, J) )
%   | | | then return 0.1043111259064156;  // std dev = 1.063, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.043872445840234316;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.12061866566430883;  // std dev = 1.283, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.4972495780274514;  // std dev = 0.805, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then return 0.03183649565004203;  // std dev = 0.450, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | else if ( phenotype(A, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.03971420941556995;  // std dev = 1.971, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.11056504908252701;  // std dev = 2.967, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.6853068295264206;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14730388020254034;  // std dev = 1.293, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( enzyme(A, J) )
%   | then return -0.016431072540267155;  // std dev = 0.444, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then return -0.03749714344744205;  // std dev = 0.451, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(A, L), interaction(L, A) )
%   | | | then return 0.24635291880255167;  // std dev = 1.419, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.059252131289298356;  // std dev = 4.616, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(C, D), complex(A, E) )
%   | then if ( interaction(A, F), interaction(G, C) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.013921636298733034;  // std dev = 1.834, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.19502793935283305;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(H, C), complex(H, E) )
%   | | | then return 0.08056228330926973;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.47047790393615563;  // std dev = 0.922, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then return -0.07147199445788711;  // std dev = 0.447, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.06281724378945663;  // std dev = 5.276, 133.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=47 */
%   | | | else return 0.010686197505528672;  // std dev = 4.417, 91.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=30 */
%   else if ( enzyme(A, M) )
%   | then return 0.4386238030910906;  // std dev = 0.906, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.1731915415988183;  // std dev = 0.975, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( complex(C, D), interaction(C, C) )
%   | then if ( enzyme(A, E), phenotype(C, F) )
%   | | then return -0.15154298326001805;  // std dev = 0.424, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( location(A, G), location(C, G) )
%   | | | then return -0.015843628507211344;  // std dev = 3.093, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return -0.12144063612805577;  // std dev = 0.833, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, C) )
%   | | then if ( complex(A, H), phenotype(C, I) )
%   | | | then return 0.11046416932754814;  // std dev = 1.944, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.24871321799412702;  // std dev = 2.162, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( interaction(J, C), interaction(J, J) )
%   | | | then return 0.057719961568948604;  // std dev = 3.795, 64.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=24 */
%   | | | else return 0.0013012962313653277;  // std dev = 5.026, 124.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=39 */
%   else if ( enzyme(A, K) )
%   | then return -0.15888172676852097;  // std dev = 0.405, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else return 0.015127450818977461;  // std dev = 1.107, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.528', 'seconds']
Refined model CLL: -0.393636


******************************************
Best model found
******************************************
Results 

CLL : -0.383196 

AUC ROC : 0.651035 

AUC PR : 0.010584 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.295 

Total Inference Time : 5.19671368598938 

Total revision time: 35.064924381256105
Best scored revision CLL: -0.365201


Results 

CLL : -0.383196 

AUC ROC : 0.651035 

AUC PR : 0.010584 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 35.114411018371584 

Total Inference Time : 5.19671368598938 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.294
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18819819618325753;  // std dev = 6.700, 203.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=67 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G), phenotype(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, H), function(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23103029103171546;  // std dev = 3.714, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), phenotype(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F) )
%   | | then if ( location(F, G), phenotype(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1412383994539771;  // std dev = 7.842, 288.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=89 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16083559661263155;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.17361467555453602;  // std dev = 6.689, 194.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=70 */
%   | | else return 0.1297603353696795;  // std dev = 3.858, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.13983127514177005;  // std dev = 4.951, 107.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=38 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11243713851921687;  // std dev = 6.027, 165.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=54 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(D, A), complex(D, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(C, E), complex(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09487148748324688;  // std dev = 6.841, 211.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=70 */
%   else if ( complex(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( enzyme(H, I), interaction(H, J) )
%   | | | then return 0.12463088777550167;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.08634335235551271;  // std dev = 3.493, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, C), enzyme(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(B, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05694998966202699;  // std dev = 3.316, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   else if ( complex(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(I, J) )
%   | | then if ( phenotype(B, K) )
%   | | | then return -0.25278316761076564;  // std dev = 0.021, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0.11368311148965306;  // std dev = 6.933, 207.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=76 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.2246349786219627;  // std dev = 0.128, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1748607067379141;  // std dev = 5.304, 114.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=51 */
%   | else if ( interaction(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.10087047489352907;  // std dev = 5.006, 113.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=41 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), location(G, H) )
%   | | | then return 0.0147208863434353;  // std dev = 2.846, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0.2587863860584039;  // std dev = 0.610, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.027012998030284466;  // std dev = 5.152, 131.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=41 */
%   | | | else return 0.05283949510297027;  // std dev = 4.921, 114.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=38 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( location(D, F) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04808261537142888;  // std dev = 2.860, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G), complex(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, I) )
%   | | | then return -2.397827969112853E-4;  // std dev = 4.487, 101.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=30 */
%   | | | else return 0.04123098638535401;  // std dev = 5.581, 148.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=49 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(D, E) )
%   | | then return 0.03162253357468585;  // std dev = 5.270, 133.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(F, A), interaction(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.02536182799968479;  // std dev = 5.572, 149.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=48 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '12.900', 'seconds']
Parameter learned model CLL:-0.358568 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), location(C, D)', 'true': 'phenotype(B, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E)', 'false,true,true': 'phenotype(B, F)', 'false,false': 'location(A, G), phenotype(B, G)', 'false,false,false': 'location(A, H), function(I, H)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.7, 136, 67], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.369, 5, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.714, 37, 22]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'interaction(E, A), phenotype(B, E)', 'false,false': 'location(A, F)', 'false,false,true': 'location(F, G), phenotype(B, G)', 'false,false,false': 'interaction(H, A), enzyme(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.842, 199, 89], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.414, 6, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'interaction(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.689, 124, 70], 'false,false,false': [3.858, 46, 22]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.951, 69, 38], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.027, 111, 54]}]
['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'phenotype(B, C)', 'true,false': 'complex(D, A), complex(D, C)', 'true,false,false': 'enzyme(C, E), complex(F, C)', 'false': 'complex(G, A)', 'false,false': 'interaction(A, H)', 'false,false,true': 'enzyme(H, I), interaction(H, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.841, 141, 70], 'false,true': [0.0, 0, 0], 'false,false,true,true': [1.595, 7, 4], 'false,false,true,false': [3.493, 38, 18], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'complex(E, A)', 'true,false': 'complex(F, C), enzyme(A, G)', 'true,false,false': 'phenotype(B, C)', 'false': 'complex(H, A)', 'false,false': 'complex(I, J)', 'false,false,true': 'phenotype(B, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.316, 35, 16], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.021, 44, 0], 'false,false,true,false': [6.933, 131, 76], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'interaction(F, A), phenotype(B, F)', 'false,false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.128, 25, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [5.304, 63, 51], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.006, 72, 41], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(D, A), phenotype(B, D)', 'false,false': 'interaction(E, A), enzyme(E, F)', 'false,false,true': 'interaction(G, E), location(G, H)', 'false,false,false': 'interaction(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [2.846, 27, 12], 'false,false,true,false': [0.61, 1, 1], 'false,false,false,true': [5.152, 90, 41], 'false,false,false,false': [4.921, 76, 38]}]
['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(B, C)', 'false': 'interaction(D, A), enzyme(D, E)', 'false,true': 'location(D, F)', 'false,true,true': 'phenotype(B, F)', 'false,false': 'location(A, G), complex(H, G)', 'false,false,false': 'enzyme(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.86, 25, 13], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.487, 71, 30], 'false,false,false,false': [5.581, 99, 49]}]
['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(D, E)', 'false': 'function(F, A), interaction(G, A)', 'false,false': 'complex(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.27, 89, 44], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.572, 101, 48]}]
{'': [0.2211167463418187, 0.2339051013588781], 'false': [0.2343749999999999, 0.23384085033036578], 'false,true': [0.2343749999999999, nan], 'false,true,true': [nan, 0.2343749999999999], 'false,false': [nan, 0.2338408503303645], 'false,false,false': [nan, 0.2338408503303645], 'true': [nan, 0.2211167463418187]}
{'': [nan, 0.21378433017014078], 'false': [nan, 0.21378433017014098], 'false,false': [0.21350830735453263, 0.2222446480160491], 'false,false,false': [nan, 0.22224464801604904], 'false,false,true': [nan, 0.21350830735453263]}
{'': [nan, 0.22795942366253488], 'false': [nan, 0.22795942366253408], 'false,false': [0.23064171460540328, 0.21888295419468293]}
{'': [nan, 0.2238516899088289], 'false': [0.22908167990496878, 0.2201649112886837], 'false,false': [nan, 0.2201649112886837], 'false,false,false': [nan, 0.2201649112886837]}
{'': [0.22177964694706417, 0.22024847179248003], 'true': [nan, 0.22177964694706417], 'true,false': [nan, 0.22177964694706417], 'true,false,false': [nan, 0.22177964694706406], 'false': [nan, 0.22024847179248003], 'false,false': [0.22024847179248003, nan], 'false,false,true': [0.23140495867768582, 0.21781634305542905]}
{'': [0.2155511768527969, 0.21094119471420275], 'true': [nan, 0.2155511768527969], 'true,false': [nan, 0.2155511768527969], 'true,false,false': [nan, 0.2155511768527969], 'false': [nan, 0.21094119471420264], 'false,false': [0.21094119471420264, nan], 'false,false,true': [9.665179677719284e-06, 0.23223468500575986]}
{'': [nan, 0.22417140231015661], 'false': [0.22608683553838235, 0.221812727446707], 'false,true': [0.0006572109208048004, 0.24681869582336186], 'false,true,false': [nan, 0.24681869582336186], 'false,false': [nan, 0.221812727446707], 'false,false,false': [0.221812727446707, nan]}
{'': [nan, 0.20767472472456153], 'false': [nan, 0.20767472472456147], 'false,false': [0.20946047319251015, 0.20735382949423478], 'false,false,true': [0.20775138812120786, 0.18612541847574565], 'false,false,false': [0.20264660978053683, 0.2124063579571855]}
{'': [nan, 0.20758874468144364], 'false': [0.21520896632847977, 0.2063516178770925], 'false,true': [0.21520896632847977, nan], 'false,true,true': [nan, 0.21520896632847977], 'false,false': [nan, 0.20635161787709178], 'false,false,false': [0.19934585747357875, 0.2104349764145853]}
{'': [0.20884475900633398, 0.2083807691136444], 'true': [nan, 0.20884475900633398], 'true,false': [0.20884475900633398, nan], 'false': [nan, 0.20838076911364442], 'false,false': [nan, 0.20838076911364442]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
5;false;phenotype(B, K).;true;true
6;;proteinclass(A, B) :- interaction(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 8.922
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( interaction(A, E), interaction(E, F) )
%   | then if ( interaction(F, E), interaction(G, A) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then return 0.0803711573217344;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.27920156667845974;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   else if ( location(A, L) )
%   | then return 0.16370449065506928;  // std dev = 0.461, 216.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=66 */
%   | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( interaction(E, A), enzyme(A, F) )
%   | then return 0.2161438745874665;  // std dev = 0.489, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | else return 0.06501616617025026;  // std dev = 0.428, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   else if ( location(A, G), enzyme(A, H) )
%   | then if ( interaction(I, A), phenotype(I, J) )
%   | | then return 0.09509475239124063;  // std dev = 0.438, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( enzyme(K, H), complex(K, L) )
%   | | | then return 0.1703635695955417;  // std dev = 2.944, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return 0.5036969029288748;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(M, A), interaction(M, M) )
%   | | then if ( enzyme(M, N) )
%   | | | then return 0.17036356959554153;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.5472746504798406;  // std dev = 1.189, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(P, A), complex(P, Q) )
%   | | | then return 0.2915756908076629;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.16496835555331216;  // std dev = 4.408, 88.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=29 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( phenotype(C, E), interaction(C, F) )
%   | then if ( enzyme(C, G), enzyme(A, G) )
%   | | then if ( complex(A, H), location(F, D) )
%   | | | then return 0.18149472117172594;  // std dev = 1.364, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.5680387427308292;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.13349799023085618;  // std dev = 0.469, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
%   | else if ( interaction(C, I), interaction(I, C) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.5087721171649519;  // std dev = 0.881, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.27992568973132503;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.3723902613837947;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.08103183440057635;  // std dev = 2.093, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   else if ( interaction(N, A), interaction(N, N) )
%   | then return 0.02060997127925902;  // std dev = 0.438, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | else return 0.14960127076561952;  // std dev = 0.473, 111.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=38 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( interaction(E, A), interaction(E, E) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.15670480296406264;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.4792376304915105;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(G, C), enzyme(G, H) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.44817948810098546;  // std dev = 0.820, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1720027087785908;  // std dev = 2.414, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( phenotype(I, D), enzyme(I, J) )
%   | | | then return 0.14490835572393676;  // std dev = 1.790, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.015460805898709573;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( interaction(A, K) )
%   | then if ( interaction(K, K), phenotype(A, L) )
%   | | then return -0.0034536725655942902;  // std dev = 0.433, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else return 0.15731569920142482;  // std dev = 0.488, 86.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=33 */
%   | else return 0.060003895404962725;  // std dev = 0.449, 107.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=30 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then return -0.08713527832949686;  // std dev = 0.409, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | else return 0.03366550894006322;  // std dev = 0.454, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(A, G), complex(A, H) )
%   | | then return -0.1902577762331568;  // std dev = 0.379, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( enzyme(F, I) )
%   | | | then return 0.26406891716479286;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.004670871913635418;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(J, L), interaction(L, J) )
%   | | | then return 0.11152662012493982;  // std dev = 2.986, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.22197442303662243;  // std dev = 2.181, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( phenotype(A, M), complex(A, N) )
%   | | | then return -0.010174917550583551;  // std dev = 1.957, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.06487721708815249;  // std dev = 5.037, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), enzyme(A, F) )
%   | then if ( phenotype(A, G) )
%   | | then return 0.14205194776262262;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.04716139685138894;  // std dev = 1.445, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.19887634000338483;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.02681742519317728;  // std dev = 0.437, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   else if ( phenotype(B, J) )
%   | then return -0.2622725919862855;  // std dev = 0.170, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(A, K), location(A, L) )
%   | | then if ( complex(K, M), interaction(K, K) )
%   | | | then return 0.28553155391984686;  // std dev = 1.659, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.09019490151718314;  // std dev = 4.065, 71.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=26 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.253998239689614;  // std dev = 3.096, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.18530495564305333;  // std dev = 3.737, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.24961119132610948;  // std dev = 0.244, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( location(A, E), phenotype(A, F) )
%   | | then if ( interaction(G, A), location(G, E) )
%   | | | then return 0.3466630328331897;  // std dev = 2.001, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.12397828928010315;  // std dev = 2.609, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.02661313519505061;  // std dev = 2.671, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.11123814113720407;  // std dev = 3.177, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   else if ( interaction(I, A), complex(I, J) )
%   | then if ( phenotype(A, K), complex(A, L) )
%   | | then if ( interaction(I, M), complex(M, J) )
%   | | | then return 0.12532944560463855;  // std dev = 1.489, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.4063102184140491;  // std dev = 0.755, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.05482274375829597;  // std dev = 0.454, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | else return 0.0020234073288820154;  // std dev = 0.438, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( enzyme(A, E), interaction(A, A) )
%   | then return -0.1680681892326608;  // std dev = 0.381, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( complex(C, F), phenotype(C, G) )
%   | | then return 0.0848003021754058;  // std dev = 0.469, 59.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=23 */
%   | | else return -0.012910964382316394;  // std dev = 0.429, 84.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=23 */
%   else if ( enzyme(A, H), complex(A, I) )
%   | then if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.1818001005509144;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.08040352523378293;  // std dev = 1.136, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.3695496104890535;  // std dev = 0.699, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, M), complex(A, N) )
%   | | then return -0.014580156783728131;  // std dev = 0.426, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( interaction(P, A), interaction(P, P) )
%   | | | then return 0.004863261366796406;  // std dev = 1.827, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.08146979002989486;  // std dev = 3.914, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( interaction(A, E), interaction(E, F) )
%   | then return -0.08452010963950395;  // std dev = 0.429, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | else if ( complex(A, G), complex(C, G) )
%   | | then return -0.05547362764760131;  // std dev = 0.426, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( enzyme(A, H), location(C, I) )
%   | | | then return 0.007301422275140126;  // std dev = 2.092, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.15713590317779344;  // std dev = 2.015, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   else if ( complex(A, J), enzyme(A, K) )
%   | then if ( interaction(L, A), phenotype(L, M) )
%   | | then return 0.7214422555955305;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, N), enzyme(N, K) )
%   | | | then return 0.28880765348707005;  // std dev = 1.509, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -9.42760555305705E-4;  // std dev = 1.644, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( complex(A, P), interaction(A, Q) )
%   | | then return -0.030194789452775275;  // std dev = 0.427, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else return 0.035833583949428524;  // std dev = 0.458, 135.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=44 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( enzyme(C, E), interaction(F, C) )
%   | then return 0.08554014484130813;  // std dev = 0.475, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else return -0.04456522731427548;  // std dev = 0.440, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, A), phenotype(H, I) )
%   | | then return -0.13531156747188378;  // std dev = 0.431, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( phenotype(G, J), interaction(G, K) )
%   | | | then return 0.2202231730853202;  // std dev = 2.581, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | | else return -0.02563575691874548;  // std dev = 2.984, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | else if ( complex(A, L) )
%   | | then if ( enzyme(A, M), phenotype(A, N) )
%   | | | then return 0.21519209665186684;  // std dev = 1.271, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.3491075226665142;  // std dev = 1.081, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(P, A), interaction(P, P) )
%   | | | then return -0.11524501808553222;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.14577800115753312;  // std dev = 2.661, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.948', 'seconds']
Refined model CLL: -0.4033


******************************************
Best model found
******************************************
Results 

CLL : -0.349549 

AUC ROC : 0.683855 

AUC PR : 0.011112 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.922 

Total Inference Time : 3.63322114944458 

Total revision time: 27.314698616027833
Best scored revision CLL: -0.358568


Results 

CLL : -0.349549 

AUC ROC : 0.683855 

AUC PR : 0.011112 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 27.36418525314331 

Total Inference Time : 3.63322114944458 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.152
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1479448534668607;  // std dev = 7.101, 245.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=71 */
%   else if ( interaction(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15814893509951233;  // std dev = 3.240, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), phenotype(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F) )
%   | | then if ( location(F, G), phenotype(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16444203379164482;  // std dev = 7.482, 255.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=83 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.17250194926612536;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.23833943924290413;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.17417850056032885;  // std dev = 6.748, 198.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=71 */
%   | | else return 0.12572754682920714;  // std dev = 3.212, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.18826910813440456;  // std dev = 4.099, 70.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=28 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11301553369159814;  // std dev = 6.263, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(D, A), complex(D, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(C, E), complex(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09000490759099605;  // std dev = 6.912, 218.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=71 */
%   else if ( complex(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( enzyme(H, I), interaction(H, J) )
%   | | | then return 0.08830445304208384;  // std dev = 2.028, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.0596595323677722;  // std dev = 2.533, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, C), enzyme(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(B, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08915500915228303;  // std dev = 3.989, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   else if ( complex(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(I, J) )
%   | | then if ( phenotype(B, K) )
%   | | | then return -0.25112180519760186;  // std dev = 0.047, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0.2520677279642869;  // std dev = 5.547, 123.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=62 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.22754612819171544;  // std dev = 0.200, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17772661651259597;  // std dev = 5.305, 112.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=52 */
%   | else if ( interaction(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.07046654548350968;  // std dev = 4.519, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), location(G, H) )
%   | | | then return -0.007124997361182477;  // std dev = 3.057, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return 0.09407587526294109;  // std dev = 1.292, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04102152149992388;  // std dev = 5.094, 126.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=42 */
%   | | | else return 0.025314537772370246;  // std dev = 4.136, 85.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( location(D, F) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05645002529194817;  // std dev = 3.195, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G), complex(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.010868654394208595;  // std dev = 3.701, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | | else return 0.03910922146215588;  // std dev = 5.376, 143.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=47 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(D, E) )
%   | | then return 0.02645514226172564;  // std dev = 5.403, 140.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(F, A), interaction(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04182383209683597;  // std dev = 4.852, 112.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=39 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '17.397', 'seconds']
Parameter learned model CLL:-0.35816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), location(C, D)', 'true': 'phenotype(B, C)', 'false': 'interaction(E, A)', 'false,false': 'location(A, F), phenotype(B, F)', 'false,false,false': 'location(A, G), function(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [7.101, 174, 71], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.24, 35, 15]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'interaction(E, A), phenotype(B, E)', 'false,false': 'location(A, F)', 'false,false,true': 'location(F, G), phenotype(B, G)', 'false,false,false': 'interaction(H, A), enzyme(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.482, 172, 83], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [1.096, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'interaction(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.748, 127, 71], 'false,false,false': [3.212, 33, 15]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.099, 42, 28], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.263, 121, 58]}]
['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'phenotype(B, C)', 'true,false': 'complex(D, A), complex(D, C)', 'true,false,false': 'enzyme(C, E), complex(F, C)', 'false': 'complex(G, A)', 'false,false': 'interaction(A, H)', 'false,false,true': 'enzyme(H, I), interaction(H, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.912, 147, 71], 'false,true': [0.0, 0, 0], 'false,false,true,true': [2.028, 13, 6], 'false,false,true,false': [2.533, 22, 9], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'complex(E, A)', 'true,false': 'complex(F, C), enzyme(A, G)', 'true,false,false': 'phenotype(B, C)', 'false': 'complex(H, A)', 'false,false': 'complex(I, J)', 'false,false,true': 'phenotype(B, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.989, 47, 24], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.047, 54, 0], 'false,false,true,false': [5.547, 61, 62], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'interaction(F, A), phenotype(B, F)', 'false,false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.2, 43, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [5.305, 60, 52], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.519, 65, 34], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(D, A), phenotype(B, D)', 'false,false': 'interaction(E, A), enzyme(E, F)', 'false,false,true': 'interaction(G, E), location(G, H)', 'false,false,false': 'interaction(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [3.057, 36, 14], 'false,false,true,false': [1.292, 5, 3], 'false,false,false,true': [5.094, 84, 42], 'false,false,false,false': [4.136, 58, 27]}]
['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(B, C)', 'false': 'interaction(D, A), enzyme(D, E)', 'false,true': 'location(D, F)', 'false,true,true': 'phenotype(B, F)', 'false,false': 'location(A, G), complex(H, G)', 'false,false,false': 'enzyme(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.195, 32, 17], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.701, 47, 22], 'false,false,false,false': [5.376, 96, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(D, E)', 'false': 'function(F, A), interaction(G, A)', 'false,false': 'complex(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.403, 93, 47], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.852, 73, 39]}]
{'': [0.2058142440649732, 0.2099999999999995], 'false': [nan, 0.2099999999999995], 'false,false': [nan, 0.20999999999999955], 'false,false,false': [nan, 0.20999999999999955], 'true': [nan, 0.2058142440649732]}
{'': [nan, 0.2200600757283919], 'false': [nan, 0.2200600757283921], 'false,false': [0.219535954538223, 0.23441863389920195], 'false,false,false': [0.22222222222222218, 0.24011101524797374], 'false,false,true': [nan, 0.219535954538223]}
{'': [nan, 0.22741031761947567], 'false': [nan, 0.22741031761947517], 'false,false': [0.22996739689492224, 0.2149729184795723]}
{'': [nan, 0.22616546227213782], 'false': [0.24004726034986845, 0.21914478987665553], 'false,false': [nan, 0.21914478987665553], 'false,false,false': [nan, 0.21914478987665553]}
{'': [0.21917750259955834, 0.21078212913444488], 'true': [nan, 0.21917750259955834], 'true,false': [nan, 0.21917750259955834], 'true,false,false': [nan, 0.2191775025995579], 'false': [nan, 0.21078212913444488], 'false,false': [0.21078212913444488, nan], 'false,false,true': [0.21646685810776345, 0.20698613844629574]}
{'': [0.22408039512879283, 0.22754021768432925], 'false': [nan, 0.22754021768432897], 'false,false': [0.22754021768432897, nan], 'false,false,true': [4.11766692557915e-05, 0.25017047742829457], 'true': [nan, 0.22408039512879283], 'true,false': [nan, 0.22408039512879283], 'true,false,false': [nan, 0.22408039512879283]}
{'': [nan, 0.21145867063687132], 'false': [0.21476043750209625, 0.20627292399503633], 'false,true': [0.0009310060551945934, 0.25129064695781045], 'false,true,false': [nan, 0.25129064695781045], 'false,false': [nan, 0.20627292399503633], 'false,false,false': [0.20627292399503633, nan]}
{'': [nan, 0.20144245120134066], 'false': [nan, 0.20144245120134074], 'false,false': [0.1910651511573048, 0.20412762062282608], 'false,false,false': [0.20596701882591698, 0.20125365922692975], 'false,false,true': [0.18684861581597756, 0.2085895171958725]}
{'': [nan, 0.20257407018099097], 'false': [0.2082856071659579, 0.201121789067007], 'false,true': [0.2082856071659579, nan], 'false,true,true': [nan, 0.2082856071659579], 'false,false': [nan, 0.2011217890670074], 'false,false,false': [0.19849502489271625, 0.20212967538112814]}
{'': [0.20854262890616895, 0.21021535901225935], 'false': [nan, 0.2102153590122592], 'false,false': [nan, 0.2102153590122592], 'true': [nan, 0.20854262890616895], 'true,false': [0.20854262890616895, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
5;false;phenotype(B, K).;true;true
6;;proteinclass(A, B) :- interaction(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 9.14
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then return 0.19148226843284558;  // std dev = 0.471, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else return 0.06648226843284567;  // std dev = 0.406, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( complex(E, G), phenotype(A, F) )
%   | | then return 0.08395538671241559;  // std dev = 0.418, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.38939893509951234;  // std dev = 2.823, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | | | else return 0.24050187627598293;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( phenotype(K, I), interaction(K, A) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.324815601766179;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.16997689208875832;  // std dev = 4.467, 93.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
%   | | | else return 0.088918165868743;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(D, G) )
%   | | | then return 0.34986182383500625;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.32974340821940584;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5993010318056843;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then return 0.01652849050167296;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(C, J), enzyme(J, K) )
%   | | | then return 0.26368447820683094;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.12188709001849571;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( interaction(A, L) )
%   | then return 0.10229138888386767;  // std dev = 0.451, 149.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=42 */
%   | else if ( complex(A, M) )
%   | | then return 0.09279675953576562;  // std dev = 0.437, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else return 0.24840556477319653;  // std dev = 0.493, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( enzyme(C, E), complex(A, F) )
%   | then return 0.049682267155166625;  // std dev = 0.427, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | else if ( interaction(A, A), enzyme(A, G) )
%   | | then return -0.06385921254139178;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( complex(A, H), complex(C, I) )
%   | | | then return 0.2313278696109803;  // std dev = 2.145, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.11749538140252307;  // std dev = 5.345, 131.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=42 */
%   else if ( interaction(A, J), location(A, K) )
%   | then if ( phenotype(A, L) )
%   | | then if ( interaction(J, M), enzyme(M, N) )
%   | | | then return 0.18091965893895182;  // std dev = 1.796, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.26694791856927247;  // std dev = 2.179, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else return 0.11345046231700676;  // std dev = 0.460, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else if ( phenotype(A, P) )
%   | | then return 0.4568875611777472;  // std dev = 1.162, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.3149449404228024;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( interaction(A, A) )
%   | then if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.360408456911175;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.16584573065393213;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then return 0.05185658676032438;  // std dev = 0.442, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.14470135026048753;  // std dev = 1.963, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.3846714347935543;  // std dev = 1.076, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, K), complex(K, L) )
%   | then return 0.01573476174714814;  // std dev = 0.427, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | else if ( location(A, M), interaction(N, A) )
%   | | then return 0.06249961180815291;  // std dev = 0.454, 134.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=39 */
%   | | else if ( interaction(A, P), phenotype(P, Q) )
%   | | | then return 0.08193700220698147;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.47116391447213407;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then return 0.04669199145521125;  // std dev = 0.453, 127.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=36 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E) )
%   | | then if ( phenotype(G, H), location(G, I) )
%   | | | then return 0.14918510424132117;  // std dev = 2.713, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.5213598964785122;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(E, J) )
%   | | | then return 0.020093101804828848;  // std dev = 1.190, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1452606584589368;  // std dev = 2.226, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else if ( interaction(A, K), enzyme(A, L) )
%   | | then if ( interaction(K, K) )
%   | | | then return -0.0015786741336453886;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3374544637096816;  // std dev = 1.084, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, M), interaction(A, N) )
%   | | | then return -8.557455193304648E-4;  // std dev = 2.596, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.09306427371220503;  // std dev = 2.819, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( enzyme(A, E), phenotype(A, F) )
%   | then return -0.011180125891171193;  // std dev = 0.438, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( phenotype(A, I), phenotype(G, I) )
%   | | | then return 0.37922920677072003;  // std dev = 1.114, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.15876282861116608;  // std dev = 2.167, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else return 0.010634625417403705;  // std dev = 0.439, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   else if ( phenotype(B, J) )
%   | then return -0.26440897336107866;  // std dev = 0.274, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.2644647449351801;  // std dev = 1.518, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.47483642878857546;  // std dev = 1.168, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.1507853066541999;  // std dev = 3.191, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | | | else return 0.23313253810699566;  // std dev = 4.183, 70.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=34 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.25759279778121436;  // std dev = 0.052, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then if ( phenotype(E, G), location(A, H) )
%   | | | then return 0.19382218205189086;  // std dev = 3.375, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | | | else return 0.514693565150378;  // std dev = 1.203, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.07615259741445259;  // std dev = 3.306, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | | else return 0.31898639947386637;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( interaction(J, A), complex(J, K) )
%   | then if ( phenotype(J, L) )
%   | | then if ( complex(A, M), enzyme(J, N) )
%   | | | then return 0.0302727972166284;  // std dev = 1.465, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.2126937323201487;  // std dev = 2.198, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else return -0.09546126709895597;  // std dev = 0.829, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.009511577678034622;  // std dev = 0.439, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, A), phenotype(A, C) )
%   then return -0.16086409472870872;  // std dev = 0.360, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), complex(F, G) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.0414511059421218;  // std dev = 1.929, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.07904930167615677;  // std dev = 2.069, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( interaction(J, A), phenotype(J, D) )
%   | | | then return -0.16678837182695705;  // std dev = 1.247, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.08053600653675044;  // std dev = 1.686, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( interaction(A, L), phenotype(L, M) )
%   | | | then return -0.008425678612051664;  // std dev = 1.330, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.17753055656141167;  // std dev = 2.090, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( interaction(N, A), interaction(A, P) )
%   | | | then return 0.0779157040309948;  // std dev = 3.391, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return 0.03102817218104739;  // std dev = 4.573, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( phenotype(D, E), location(D, C) )
%   | then if ( interaction(D, D) )
%   | | then return -0.04209950702886492;  // std dev = 0.400, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.10418410930100558;  // std dev = 3.073, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | | else return -0.00406815247745161;  // std dev = 2.397, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else if ( enzyme(D, H), interaction(D, I) )
%   | | then if ( interaction(D, D), phenotype(A, J) )
%   | | | then return 0.12888861341158062;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.02613770412698806;  // std dev = 1.744, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(K, A), interaction(D, L) )
%   | | | then return 0.11947950029198287;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.3729782739684829;  // std dev = 1.104, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( complex(A, M), phenotype(A, N) )
%   | then return 0.07199290815122572;  // std dev = 0.462, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else return -0.014379803110715699;  // std dev = 0.440, 102.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=30 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( location(A, E), location(C, E) )
%   | then if ( interaction(A, F), enzyme(F, D) )
%   | | then return 0.47015760461308853;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(C, G), phenotype(A, H) )
%   | | | then return 0.07250425834110114;  // std dev = 1.919, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.3262819911301448;  // std dev = 1.003, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.02530532729299785;  // std dev = 0.425, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   else if ( interaction(I, A) )
%   | then if ( interaction(A, J), phenotype(A, K) )
%   | | then return -0.050545714122904116;  // std dev = 0.426, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | else if ( interaction(L, I), location(A, M) )
%   | | | then return 0.012324137889645623;  // std dev = 4.077, 84.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=27 */
%   | | | else return 0.14937485794528804;  // std dev = 2.312, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | else if ( phenotype(A, N), complex(A, P) )
%   | | then return 0.05205938595103128;  // std dev = 0.460, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return -0.07853831857080429;  // std dev = 0.438, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.640', 'seconds']
Refined model CLL: -0.381327


******************************************
Best model found
******************************************
Results 

CLL : -0.37106 

AUC ROC : 0.664619 

AUC PR : 0.010327 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.14 

Total Inference Time : 3.427687406539917 

Total revision time: 26.322174016952516
Best scored revision CLL: -0.35816


Results 

CLL : -0.37106 

AUC ROC : 0.664619 

AUC PR : 0.010327 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 26.371660654067995 

Total Inference Time : 3.427687406539917 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 5.18
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( function(C, A), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16341209299424908;  // std dev = 7.774, 285.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(F, G), location(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18050446191215472;  // std dev = 4.725, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
%   | | else if ( function(H, A), phenotype(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1704034518111446;  // std dev = 5.944, 159.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( function(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16269803854986004;  // std dev = 7.515, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(C, D), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then return 0.10151979423787942;  // std dev = 5.361, 133.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=42 */
%   | else if ( interaction(E, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1401623679403539;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( function(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, E) )
%   | | then if ( phenotype(E, F), function(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13166183190544617;  // std dev = 7.421, 237.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=87 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( function(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( location(B, H) )
%   | | | then return -0.2594021718584744;  // std dev = 0.037, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | | else return 0.34837078509639624;  // std dev = 5.838, 143.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=87 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(A, D) )
%   | then if ( location(B, E) )
%   | | then return -0.21290748150886105;  // std dev = 0.035, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( location(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22522165141437758;  // std dev = 6.206, 156.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), location(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(E, A), phenotype(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return 0.030585235246788422;  // std dev = 6.792, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(C, A), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), phenotype(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.01286184623259389;  // std dev = 4.951, 141.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=42 */
%   | | | else return 0.01955875037029196;  // std dev = 4.911, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( function(A, C), function(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), function(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.02333072467568898;  // std dev = 6.820, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '11.604', 'seconds']
Parameter learned model CLL:-0.33204 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'function(C, A), enzyme(C, D)', 'false': 'function(E, A)', 'false,false': 'enzyme(A, F), location(B, F)', 'false,false,false': 'enzyme(A, G), interaction(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.774, 198, 87]}]
['proteinclass(A, B)', {'': 'enzyme(A, C), phenotype(C, D)', 'false': 'function(E, A), location(B, E)', 'false,false': 'enzyme(A, F)', 'false,false,true': 'enzyme(F, G), location(B, G)', 'false,false,false': 'function(H, A), phenotype(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.725, 65, 34], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.944, 106, 53]}]
['proteinclass(A, B)', {'': 'function(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'function(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.515, 161, 87]}]
['proteinclass(A, B)', {'': 'phenotype(C, D), location(B, C)', 'false': 'phenotype(A, D)', 'false,false': 'interaction(E, F), location(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [5.361, 91, 42], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.39, 82, 45]}]
['proteinclass(A, B)', {'': 'function(C, A)', 'false': 'complex(D, A)', 'false,false': 'function(A, E)', 'false,false,true': 'phenotype(E, F), function(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.421, 150, 87], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(A, C), phenotype(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'location(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.037, 94, 0], 'false,false,true,false': [5.838, 56, 87], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(A, D)', 'false,true': 'location(B, E)', 'false,true,false': 'location(B, D)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.035, 107, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.206, 69, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(D, A), location(B, D)', 'false,false': 'function(E, A), phenotype(E, F)', 'false,false,false': 'function(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.792, 178, 87], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(C, A), location(B, C)', 'false': 'function(D, A), phenotype(D, E)', 'false,false': 'enzyme(A, F), complex(G, F)', 'false,false,false': 'phenotype(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.951, 99, 42], 'false,false,false,false': [4.911, 89, 45]}]
['proteinclass(A, B)', {'': 'function(A, C), function(C, D)', 'false': 'interaction(E, A), function(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [6.82, 173, 87]}]
{'': [nan, 0.2120775623268706], 'false': [nan, 0.2120775623268706], 'false,false': [nan, 0.21207756232687072], 'false,false,false': [nan, 0.21207756232687072]}
{'': [nan, 0.22349918875067684], 'false': [nan, 0.22349918875067662], 'false,false': [0.22548719518416407, 0.22222222222222393], 'false,false,true': [nan, 0.22548719518416407], 'false,false,false': [nan, 0.22222222222222393]}
{'': [nan, 0.22772909462105007], 'false': [nan, 0.22772909462105007], 'false,false': [nan, 0.22772909462105007]}
{'': [nan, 0.22263280205175603], 'false': [0.21609411337577453, 0.22871655111178427], 'false,false': [nan, 0.22871655111178427], 'false,false,false': [nan, 0.22871655111178427]}
{'': [nan, 0.23234877156594336], 'false': [nan, 0.23234877156594336], 'false,false': [0.23234877156594336, nan], 'false,false,true': [nan, 0.23234877156594336]}
{'': [nan, 0.2322271229343741], 'false': [nan, 0.2322271229343741], 'false,false': [0.2322271229343741, nan], 'false,false,true': [1.4204133038105285e-05, 0.23836227238047]}
{'': [nan, 0.19278703977645573], 'false': [0.19278703977645573, nan], 'false,true': [1.1630617166529473e-05, 0.24691456869353937], 'false,true,false': [nan, 0.24691456869353937]}
{'': [nan, 0.1740738975926013], 'false': [nan, 0.1740738975926013], 'false,false': [nan, 0.1740738975926013], 'false,false,false': [0.1740738975926013, nan]}
{'': [nan, 0.17707839104118753], 'false': [nan, 0.17707839104118753], 'false,false': [nan, 0.1770783910411878], 'false,false,false': [0.1738243290217253, 0.17996351625925885]}
{'': [nan, 0.1789062346291786], 'false': [nan, 0.17890623462917848], 'false,false': [nan, 0.1789062346291786]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- location(B, H).;true;true
6;;proteinclass(A, B) :- location(B, E).;true;true


Refining candidate
***************************
Model training time 14.341
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.09029179224236951;  // std dev = 0.422, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | else return 0.2581489350995122;  // std dev = 0.490, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( phenotype(A, F), interaction(G, A) )
%   | then if ( interaction(A, H), enzyme(G, I) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, G), interaction(J, A) )
%   | | | then return 0.30642479716847787;  // std dev = 2.678, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.12130682983635446;  // std dev = 2.714, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | else if ( interaction(K, A), enzyme(A, L) )
%   | | then if ( interaction(A, M) )
%   | | | then return 0.15814893509951236;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.33183314562582816;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.11370449065506792;  // std dev = 4.138, 90.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( interaction(C, C), location(A, D) )
%   | then if ( enzyme(C, E) )
%   | | then return 0.33526604404746063;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.53733191213953;  // std dev = 0.460, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | else if ( enzyme(C, F), phenotype(A, G) )
%   | | then return 0.18013176694414876;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( location(A, H), enzyme(A, I) )
%   | | | then return 0.23778665478297886;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.32066223781221037;  // std dev = 1.585, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(J, A), complex(J, K) )
%   | then return 0.12762503215138188;  // std dev = 0.460, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
%   | else if ( phenotype(A, L), enzyme(A, M) )
%   | | then return 0.08615009576957776;  // std dev = 0.434, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.5041708780806847;  // std dev = 1.402, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.21749562682207138;  // std dev = 3.601, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), complex(E, F) )
%   | then return 0.09898698428519503;  // std dev = 0.462, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | else return -0.01922360010865735;  // std dev = 0.428, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   else if ( complex(A, G), interaction(H, A) )
%   | then if ( complex(H, I), phenotype(A, J) )
%   | | then if ( interaction(K, H), phenotype(K, J) )
%   | | | then return 0.27980624382357283;  // std dev = 1.880, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.12324103448513983;  // std dev = 2.187, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( enzyme(A, L), interaction(M, H) )
%   | | | then return 0.18651383077147268;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3869775825382516;  // std dev = 1.536, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( enzyme(A, N), interaction(P, A) )
%   | | then return 0.06373476224415373;  // std dev = 0.442, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | else if ( interaction(Q, A), phenotype(A, R) )
%   | | | then return 0.05034250903991123;  // std dev = 2.280, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.190126527955505;  // std dev = 3.686, 58.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=22 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( complex(A, E), enzyme(C, F) )
%   | then if ( location(A, G), location(C, G) )
%   | | then return 0.2635926987379092;  // std dev = 1.228, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.449705219232227;  // std dev = 0.830, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(C, H), interaction(I, A) )
%   | | then if ( complex(I, J) )
%   | | | then return 0.34220578632743254;  // std dev = 1.322, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.04254414668564854;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(C, K) )
%   | | | then return 0.07998156990119971;  // std dev = 1.674, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.16330431089786585;  // std dev = 1.537, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( interaction(L, A), interaction(M, L) )
%   | then if ( interaction(L, L), interaction(A, M) )
%   | | then return -0.04100346966243881;  // std dev = 0.424, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else return 0.11696051700791844;  // std dev = 0.476, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
%   | else return -0.020024892200643418;  // std dev = 0.409, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), complex(A, G) )
%   | | then if ( phenotype(A, H), phenotype(F, H) )
%   | | | then return 0.12469100797792881;  // std dev = 2.283, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.0196304591917692;  // std dev = 1.759, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.34272500927171035;  // std dev = 1.513, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.18324094812866804;  // std dev = 2.244, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else if ( enzyme(A, K) )
%   | | then if ( location(L, C), interaction(L, L) )
%   | | | then return 0.06006188154762374;  // std dev = 3.910, 72.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | | | else return -0.060087628137056;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.09656617121142867;  // std dev = 4.431, 89.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=30 */
%   | | | else return 0.4665641938519968;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.019033881956099123;  // std dev = 0.426, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.27399600559335896;  // std dev = 0.412, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( enzyme(A, E), phenotype(D, F) )
%   | | then if ( location(A, G), location(D, G) )
%   | | | then return 0.18695735132423305;  // std dev = 1.248, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.4806450866606613;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, H) )
%   | | | then return 0.5255355075674363;  // std dev = 1.826, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return 0.2437060506601053;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(I, A), interaction(A, J) )
%   | | then if ( interaction(I, J), enzyme(J, K) )
%   | | | then return -0.0014796365080006996;  // std dev = 1.678, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.27348764077638305;  // std dev = 2.800, 33.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.292455514649648;  // std dev = 3.837, 60.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=33 */
%   | | | else return 0.4183742739324486;  // std dev = 1.457, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.22835028001399274;  // std dev = 0.413, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( location(A, D) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.03073758438526226;  // std dev = 2.217, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.190617949137467;  // std dev = 3.431, 49.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=26 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.19556342464083606;  // std dev = 3.019, 37.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   | | | else return 0.34823634132642667;  // std dev = 3.056, 42.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=28 */
%   | else return 0.7003214622595224;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( complex(D, E) )
%   | then return -0.07787396027241933;  // std dev = 0.400, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | else if ( phenotype(D, F) )
%   | | then return 0.21993230498273433;  // std dev = 0.823, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( location(D, G) )
%   | | | then return -0.0017199270186910463;  // std dev = 1.253, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.1086401429525223;  // std dev = 1.042, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( interaction(H, A), complex(H, I) )
%   | then if ( location(A, J), interaction(K, H) )
%   | | then if ( enzyme(H, L) )
%   | | | then return -0.05055045394045707;  // std dev = 1.378, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.08634501396128064;  // std dev = 3.414, 60.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.02956487558358878;  // std dev = 0.751, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.326920082613134;  // std dev = 1.055, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.023826409542802875;  // std dev = 0.413, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, A), enzyme(A, C) )
%   then return 0.23637306783167428;  // std dev = 0.844, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then if ( phenotype(E, D), enzyme(E, G) )
%   | | | then return -0.22851148142094807;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.07472699173548768;  // std dev = 2.622, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else if ( enzyme(E, H) )
%   | | | then return -0.05642328316125077;  // std dev = 1.795, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.007565645940029077;  // std dev = 3.346, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.34817698395635016;  // std dev = 0.693, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.07753375522739943;  // std dev = 0.873, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, L), interaction(L, A) )
%   | | | then return 0.14899426285015507;  // std dev = 1.428, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.011870378961433413;  // std dev = 4.504, 118.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=37 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then return -0.058429019862537804;  // std dev = 0.383, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   else if ( complex(A, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( complex(G, E), interaction(A, G) )
%   | | | then return 0.15713391189585113;  // std dev = 1.430, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.02829770984122919;  // std dev = 2.715, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.018800671821304855;  // std dev = 1.481, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.096017166832308;  // std dev = 1.797, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.3180969063361879;  // std dev = 0.947, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.03185132633106019;  // std dev = 0.907, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.049498534903414805;  // std dev = 3.843, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
%   | | | else return 0.14234317510483918;  // std dev = 1.250, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.288', 'seconds']
Refined model CLL: -0.360447


******************************************
Best model found
******************************************
Results 

CLL : -0.328173 

AUC ROC : 0.805533 

AUC PR : 0.017879 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 14.341 

Total Inference Time : 5.122411251068115 

Total revision time: 37.87737068748474
Best scored revision CLL: -0.33204


Results 

CLL : -0.328173 

AUC ROC : 0.805533 

AUC PR : 0.017879 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 38.03154120063782 

Total Inference Time : 5.122411251068115 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.692
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( function(C, A), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18935912618231537;  // std dev = 8.340, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(F, G), location(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17023503819143382;  // std dev = 4.678, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   | | else if ( function(H, A), phenotype(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18850034431388296;  // std dev = 6.767, 200.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( function(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12552958544005724;  // std dev = 8.416, 326.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(C, D), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then return 0.14178985707673708;  // std dev = 6.423, 180.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=64 */
%   | else if ( interaction(E, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17829203721548123;  // std dev = 4.931, 102.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( function(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, E) )
%   | | then if ( phenotype(E, F), function(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09427526742202803;  // std dev = 8.314, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( function(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( location(B, H) )
%   | | | then return -0.2588168384243888;  // std dev = 0.039, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | | else return 0.2612574570894782;  // std dev = 7.065, 200.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=104 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(A, D) )
%   | then if ( location(B, E) )
%   | | then return -0.21218123595015434;  // std dev = 0.036, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | else if ( location(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21892344137964997;  // std dev = 6.983, 196.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), location(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(E, A), phenotype(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return 0.019912467796289197;  // std dev = 7.705, 340.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=104 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(C, A), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), phenotype(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.024572196002283577;  // std dev = 5.992, 208.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=64 */
%   | | | else return 0.04531685230219198;  // std dev = 4.652, 114.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=40 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( function(A, C), function(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), function(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.01948670865808873;  // std dev = 7.579, 336.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '8.787', 'seconds']
Parameter learned model CLL:-0.320392 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'function(C, A), enzyme(C, D)', 'false': 'function(E, A)', 'false,false': 'enzyme(A, F), location(B, F)', 'false,false,false': 'enzyme(A, G), interaction(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.34, 210, 104]}]
['proteinclass(A, B)', {'': 'enzyme(A, C), phenotype(C, D)', 'false': 'function(E, A), location(B, E)', 'false,false': 'enzyme(A, F)', 'false,false,true': 'enzyme(F, G), location(B, G)', 'false,false,false': 'function(H, A), phenotype(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.678, 65, 33], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.767, 129, 71]}]
['proteinclass(A, B)', {'': 'function(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'function(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.416, 222, 104]}]
['proteinclass(A, B)', {'': 'phenotype(C, D), location(B, C)', 'false': 'phenotype(A, D)', 'false,false': 'interaction(E, F), location(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [6.423, 116, 64], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.931, 62, 40]}]
['proteinclass(A, B)', {'': 'function(C, A)', 'false': 'complex(D, A)', 'false,false': 'function(A, E)', 'false,false,true': 'phenotype(E, F), function(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [8.314, 206, 104], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(A, C), phenotype(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'location(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.039, 103, 0], 'false,false,true,false': [7.065, 96, 104], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(A, D)', 'false,true': 'location(B, E)', 'false,true,false': 'location(B, D)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.036, 118, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.983, 92, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(D, A), location(B, D)', 'false,false': 'function(E, A), phenotype(E, F)', 'false,false,false': 'function(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.705, 236, 104], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(C, A), location(B, C)', 'false': 'function(D, A), phenotype(D, E)', 'false,false': 'enzyme(A, F), complex(G, F)', 'false,false,false': 'phenotype(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.992, 144, 64], 'false,false,false,false': [4.652, 74, 40]}]
['proteinclass(A, B)', {'': 'function(A, C), function(C, D)', 'false': 'interaction(E, A), function(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.579, 232, 104]}]
{'': [nan, 0.22151000040569802], 'false': [nan, 0.22151000040569802], 'false,false': [nan, 0.22151000040569646], 'false,false,false': [nan, 0.22151000040569646]}
{'': [nan, 0.22719697310931852], 'false': [nan, 0.22719697310932005], 'false,false': [0.22334443981674204, 0.22897499999999915], 'false,false,false': [nan, 0.22897499999999915], 'false,false,true': [nan, 0.22334443981674204]}
{'': [nan, 0.2172887636167362], 'false': [nan, 0.2172887636167362], 'false,false': [nan, 0.2172887636167362]}
{'': [nan, 0.23281495550241688], 'false': [0.22916279918334526, 0.23840946331331134], 'false,false': [nan, 0.23840946331331134], 'false,false,false': [nan, 0.23840946331331134]}
{'': [nan, 0.22299863541604842], 'false': [nan, 0.22299863541604842], 'false,false': [0.22299863541604842, nan], 'false,false,true': [nan, 0.22299863541604842]}
{'': [nan, 0.22541604216845781], 'false': [nan, 0.22541604216845781], 'false,false': [0.22541604216845781, nan], 'false,false,true': [1.4509196029935739e-05, 0.24955341216415214]}
{'': [nan, 0.1988974015619917], 'false': [0.1988974015619917, nan], 'false,true': [1.128390031716298e-05, 0.24879277540445185], 'false,true,false': [nan, 0.24879277540445185]}
{'': [nan, 0.17461451207614417], 'false': [nan, 0.17461451207614417], 'false,false': [nan, 0.17461451207614417], 'false,false,false': [0.17461451207614417, nan]}
{'': [nan, 0.17881574500123523], 'false': [nan, 0.17881574500123523], 'false,false': [nan, 0.17881574500123495], 'false,false,false': [0.17260319968760424, 0.18987293130138863]}
{'': [nan, 0.1709619148755847], 'false': [nan, 0.1709619148755847], 'false,false': [nan, 0.1709619148755847]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- location(B, H).;true;true
6;;proteinclass(A, B) :- location(B, E).;true;true


Refining candidate
***************************
Model training time 25.056
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then return 0.0803711573217346;  // std dev = 0.416, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | else if ( interaction(G, A), phenotype(G, D) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.23745927992709853;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(L, A), enzyme(L, M) )
%   | then if ( interaction(A, N), complex(L, P) )
%   | | then if ( interaction(L, N) )
%   | | | then return 0.4581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.1954983326898738;  // std dev = 0.473, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
%   | else return 0.13814893509951123;  // std dev = 0.449, 150.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(C, E) )
%   | then if ( interaction(C, C), complex(D, F) )
%   | | then if ( interaction(A, C), phenotype(A, E) )
%   | | | then return 0.14725444700973245;  // std dev = 1.819, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.39573926281439537;  // std dev = 1.850, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( enzyme(C, G), interaction(A, D) )
%   | | | then return 0.10374050310424085;  // std dev = 2.553, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.1848170162705371;  // std dev = 6.275, 173.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=61 */
%   | else if ( enzyme(A, H), interaction(C, D) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.17381966335936103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.12284073795380042;  // std dev = 1.194, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( complex(A, J), complex(C, K) )
%   | | | then return 0.25774778457585923;  // std dev = 1.305, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.554772044311742;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return 0.09058473107142889;  // std dev = 0.445, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(C, E), location(A, F) )
%   | then if ( complex(C, G), complex(A, H) )
%   | | then return 0.4844150088025496;  // std dev = 1.128, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(I, A), interaction(A, I) )
%   | | | then return 0.13923439904575194;  // std dev = 2.514, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.2605174604509591;  // std dev = 1.650, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return 0.09282559332184341;  // std dev = 0.452, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   else if ( phenotype(A, J), interaction(A, K) )
%   | then return 0.052359288749372374;  // std dev = 0.441, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | else if ( location(A, L), interaction(M, A) )
%   | | then if ( enzyme(A, N), enzyme(M, N) )
%   | | | then return 0.4524255798664371;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.12353111640285225;  // std dev = 6.112, 170.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=55 */
%   | | else if ( interaction(P, A), enzyme(P, Q) )
%   | | | then return 0.1153353723674059;  // std dev = 1.448, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.5675841447385462;  // std dev = 0.870, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), interaction(D, A) )
%   | then return -0.04787016282530119;  // std dev = 0.421, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.2408198311856326;  // std dev = 0.498, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else return 0.05592133087226396;  // std dev = 0.452, 75.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=21 */
%   else if ( interaction(A, G), enzyme(G, H) )
%   | then if ( location(A, I) )
%   | | then return 0.045812420487712606;  // std dev = 0.457, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | else return 0.2832124662455035;  // std dev = 0.968, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( complex(J, L), complex(A, M) )
%   | | | then return 0.016284176266357867;  // std dev = 1.752, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.1397847852772067;  // std dev = 3.413, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | else if ( phenotype(A, N), interaction(P, A) )
%   | | | then return 0.1338622236300882;  // std dev = 3.578, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return 0.2663273875860803;  // std dev = 2.491, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, E), interaction(C, E) )
%   | then if ( complex(E, D), phenotype(C, F) )
%   | | then if ( phenotype(E, F), complex(A, G) )
%   | | | then return 0.06750397522971584;  // std dev = 2.874, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | | else return 0.3727375543697978;  // std dev = 1.538, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return -0.035738698484871004;  // std dev = 0.419, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | else if ( interaction(C, C) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.04602280409778216;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.056883722460183334;  // std dev = 2.008, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.3523346557175849;  // std dev = 1.704, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.1734530252730923;  // std dev = 4.519, 83.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=35 */
%   else if ( interaction(K, A), complex(A, L) )
%   | then return -0.06511159714764762;  // std dev = 0.417, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else return 0.04007439496839391;  // std dev = 0.441, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.27107127407373127;  // std dev = 0.393, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( complex(D, E) )
%   | | then if ( interaction(D, D), enzyme(A, F) )
%   | | | then return 0.00824718296672818;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.496376358716016;  // std dev = 2.301, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | else if ( enzyme(D, G) )
%   | | | then return -0.009435840891087214;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.26758079327226086;  // std dev = 1.506, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), interaction(A, J) )
%   | | | then return 0.7207504002081245;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08195045333989184;  // std dev = 2.237, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.3301615644490781;  // std dev = 4.527, 85.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=51 */
%   | | | else return 0.20187112229452522;  // std dev = 2.737, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.22109682574711362;  // std dev = 0.364, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( complex(D, F), interaction(E, D) )
%   | | then if ( enzyme(E, G), interaction(D, A) )
%   | | | then return 0.5267665042815697;  // std dev = 0.899, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.23696148507296955;  // std dev = 3.060, 39.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=23 */
%   | | else if ( interaction(D, D), phenotype(A, H) )
%   | | | then return 0.16985406449162643;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.596088749200168;  // std dev = 1.009, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( complex(A, I) )
%   | | then if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.0023451426691676962;  // std dev = 2.139, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.1756724103385172;  // std dev = 2.021, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( phenotype(A, L), location(A, M) )
%   | | | then return 0.20945150239499202;  // std dev = 3.254, 42.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=23 */
%   | | | else return 0.3299086481557424;  // std dev = 2.524, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(C, E), phenotype(A, E) )
%   | then if ( interaction(D, A), enzyme(D, F) )
%   | | then if ( phenotype(D, E), enzyme(A, F) )
%   | | | then return 0.1498617962249132;  // std dev = 0.931, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.08380980936219026;  // std dev = 2.257, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( interaction(D, D), interaction(C, D) )
%   | | | then return 0.053279437049434566;  // std dev = 2.872, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | | else return 0.21780317565185278;  // std dev = 1.539, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return -0.019133796974808714;  // std dev = 0.422, 188.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=59 */
%   else if ( location(A, G) )
%   | then if ( enzyme(A, H) )
%   | | then if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.05014304693646474;  // std dev = 1.073, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.4113353320290694;  // std dev = 0.671, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -8.995470754643789E-4;  // std dev = 0.418, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else return 0.37307766368194906;  // std dev = 0.644, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( interaction(E, A) )
%   | then if ( enzyme(E, F), interaction(E, E) )
%   | | then return -0.17345383922295066;  // std dev = 0.402, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( enzyme(E, C) )
%   | | | then return 0.31708072843727625;  // std dev = 0.655, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06344439161693231;  // std dev = 3.375, 64.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   | else return 0.4255718123494906;  // std dev = 0.688, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( complex(G, I), complex(H, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.18225964549900409;  // std dev = 1.160, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.01064260768468104;  // std dev = 5.422, 165.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=54 */
%   | | else if ( interaction(H, A), complex(H, K) )
%   | | | then return -0.15661683181508163;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.16307621335254727;  // std dev = 1.960, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else return -0.09900215219490453;  // std dev = 0.372, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( enzyme(A, E), interaction(F, A) )
%   | then if ( enzyme(D, E) )
%   | | then return -0.026234943203990696;  // std dev = 0.393, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else return 0.4192244768871952;  // std dev = 0.698, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.07064885591744706;  // std dev = 0.412, 136.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=39 */
%   else if ( phenotype(A, G) )
%   | then if ( phenotype(H, G), interaction(H, H) )
%   | | then return 0.03796120896160884;  // std dev = 0.409, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | else if ( phenotype(I, G), interaction(I, J) )
%   | | | then return 0.24032831870138244;  // std dev = 1.825, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.08661586433109832;  // std dev = 1.343, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then return -0.044475909535326166;  // std dev = 0.405, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.21784132852094382;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.005983738495284208;  // std dev = 1.345, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.829', 'seconds']
Refined model CLL: -0.361503


******************************************
Best model found
******************************************
Results 

CLL : -0.31932 

AUC ROC : 0.805421 

AUC PR : 0.019001 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 25.056 

Total Inference Time : 11.057876825332642 

Total revision time: 54.45695099639893
Best scored revision CLL: -0.320392


Results 

CLL : -0.31932 

AUC ROC : 0.805421 

AUC PR : 0.019001 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 54.61112150955201 

Total Inference Time : 11.057876825332642 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.698
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( function(C, A), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18209259707134337;  // std dev = 7.887, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(F, G), location(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16783966620959961;  // std dev = 5.033, 114.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=38 */
%   | | else if ( function(H, A), phenotype(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19692244025881658;  // std dev = 5.868, 149.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( function(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13482349028312574;  // std dev = 7.866, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(C, D), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then return 0.1135713838232165;  // std dev = 5.120, 119.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=39 */
%   | else if ( interaction(E, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0991617146815386;  // std dev = 6.030, 169.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=53 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( function(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, E) )
%   | | then if ( phenotype(E, F), function(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11957097349118813;  // std dev = 7.720, 261.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=92 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( function(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( location(B, H) )
%   | | | then return -0.25463628830497337;  // std dev = 0.034, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | | else return 0.3313270904874345;  // std dev = 6.170, 157.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=92 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(A, D) )
%   | then if ( location(B, E) )
%   | | then return -0.20940463985941044;  // std dev = 0.026, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else if ( location(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2597721030380253;  // std dev = 6.198, 158.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), location(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(E, A), phenotype(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return 0.03464330624497431;  // std dev = 6.983, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(C, A), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), phenotype(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.03751042085620112;  // std dev = 4.575, 105.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=39 */
%   | | | else return 0.029524120000329883;  // std dev = 5.348, 152.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=53 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( function(A, C), function(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), function(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.012162756629692597;  // std dev = 7.031, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '18.082', 'seconds']
Parameter learned model CLL:-0.328341 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'function(C, A), enzyme(C, D)', 'false': 'function(E, A)', 'false,false': 'enzyme(A, F), location(B, F)', 'false,false,false': 'enzyme(A, G), interaction(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.887, 192, 92]}]
['proteinclass(A, B)', {'': 'enzyme(A, C), phenotype(C, D)', 'false': 'function(E, A), location(B, E)', 'false,false': 'enzyme(A, F)', 'false,false,true': 'enzyme(F, G), location(B, G)', 'false,false,false': 'function(H, A), phenotype(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [5.033, 76, 38], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.868, 95, 54]}]
['proteinclass(A, B)', {'': 'function(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'function(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.866, 189, 92]}]
['proteinclass(A, B)', {'': 'phenotype(C, D), location(B, C)', 'false': 'phenotype(A, D)', 'false,false': 'interaction(E, F), location(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [5.12, 80, 39], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.03, 116, 53]}]
['proteinclass(A, B)', {'': 'function(C, A)', 'false': 'complex(D, A)', 'false,false': 'function(A, E)', 'false,false,true': 'phenotype(E, F), function(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.72, 169, 92], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(A, C), phenotype(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'location(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.034, 132, 0], 'false,false,true,false': [6.17, 65, 92], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(A, D)', 'false,true': 'location(B, E)', 'false,true,false': 'location(B, D)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.026, 108, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.198, 66, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(D, A), location(B, D)', 'false,false': 'function(E, A), phenotype(E, F)', 'false,false,false': 'function(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.983, 185, 92], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(C, A), location(B, C)', 'false': 'function(D, A), phenotype(D, E)', 'false,false': 'enzyme(A, F), complex(G, F)', 'false,false,false': 'phenotype(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.575, 66, 39], 'false,false,false,false': [5.348, 99, 53]}]
['proteinclass(A, B)', {'': 'function(A, C), function(C, D)', 'false': 'interaction(E, A), function(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.031, 192, 92]}]
{'': [nan, 0.21900416584011229], 'false': [nan, 0.21900416584011229], 'false,false': [nan, 0.21900416584011195], 'false,false,false': [nan, 0.21900416584011195]}
{'': [nan, 0.22744292963610968], 'false': [nan, 0.22744292963610613], 'false,false': [0.22222222222222318, 0.23107067249223112], 'false,false,false': [nan, 0.23107067249223112], 'false,false,true': [nan, 0.22222222222222318]}
{'': [nan, 0.22017355897793567], 'false': [nan, 0.22017355897793567], 'false,false': [nan, 0.22017355897793567]}
{'': [nan, 0.21730744758417508], 'false': [0.22027342646297018, 0.21513318214798585], 'false,false': [nan, 0.21513318214798585], 'false,false,false': [nan, 0.21513318214798585]}
{'': [nan, 0.22836763946351696], 'false': [nan, 0.22836763946351696], 'false,false': [0.22836763946351696, nan], 'false,false,true': [nan, 0.22836763946351696]}
{'': [nan, 0.21692383578392319], 'false': [nan, 0.21692383578392319], 'false,false': [0.21692383578392319, nan], 'false,false,true': [8.545057631165367e-06, 0.24247284629809088]}
{'': [nan, 0.1975243805356703], 'false': [0.1975243805356703, nan], 'false,true': [6.232860504574023e-06, 0.243161987771178], 'false,true,false': [nan, 0.243161987771178]}
{'': [nan, 0.17602536365325183], 'false': [nan, 0.17602536365325183], 'false,false': [nan, 0.17602536365325183], 'false,false,false': [0.17602536365325183, nan]}
{'': [nan, 0.19271990424769586], 'false': [nan, 0.19271990424769586], 'false,false': [nan, 0.19271990424769567], 'false,false,false': [0.19930552818796604, 0.18814456616634428]}
{'': [nan, 0.17406513368979884], 'false': [nan, 0.17406513368979826], 'false,false': [nan, 0.17406513368979884]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- location(B, H).;true;true
6;;proteinclass(A, B) :- location(B, E).;true;true


Refining candidate
***************************
Model training time 8.025
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( phenotype(C, E), interaction(F, C) )
%   | then return 0.06867525088898606;  // std dev = 0.408, 57.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=12 */
%   | else return 0.14628452831985136;  // std dev = 0.453, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   else if ( phenotype(A, G), complex(A, H) )
%   | then if ( phenotype(I, G), interaction(I, J) )
%   | | then if ( enzyme(A, K), enzyme(J, K) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.32873717039362993;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, L), complex(L, M) )
%   | | then if ( interaction(L, L), phenotype(A, N) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2010060779566552;  // std dev = 2.808, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( interaction(P, A), phenotype(P, Q) )
%   | | | then return 0.09624417319475047;  // std dev = 3.381, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return 0.1539235829868363;  // std dev = 3.846, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then return 0.11373228681077567;  // std dev = 0.449, 132.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=37 */
%   else if ( interaction(A, E) )
%   | then if ( enzyme(E, F), phenotype(E, G) )
%   | | then if ( location(A, H), location(E, H) )
%   | | | then return 0.4636219197314909;  // std dev = 1.354, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.2524655230936799;  // std dev = 1.314, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(E, I), interaction(I, E) )
%   | | | then return 0.08240147317179104;  // std dev = 2.873, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.209199717334501;  // std dev = 2.853, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(L, K), complex(J, M) )
%   | | | then return 0.6383600616200329;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2879142190738023;  // std dev = 2.579, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.3005700856794747;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.0883600616200329;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( enzyme(C, E), complex(A, F) )
%   | then if ( interaction(G, C), complex(G, D) )
%   | | then return 0.11016274495558771;  // std dev = 0.454, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else return 0.23006261226706765;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( phenotype(H, I), interaction(H, J) )
%   | | | then return 0.21657684716923703;  // std dev = 1.886, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.5213695974394728;  // std dev = 1.455, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( interaction(K, C), complex(K, D) )
%   | | | then return 0.31814938301699347;  // std dev = 1.504, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.16020394773217309;  // std dev = 2.655, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   else if ( interaction(A, A) )
%   | then return -0.0059800788309517594;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( interaction(L, A), interaction(A, M) )
%   | | then return 0.24227745232236894;  // std dev = 0.494, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else return 0.10179256846400196;  // std dev = 0.458, 147.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=44 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(D, D), location(A, E) )
%   | then return -0.0028879374177596118;  // std dev = 0.409, 47.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | else return 0.09876066396623187;  // std dev = 0.472, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   else if ( interaction(F, A), location(F, G) )
%   | then if ( enzyme(A, H), location(A, G) )
%   | | then if ( phenotype(F, I), interaction(J, F) )
%   | | | then return 0.37700977910586814;  // std dev = 1.300, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.14482433006144968;  // std dev = 1.922, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(K, F), interaction(F, K) )
%   | | | then return 0.15761030235552906;  // std dev = 2.352, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.06262745910960216;  // std dev = 3.870, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | else if ( interaction(A, L), interaction(L, M) )
%   | | then if ( complex(M, N), interaction(M, L) )
%   | | | then return 0.088502183328595;  // std dev = 2.481, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.22102832606786912;  // std dev = 2.613, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else return 0.4467972853465208;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(D, F), complex(A, F) )
%   | | then return 0.144288768976672;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.27439784515014787;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.30383232520324976;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( complex(C, H) )
%   | | then if ( complex(A, I), phenotype(C, J) )
%   | | | then return 0.11085629741443712;  // std dev = 2.157, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.021016030510170623;  // std dev = 1.505, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.06357833977641394;  // std dev = 1.448, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.4373576510991233;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( complex(A, L), enzyme(A, M) )
%   | then return -0.017612638289701676;  // std dev = 0.432, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | else return 0.06683429196732717;  // std dev = 0.464, 175.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=55 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.2661787147613143;  // std dev = 0.502, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( location(F, G) )
%   | | | then return 0.2428196601512317;  // std dev = 1.712, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.020821133998033956;  // std dev = 1.227, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(D, H), complex(H, E) )
%   | | | then return 0.5040266223319217;  // std dev = 2.137, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.3392640808788053;  // std dev = 2.078, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), enzyme(I, K) )
%   | | | then return 0.10572253602621369;  // std dev = 1.628, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.2695094866335544;  // std dev = 4.552, 85.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=45 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.17196169609476414;  // std dev = 1.304, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.09951521292517995;  // std dev = 1.394, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.21291786517324335;  // std dev = 0.383, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, A) )
%   | | then if ( interaction(D, F), phenotype(F, G) )
%   | | | then return 0.5128449868505134;  // std dev = 0.875, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.35224946092920756;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.2716865744800542;  // std dev = 2.311, 23.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | | | else return 0.1522402103191983;  // std dev = 2.932, 35.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.42665153602374933;  // std dev = 1.865, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.19094862862152212;  // std dev = 2.759, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else if ( interaction(A, L), phenotype(A, M) )
%   | | | then return 0.7386577477592546;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.46490225844332;  // std dev = 2.183, 29.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, A) )
%   then if ( complex(A, D) )
%   | then return 0.042816532944313;  // std dev = 1.051, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.2488875065435508;  // std dev = 0.842, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(E, A), phenotype(A, F) )
%   | then if ( interaction(G, E), phenotype(G, H) )
%   | | then if ( enzyme(G, I), phenotype(E, H) )
%   | | | then return 0.16504199617451995;  // std dev = 1.030, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.034055354066726225;  // std dev = 2.414, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else return -0.07695128276182371;  // std dev = 0.378, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( phenotype(J, L), phenotype(K, L) )
%   | | | then return 0.14387775273677517;  // std dev = 2.129, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 1.682606102756706E-4;  // std dev = 3.468, 72.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return -0.07084254448674875;  // std dev = 1.822, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.006050255156195026;  // std dev = 3.717, 85.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=26 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( complex(A, C) )
%   | then return 0.29442419658683583;  // std dev = 0.813, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.036625600474112556;  // std dev = 1.025, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( phenotype(D, G) )
%   | | | then return 0.058608987140993635;  // std dev = 1.209, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.4221776202674814;  // std dev = 0.649, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.02751095166638855;  // std dev = 0.376, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), location(H, K) )
%   | | | then return -0.005071800923037988;  // std dev = 2.930, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return 0.10262432738102116;  // std dev = 2.494, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.003181618266403097;  // std dev = 3.540, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
%   | | | else return -0.04030661016328707;  // std dev = 3.756, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( phenotype(A, E), complex(A, F) )
%   | then return -0.0771366750125627;  // std dev = 0.360, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | else if ( location(A, G), location(C, G) )
%   | | then return 0.055165158504974346;  // std dev = 0.419, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | else return -0.0523711530734119;  // std dev = 0.387, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( enzyme(A, J), phenotype(A, K) )
%   | | then return -4.768971836600247E-5;  // std dev = 0.388, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( interaction(L, H), enzyme(A, M) )
%   | | | then return 0.42450630919350557;  // std dev = 0.687, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.11265312853931336;  // std dev = 2.904, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | else if ( interaction(A, N), phenotype(N, P) )
%   | | then return 0.15561111878840883;  // std dev = 0.374, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( complex(A, Q) )
%   | | | then return 0.057766163658969354;  // std dev = 1.928, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return -0.02104956915437806;  // std dev = 2.854, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.051', 'seconds']
Refined model CLL: -0.345383


******************************************
Best model found
******************************************
Results 

CLL : -0.335112 

AUC ROC : 0.800939 

AUC PR : 0.017556 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.025 

Total Inference Time : 3.3289554119110107 

Total revision time: 25.24266071128845
Best scored revision CLL: -0.328341


Results 

CLL : -0.335112 

AUC ROC : 0.800939 

AUC PR : 0.017556 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 25.396831224441527 

Total Inference Time : 3.3289554119110107 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.494
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( function(C, A), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19673161226486716;  // std dev = 7.542, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(F, G), location(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16580802515645962;  // std dev = 4.320, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   | | else if ( function(H, A), phenotype(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1377378497178646;  // std dev = 6.348, 190.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( function(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1391222936903164;  // std dev = 7.602, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(C, D), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then return 0.12186813933069802;  // std dev = 5.945, 159.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=53 */
%   | else if ( interaction(E, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12234731595027233;  // std dev = 4.690, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( function(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, E) )
%   | | then if ( phenotype(E, F), function(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13354615562860137;  // std dev = 7.385, 235.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=86 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( function(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( location(B, H) )
%   | | | then return -0.25699248675532466;  // std dev = 0.025, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | | else return 0.3125131922268104;  // std dev = 6.085, 151.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=86 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(A, D) )
%   | then if ( location(B, E) )
%   | | then return -0.21099727215515174;  // std dev = 0.022, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( location(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2165273146661296;  // std dev = 6.306, 160.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), location(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(E, A), phenotype(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return 0.04169102952502655;  // std dev = 6.754, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(C, A), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), phenotype(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.06496269977747299;  // std dev = 5.153, 145.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=53 */
%   | | | else return 0.044296818273983386;  // std dev = 4.167, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( function(A, C), function(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), function(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.001058476109094182;  // std dev = 6.905, 276.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '28.369', 'seconds']
Parameter learned model CLL:-0.330633 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'function(C, A), enzyme(C, D)', 'false': 'function(E, A)', 'false,false': 'enzyme(A, F), location(B, F)', 'false,false,false': 'enzyme(A, G), interaction(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.542, 168, 86]}]
['proteinclass(A, B)', {'': 'enzyme(A, C), phenotype(C, D)', 'false': 'function(E, A), location(B, E)', 'false,false': 'enzyme(A, F)', 'false,false,true': 'enzyme(F, G), location(B, G)', 'false,false,false': 'function(H, A), phenotype(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.32, 56, 28], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.348, 132, 58]}]
['proteinclass(A, B)', {'': 'function(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'function(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.602, 176, 86]}]
['proteinclass(A, B)', {'': 'phenotype(C, D), location(B, C)', 'false': 'phenotype(A, D)', 'false,false': 'interaction(E, F), location(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [5.945, 106, 53], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.69, 66, 33]}]
['proteinclass(A, B)', {'': 'function(C, A)', 'false': 'complex(D, A)', 'false,false': 'function(A, E)', 'false,false,true': 'phenotype(E, F), function(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.385, 149, 86], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(A, C), phenotype(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'location(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.025, 102, 0], 'false,false,true,false': [6.085, 65, 86], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(A, D)', 'false,true': 'location(B, E)', 'false,true,false': 'location(B, D)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.022, 102, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.306, 74, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(D, A), location(B, D)', 'false,false': 'function(E, A), phenotype(E, F)', 'false,false,false': 'function(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.754, 178, 86], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(C, A), location(B, C)', 'false': 'function(D, A), phenotype(D, E)', 'false,false': 'enzyme(A, F), complex(G, F)', 'false,false,false': 'phenotype(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.153, 92, 53], 'false,false,false,false': [4.167, 62, 33]}]
['proteinclass(A, B)', {'': 'function(A, C), function(C, D)', 'false': 'interaction(E, A), function(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [6.905, 190, 86]}]
{'': [nan, 0.2239444478888966], 'false': [nan, 0.2239444478888966], 'false,false': [nan, 0.22394444788889634], 'false,false,false': [nan, 0.22394444788889634]}
{'': [nan, 0.21535510682508266], 'false': [nan, 0.21535510682508266], 'false,false': [0.22222222222222138, 0.2120775623268684], 'false,false,true': [nan, 0.22222222222222138], 'false,false,false': [nan, 0.2120775623268684]}
{'': [nan, 0.2205658117976831], 'false': [nan, 0.2205658117976831], 'false,false': [nan, 0.2205658117976831]}
{'': [nan, 0.22222705362127987], 'false': [0.2222469883780048, 0.22219489568983128], 'false,false': [nan, 0.22219489568983128], 'false,false,false': [nan, 0.22219489568983128]}
{'': [nan, 0.23209378675273576], 'false': [nan, 0.23209378675273576], 'false,false': [0.23209378675273576, nan], 'false,false,true': [nan, 0.23209378675273576]}
{'': [nan, 0.22438958788331767], 'false': [nan, 0.22438958788331767], 'false,false': [0.22438958788331767, nan], 'false,false,true': [6.294784237258292e-06, 0.24519950137250385]}
{'': [nan, 0.19524924931813586], 'false': [0.19524924931813586, nan], 'false,true': [4.710706877255349e-06, 0.24856007864333188], 'false,true,false': [nan, 0.24856007864333188]}
{'': [nan, 0.17281169137089258], 'false': [nan, 0.17281169137089258], 'false,false': [nan, 0.17281169137089258], 'false,false,false': [0.17281169137089258, nan]}
{'': [nan, 0.18308315095746672], 'false': [nan, 0.18308315095746672], 'false,false': [nan, 0.18308315095746597], 'false,false,false': [0.1831397711949094, 0.18273870390565272]}
{'': [nan, 0.17275571508259355], 'false': [nan, 0.17275571508259374], 'false,false': [nan, 0.17275571508259355]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- location(B, H).;true;true
6;;proteinclass(A, B) :- location(B, E).;true;true


Refining candidate
***************************
Model training time 9.363
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), location(A, F) )
%   | then if ( location(C, F), interaction(E, A) )
%   | | then return 0.1273797043302816;  // std dev = 0.444, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else if ( interaction(A, G), location(E, F) )
%   | | | then return 0.3781489350995123;  // std dev = 2.498, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else return 0.18423589162125145;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | else if ( phenotype(A, H) )
%   | | then if ( interaction(C, I), interaction(I, I) )
%   | | | then return 0.5854216623722396;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(C, J) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   else if ( interaction(A, K), enzyme(K, L) )
%   | then return 0.11269438964496692;  // std dev = 0.436, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | else return 0.20698614440183793;  // std dev = 0.477, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( enzyme(C, E), interaction(C, C) )
%   | then return 0.14386949269754515;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( complex(C, D), phenotype(C, F) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.14250825119869956;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.2762492115663176;  // std dev = 1.982, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.5619812579897195;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3268458808978902;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, K), interaction(L, A) )
%   | then return 0.07262570146887072;  // std dev = 0.436, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
%   | else if ( phenotype(A, M), interaction(N, A) )
%   | | then return 0.14612734772315122;  // std dev = 0.476, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   | | else if ( interaction(P, A), interaction(P, P) )
%   | | | then return 0.14997303887869534;  // std dev = 1.852, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.25656145184212037;  // std dev = 3.043, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( complex(A, E), interaction(F, A) )
%   | then return 0.012739405684254213;  // std dev = 0.427, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | else return 0.11484055212378189;  // std dev = 0.462, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   else if ( interaction(G, A), complex(G, H) )
%   | then if ( interaction(I, G), interaction(I, A) )
%   | | then if ( enzyme(G, J), interaction(G, I) )
%   | | | then return 0.10750980877389076;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.36523408429880677;  // std dev = 1.973, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( complex(A, K), interaction(L, G) )
%   | | | then return 0.21003967870478094;  // std dev = 1.304, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.12676120081756698;  // std dev = 2.451, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( location(A, M) )
%   | | then if ( interaction(N, A), interaction(N, N) )
%   | | | then return 0.05633980499253328;  // std dev = 1.957, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.1467329712920812;  // std dev = 4.353, 84.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=29 */
%   | | else return 0.014693343341350418;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( complex(A, E), location(A, F) )
%   | then return 0.10975878378126139;  // std dev = 0.485, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | else return 0.030386791863440777;  // std dev = 0.440, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   else if ( interaction(A, G), phenotype(G, H) )
%   | then if ( complex(G, I), phenotype(A, H) )
%   | | then return -0.02076305970943047;  // std dev = 0.400, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.35470703355788025;  // std dev = 1.311, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.0838585555435193;  // std dev = 3.362, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | else if ( interaction(L, A), phenotype(L, M) )
%   | | then if ( interaction(L, N), complex(N, P) )
%   | | | then return 0.07192361166769688;  // std dev = 2.979, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return 0.37471583813872844;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( enzyme(A, Q) )
%   | | | then return 0.15911694191646572;  // std dev = 1.371, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.29573111740106467;  // std dev = 1.727, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( enzyme(A, E), complex(D, F) )
%   | then return -0.028889675253565405;  // std dev = 0.412, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | else if ( interaction(G, D), location(D, H) )
%   | | then return 0.10693517897995856;  // std dev = 0.474, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   | | else return 0.02073889214671942;  // std dev = 0.457, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   else if ( enzyme(A, I), interaction(J, A) )
%   | then if ( interaction(J, J), complex(J, K) )
%   | | then return 0.10634085647468489;  // std dev = 0.465, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( complex(J, L), interaction(M, J) )
%   | | | then return 0.43899767197950795;  // std dev = 0.818, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.26184405361346347;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(N, A), complex(A, P) )
%   | | then return 0.0015071143000951778;  // std dev = 0.443, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(A, Q), interaction(Q, Q) )
%   | | | then return 0.21506066775660274;  // std dev = 2.346, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.08974983584322146;  // std dev = 3.364, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.258803452317507;  // std dev = 0.384, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(D, E) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.717516422748075;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1587206485717733;  // std dev = 1.850, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.13255412245343007;  // std dev = 2.196, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.044525346195642294;  // std dev = 1.707, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then return 0.759638065573823;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.1729037794821815;  // std dev = 2.908, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.3272921117944962;  // std dev = 4.284, 75.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=44 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.2132058619572664;  // std dev = 0.276, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F), location(A, G) )
%   | | then if ( phenotype(A, H), location(F, G) )
%   | | | then return 0.15512315776004115;  // std dev = 2.722, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.5189545353921734;  // std dev = 1.275, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( complex(A, I), complex(D, I) )
%   | | | then return 0.0335537046213131;  // std dev = 1.393, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.16858500647671612;  // std dev = 3.711, 55.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=27 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.2841625469537341;  // std dev = 1.111, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.7119332323132145;  // std dev = 0.100, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.21009846789514014;  // std dev = 1.644, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.30920769388340763;  // std dev = 2.221, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( phenotype(A, E) )
%   | then if ( complex(C, F) )
%   | | then if ( interaction(G, C), interaction(C, G) )
%   | | | then return 0.07127659683148387;  // std dev = 2.616, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return 0.47448961643123083;  // std dev = 0.778, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.09032464710906536;  // std dev = 1.741, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.05016351587498501;  // std dev = 2.619, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | else if ( complex(C, I), location(A, J) )
%   | | then return 0.07190021856460593;  // std dev = 0.412, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else return 0.36645136331171807;  // std dev = 0.379, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   else if ( interaction(K, A), interaction(A, L) )
%   | then if ( interaction(L, L) )
%   | | then return 0.13454275904255258;  // std dev = 0.483, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return -0.031598048220579864;  // std dev = 0.398, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else return -0.03728919183555354;  // std dev = 0.414, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( complex(C, E), enzyme(C, F) )
%   | then if ( complex(A, G), phenotype(A, D) )
%   | | then return -0.010387706018916618;  // std dev = 0.376, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.2762350865976644;  // std dev = 0.418, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else return -0.04524118383266264;  // std dev = 0.408, 171.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=49 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then if ( interaction(H, J), interaction(A, J) )
%   | | then if ( interaction(K, A), interaction(K, H) )
%   | | | then return 0.003962245706951932;  // std dev = 1.316, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.17046156535437576;  // std dev = 1.606, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else return 0.4792567689588652;  // std dev = 0.741, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(L, A), complex(L, M) )
%   | | then return 0.21167554082740625;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(N, A), enzyme(A, P) )
%   | | | then return 0.05895560598061285;  // std dev = 1.230, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.0533831484319227;  // std dev = 2.443, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then if ( phenotype(E, F) )
%   | | then if ( interaction(C, E), phenotype(C, F) )
%   | | | then return 0.19650318852841844;  // std dev = 1.110, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5422872143389914;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.028488020655227635;  // std dev = 0.414, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( interaction(C, G), enzyme(C, H) )
%   | | then return -0.18753475182796822;  // std dev = 0.354, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( phenotype(C, I) )
%   | | | then return -0.07640628519590918;  // std dev = 2.804, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return 0.08984006211488653;  // std dev = 1.458, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( interaction(J, A), interaction(K, J) )
%   | then if ( interaction(A, L), interaction(L, M) )
%   | | then return 0.0936181782821652;  // std dev = 0.430, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | else return -0.009742703289470946;  // std dev = 0.416, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
%   | else return 0.16676887325184306;  // std dev = 0.422, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.548', 'seconds']
Refined model CLL: -0.376063


******************************************
Best model found
******************************************
Results 

CLL : -0.330863 

AUC ROC : 0.803235 

AUC PR : 0.017463 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.363 

Total Inference Time : 3.4954442977905273 

Total revision time: 23.371052152633666
Best scored revision CLL: -0.330633


Results 

CLL : -0.330863 

AUC ROC : 0.803235 

AUC PR : 0.017463 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 23.525222665786742 

Total Inference Time : 3.4954442977905273 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.038
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), interaction(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18645082189196485;  // std dev = 7.644, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(C, E), phenotype(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, A) )
%   | | | then return 0.10057022686681014;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.15208537838196168;  // std dev = 3.090, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   else if ( location(F, A), phenotype(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), phenotype(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18057022686681015;  // std dev = 4.121, 75.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
%   | | else if ( location(I, A), enzyme(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13672046160859502;  // std dev = 5.475, 142.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1392371750286404;  // std dev = 7.649, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.1336260352525421;  // std dev = 4.726, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12328135075898929;  // std dev = 5.939, 159.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=53 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E) )
%   | | then if ( enzyme(E, F), location(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07893154861500376;  // std dev = 7.561, 267.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=83 */
%   | | else return 0.1300400117187511;  // std dev = 0.482, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( phenotype(B, H) )
%   | | | then return -0.24795224812105782;  // std dev = 0.037, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0.16950058977382718;  // std dev = 7.124, 209.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=87 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.203801543257354;  // std dev = 0.027, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1529079584947665;  // std dev = 6.866, 192.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=83 */
%   | else if ( location(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1265034876253009;  // std dev = 1.509, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), enzyme(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.06618725466735739;  // std dev = 7.064, 240.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=83 */
%   | | | else return 0.08158269031948331;  // std dev = 1.554, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), enzyme(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.08359628680648723;  // std dev = 4.417, 88.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=34 */
%   | | | else return 0.03961785975309833;  // std dev = 5.710, 158.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=53 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), location(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.018484081767798373;  // std dev = 7.358, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '19.425', 'seconds']
Parameter learned model CLL:-0.364615 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), interaction(C, D)', 'false': 'location(E, A)', 'false,false': 'interaction(A, F), phenotype(B, F)', 'false,false,false': 'interaction(A, G), function(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.644, 178, 87]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(C, E), phenotype(B, E)', 'true,false,false': 'interaction(A, A)', 'false': 'location(F, A), phenotype(B, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), phenotype(B, H)', 'false,false,false': 'location(I, A), enzyme(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.713, 11, 4], 'true,false,false,false': [3.09, 30, 14], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.121, 49, 26], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.475, 99, 43]}]
['proteinclass(A, B)', {'': 'location(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'location(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.649, 179, 87]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.726, 65, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.939, 106, 53]}]
['proteinclass(A, B)', {'': 'location(C, A)', 'false': 'complex(D, A)', 'false,false': 'location(A, E)', 'false,false,true': 'enzyme(E, F), location(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.561, 184, 83], 'false,false,false': [0.482, 7, 4]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'phenotype(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.037, 50, 0], 'false,false,true,false': [7.124, 122, 87], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'location(F, A), phenotype(B, F)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.027, 62, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.866, 109, 83], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.509, 6, 4]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(D, A), phenotype(B, D)', 'false,false': 'location(E, A), enzyme(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.064, 157, 83], 'false,false,false,false': [1.554, 6, 4]}]
['proteinclass(A, B)', {'': 'location(C, A), phenotype(B, C)', 'false': 'location(D, A), enzyme(D, E)', 'false,false': 'interaction(A, F), complex(G, F)', 'false,false,false': 'enzyme(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.417, 54, 34], 'false,false,false,false': [5.71, 105, 53]}]
['proteinclass(A, B)', {'': 'location(A, C), location(C, D)', 'false': 'function(E, A), location(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.358, 181, 87]}]
{'': [nan, 0.22051975792096917], 'false': [nan, 0.22051975792096917], 'false,false': [nan, 0.22051975792096937], 'false,false,false': [nan, 0.22051975792096937]}
{'': [0.21200804366561385, 0.21686593471936147], 'false': [nan, 0.21686593471936183], 'false,false': [0.2264888888888891, 0.21111882562983567], 'false,false,true': [nan, 0.22648888888888938], 'true': [nan, 0.21200804366561385], 'true,false': [nan, 0.21200804366561385], 'true,false,false': [0.19555555555555568, 0.2169421487603311], 'false,false,false': [nan, 0.21111882562983567]}
{'': [nan, 0.21996522200623772], 'false': [nan, 0.21996522200623764], 'false,false': [nan, 0.21996522200623764]}
{'': [nan, 0.2233280512308571], 'false': [0.22562364515222996, 0.22185765623160622], 'false,false': [nan, 0.22185765623160622], 'false,false,false': [nan, 0.22185765623160622]}
{'': [nan, 0.21493300184588868], 'false': [nan, 0.21493300184588868], 'false,false': [0.21411442387590085, 0.2322934021476829], 'false,false,true': [nan, 0.21411442387590085]}
{'': [nan, 0.223122459599982], 'false': [nan, 0.223122459599982], 'false,false': [0.223122459599982, nan], 'false,false,true': [2.669220781711168e-05, 0.2428523994999228]}
{'': [nan, 0.2098974785227996], 'false': [0.20905289800625945, 0.22780882666028965], 'false,false': [nan, 0.22780882666028965], 'false,false,false': [nan, 0.22780882666028965], 'false,true': [1.149005651101023e-05, 0.24549686267364726], 'false,true,false': [nan, 0.24549686267364726]}
{'': [nan, 0.20924489081522515], 'false': [nan, 0.20924489081522515], 'false,false': [nan, 0.20924489081522515], 'false,false,false': [0.2078964926846491, 0.24137890728769024]}
{'': [nan, 0.21229320342618282], 'false': [nan, 0.21229320342618282], 'false,false': [nan, 0.21229320342618316], 'false,false,false': [0.22170799304346883, 0.2063576492303449]}
{'': [nan, 0.2019904499368475], 'false': [nan, 0.20199044993684748], 'false,false': [nan, 0.20199044993684748]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- phenotype(B, H).;true;true
6;;proteinclass(A, B) :- location(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 63.04
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( location(A, E), phenotype(D, F) )
%   | then if ( interaction(A, D), location(C, E) )
%   | | then if ( enzyme(C, G), interaction(A, C) )
%   | | | then return 0.07243464938522651;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.17957750652808377;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.35814893509951234;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.22400259363609656;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   | else return 0.11621345122854457;  // std dev = 0.438, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   else if ( interaction(J, A) )
%   | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( enzyme(C, D), phenotype(C, E) )
%   | then return 0.3289209363521169;  // std dev = 1.209, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.08742256104788682;  // std dev = 0.441, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   else if ( interaction(F, A), location(F, G) )
%   | then if ( interaction(H, F), interaction(H, H) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.23223970360342816;  // std dev = 2.782, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.11601179972810309;  // std dev = 3.678, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | else if ( phenotype(A, I), phenotype(F, J) )
%   | | | then return 0.13166720897580603;  // std dev = 2.640, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.29241609913137917;  // std dev = 3.418, 47.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( interaction(K, M) )
%   | | | then return 0.058741135785635;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2320271678247657;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.06357758851620668;  // std dev = 0.421, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(D, E), location(A, F) )
%   | then if ( interaction(D, A), complex(A, G) )
%   | | then return 0.08300000300557837;  // std dev = 0.451, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( interaction(H, A), location(C, F) )
%   | | | then return 0.19806539805897339;  // std dev = 2.774, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.5398563908803078;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, A), location(A, I) )
%   | | then return 0.4615193580381018;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5617087603981066;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( enzyme(A, J) )
%   | then return 0.08154411191505363;  // std dev = 0.450, 74.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
%   | else if ( interaction(K, A), location(K, L) )
%   | | then if ( interaction(M, K), location(A, L) )
%   | | | then return 0.09897101450524512;  // std dev = 4.195, 84.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=25 */
%   | | | else return 0.2578067337806044;  // std dev = 2.167, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else return 0.5691377812027059;  // std dev = 0.849, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, D), phenotype(E, F) )
%   | then if ( interaction(D, D), interaction(E, C) )
%   | | then if ( phenotype(C, F), complex(D, G) )
%   | | | then return 0.13419436006995214;  // std dev = 4.079, 73.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=26 */
%   | | | else return 0.23618897117988347;  // std dev = 2.422, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( interaction(D, A), complex(A, H) )
%   | | | then return 0.24300358528195712;  // std dev = 1.768, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.03878479238544371;  // std dev = 4.772, 115.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=31 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.26265075364284174;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.45121970823264673;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( phenotype(A, J), interaction(K, A) )
%   | then return -0.20130134953743672;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( interaction(A, L), interaction(L, M) )
%   | | then return -0.10388352843434001;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return 0.08565550666470964;  // std dev = 0.496, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( interaction(D, D), enzyme(A, E) )
%   | then return 0.38625624758664395;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.02145343932730535;  // std dev = 0.442, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( enzyme(A, H), complex(A, I) )
%   | | then if ( interaction(F, J), phenotype(J, G) )
%   | | | then return 0.17886466252181524;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.5328657830993713;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(F, K), complex(A, L) )
%   | | | then return 0.025279501204916312;  // std dev = 1.904, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.1319019432727044;  // std dev = 4.314, 78.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=30 */
%   | else if ( interaction(A, M), complex(M, N) )
%   | | then return -0.07895122803920343;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( enzyme(A, P) )
%   | | | then return 0.0014215447048458905;  // std dev = 2.273, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.08779320546747;  // std dev = 3.313, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(B, C) )
%   then return -0.27042556151957503;  // std dev = 0.330, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( enzyme(D, F), phenotype(D, G) )
%   | | then if ( interaction(D, H), complex(E, I) )
%   | | | then return 0.31443202743519066;  // std dev = 1.704, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.1081881730539512;  // std dev = 1.776, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(J, E) )
%   | | | then return 0.036793649839280025;  // std dev = 4.223, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | | | else return -0.2226563439076645;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( enzyme(A, K), phenotype(A, L) )
%   | | then if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.0289722122572064;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.15709796500473816;  // std dev = 1.530, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(P, A), interaction(Q, P) )
%   | | | then return 0.24007834072171552;  // std dev = 4.037, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | | | else return 0.05929487606823152;  // std dev = 1.799, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.2248697819203161;  // std dev = 0.307, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else if ( interaction(E, A), enzyme(A, F) )
%   | | then if ( phenotype(A, G), enzyme(E, H) )
%   | | | then return -0.03763503541480099;  // std dev = 2.097, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.1932359458475631;  // std dev = 3.379, 47.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=23 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.11877939419065282;  // std dev = 4.231, 74.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=30 */
%   | | | else return -0.007635904881418699;  // std dev = 4.095, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   else if ( interaction(A, K), interaction(K, A) )
%   | then if ( location(K, L) )
%   | | then return -0.167206952645526;  // std dev = 0.881, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.11899663413562993;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(M, A), interaction(N, M) )
%   | | then return -0.06608174406918381;  // std dev = 0.892, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.021163941554945016;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( enzyme(D, E), location(D, F) )
%   | then if ( phenotype(D, G), interaction(A, H) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.043055337161631006;  // std dev = 1.076, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.24495864927834768;  // std dev = 1.118, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.4514456103273333;  // std dev = 0.407, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.025728915837058868;  // std dev = 0.445, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( complex(D, K), complex(A, L) )
%   | | | then return 0.19962361081264454;  // std dev = 1.942, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.10072029136656008;  // std dev = 2.603, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   else if ( interaction(M, A), complex(A, N) )
%   | then if ( enzyme(A, P) )
%   | | then return -0.014842493022593642;  // std dev = 0.446, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else return 0.19795819713718074;  // std dev = 0.481, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 8.996398581710575E-4;  // std dev = 0.454, 123.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=38 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( interaction(A, E), interaction(E, F) )
%   | then return -0.10610811519239716;  // std dev = 0.430, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | else if ( complex(D, G) )
%   | | then return -0.028407824180704318;  // std dev = 0.435, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | else return 0.11965693294376818;  // std dev = 0.472, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then if ( interaction(H, H) )
%   | | then return 0.30640882893845506;  // std dev = 0.777, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.14464478888402552;  // std dev = 1.804, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.060877465567593436;  // std dev = 1.127, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then return -0.032983339631112316;  // std dev = 0.430, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.04851028059670437;  // std dev = 4.245, 87.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=31 */
%   | | | else return 0.31086105808684716;  // std dev = 1.018, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( complex(D, E), interaction(F, D) )
%   | then if ( interaction(D, D), enzyme(F, G) )
%   | | then return -0.06254045900451456;  // std dev = 0.442, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else return 0.03465081319699024;  // std dev = 0.466, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | else return -0.12794006703164146;  // std dev = 0.422, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then if ( interaction(H, H) )
%   | | then return -0.0027931022537642097;  // std dev = 0.445, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.125784350748896;  // std dev = 1.459, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.46447840247076433;  // std dev = 0.772, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, K), interaction(A, L) )
%   | | then if ( interaction(L, L) )
%   | | | then return 0.351025013203566;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06609564238769262;  // std dev = 1.886, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else return 0.0050319988978938775;  // std dev = 0.451, 115.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=37 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.872', 'seconds']
Refined model CLL: -0.386937


******************************************
Best model found
******************************************
Results 

CLL : -0.353289 

AUC ROC : 0.677701 

AUC PR : 0.010828 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 63.04 

Total Inference Time : 14.22072434425354 

Total revision time: 90.1029764919281
Best scored revision CLL: -0.364615


Results 

CLL : -0.353289 

AUC ROC : 0.677701 

AUC PR : 0.010828 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 90.2074686794281 

Total Inference Time : 14.22072434425354 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.882
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), interaction(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17234833086990578;  // std dev = 8.445, 331.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(C, E), phenotype(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, A) )
%   | | | then return 0.16918102031236457;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.16461481026670294;  // std dev = 4.014, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
%   else if ( location(F, A), phenotype(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), phenotype(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18251435364569837;  // std dev = 4.121, 75.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
%   | | else if ( location(I, A), enzyme(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16918102031236382;  // std dev = 5.888, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14647170318026898;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.08510248620643321;  // std dev = 4.815, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07595040500217887;  // std dev = 7.107, 246.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=71 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E) )
%   | | then if ( enzyme(E, F), location(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10500223559680086;  // std dev = 8.055, 293.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=97 */
%   | | else return 0.142748211843966;  // std dev = 0.483, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( phenotype(B, H) )
%   | | | then return -0.24525758176111276;  // std dev = 0.016, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | | else return 0.2169474700666768;  // std dev = 7.477, 225.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=104 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.20244787207624756;  // std dev = 0.011, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18142970675101208;  // std dev = 7.178, 207.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=97 */
%   | else if ( location(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05502662324453669;  // std dev = 2.092, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), enzyme(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.05961131923293604;  // std dev = 7.532, 284.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=97 */
%   | | | else return 0.17851355136020441;  // std dev = 1.872, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), enzyme(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.06162637202902557;  // std dev = 4.330, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
%   | | | else return 0.006102417560350883;  // std dev = 6.675, 236.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=71 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), location(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.027870094124046972;  // std dev = 7.915, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '6.937', 'seconds']
Parameter learned model CLL:-0.352275 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), interaction(C, D)', 'false': 'location(E, A)', 'false,false': 'interaction(A, F), phenotype(B, F)', 'false,false,false': 'interaction(A, G), function(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.445, 227, 104]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(C, E), phenotype(B, E)', 'true,false,false': 'interaction(A, A)', 'false': 'location(F, A), phenotype(B, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), phenotype(B, H)', 'false,false,false': 'location(I, A), enzyme(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.155, 4, 2], 'true,false,false,false': [4.014, 49, 24], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.121, 49, 26], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.888, 104, 52]}]
['proteinclass(A, B)', {'': 'location(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'location(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.313, 206, 104]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.815, 78, 33], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.107, 175, 71]}]
['proteinclass(A, B)', {'': 'location(C, A)', 'false': 'complex(D, A)', 'false,false': 'location(A, E)', 'false,false,true': 'enzyme(E, F), location(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [8.055, 196, 97], 'false,false,false': [0.483, 12, 7]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'phenotype(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.016, 91, 0], 'false,false,true,false': [7.477, 121, 104], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'location(F, A), phenotype(B, F)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.011, 91, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [7.178, 110, 97], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.092, 15, 7]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(D, A), phenotype(B, D)', 'false,false': 'location(E, A), enzyme(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.532, 187, 97], 'false,false,false,false': [1.872, 8, 7]}]
['proteinclass(A, B)', {'': 'location(C, A), phenotype(B, C)', 'false': 'location(D, A), enzyme(D, E)', 'false,false': 'interaction(A, F), complex(G, F)', 'false,false,false': 'enzyme(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.33, 59, 33], 'false,false,false,false': [6.675, 165, 71]}]
['proteinclass(A, B)', {'': 'location(A, C), location(C, D)', 'false': 'function(E, A), location(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.915, 208, 104]}]
{'': [nan, 0.2154781354679147], 'false': [nan, 0.2154781354679147], 'false,false': [nan, 0.21547813546791347], 'false,false,false': [nan, 0.21547813546791347]}
{'': [0.22079794904662764, 0.2236464833867439], 'false': [nan, 0.2236464833867439], 'false,false': [0.22648888888888932, 0.22222222222222313], 'false,false,true': [nan, 0.22648888888888938], 'false,false,false': [nan, 0.22222222222222313], 'true': [nan, 0.22079794904662764], 'true,false': [nan, 0.22079794904662764], 'true,false,false': [0.22222222222222218, 0.22067930193282095]}
{'': [nan, 0.22290836073620518], 'false': [nan, 0.2229083607362047], 'false,false': [nan, 0.2229083607362047]}
{'': [nan, 0.20644344684896654], 'false': [0.20885955789434618, 0.2053272071928924], 'false,false': [nan, 0.2053272071928924], 'false,false,false': [nan, 0.2053272071928924]}
{'': [nan, 0.22222377503980723], 'false': [nan, 0.22222377503980723], 'false,false': [0.22144324368812507, 0.2329223955248274], 'false,false,true': [nan, 0.22144324368812507]}
{'': [nan, 0.22071495948776293], 'false': [nan, 0.22071495948776312], 'false,false': [0.22071495948776312, nan], 'false,false,true': [2.8396596828198713e-06, 0.2484597077557587]}
{'': [nan, 0.20380426248695485], 'false': [0.20415998847310257, 0.19890733548466166], 'false,true': [1.2954604563044012e-06, 0.24891110748533307], 'false,true,false': [nan, 0.24891110748533307], 'false,false': [nan, 0.19890733548466166], 'false,false,false': [nan, 0.19890733548466166]}
{'': [nan, 0.2021464114368424], 'false': [nan, 0.2021464114368424], 'false,false': [nan, 0.2021464114368424], 'false,false,false': [0.19976986276590392, 0.23371391001271144]}
{'': [nan, 0.19361160950300318], 'false': [nan, 0.19361160950300318], 'false,false': [nan, 0.19361160950300224], 'false,false,false': [0.20381462951419263, 0.18876944250020705]}
{'': [nan, 0.20077589193291537], 'false': [nan, 0.20077589193291542], 'false,false': [nan, 0.20077589193291542]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- phenotype(B, H).;true;true
6;;proteinclass(A, B) :- location(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 18.373
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), interaction(A, E) )
%   | then if ( phenotype(E, D) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(F, A), phenotype(F, D) )
%   | | then return 0.08395538671241559;  // std dev = 0.418, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | else return 0.17064893509951234;  // std dev = 0.464, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G) )
%   | | then if ( phenotype(H, I) )
%   | | | then return 0.21673479368537227;  // std dev = 6.748, 198.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=71 */
%   | | | else return 0.08542166237223962;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( enzyme(G, J) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.0803711573217344;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( enzyme(A, D) )
%   | then return 0.10788517438732324;  // std dev = 0.446, 113.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=31 */
%   | else if ( interaction(A, E), location(E, C) )
%   | | then if ( interaction(E, E), phenotype(A, F) )
%   | | | then return 0.19330281749647488;  // std dev = 2.763, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.09627973075524904;  // std dev = 4.022, 83.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=22 */
%   | | else if ( location(G, C), interaction(G, G) )
%   | | | then return 0.18503745489765908;  // std dev = 4.392, 84.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=30 */
%   | | | else return 0.32966645386011095;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, H) )
%   | then return 0.5022540269550116;  // std dev = 0.824, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(J, A) )
%   | | | then return 0.1629997871934443;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2335150146120018;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.47540780245230163;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( interaction(C, A), complex(C, E) )
%   | then if ( phenotype(C, D), interaction(C, C) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.30058623867252343;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.2074192635640244;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( location(A, F), location(C, F) )
%   | | | then return 0.09611392563332224;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.2273006319033867;  // std dev = 1.499, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( complex(A, G), complex(C, G) )
%   | | then if ( interaction(C, H), phenotype(H, D) )
%   | | | then return 0.5592538028864298;  // std dev = 0.876, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3243905348317392;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(C, C) )
%   | | | then return 0.10703151982674078;  // std dev = 1.451, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.26372725530934416;  // std dev = 2.110, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   else return 0.12378843721040006;  // std dev = 0.464, 218.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=69 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( phenotype(A, D) )
%   | then if ( enzyme(C, E), interaction(C, C) )
%   | | then return 0.4076297739481262;  // std dev = 0.845, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(C, F), complex(A, F) )
%   | | | then return 0.05957417699697422;  // std dev = 1.873, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.142365587385158;  // std dev = 2.970, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | else if ( complex(C, G), complex(A, G) )
%   | | then return 0.12961214225681136;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(C, C) )
%   | | | then return 0.546278808923478;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.22377075390860948;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( location(A, H), interaction(A, I) )
%   | then return 0.07803069251230003;  // std dev = 0.455, 75.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=22 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then return 0.14704107565625849;  // std dev = 0.481, 108.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=39 */
%   | | else return 0.08635636653048567;  // std dev = 0.461, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( phenotype(A, C) )
%   | then return 0.3368775023966535;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.23401358670681738;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( location(A, F) )
%   | | then if ( interaction(G, A), interaction(G, D) )
%   | | | then return 0.024494119133300938;  // std dev = 4.250, 90.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=25 */
%   | | | else return 0.11069109996680956;  // std dev = 2.796, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else return -0.06814571174846955;  // std dev = 0.417, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.420192764651101;  // std dev = 1.362, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.14342617436173222;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.21275220124728966;  // std dev = 1.496, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.08863463334953199;  // std dev = 5.413, 133.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(B, C) )
%   then return -0.2729281600313352;  // std dev = 0.349, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( interaction(E, E) )
%   | | then if ( interaction(E, A) )
%   | | | then return -0.016165181463012896;  // std dev = 1.181, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.023067294346305826;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, F), complex(A, G) )
%   | | | then return 0.2175830536117701;  // std dev = 1.228, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.12067416687326582;  // std dev = 2.258, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( interaction(A, H), phenotype(A, I) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.22453106142426002;  // std dev = 2.632, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.4640845737109226;  // std dev = 1.698, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.17793979023790452;  // std dev = 5.821, 136.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=60 */
%   | | | else return 0.4565768951594152;  // std dev = 1.223, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.21714652359928113;  // std dev = 0.233, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( phenotype(A, E), complex(A, F) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.21973610593685403;  // std dev = 3.129, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.6510898529519012;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.05475970840340637;  // std dev = 2.992, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.17027753901905363;  // std dev = 5.461, 122.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=56 */
%   else if ( interaction(K, A), complex(K, L) )
%   | then return 0.2129279330776609;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, M) )
%   | | then return 0.0984770314714452;  // std dev = 0.748, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return -0.04759235079983457;  // std dev = 0.862, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.052576652849411376;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( complex(A, E), phenotype(D, F) )
%   | then if ( phenotype(A, F), enzyme(A, G) )
%   | | then return -0.08161052151430556;  // std dev = 0.408, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( interaction(D, D), enzyme(C, H) )
%   | | | then return -0.10160290803409477;  // std dev = 1.181, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.03199324680120883;  // std dev = 3.885, 76.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=26 */
%   | else if ( interaction(D, D), phenotype(D, I) )
%   | | then if ( complex(C, J), phenotype(A, K) )
%   | | | then return 0.04024380273782567;  // std dev = 3.390, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.18502990094361355;  // std dev = 2.300, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( enzyme(A, L), phenotype(C, M) )
%   | | | then return -0.067616127202218;  // std dev = 1.700, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.033642124454003344;  // std dev = 3.925, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
%   else if ( phenotype(A, N), enzyme(A, P) )
%   | then return 0.29271148741209096;  // std dev = 1.025, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.18045947397106557;  // std dev = 0.410, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( complex(D, E), interaction(D, F) )
%   | then if ( interaction(G, A), complex(G, C) )
%   | | then if ( phenotype(G, H), enzyme(F, I) )
%   | | | then return 0.053959506661852064;  // std dev = 2.094, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return -0.11239149633518478;  // std dev = 2.023, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( interaction(F, A), enzyme(F, J) )
%   | | | then return -0.13353992202682735;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.19492360064955275;  // std dev = 2.123, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | else return 0.398497777170408;  // std dev = 0.741, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( location(A, K) )
%   | then if ( interaction(L, A), complex(L, M) )
%   | | then if ( phenotype(A, N), phenotype(L, N) )
%   | | | then return -0.03061207750118408;  // std dev = 3.364, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | | else return 0.027608164667913687;  // std dev = 4.725, 115.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=37 */
%   | | else return -0.03054160025524101;  // std dev = 0.406, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | else return -0.05698985651411324;  // std dev = 0.417, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( location(A, D) )
%   | then if ( interaction(A, A) )
%   | | then if ( complex(A, E) )
%   | | | then return -0.0741252529387182;  // std dev = 1.586, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.20674910661968088;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(C, F), complex(A, F) )
%   | | | then return 0.15064753258206856;  // std dev = 2.448, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.017028729984651787;  // std dev = 6.628, 236.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=74 */
%   | else if ( interaction(A, G) )
%   | | then return -0.19794288398615584;  // std dev = 0.341, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( interaction(H, C) )
%   | | | then return 0.04827130379832393;  // std dev = 1.375, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.049161578586023616;  // std dev = 1.096, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( complex(A, I) )
%   | then return 0.4900601587137145;  // std dev = 0.215, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.0905095268736111;  // std dev = 1.063, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.361', 'seconds']
Refined model CLL: -0.379537


******************************************
Best model found
******************************************
Results 

CLL : -0.367781 

AUC ROC : 0.659418 

AUC PR : 0.010925 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 18.373 

Total Inference Time : 8.699930667877197 

Total revision time: 44.5119363117218
Best scored revision CLL: -0.352275


Results 

CLL : -0.367781 

AUC ROC : 0.659418 

AUC PR : 0.010925 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 44.6164284992218 

Total Inference Time : 8.699930667877197 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.174
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), interaction(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17539031440985717;  // std dev = 7.926, 290.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(C, E), phenotype(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, A) )
%   | | | then return 0.10815715377899454;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.16042988105172182;  // std dev = 2.962, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   else if ( location(F, A), phenotype(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), phenotype(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19625462331976412;  // std dev = 4.730, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
%   | | else if ( location(I, A), enzyme(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16607504234204584;  // std dev = 5.239, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1416545859046744;  // std dev = 7.844, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.10985917422637369;  // std dev = 5.075, 118.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=38 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09718877643500626;  // std dev = 6.102, 174.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=54 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E) )
%   | | then if ( enzyme(E, F), location(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09096254534886229;  // std dev = 7.772, 277.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=89 */
%   | | else return 0.13994796988260677;  // std dev = 0.484, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( phenotype(B, H) )
%   | | | then return -0.2471199348088273;  // std dev = 0.040, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return 0.17491036109820252;  // std dev = 7.290, 218.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=92 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.20360497382424994;  // std dev = 0.019, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1347797513175921;  // std dev = 7.214, 214.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=89 */
%   | else if ( location(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.032922754968372527;  // std dev = 1.477, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), enzyme(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.0631629125283417;  // std dev = 7.378, 256.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=89 */
%   | | | else return 0.03520467122315375;  // std dev = 1.402, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), enzyme(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.0027969442344539276;  // std dev = 5.026, 124.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=38 */
%   | | | else return 0.07021420068373103;  // std dev = 5.635, 149.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=54 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), location(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04864497927632375;  // std dev = 7.452, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '14.856', 'seconds']
Parameter learned model CLL:-0.368344 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), interaction(C, D)', 'false': 'location(E, A)', 'false,false': 'interaction(A, F), phenotype(B, F)', 'false,false,false': 'interaction(A, G), function(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.926, 198, 92]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(C, E), phenotype(B, E)', 'true,false,false': 'interaction(A, A)', 'false': 'location(F, A), phenotype(B, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), phenotype(B, H)', 'false,false,false': 'location(I, A), enzyme(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.477, 8, 3], 'true,false,false,false': [2.962, 27, 13], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.73, 62, 35], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.239, 83, 41]}]
['proteinclass(A, B)', {'': 'location(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'location(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.844, 185, 92]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [5.075, 80, 38], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.102, 120, 54]}]
['proteinclass(A, B)', {'': 'location(C, A)', 'false': 'complex(D, A)', 'false,false': 'location(A, E)', 'false,false,true': 'enzyme(E, F), location(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.772, 188, 89], 'false,false,false': [0.484, 5, 3]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'phenotype(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.04, 64, 0], 'false,false,true,false': [7.29, 126, 92], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'location(F, A), phenotype(B, F)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.019, 42, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [7.214, 125, 89], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.477, 9, 3]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(D, A), phenotype(B, D)', 'false,false': 'location(E, A), enzyme(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.378, 167, 89], 'false,false,false,false': [1.402, 7, 3]}]
['proteinclass(A, B)', {'': 'location(C, A), phenotype(B, C)', 'false': 'location(D, A), enzyme(D, E)', 'false,false': 'interaction(A, F), complex(G, F)', 'false,false,false': 'enzyme(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.026, 86, 38], 'false,false,false,false': [5.635, 95, 54]}]
['proteinclass(A, B)', {'': 'location(A, C), location(C, D)', 'false': 'function(E, A), location(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.452, 168, 92]}]
{'': [nan, 0.21659928656361593], 'false': [nan, 0.21659928656361593], 'false,false': [nan, 0.21659928656361563], 'false,false,false': [nan, 0.21659928656361563]}
{'': [0.2153018069973088, 0.2256301058536881], 'false': [nan, 0.2256301058536885], 'false,false': [0.2306302476352424, 0.22131893860561874], 'false,false,true': [nan, 0.2306302476352425], 'false,false,false': [nan, 0.22131893860561874], 'true': [nan, 0.2153018069973088], 'true,false': [nan, 0.2153018069973088], 'true,false,false': [0.19834710743801665, 0.2193750000000001]}
{'': [nan, 0.2221039281800392], 'false': [nan, 0.22210392818003824], 'false,false': [nan, 0.22210392818003824]}
{'': [nan, 0.21576822715376287], 'false': [0.2183108861654705, 0.2139790198389961], 'false,false': [nan, 0.2139790198389961], 'false,false,false': [nan, 0.2139790198389961]}
{'': [nan, 0.21860197565744974], 'false': [nan, 0.21860197565744974], 'false,false': [0.21807494733897628, 0.2345181157697177], 'false,false,true': [nan, 0.21807494733897628]}
{'': [nan, 0.21969160255994563], 'false': [nan, 0.2196916025599457], 'false,false': [0.2196916025599457, nan], 'false,false,true': [2.5021646688584698e-05, 0.24375884379924356]}
{'': [nan, 0.2178788723788445], 'false': [0.2190059492980475, 0.18181234869491733], 'false,true': [8.907195393349446e-06, 0.24320082823113667], 'false,true,false': [nan, 0.24320082823113667], 'false,false': [nan, 0.18181234869491733], 'false,false,false': [nan, 0.18181234869491733]}
{'': [nan, 0.21206477078754435], 'false': [nan, 0.21206477078754435], 'false,false': [nan, 0.21206477078754435], 'false,false,false': [0.21263700798783008, 0.19666322104007355]}
{'': [nan, 0.20996218376061124], 'false': [nan, 0.20996218376061124], 'false,false': [nan, 0.20996218376061074], 'false,false,false': [0.20370275311454714, 0.21310693948653764]}
{'': [nan, 0.21358367022912564], 'false': [nan, 0.2135836702291256], 'false,false': [nan, 0.2135836702291256]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- phenotype(B, H).;true;true
6;;proteinclass(A, B) :- location(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 8.406
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, A), complex(A, C) )
%   then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( complex(E, F), interaction(G, E) )
%   | | then if ( phenotype(A, H), enzyme(G, I) )
%   | | | then return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.17064893509951232;  // std dev = 4.146, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
%   | | else if ( interaction(J, E), location(J, D) )
%   | | | then return 0.0878786648292421;  // std dev = 3.619, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | | else return 0.16962434493557793;  // std dev = 3.617, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( interaction(K, M), enzyme(A, N) )
%   | | | then return 0.24703782398840124;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.3844647245731965;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( phenotype(A, P) )
%   | | | then return 0.14386322081379804;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.058148935099512175;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( complex(A, E), interaction(A, C) )
%   | then return 0.13175206795964106;  // std dev = 0.452, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( complex(C, F), complex(A, F) )
%   | | then return 0.6730908907707575;  // std dev = 0.905, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(C, C) )
%   | | | then return 0.44049292456892336;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10123771637582298;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( enzyme(A, G), location(A, H) )
%   | then if ( enzyme(I, G), complex(I, J) )
%   | | then if ( interaction(A, I), phenotype(A, K) )
%   | | | then return 0.4920078170619879;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14659357017963645;  // std dev = 3.803, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | | else if ( location(L, H), interaction(L, A) )
%   | | | then return 0.5028643646763735;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.16955442658899575;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.12833206959687718;  // std dev = 0.457, 171.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=51 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( complex(E, C), phenotype(E, F) )
%   | then return 0.04526050668817616;  // std dev = 0.440, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | else return 0.18975589486876615;  // std dev = 0.497, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( interaction(A, G), enzyme(G, H) )
%   | then if ( complex(G, I), interaction(G, J) )
%   | | then if ( interaction(J, G) )
%   | | | then return 0.07620621562559311;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1665367813365529;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(A, K), interaction(A, A) )
%   | | | then return 0.10425433572647132;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.38314301674805057;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, L), phenotype(A, M) )
%   | | then return 0.0566465704099534;  // std dev = 0.433, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | else if ( interaction(A, N), location(A, P) )
%   | | | then return 0.16912151117524216;  // std dev = 2.766, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.09732260427283629;  // std dev = 5.001, 121.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=35 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( interaction(E, A), interaction(A, F) )
%   | then return 0.13355632371641227;  // std dev = 0.475, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | else return 0.03552423431838259;  // std dev = 0.439, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   else if ( interaction(A, G) )
%   | then if ( complex(A, H), interaction(G, G) )
%   | | then return 0.03792100662305532;  // std dev = 0.443, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.2586163985686458;  // std dev = 1.834, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.09767158619783103;  // std dev = 4.140, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
%   | else if ( enzyme(A, K) )
%   | | then if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.06324619369256564;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.14695352805603165;  // std dev = 2.407, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.5623935011365884;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19910060453618353;  // std dev = 3.209, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(E, A), location(E, D) )
%   | then if ( enzyme(A, F), enzyme(E, F) )
%   | | then return -5.192534676560001E-4;  // std dev = 0.461, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else return 0.14089727224024384;  // std dev = 0.488, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | else return 0.012181874504243401;  // std dev = 0.437, 91.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=23 */
%   else if ( phenotype(A, G), enzyme(A, H) )
%   | then if ( interaction(I, A), phenotype(I, G) )
%   | | then return 0.06528791781348176;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.5031854358648638;  // std dev = 0.457, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(L, J), phenotype(J, M) )
%   | | | then return 0.11064753483276318;  // std dev = 1.978, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.2631521065631522;  // std dev = 2.433, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.14222978263191224;  // std dev = 2.642, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.029010043424332426;  // std dev = 2.555, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(B, C) )
%   then return -0.2556853394784038;  // std dev = 0.305, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), enzyme(F, D) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.3586233688039688;  // std dev = 1.359, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.04223367130355752;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( location(E, H) )
%   | | | then return 0.06986360753168067;  // std dev = 3.817, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | | else return -0.09499681751593829;  // std dev = 1.315, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( enzyme(A, J), complex(A, K) )
%   | | | then return 0.45448150278631466;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.21010113177214096;  // std dev = 2.563, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.20610750359588229;  // std dev = 3.170, 40.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
%   | | | else return 0.11943395084074883;  // std dev = 4.273, 78.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=29 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.21341074511451766;  // std dev = 0.241, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.08195729794330626;  // std dev = 2.587, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.12010143060698639;  // std dev = 1.438, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(H, A), complex(A, I) )
%   | | | then return 0.1857367430162229;  // std dev = 3.895, 59.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=28 */
%   | | | else return 0.09906381369357228;  // std dev = 5.433, 126.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=48 */
%   else return 0.33520117018844264;  // std dev = 1.076, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(C, C), complex(C, E) )
%   | then return -0.10729358909761283;  // std dev = 0.406, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else return 0.052617853389619905;  // std dev = 0.465, 96.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=34 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( interaction(F, H) )
%   | | then return 0.030614539408549222;  // std dev = 0.459, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | else if ( enzyme(A, I), enzyme(F, I) )
%   | | | then return 0.010923066926300204;  // std dev = 0.788, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.30468743548227784;  // std dev = 1.174, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), phenotype(K, L) )
%   | | | then return 0.13472428465621694;  // std dev = 1.717, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.058604374732578096;  // std dev = 1.176, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.2942766851790755;  // std dev = 1.303, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.14270424380736116;  // std dev = 2.811, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( phenotype(E, G) )
%   | | | then return 0.22492064100338383;  // std dev = 0.934, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08146343719476587;  // std dev = 1.045, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.019445373910590372;  // std dev = 1.124, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return -0.028907385955742694;  // std dev = 0.446, 107.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=32 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then return -0.036983236693751316;  // std dev = 0.419, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else if ( interaction(A, J), enzyme(A, K) )
%   | | then if ( interaction(J, A), location(J, L) )
%   | | | then return -0.0052566076605182754;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.26632768323766076;  // std dev = 1.458, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( location(A, M) )
%   | | | then return 0.03527280613535807;  // std dev = 4.867, 118.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=38 */
%   | | | else return -0.12670636957301007;  // std dev = 0.840, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(A, A), location(A, E) )
%   | then return -0.16860486193632995;  // std dev = 0.407, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | else return -0.013049645530402092;  // std dev = 0.442, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( interaction(J, F), interaction(K, J) )
%   | | | then return 0.34870529605633266;  // std dev = 0.828, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08189222712136379;  // std dev = 1.712, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return -0.03742318102575322;  // std dev = 0.429, 79.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=21 */
%   | else if ( enzyme(A, L) )
%   | | then if ( complex(A, M) )
%   | | | then return -0.09613736440302922;  // std dev = 1.151, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.01677240061381262;  // std dev = 1.577, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( phenotype(A, N), complex(A, P) )
%   | | | then return 0.2848520628527742;  // std dev = 1.001, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.09044881985225235;  // std dev = 3.201, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.965', 'seconds']
Refined model CLL: -0.375659


******************************************
Best model found
******************************************
Results 

CLL : -0.350776 

AUC ROC : 0.683098 

AUC PR : 0.011122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.406 

Total Inference Time : 3.26282000541687 

Total revision time: 25.970140295028685
Best scored revision CLL: -0.368344


Results 

CLL : -0.350776 

AUC ROC : 0.683098 

AUC PR : 0.011122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 26.074632482528685 

Total Inference Time : 3.26282000541687 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.967
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), interaction(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19148226843284563;  // std dev = 7.572, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(C, E), phenotype(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, A) )
%   | | | then return 0.16653882456488167;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.17746778631351628;  // std dev = 3.711, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
%   else if ( location(F, A), phenotype(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), phenotype(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18763587097838438;  // std dev = 4.252, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   | | else if ( location(I, A), enzyme(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14229640032245822;  // std dev = 4.847, 110.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.154130658206652;  // std dev = 7.503, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.16772974891650014;  // std dev = 4.155, 73.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=28 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14815724889049955;  // std dev = 6.072, 159.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=58 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E) )
%   | | then if ( enzyme(E, F), location(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10243039549572772;  // std dev = 7.367, 240.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=83 */
%   | | else return 0.2532887445954846;  // std dev = 0.502, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( phenotype(B, H) )
%   | | | then return -0.2635195465572278;  // std dev = 0.052, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | | else return 0.1934265070554136;  // std dev = 6.832, 188.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=86 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.21558195378628042;  // std dev = 0.024, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14416340890361606;  // std dev = 6.780, 186.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=83 */
%   | else if ( location(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09475227993867989;  // std dev = 1.490, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), enzyme(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.04717526336168691;  // std dev = 6.994, 247.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=83 */
%   | | | else return 0.011141109620017275;  // std dev = 1.399, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), enzyme(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.01170648950888929;  // std dev = 4.230, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   | | | else return 0.01954359854766792;  // std dev = 5.960, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), location(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.031623538146749425;  // std dev = 7.161, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '17.339', 'seconds']
Parameter learned model CLL:-0.353373 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), interaction(C, D)', 'false': 'location(E, A)', 'false,false': 'interaction(A, F), phenotype(B, F)', 'false,false,false': 'interaction(A, G), function(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.572, 172, 86]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(C, E), phenotype(B, E)', 'true,false,false': 'interaction(A, A)', 'false': 'location(F, A), phenotype(B, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), phenotype(B, H)', 'false,false,false': 'location(I, A), enzyme(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.414, 6, 3], 'true,false,false,false': [3.711, 40, 21], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.252, 51, 28], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.847, 76, 34]}]
['proteinclass(A, B)', {'': 'location(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'location(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.503, 163, 86]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.155, 45, 28], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.072, 101, 58]}]
['proteinclass(A, B)', {'': 'location(C, A)', 'false': 'complex(D, A)', 'false,false': 'location(A, E)', 'false,false,true': 'enzyme(E, F), location(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.367, 157, 83], 'false,false,false': [0.502, 3, 3]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'phenotype(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.052, 68, 0], 'false,false,true,false': [6.832, 102, 86], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'location(F, A), phenotype(B, F)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.024, 58, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.78, 103, 83], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.49, 11, 3]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(D, A), phenotype(B, D)', 'false,false': 'location(E, A), enzyme(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.994, 164, 83], 'false,false,false,false': [1.399, 7, 3]}]
['proteinclass(A, B)', {'': 'location(C, A), phenotype(B, C)', 'false': 'location(D, A), enzyme(D, E)', 'false,false': 'interaction(A, F), complex(G, F)', 'false,false,false': 'enzyme(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.23, 69, 28], 'false,false,false,false': [5.96, 123, 58]}]
['proteinclass(A, B)', {'': 'location(A, C), location(C, D)', 'false': 'function(E, A), location(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.161, 170, 86]}]
{'': [nan, 0.22222222222222304], 'false': [nan, 0.22222222222222304], 'false,false': [nan, 0.22222222222222313], 'false,false,false': [nan, 0.22222222222222313]}
{'': [0.22530612244898027, 0.22043055905489836], 'true': [nan, 0.22530612244898027], 'true,false': [nan, 0.22530612244898027], 'true,false,false': [0.22222222222222238, 0.22574576726686327], 'false': [nan, 0.22043055905489684], 'false,false': [0.2288094856593501, 0.21355371900826522], 'false,false,true': [nan, 0.22880948565934997], 'false,false,false': [nan, 0.21355371900826522]}
{'': [nan, 0.22610291173623295], 'false': [nan, 0.22610291173623306], 'false,false': [nan, 0.22610291173623306]}
{'': [nan, 0.23339793540995427], 'false': [0.2365183451390424, 0.2318447554941165], 'false,false': [nan, 0.2318447554941165], 'false,false,false': [nan, 0.2318447554941165]}
{'': [nan, 0.22733868719646863], 'false': [nan, 0.22733868719646863], 'false,false': [0.22616675018219642, 0.2520130053350597], 'false,false,true': [nan, 0.22616675018219642]}
{'': [nan, 0.22306577286784865], 'false': [nan, 0.22306577286784865], 'false,false': [0.22306577286784865, nan], 'false,false,true': [4.040185952702835e-05, 0.24827210485695483]}
{'': [nan, 0.21017883575677748], 'false': [0.21186709216019906, 0.15849957482064186], 'false,true': [9.886360725553972e-06, 0.2471670995776922], 'false,true,false': [nan, 0.2471670995776922], 'false,false': [nan, 0.15849957482064186], 'false,false,false': [nan, 0.15849957482064186]}
{'': [nan, 0.19799218627157647], 'false': [nan, 0.19799218627157647], 'false,false': [nan, 0.19799218627157647], 'false,false,false': [0.19803777836892383, 0.19561812497580655]}
{'': [nan, 0.1923490997465046], 'false': [nan, 0.1923490997465046], 'false,false': [nan, 0.19234909974650466], 'false,false,false': [0.18449127182650488, 0.19621945594612575]}
{'': [nan, 0.20032928671826622], 'false': [nan, 0.2003292867182662], 'false,false': [nan, 0.2003292867182662]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- phenotype(B, H).;true;true
6;;proteinclass(A, B) :- location(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 9.912
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( enzyme(D, E), complex(D, C) )
%   | then return 0.5724346493852266;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(A, F), complex(F, C) )
%   | | then if ( enzyme(A, G), interaction(A, D) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.40360348055405776;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( enzyme(D, H) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.2059750220560341;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   else if ( enzyme(A, I) )
%   | then return 0.12481560176617883;  // std dev = 0.442, 75.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(L, J), complex(L, K) )
%   | | | then return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.19148226843284563;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.18814893509951208;  // std dev = 0.470, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( phenotype(C, E), interaction(C, F) )
%   | then if ( interaction(F, G), interaction(C, G) )
%   | | then if ( complex(C, H), interaction(A, F) )
%   | | | then return 0.31169815629132847;  // std dev = 1.725, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.1114739456815781;  // std dev = 2.817, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | else if ( phenotype(F, D), complex(C, I) )
%   | | | then return 0.16151060296604836;  // std dev = 1.143, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.5906668217182308;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(C, J) )
%   | | then if ( interaction(C, C), interaction(K, A) )
%   | | | then return 0.1713003515563667;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.26210744310541806;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.6371072593494198;  // std dev = 0.898, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( location(A, L), complex(A, M) )
%   | then return 0.16833602075841442;  // std dev = 0.483, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | else return 0.1169599492881225;  // std dev = 0.451, 137.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( phenotype(A, E), complex(A, F) )
%   | then return 0.04052082817950829;  // std dev = 0.442, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | else if ( interaction(G, C), interaction(C, G) )
%   | | then return 0.10269743926371491;  // std dev = 0.457, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( phenotype(A, H), interaction(I, C) )
%   | | | then return 0.5314588036881891;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.15399441906621927;  // std dev = 2.683, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   else if ( location(A, J) )
%   | then if ( phenotype(A, K), interaction(A, L) )
%   | | then if ( interaction(L, M), phenotype(L, N) )
%   | | | then return 0.22129242390390913;  // std dev = 2.742, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.029843904971168584;  // std dev = 2.291, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( interaction(A, P) )
%   | | | then return 0.34330262296954883;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.2139495742965596;  // std dev = 3.388, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | else return 0.01681126760445789;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( phenotype(C, E), interaction(A, F) )
%   | then return 0.1411887530290225;  // std dev = 0.502, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | else return 0.02120205511609374;  // std dev = 0.441, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   else if ( interaction(A, G) )
%   | then if ( enzyme(A, H), phenotype(G, I) )
%   | | then if ( enzyme(G, J) )
%   | | | then return 0.443558474230009;  // std dev = 0.775, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.22526967951739651;  // std dev = 1.488, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.07741537467770922;  // std dev = 0.465, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   | else if ( enzyme(A, K) )
%   | | then if ( complex(A, L) )
%   | | | then return 0.10393990143553174;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.39319206403873863;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.3063642846602095;  // std dev = 0.984, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.15943688009510285;  // std dev = 2.614, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, E), complex(E, F) )
%   | | then return 0.28165860138063575;  // std dev = 0.498, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else return 0.03325453633481957;  // std dev = 1.181, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.005585814552939608;  // std dev = 0.450, 162.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=44 */
%   else if ( interaction(G, A), phenotype(G, H) )
%   | then if ( interaction(A, I), phenotype(I, H) )
%   | | then return -0.03446656387972953;  // std dev = 0.411, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( interaction(J, G), enzyme(J, K) )
%   | | | then return 0.21623317618994756;  // std dev = 1.783, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.0789756212721338;  // std dev = 2.887, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | else if ( interaction(A, L), complex(L, M) )
%   | | then if ( interaction(L, N), enzyme(N, P) )
%   | | | then return 0.19062027537815687;  // std dev = 1.486, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.0773152431411874;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.4230193144314435;  // std dev = 1.175, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(B, C) )
%   then return -0.26640648423558383;  // std dev = 0.350, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( interaction(D, A), enzyme(A, E) )
%   | then if ( interaction(A, D) )
%   | | then return 0.5040535187215579;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(D, F), complex(A, G) )
%   | | | then return 0.1396151658564607;  // std dev = 1.876, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.30364208830104816;  // std dev = 2.631, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( phenotype(H, I), interaction(J, A) )
%   | | | then return 0.07441147732959917;  // std dev = 1.567, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.3076918497104784;  // std dev = 2.423, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.10888765015885937;  // std dev = 1.280, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.12267959681355659;  // std dev = 5.014, 105.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.2266541610950394;  // std dev = 0.334, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( interaction(A, E), complex(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.010980379584041852;  // std dev = 2.658, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.19232679846869408;  // std dev = 1.805, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.3365730197836586;  // std dev = 2.133, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | else return 0.1759447573002501;  // std dev = 5.278, 110.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=53 */
%   else if ( enzyme(A, J) )
%   | then return 0.004528974924162377;  // std dev = 0.825, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.12981989478341102;  // std dev = 1.068, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( complex(C, E), phenotype(A, F) )
%   | then if ( interaction(A, G) )
%   | | then if ( enzyme(G, D) )
%   | | | then return 0.16925353339293056;  // std dev = 0.926, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4011689704994097;  // std dev = 0.664, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(C, H), interaction(H, A) )
%   | | | then return -0.07359017466425208;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.08412203247538169;  // std dev = 1.314, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return -0.12482809906415798;  // std dev = 0.407, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   else if ( complex(A, I), interaction(A, J) )
%   | then if ( interaction(J, K), enzyme(K, L) )
%   | | then return -0.09603320715463513;  // std dev = 0.406, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | else if ( enzyme(J, M) )
%   | | | then return 0.42654296825366855;  // std dev = 0.715, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.02675224055040326;  // std dev = 1.962, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else return 0.06058431881989266;  // std dev = 0.440, 156.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=54 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.16509400362888813;  // std dev = 1.172, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.008339151652830244;  // std dev = 0.388, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0.27644279296557556;  // std dev = 0.872, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.061266506598255534;  // std dev = 1.033, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.017244531318096765;  // std dev = 0.776, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.15936277960797923;  // std dev = 0.423, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( complex(A, J) )
%   | | then return -0.015407901575205376;  // std dev = 0.425, 77.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=22 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.014949419515598692;  // std dev = 4.098, 92.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=28 */
%   | | | else return 0.09133921594321788;  // std dev = 3.401, 54.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( complex(A, E) )
%   | then if ( interaction(F, C), interaction(C, F) )
%   | | then return -0.005093213801570982;  // std dev = 0.418, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | else return 0.14231163959591714;  // std dev = 0.465, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return -0.0377349763975702;  // std dev = 0.425, 145.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=40 */
%   else if ( interaction(A, G), interaction(G, G) )
%   | then if ( interaction(H, A) )
%   | | then if ( enzyme(G, I) )
%   | | | then return 0.18070089604272854;  // std dev = 0.893, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.03965759156721301;  // std dev = 1.059, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.07227131496828017;  // std dev = 0.414, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | else if ( location(A, J) )
%   | | then if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.05625335536175264;  // std dev = 2.204, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.3034971309401396;  // std dev = 1.556, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else return -0.1658012083853959;  // std dev = 0.887, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '22.512', 'seconds']
Refined model CLL: -0.382921


******************************************
Best model found
******************************************
Results 

CLL : -0.366599 

AUC ROC : 0.664265 

AUC PR : 0.010301 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.912 

Total Inference Time : 3.5760319232940674 

Total revision time: 26.48488026046753
Best scored revision CLL: -0.353373


Results 

CLL : -0.366599 

AUC ROC : 0.664265 

AUC PR : 0.010301 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 26.58937244796753 

Total Inference Time : 3.5760319232940674 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.959
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22851930546988283;  // std dev = 7.097, 216.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=80 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G), phenotype(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, H), function(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15226658215833588;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), phenotype(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F) )
%   | | then if ( location(F, G), phenotype(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.150290693204233;  // std dev = 7.503, 258.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=83 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.22799459053974194;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1613279238730753;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.13455617106125545;  // std dev = 7.414, 249.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=82 */
%   | | else return 0.20180814246660456;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.11015765964902145;  // std dev = 4.785, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10430449066595339;  // std dev = 5.998, 165.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=53 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(D, A), complex(D, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(C, E), complex(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09644444971157222;  // std dev = 7.401, 247.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=82 */
%   else if ( complex(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( enzyme(H, I), interaction(H, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22076233763296793;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, C), enzyme(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(B, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.059833338505834714;  // std dev = 3.507, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   else if ( complex(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(I, J) )
%   | | then if ( phenotype(B, K) )
%   | | | then return -0.2555574264692683;  // std dev = 0.038, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.21520926607820728;  // std dev = 6.051, 147.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=69 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.23099016376210627;  // std dev = 0.143, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16863921657469114;  // std dev = 4.894, 97.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=44 */
%   | else if ( interaction(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.0466620757568656;  // std dev = 5.256, 133.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), location(G, H) )
%   | | | then return 0.12573277544886607;  // std dev = 3.324, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | | else return 0.10549032018816085;  // std dev = 1.482, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(A, I) )
%   | | | then return 7.068852362986153E-4;  // std dev = 4.274, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
%   | | | else return 0.04835613128456542;  // std dev = 4.704, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( location(D, F) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.02703170669855101;  // std dev = 3.849, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | | else if ( interaction(G, D), location(G, H) )
%   | | | then return -0.08204471272371705;  // std dev = 1.185, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, I), complex(J, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.08918003217652329;  // std dev = 3.561, 56.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=22 */
%   | | | else return 0.020355077384364446;  // std dev = 5.110, 132.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=41 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(D, E) )
%   | | then return 0.05732700483982576;  // std dev = 4.166, 78.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(F, A), interaction(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03596137321534304;  // std dev = 6.003, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '12.494', 'seconds']
Parameter learned model CLL:-0.373428 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), location(C, D)', 'true': 'phenotype(B, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E)', 'false,true,true': 'phenotype(B, F)', 'false,false': 'location(A, G), phenotype(B, G)', 'false,false,false': 'location(A, H), function(I, H)'}, {'true,true': [0.0, 0, 0], 'true,false': [7.097, 136, 80], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.095, 3, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.879, 12, 5]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'interaction(E, A), phenotype(B, E)', 'false,false': 'location(A, F)', 'false,false,true': 'location(F, G), phenotype(B, G)', 'false,false,false': 'interaction(H, A), enzyme(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.503, 175, 83], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'interaction(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.414, 167, 82], 'false,false,false': [1.754, 8, 5]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.785, 70, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.998, 112, 53]}]
['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'phenotype(B, C)', 'true,false': 'complex(D, A), complex(D, C)', 'true,false,false': 'enzyme(C, E), complex(F, C)', 'false': 'complex(G, A)', 'false,false': 'interaction(A, H)', 'false,false,true': 'enzyme(H, I), interaction(H, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.401, 165, 82], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.651, 6, 5], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'complex(E, A)', 'true,false': 'complex(F, C), enzyme(A, G)', 'true,false,false': 'phenotype(B, C)', 'false': 'complex(H, A)', 'false,false': 'complex(I, J)', 'false,false,true': 'phenotype(B, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.507, 39, 18], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.038, 29, 0], 'false,false,true,false': [6.051, 78, 69], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'interaction(F, A), phenotype(B, F)', 'false,false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.143, 24, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [4.894, 53, 44], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.256, 90, 43], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(D, A), phenotype(B, D)', 'false,false': 'interaction(E, A), enzyme(E, F)', 'false,false,true': 'interaction(G, E), location(G, H)', 'false,false,false': 'interaction(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [3.324, 28, 20], 'false,false,true,false': [1.482, 6, 4], 'false,false,false,true': [4.274, 67, 28], 'false,false,false,false': [4.704, 69, 35]}]
['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(B, C)', 'false': 'interaction(D, A), enzyme(D, E)', 'false,true': 'location(D, F)', 'false,true,true': 'phenotype(B, F)', 'false,true,false': 'interaction(G, D), location(G, H)', 'false,false': 'location(A, I), complex(J, I)', 'false,false,false': 'enzyme(A, K)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.849, 56, 22], 'false,true,false,true': [1.185, 7, 2], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.561, 34, 22], 'false,false,false,false': [5.11, 91, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(D, E)', 'false': 'function(F, A), interaction(G, A)', 'false,false': 'complex(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [4.166, 49, 29], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [6.003, 109, 58]}]
{'': [0.23319615912208547, 0.21694214876033044], 'true': [nan, 0.23319615912208547], 'false': [0.24000000000000005, 0.20761245674740467], 'false,true': [0.24000000000000005, nan], 'false,true,true': [nan, 0.24000000000000005], 'false,false': [nan, 0.20761245674740467], 'false,false,false': [nan, 0.20761245674740467]}
{'': [nan, 0.21879001646405416], 'false': [nan, 0.21879001646405422], 'false,false': [0.2181822846298261, 0.23140495867768604], 'false,false,false': [0.24000000000000007, 0.2222222222222223], 'false,false,true': [nan, 0.2181822846298261]}
{'': [nan, 0.22175855231972563], 'false': [nan, 0.22175855231972508], 'false,false': [0.22075477215967268, 0.2366863905325445]}
{'': [nan, 0.21885571831685166], 'false': [0.2201334452386559, 0.21803711782389806], 'false,false': [nan, 0.21803711782389806], 'false,false,false': [nan, 0.21803711782389806]}
{'': [0.2217713287197394, 0.24786483088866576], 'false': [nan, 0.24786483088866576], 'false,false': [0.24786483088866576, nan], 'false,false,true': [nan, 0.24786483088866573], 'true': [nan, 0.2217713287197394], 'true,false': [nan, 0.2217713287197394], 'true,false,false': [nan, 0.22177132871973884]}
{'': [0.21581013149065056, 0.2385646082237752], 'false': [nan, 0.23856460822377626], 'false,false': [0.23856460822377626, nan], 'false,false,true': [4.900699077342776e-05, 0.24910156389466784], 'true': [nan, 0.21581013149065056], 'true,false': [nan, 0.21581013149065056], 'true,false,false': [nan, 0.21581013149065056]}
{'': [nan, 0.2156645325634972], 'false': [0.22348643791804682, 0.20767930737740697], 'false,true': [0.0008529879091521234, 0.2468942475043957], 'false,true,false': [nan, 0.2468942475043957], 'false,false': [nan, 0.20767930737740697], 'false,false,false': [0.20767930737740697, nan]}
{'': [nan, 0.2108164114274245], 'false': [nan, 0.21081641142742463], 'false,false': [0.2284648707376185, 0.20356521486071336], 'false,false,true': [0.23022335850028175, 0.21968502023960873], 'false,false,false': [0.19231663523358636, 0.21275647623677754]}
{'': [nan, 0.20199095351750698], 'false': [0.18672203669597606, 0.20734414474810656], 'false,false': [nan, 0.2073441447481066], 'false,false,false': [0.22646876639351904, 0.19781968503406983], 'false,true': [0.18995905746785072, 0.1559545048927159], 'false,true,true': [nan, 0.18995905746785072], 'false,true,false': [0.1559545048927159, nan]}
{'': [0.2224824083100185, 0.21575275055025606], 'true': [nan, 0.2224824083100185], 'true,false': [0.2224824083100185, nan], 'false': [nan, 0.2157527505502563], 'false,false': [nan, 0.2157527505502563]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
5;false;phenotype(B, K).;true;true
6;;proteinclass(A, B) :- interaction(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 12.775
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( interaction(D, D), complex(D, E) )
%   | then if ( enzyme(F, C), complex(F, G) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(H, D), location(A, I) )
%   | | then if ( complex(H, J), phenotype(H, K) )
%   | | | then return 0.21814893509951236;  // std dev = 3.394, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.5724346493852265;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.08037115732173443;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( interaction(A, L), interaction(L, M) )
%   | then if ( complex(M, N), complex(L, N) )
%   | | then if ( interaction(M, M) )
%   | | | then return 0.221785298735876;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.14981560176617895;  // std dev = 0.455, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | else return 0.14282046794622696;  // std dev = 0.451, 137.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=39 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( enzyme(C, E), interaction(F, A) )
%   | then if ( phenotype(C, G), phenotype(F, G) )
%   | | then if ( location(C, D) )
%   | | | then return 0.37812314083674897;  // std dev = 1.650, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.106725502964882;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.06750000743743752;  // std dev = 0.447, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | else if ( interaction(C, H), phenotype(H, I) )
%   | | then if ( phenotype(C, I), complex(A, J) )
%   | | | then return 0.29202298033362856;  // std dev = 1.798, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.6760850179346848;  // std dev = 0.916, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(C, D) )
%   | | | then return 0.15212326172892945;  // std dev = 2.622, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.4038643745167952;  // std dev = 1.316, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( interaction(K, A), complex(K, L) )
%   | then return 0.1647716106806541;  // std dev = 0.473, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
%   | else return 0.11731798695436478;  // std dev = 0.453, 77.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=22 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( phenotype(C, E), phenotype(A, F) )
%   | then if ( phenotype(A, E), interaction(G, C) )
%   | | then return 0.5306772130589819;  // std dev = 0.881, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(H, C) )
%   | | | then return 0.07502054973334953;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.30901939203484796;  // std dev = 0.982, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then return 0.05688187096198103;  // std dev = 0.449, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( location(A, K), location(C, L) )
%   | | | then return 0.1233318347922756;  // std dev = 2.337, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.4476368337991031;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, M), interaction(N, A) )
%   | then return 0.07855352351705826;  // std dev = 0.457, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
%   | else if ( phenotype(A, P) )
%   | | then return 0.14824588084670587;  // std dev = 0.476, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | else return 0.0878614418367636;  // std dev = 0.448, 79.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=22 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( phenotype(C, E), location(A, F) )
%   | then return 0.029341857204368042;  // std dev = 0.446, 98.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=27 */
%   | else return 0.16361811682963834;  // std dev = 0.488, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   else if ( enzyme(A, G), complex(A, H) )
%   | then if ( enzyme(I, G), interaction(I, I) )
%   | | then return 0.059434850374186686;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.4541299993104671;  // std dev = 0.820, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2555631177855209;  // std dev = 2.034, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else if ( enzyme(A, L) )
%   | | then if ( enzyme(M, L), phenotype(M, N) )
%   | | | then return 0.15531948162117912;  // std dev = 1.891, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.042334069106945815;  // std dev = 1.531, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( complex(A, P), phenotype(A, Q) )
%   | | | then return 0.10996585531183471;  // std dev = 1.841, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.21578863615797714;  // std dev = 3.679, 56.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), interaction(D, E) )
%   | then return -0.009903762831741048;  // std dev = 0.449, 107.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=29 */
%   | else return 0.2517000384822732;  // std dev = 0.502, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( phenotype(A, F) )
%   | then if ( complex(A, G) )
%   | | then if ( interaction(A, H), phenotype(H, F) )
%   | | | then return 0.23447460101595255;  // std dev = 2.069, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.07904140692682045;  // std dev = 2.286, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else return -0.01384308750347239;  // std dev = 0.439, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(A, K) )
%   | | | then return 0.5178859749183229;  // std dev = 1.219, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.17752997259148642;  // std dev = 2.027, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return -0.004704021418182701;  // std dev = 1.246, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.17619508519447005;  // std dev = 2.683, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( location(A, E) )
%   | then if ( enzyme(A, F), interaction(G, A) )
%   | | then if ( phenotype(G, H) )
%   | | | then return 0.1794463898468809;  // std dev = 1.873, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.025094539266065634;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.004195130781752184;  // std dev = 0.460, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else return 0.446881821087237;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( phenotype(B, I) )
%   | then return -0.2772411021165061;  // std dev = 0.282, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( phenotype(A, J), interaction(K, A) )
%   | | then if ( phenotype(K, L), complex(A, M) )
%   | | | then return 0.3242121873902838;  // std dev = 2.426, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | | else return 0.1366079133405517;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | else if ( interaction(A, N), interaction(N, P) )
%   | | | then return -0.013630287803222056;  // std dev = 2.389, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.1246211337644317;  // std dev = 4.361, 79.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=31 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.2587121743995163;  // std dev = 0.055, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.12448792728445443;  // std dev = 3.768, 58.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=25 */
%   | | | else return 0.5083309060242882;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(H, A), phenotype(A, I) )
%   | | | then return 0.17241551180087714;  // std dev = 1.722, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.0011461535663950574;  // std dev = 2.531, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   else if ( interaction(J, A), enzyme(J, K) )
%   | then return 0.008737906624774016;  // std dev = 0.440, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( interaction(L, A), interaction(L, L) )
%   | | then if ( complex(L, M) )
%   | | | then return 0.1933341409859243;  // std dev = 1.163, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.07469582570758393;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.05689077879278415;  // std dev = 0.458, 94.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=31 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( interaction(C, A), enzyme(A, E) )
%   | then return -0.222953784755709;  // std dev = 0.411, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( complex(A, F), interaction(C, C) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.07891574317660813;  // std dev = 1.980, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return -0.04763279858599509;  // std dev = 0.765, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.057039772402754936;  // std dev = 0.433, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( interaction(A, J), complex(H, K) )
%   | | then if ( interaction(J, L), enzyme(L, M) )
%   | | | then return 0.45345561154250247;  // std dev = 0.924, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.14058528070895115;  // std dev = 1.461, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(H, H) )
%   | | | then return -0.07715733184612819;  // std dev = 2.084, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.050707673647015075;  // std dev = 3.789, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
%   | else return -0.009330973590167203;  // std dev = 0.443, 90.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=25 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, C) )
%   | then return 0.03709260192018884;  // std dev = 0.472, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else return -0.05960306288914253;  // std dev = 0.430, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(D, F) )
%   | | then return -0.056413395689131944;  // std dev = 0.444, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.019108716030699042;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.21271659551578428;  // std dev = 0.969, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), enzyme(I, K) )
%   | | | then return 0.2617247839172531;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.004164982615765331;  // std dev = 3.081, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.01400368688874809;  // std dev = 1.408, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.12315747749798867;  // std dev = 4.071, 73.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=30 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, C) )
%   | then if ( phenotype(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.3297842656352435;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.014115866945098874;  // std dev = 1.111, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.4175337633542345;  // std dev = 0.748, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, A), phenotype(A, H) )
%   | | then return -0.029379439668454663;  // std dev = 0.434, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.22458069402854802;  // std dev = 1.320, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.03059142513440925;  // std dev = 1.383, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   else if ( interaction(A, K), interaction(K, L) )
%   | then return -0.07122467265950069;  // std dev = 0.450, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | else if ( phenotype(A, M), interaction(A, N) )
%   | | then return 0.22413360959202422;  // std dev = 0.496, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else return 0.0025721271308242486;  // std dev = 0.452, 151.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=47 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.819', 'seconds']
Refined model CLL: -0.389884


******************************************
Best model found
******************************************
Results 

CLL : -0.365095 

AUC ROC : 0.677309 

AUC PR : 0.010787 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.775 

Total Inference Time : 4.484849214553833 

Total revision time: 30.341202768325807
Best scored revision CLL: -0.373428


Results 

CLL : -0.365095 

AUC ROC : 0.677309 

AUC PR : 0.010787 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 30.390235933303835 

Total Inference Time : 4.484849214553833 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.928
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17957750652808133;  // std dev = 8.196, 308.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=99 */
%   else if ( interaction(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21529179224236947;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), phenotype(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F) )
%   | | then if ( location(F, G), phenotype(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14753157085845744;  // std dev = 8.163, 310.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=97 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.3348533885809819;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.10152005524764857;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.15354891670185586;  // std dev = 8.076, 291.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=99 */
%   | | else return 0.10213470374734976;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.10995844291467806;  // std dev = 4.737, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15054500761585013;  // std dev = 6.726, 196.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=71 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(D, A), complex(D, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(C, E), complex(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08421176170068265;  // std dev = 8.204, 310.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=99 */
%   else if ( complex(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( enzyme(H, I), interaction(H, J) )
%   | | | then return 0.2729569118100984;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.21260034796216523;  // std dev = 1.494, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, C), enzyme(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(B, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09504663217914844;  // std dev = 4.123, 75.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
%   else if ( complex(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(I, J) )
%   | | then if ( phenotype(B, K) )
%   | | | then return -0.2527774588118283;  // std dev = 0.074, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return 0.226884238812953;  // std dev = 6.370, 163.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=78 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.2314664570186488;  // std dev = 0.165, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11784020762254799;  // std dev = 5.583, 129.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=52 */
%   | else if ( interaction(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.08234161863832397;  // std dev = 5.570, 149.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), location(G, H) )
%   | | | then return 0.030452962367091864;  // std dev = 4.552, 101.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=32 */
%   | | | else return 0.15927634702857335;  // std dev = 2.139, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.05058667691500975;  // std dev = 4.320, 88.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=30 */
%   | | | else return 0.01640172127497006;  // std dev = 4.651, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( location(D, F) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03243658170490015;  // std dev = 5.082, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G), complex(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.02856282936623124;  // std dev = 3.837, 79.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=21 */
%   | | | else return -1.9983591854713577E-4;  // std dev = 5.287, 140.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=42 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(D, E) )
%   | | then return 0.009774643187148695;  // std dev = 5.643, 163.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=49 */
%   | | else return 0.07692022720123518;  // std dev = 0.682, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( function(F, A), interaction(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.019286094760852298;  // std dev = 5.867, 171.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=54 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '12.976', 'seconds']
Parameter learned model CLL:-0.343905 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), location(C, D)', 'true': 'phenotype(B, C)', 'false': 'interaction(E, A)', 'false,false': 'location(A, F), phenotype(B, F)', 'false,false,false': 'location(A, G), function(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [8.196, 209, 99], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.793, 9, 5]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'interaction(E, A), phenotype(B, E)', 'false,false': 'location(A, F)', 'false,false,true': 'location(F, G), phenotype(B, G)', 'false,false,false': 'interaction(H, A), enzyme(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [8.163, 213, 97], 'false,false,false,true': [1.225, 3, 3], 'false,false,false,false': [1.713, 11, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'interaction(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.076, 192, 99], 'false,false,false': [1.879, 12, 5]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.737, 70, 33], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.726, 125, 71]}]
['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'phenotype(B, C)', 'true,false': 'complex(D, A), complex(D, C)', 'true,false,false': 'enzyme(C, E), complex(F, C)', 'false': 'complex(G, A)', 'false,false': 'interaction(A, H)', 'false,false,true': 'enzyme(H, I), interaction(H, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [8.204, 211, 99], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [1.494, 5, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'complex(E, A)', 'true,false': 'complex(F, C), enzyme(A, G)', 'true,false,false': 'phenotype(B, C)', 'false': 'complex(H, A)', 'false,false': 'complex(I, J)', 'false,false,true': 'phenotype(B, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.123, 49, 26], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.074, 67, 0], 'false,false,true,false': [6.37, 85, 78], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'interaction(F, A), phenotype(B, F)', 'false,false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.165, 34, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [5.583, 77, 52], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.57, 97, 52], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(D, A), phenotype(B, D)', 'false,false': 'interaction(E, A), enzyme(E, F)', 'false,false,true': 'interaction(G, E), location(G, H)', 'false,false,false': 'interaction(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [4.552, 69, 32], 'false,false,true,false': [2.139, 10, 9], 'false,false,false,true': [4.32, 58, 30], 'false,false,false,false': [4.651, 75, 33]}]
['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(B, C)', 'false': 'interaction(D, A), enzyme(D, E)', 'false,true': 'location(D, F)', 'false,true,true': 'phenotype(B, F)', 'false,false': 'location(A, G), complex(H, G)', 'false,false,false': 'enzyme(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [5.082, 81, 41], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.837, 58, 21], 'false,false,false,false': [5.287, 98, 42]}]
['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(D, E)', 'false': 'function(F, A), interaction(G, A)', 'false,false': 'complex(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.643, 114, 49], 'true,false,false': [0.682, 2, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.867, 117, 54]}]
{'': [0.2181122448979608, 0.2295918367346937], 'false': [nan, 0.2295918367346937], 'false,false': [nan, 0.2295918367346937], 'false,false,false': [nan, 0.2295918367346937], 'true': [nan, 0.2181122448979608]}
{'': [nan, 0.21546103928469484], 'false': [nan, 0.21546103928469454], 'false,false': [0.21497595617218324, 0.2222222222222221], 'false,false,false': [0.25000000000000006, 0.19555555555555565], 'false,false,true': [nan, 0.21497595617218324]}
{'': [nan, 0.2233781265745319], 'false': [nan, 0.22337812657453107], 'false,false': [0.2241532419634137, 0.20761245674740475]}
{'': [nan, 0.22672891244476212], 'false': [0.21786773265839576, 0.23081809889244212], 'false,false': [nan, 0.23081809889244212], 'false,false,false': [nan, 0.23081809889244212]}
{'': [0.2171115306343395, 0.24889900869800943], 'false': [nan, 0.24889900869800943], 'false,false': [0.24889900869800943, nan], 'false,false,true': [0.25, 0.24799199581886486], 'true': [nan, 0.2171115306343395], 'true,false': [nan, 0.2171115306343395], 'true,false,false': [nan, 0.21711153063433886]}
{'': [0.2266449371989495, 0.2239637635303324], 'true': [nan, 0.2266449371989495], 'true,false': [nan, 0.2266449371989495], 'true,false,false': [nan, 0.2266449371989495], 'false': [nan, 0.22396376353033215], 'false,false': [0.22396376353033215, nan], 'false,false,true': [8.137691633814169e-05, 0.2489670909258988]}
{'': [nan, 0.21030679896346774], 'false': [0.21152344949095292, 0.20824651799297927], 'false,true': [0.0008033764275452764, 0.24161106135782642], 'false,true,false': [nan, 0.24161106135782642], 'false,false': [nan, 0.20824651799297927], 'false,false,false': [0.20824651799297927, nan]}
{'': [nan, 0.20867307091811196], 'false': [nan, 0.20867307091811227], 'false,false': [0.2130179056012194, 0.20587443362959318], 'false,false,true': [0.20515241726507713, 0.24086133647053914], 'false,false,false': [0.21208185296755036, 0.2002918538152063]}
{'': [nan, 0.20143998629837123], 'false': [0.2116901821996948, 0.1950723732386517], 'false,true': [0.2116901821996948, nan], 'false,true,true': [nan, 0.2116901821996948], 'false,false': [nan, 0.19507237323865168], 'false,false,false': [0.18638826925685714, 0.19968249594102394]}
{'': [0.19472662362461388, 0.20126967232265133], 'false': [nan, 0.20126967232265133], 'false,false': [nan, 0.20126967232265133], 'true': [nan, 0.19472662362461388], 'true,false': [0.19537621566815938, 0.15500507258732057]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
5;false;phenotype(B, K).;true;true
6;;proteinclass(A, B) :- interaction(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 15.939
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( complex(E, D), phenotype(E, F) )
%   | then if ( interaction(A, G), enzyme(G, C) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(H, E), phenotype(H, F) )
%   | | | then return 0.21109011157010057;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( phenotype(A, I) )
%   | then if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), interaction(L, A) )
%   | | | then return 0.2217852987358747;  // std dev = 4.221, 77.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=28 */
%   | | | else return 0.13756069980539473;  // std dev = 3.700, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.24703782398840118;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | else return 0.14847151574467218;  // std dev = 0.454, 124.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(E, D) )
%   | then if ( interaction(E, E), complex(D, F) )
%   | | then if ( enzyme(D, G), interaction(A, H) )
%   | | | then return 0.4025966575642676;  // std dev = 1.314, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.15512532242794683;  // std dev = 4.653, 99.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.1979023924346004;  // std dev = 2.257, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.33112068893271485;  // std dev = 2.733, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else return 0.02534115039532119;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(K, A), complex(K, L) )
%   | then if ( interaction(A, M) )
%   | | then return 0.12690557753954054;  // std dev = 0.453, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( enzyme(A, N), location(A, P) )
%   | | | then return 0.12504399205672012;  // std dev = 1.877, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.3152879986356973;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else return 0.09921716301321057;  // std dev = 0.443, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( phenotype(C, E), enzyme(C, F) )
%   | then if ( complex(A, D) )
%   | | then return 0.02524730777146352;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( location(A, G), location(C, G) )
%   | | | then return 0.2908925156532166;  // std dev = 1.583, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.6045412023968502;  // std dev = 0.893, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( enzyme(C, H) )
%   | | then return 0.031966935961197374;  // std dev = 0.444, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.2676702750457137;  // std dev = 2.438, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.1432177368206355;  // std dev = 3.563, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   else if ( complex(A, K), phenotype(A, L) )
%   | then return -0.0026394687412188544;  // std dev = 0.404, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | else if ( interaction(M, A), interaction(N, M) )
%   | | then return 0.12339024140582355;  // std dev = 0.469, 152.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=49 */
%   | | else return 0.3252473077714635;  // std dev = 0.500, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then return 0.49535513513509416;  // std dev = 0.849, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, E), complex(C, F) )
%   | | then if ( location(A, G), location(C, G) )
%   | | | then return 0.015244120194316204;  // std dev = 1.693, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.2898071905866286;  // std dev = 1.004, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(C, H), interaction(I, A) )
%   | | | then return 0.5075739977469208;  // std dev = 0.886, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.17663208263456132;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( interaction(A, J), complex(A, K) )
%   | then if ( interaction(L, A), complex(L, K) )
%   | | then return 0.09118467503937042;  // std dev = 0.469, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | else if ( interaction(M, A), interaction(J, M) )
%   | | | then return 0.16280890688428498;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.2951918894304812;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0.0804644461010173;  // std dev = 0.460, 219.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( phenotype(E, D), interaction(A, E) )
%   | then return -0.11633904849909452;  // std dev = 0.412, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | else if ( enzyme(F, C), interaction(F, G) )
%   | | then return 0.2470405716503113;  // std dev = 0.501, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else return 0.008116330709700309;  // std dev = 0.433, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then if ( interaction(H, J), complex(J, K) )
%   | | then if ( interaction(J, J), complex(A, L) )
%   | | | then return 0.5065457170338664;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08534960989765594;  // std dev = 2.416, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else return 0.50811776518912;  // std dev = 0.423, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(A, M), interaction(M, M) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.5222069827510483;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08698925567576068;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else return 0.09309870125133171;  // std dev = 0.468, 174.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=57 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( location(A, E) )
%   | then if ( complex(A, F), phenotype(A, G) )
%   | | then if ( interaction(H, A), complex(H, F) )
%   | | | then return -0.046813595163613435;  // std dev = 1.679, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.15876716560614065;  // std dev = 1.798, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else return -0.04478199198799645;  // std dev = 0.447, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | else return 0.39928607339274763;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( phenotype(B, I) )
%   | then return -0.2612768823031056;  // std dev = 0.266, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( phenotype(A, L), interaction(M, A) )
%   | | | then return 0.24259255222238352;  // std dev = 2.321, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.046628285578566034;  // std dev = 2.781, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( phenotype(A, N), complex(A, P) )
%   | | | then return 0.4333214133170211;  // std dev = 1.916, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.21669144728900458;  // std dev = 4.824, 93.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=44 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.26648598456243133;  // std dev = 0.067, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( phenotype(A, G), interaction(H, E) )
%   | | | then return 0.005011315835476231;  // std dev = 2.924, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return 0.13730008263088764;  // std dev = 2.251, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return -0.025415538757902048;  // std dev = 1.417, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.2038222920529757;  // std dev = 3.564, 51.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=27 */
%   else if ( enzyme(A, K), location(A, L) )
%   | then if ( interaction(M, A), complex(M, N) )
%   | | then return 0.041520636290678564;  // std dev = 0.437, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | else if ( complex(A, P) )
%   | | | then return 0.4801693103453677;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.16500118502199598;  // std dev = 1.072, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.018863141710695638;  // std dev = 0.444, 118.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=35 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(A, D) )
%   then if ( interaction(A, A) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.29195349580088936;  // std dev = 0.824, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.01139974058638668;  // std dev = 0.930, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( complex(G, I) )
%   | | | then return 0.24602552229964647;  // std dev = 1.412, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.028415807277627735;  // std dev = 2.144, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else return -0.03126825495075436;  // std dev = 0.438, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   else if ( interaction(A, J), complex(J, K) )
%   | then if ( enzyme(A, L) )
%   | | then if ( location(A, M), location(J, M) )
%   | | | then return 0.1893418945160793;  // std dev = 1.644, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.0073500488545803965;  // std dev = 1.121, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.47880891620202615;  // std dev = 0.373, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return 0.029982231156942662;  // std dev = 0.443, 156.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=47 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( location(A, E) )
%   | then if ( location(C, E), interaction(C, F) )
%   | | then return -0.04688929341835172;  // std dev = 0.437, 119.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=36 */
%   | | else if ( phenotype(C, G) )
%   | | | then return 0.3529987436615966;  // std dev = 0.931, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.02003357533608514;  // std dev = 1.105, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return -0.2794506345420528;  // std dev = 0.407, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( complex(H, J), phenotype(I, K) )
%   | | then if ( complex(I, J), phenotype(H, K) )
%   | | | then return 0.03778799498420284;  // std dev = 3.932, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
%   | | | else return 0.12824173859792287;  // std dev = 3.150, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | else return -0.0427892700388868;  // std dev = 0.413, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | else if ( enzyme(A, L) )
%   | | then return 0.10520605688717813;  // std dev = 1.074, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.49356453601260897;  // std dev = 0.902, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( phenotype(A, E), interaction(D, D) )
%   | then if ( complex(D, F), phenotype(D, G) )
%   | | then return 0.11129275731567827;  // std dev = 0.460, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.12136659368474013;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3448100173430748;  // std dev = 0.829, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.04627388655239544;  // std dev = 0.447, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
%   else if ( enzyme(A, I), phenotype(A, J) )
%   | then return -0.0025394105143525803;  // std dev = 0.449, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | else if ( location(A, K), interaction(L, A) )
%   | | then if ( phenotype(A, M), phenotype(L, M) )
%   | | | then return -0.009276345400768379;  // std dev = 1.847, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.13089686287184663;  // std dev = 4.219, 77.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=33 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return -0.00822100292649397;  // std dev = 1.368, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.03663103150043576;  // std dev = 1.337, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.693', 'seconds']
Refined model CLL: -0.399218


******************************************
Best model found
******************************************
Results 

CLL : -0.350934 

AUC ROC : 0.661763 

AUC PR : 0.011042 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 15.939 

Total Inference Time : 8.908896207809448 

Total revision time: 43.94464601707459
Best scored revision CLL: -0.343905


Results 

CLL : -0.350934 

AUC ROC : 0.661763 

AUC PR : 0.011042 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 43.99367918205262 

Total Inference Time : 8.908896207809448 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.241
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14819222514280378;  // std dev = 6.897, 231.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=67 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G), phenotype(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, H), function(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12320917606336759;  // std dev = 4.021, 83.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=22 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), phenotype(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F) )
%   | | then if ( location(F, G), phenotype(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12868445286818186;  // std dev = 7.957, 308.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=89 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2151328851558539;  // std dev = 1.371, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.13750186836491854;  // std dev = 6.916, 221.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=70 */
%   | | else return 0.20284231094653254;  // std dev = 3.695, 58.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=22 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.17019483548071385;  // std dev = 4.883, 102.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=38 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10458776517098328;  // std dev = 6.120, 176.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=54 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(D, A), complex(D, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(C, E), complex(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08633594069012783;  // std dev = 6.953, 227.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=70 */
%   else if ( complex(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( enzyme(H, I), interaction(H, J) )
%   | | | then return 0.07175238700140987;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.08197328804695231;  // std dev = 3.522, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, C), enzyme(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(B, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04826148368513227;  // std dev = 3.369, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   else if ( complex(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(I, J) )
%   | | then if ( phenotype(B, K) )
%   | | | then return -0.2392252176170569;  // std dev = 0.042, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.18223804262938115;  // std dev = 6.628, 181.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=76 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.22152521367898487;  // std dev = 0.136, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16153832026292245;  // std dev = 5.389, 119.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=51 */
%   | else if ( interaction(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.06396169974100831;  // std dev = 5.173, 128.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=41 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), location(G, H) )
%   | | | then return 0.18467571691483495;  // std dev = 2.462, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return -0.04923961174754647;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.08221186617236015;  // std dev = 4.939, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
%   | | | else return 0.058783402766901444;  // std dev = 4.950, 116.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=38 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( location(D, F) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06413081006078822;  // std dev = 2.793, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G), complex(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.04412771005319168;  // std dev = 4.353, 86.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=30 */
%   | | | else return 0.047629008762451436;  // std dev = 5.574, 147.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=49 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(D, E) )
%   | | then return 0.040026422702834595;  // std dev = 5.208, 124.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(F, A), interaction(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.038209349193635236;  // std dev = 5.527, 144.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=48 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '23.928', 'seconds']
Parameter learned model CLL:-0.364981 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), location(C, D)', 'true': 'phenotype(B, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E)', 'false,true,true': 'phenotype(B, F)', 'false,false': 'location(A, G), phenotype(B, G)', 'false,false,false': 'location(A, H), function(I, H)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.897, 164, 67], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.449, 7, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.021, 61, 22]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'interaction(E, A), phenotype(B, E)', 'false,false': 'location(A, F)', 'false,false,true': 'location(F, G), phenotype(B, G)', 'false,false,false': 'interaction(H, A), enzyme(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.957, 219, 89], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.371, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'interaction(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.916, 151, 70], 'false,false,false': [3.695, 36, 22]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.883, 64, 38], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.12, 122, 54]}]
['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'phenotype(B, C)', 'true,false': 'complex(D, A), complex(D, C)', 'true,false,false': 'enzyme(C, E), complex(F, C)', 'false': 'complex(G, A)', 'false,false': 'interaction(A, H)', 'false,false,true': 'enzyme(H, I), interaction(H, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.953, 157, 70], 'false,true': [0.0, 0, 0], 'false,false,true,true': [1.664, 9, 4], 'false,false,true,false': [3.522, 40, 18], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'complex(E, A)', 'true,false': 'complex(F, C), enzyme(A, G)', 'true,false,false': 'phenotype(B, C)', 'false': 'complex(H, A)', 'false,false': 'complex(I, J)', 'false,false,true': 'phenotype(B, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.369, 39, 16], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.042, 30, 0], 'false,false,true,false': [6.628, 105, 76], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'interaction(F, A), phenotype(B, F)', 'false,false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.136, 27, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [5.389, 68, 51], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.173, 87, 41], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(D, A), phenotype(B, D)', 'false,false': 'interaction(E, A), enzyme(E, F)', 'false,false,true': 'interaction(G, E), location(G, H)', 'false,false,false': 'interaction(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [2.462, 15, 12], 'false,false,true,false': [0.866, 3, 1], 'false,false,false,true': [4.939, 73, 41], 'false,false,false,false': [4.95, 78, 38]}]
['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(B, C)', 'false': 'interaction(D, A), enzyme(D, E)', 'false,true': 'location(D, F)', 'false,true,true': 'phenotype(B, F)', 'false,false': 'location(A, G), complex(H, G)', 'false,false,false': 'enzyme(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.793, 22, 13], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.353, 56, 30], 'false,false,false,false': [5.574, 98, 49]}]
['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(D, E)', 'false': 'function(F, A), interaction(G, A)', 'false,false': 'complex(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.208, 80, 44], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.527, 96, 48]}]
{'': [0.2059181799441543, 0.19655451497283], 'true': [nan, 0.2059181799441543], 'false': [0.20999999999999988, 0.19480330962403924], 'false,true': [0.20999999999999988, nan], 'false,true,true': [nan, 0.20999999999999988], 'false,false': [nan, 0.19480330962403788], 'false,false,false': [nan, 0.19480330962403788]}
{'': [nan, 0.20647052077201872], 'false': [nan, 0.20647052077202227], 'false,false': [0.2055411525954284, 0.23496706239018134], 'false,false,false': [nan, 0.23496706239018134], 'false,false,true': [nan, 0.2055411525954284]}
{'': [nan, 0.22106223168681233], 'false': [nan, 0.22106223168681396], 'false,false': [0.21641153132037833, 0.23540117033354707]}
{'': [nan, 0.22148957063172411], 'false': [0.2337990725546603, 0.2127763837272604], 'false,false': [nan, 0.2127763837272604], 'false,false,false': [nan, 0.2127763837272604]}
{'': [0.21300040812886442, 0.21377097698812583], 'false': [nan, 0.21377097698812583], 'false,false': [0.21377097698812583, nan], 'false,false,true': [0.2130177514792898, 0.21392067566800582], 'true': [nan, 0.21300040812886442], 'true,false': [nan, 0.21300040812886442], 'true,false,false': [nan, 0.21300040812886428]}
{'': [0.20632853927345937, 0.2298797482484799], 'false': [nan, 0.22987974824847993], 'false,false': [0.22987974824847993, nan], 'false,false,true': [5.876506307244493e-05, 0.2427159917243956], 'true': [nan, 0.20632853927345937], 'true,false': [nan, 0.20632853927345937], 'true,false,false': [nan, 0.20632853927345937]}
{'': [nan, 0.21566412265719787], 'false': [0.22113632227285074, 0.20904150587822265], 'false,true': [0.0006854576828393452, 0.2440181670509651], 'false,true,false': [nan, 0.2440181670509651], 'false,false': [nan, 0.20904150587822265], 'false,false,false': [0.20904150587822265, nan]}
{'': [nan, 0.2150109648369749], 'false': [nan, 0.2150109648369745], 'false,false': [0.2259441792261694, 0.21269734561873055], 'false,false,true': [0.22457943499421743, 0.18750000000000003], 'false,false,false': [0.21395620238176735, 0.21118813332473116]}
{'': [nan, 0.21579071106865486], 'false': [0.22286779740789017, 0.214686278376047], 'false,true': [0.22286779740789017, nan], 'false,true,true': [nan, 0.22286779740789017], 'false,false': [nan, 0.214686278376047], 'false,false,false': [0.22030654711778277, 0.21139370518121497]}
{'': [0.21876197027752384, 0.2121151583263042], 'true': [nan, 0.21876197027752384], 'true,false': [0.21876197027752384, nan], 'false': [nan, 0.2121151583263042], 'false,false': [nan, 0.2121151583263042]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
5;false;phenotype(B, K).;true;true
6;;proteinclass(A, B) :- interaction(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 9.014
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( location(A, E), interaction(F, C) )
%   | then if ( phenotype(F, D), location(F, E) )
%   | | then return 0.13087620782678508;  // std dev = 0.445, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else return 0.2823913593419366;  // std dev = 0.494, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | else return 0.12481560176617901;  // std dev = 0.442, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   else if ( interaction(G, A), enzyme(A, H) )
%   | then if ( interaction(A, I), interaction(G, I) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J), enzyme(J, H) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.23910131605189328;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), complex(L, M) )
%   | | | then return 0.24524570929306072;  // std dev = 2.712, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.15935375437661986;  // std dev = 0.459, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( enzyme(A, E), interaction(C, C) )
%   | then return 0.3339706176988584;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.11955276177522964;  // std dev = 0.456, 123.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( phenotype(F, H), complex(G, I) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.22018607081343528;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.14605217855768937;  // std dev = 2.028, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( enzyme(A, J), interaction(G, G) )
%   | | | then return 0.8165233916576707;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2905009683453231;  // std dev = 2.439, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | else if ( interaction(A, K), complex(A, L) )
%   | | then return 0.1157758893179164;  // std dev = 0.452, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.1551965582148807;  // std dev = 2.831, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0.2661613876179379;  // std dev = 2.618, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( location(D, E) )
%   | then if ( interaction(D, D), complex(D, F) )
%   | | then if ( enzyme(D, G) )
%   | | | then return 0.14713176203139156;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.37253219241622043;  // std dev = 1.313, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(H, D), interaction(D, H) )
%   | | | then return 0.10191116301489667;  // std dev = 3.328, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return 0.17196379116898075;  // std dev = 5.273, 120.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=44 */
%   | else return -0.06795288382527644;  // std dev = 0.455, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else if ( interaction(A, I), complex(I, J) )
%   | then if ( enzyme(A, K), interaction(I, I) )
%   | | then return 0.10971076336464265;  // std dev = 0.459, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( phenotype(I, L), phenotype(A, M) )
%   | | | then return 0.7820808342974996;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3076158556550954;  // std dev = 2.344, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0.08453230153018801;  // std dev = 0.463, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then if ( interaction(F, A), enzyme(F, C) )
%   | | then return 0.3342624931101948;  // std dev = 1.115, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(E, C) )
%   | | | then return 0.01602493169859403;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.13640781072623853;  // std dev = 2.083, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else return 0.008754148752542807;  // std dev = 0.427, 109.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=26 */
%   else if ( location(A, G) )
%   | then if ( interaction(A, H), interaction(H, H) )
%   | | then if ( phenotype(H, I) )
%   | | | then return 0.7120273796384216;  // std dev = 0.173, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19011061466942233;  // std dev = 1.841, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(J, A), location(J, G) )
%   | | | then return 0.2131361247775105;  // std dev = 3.543, 51.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=22 */
%   | | | else return 0.09068332959271347;  // std dev = 3.791, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | else return -0.1870818202216863;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then return 0.03537088514106829;  // std dev = 0.454, 98.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=29 */
%   else if ( enzyme(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), complex(G, H) )
%   | | then if ( interaction(F, F) )
%   | | | then return -0.05034790356996925;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.15292429729118545;  // std dev = 2.338, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( interaction(A, I), enzyme(I, E) )
%   | | | then return 0.09199520897431863;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4956914111122949;  // std dev = 1.169, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(K, K) )
%   | | | then return -0.021319679642745958;  // std dev = 2.615, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.11197621774218626;  // std dev = 2.797, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.07279298956491904;  // std dev = 3.300, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | | else return 0.1893759325002273;  // std dev = 2.360, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), interaction(A, E) )
%   | then return -0.06243844362875443;  // std dev = 0.441, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then return 0.3696551041347132;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.008196127228029919;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.19176878872306405;  // std dev = 1.796, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else if ( phenotype(B, I) )
%   | then return -0.2849684854573575;  // std dev = 0.356, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( complex(J, K), location(A, L) )
%   | | | then return -0.10504486574102789;  // std dev = 2.035, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.10742181104048716;  // std dev = 1.739, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.12208301088993873;  // std dev = 4.129, 73.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=27 */
%   | | | else return 0.18040880861174716;  // std dev = 4.546, 83.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.24461274548776368;  // std dev = 0.173, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( phenotype(A, E), interaction(A, A) )
%   | | then return -0.10661325814763914;  // std dev = 0.422, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1762554505400794;  // std dev = 3.326, 45.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=21 */
%   | | | else return 0.0500264058312224;  // std dev = 4.107, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
%   else if ( complex(A, G), enzyme(A, H) )
%   | then if ( phenotype(A, I) )
%   | | then if ( interaction(J, A), phenotype(J, I) )
%   | | | then return 0.09916098619312792;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2776319542707984;  // std dev = 1.381, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( enzyme(K, H), interaction(K, L) )
%   | | | then return 0.07925122934073356;  // std dev = 1.114, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.052903526819136126;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.006491485167072439;  // std dev = 0.438, 118.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=33 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( interaction(A, E), phenotype(A, F) )
%   | then return -0.0016788286913738393;  // std dev = 0.459, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return -0.09445153867166693;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1295645069063506;  // std dev = 1.666, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.09486780132498573;  // std dev = 1.747, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.32878768568758987;  // std dev = 1.374, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( enzyme(A, L), location(A, M) )
%   | then return -0.03955279039852911;  // std dev = 0.443, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | else if ( complex(A, N), phenotype(A, P) )
%   | | then return -0.0200256763639136;  // std dev = 0.424, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( interaction(A, Q), location(A, R) )
%   | | | then return 0.007506000986172036;  // std dev = 3.922, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   | | | else return 0.11526815180414057;  // std dev = 3.608, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( enzyme(A, E), interaction(F, C) )
%   | then return -0.05696187294486101;  // std dev = 0.415, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | else if ( complex(A, D), phenotype(A, G) )
%   | | then if ( location(A, H), location(C, H) )
%   | | | then return 0.3205171841820111;  // std dev = 1.350, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.06527025611664956;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(C, C), phenotype(A, I) )
%   | | | then return -0.13345646401363123;  // std dev = 0.887, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.07725769579945628;  // std dev = 3.385, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   else if ( enzyme(A, J), phenotype(A, K) )
%   | then if ( interaction(A, L), interaction(L, A) )
%   | | then return -0.058090160326779404;  // std dev = 0.454, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( enzyme(M, J), interaction(A, M) )
%   | | | then return 0.32027280557515686;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.07852080883874035;  // std dev = 2.026, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else return -0.027327698558920848;  // std dev = 0.444, 143.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=42 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(E, A), complex(A, D) )
%   | then if ( interaction(A, E), phenotype(C, F) )
%   | | then return -0.09607517880414633;  // std dev = 0.378, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( enzyme(E, G) )
%   | | | then return -0.05009351827285805;  // std dev = 1.692, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.19095889682063114;  // std dev = 1.681, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return -0.07222576925774916;  // std dev = 0.452, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   else if ( interaction(A, H), interaction(H, H) )
%   | then return 0.4175648643422804;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( location(I, J), location(A, J) )
%   | | | then return 0.056332338071194414;  // std dev = 1.109, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2130024527993282;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.0011704571045763538;  // std dev = 4.649, 104.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=32 */
%   | | | else return 0.07812483497204432;  // std dev = 2.961, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.136', 'seconds']
Refined model CLL: -0.3842


******************************************
Best model found
******************************************
Results 

CLL : -0.35039 

AUC ROC : 0.682156 

AUC PR : 0.011096 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.014 

Total Inference Time : 3.495826005935669 

Total revision time: 26.950536375045775
Best scored revision CLL: -0.364981


Results 

CLL : -0.35039 

AUC ROC : 0.682156 

AUC PR : 0.011096 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 26.999569540023803 

Total Inference Time : 3.495826005935669 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.19
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17092426549598952;  // std dev = 6.985, 227.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=71 */
%   else if ( interaction(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2152917922423695;  // std dev = 3.105, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), phenotype(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F) )
%   | | then if ( location(F, G), phenotype(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1656136153599292;  // std dev = 7.454, 251.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=83 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.16937631765995473;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.167318750173731;  // std dev = 1.153, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.15339974795467343;  // std dev = 6.838, 208.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=71 */
%   | | else return 0.18980496093895768;  // std dev = 3.038, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.11529829714232508;  // std dev = 4.334, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10284969642301202;  // std dev = 6.291, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(D, A), complex(D, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(C, E), complex(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10707244859932753;  // std dev = 6.856, 210.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=71 */
%   else if ( complex(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( enzyme(H, I), interaction(H, J) )
%   | | | then return 0.040565755900765665;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.054401179582506225;  // std dev = 2.511, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, C), enzyme(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(B, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12914718103695275;  // std dev = 3.855, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   else if ( complex(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(I, J) )
%   | | then if ( phenotype(B, K) )
%   | | | then return -0.25099054187608183;  // std dev = 0.015, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return 0.1982622540906023;  // std dev = 5.843, 138.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=62 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.2381808274922974;  // std dev = 0.218, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13744388189725035;  // std dev = 5.489, 123.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=52 */
%   | else if ( interaction(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.039097354518432444;  // std dev = 4.704, 112.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), location(G, H) )
%   | | | then return 0.04609498485496777;  // std dev = 2.967, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | else return 0.15501887804517828;  // std dev = 1.257, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.028386670996125858;  // std dev = 5.169, 135.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=42 */
%   | | | else return 0.05311025371610566;  // std dev = 4.140, 81.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=27 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( location(D, F) )
%   | | then if ( phenotype(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04518008977472593;  // std dev = 3.256, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G), complex(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.039427239183523644;  // std dev = 3.690, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | | else return 0.04516517402225879;  // std dev = 5.387, 142.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=47 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(D, E) )
%   | | then return 0.05391648841448401;  // std dev = 5.268, 136.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(F, A), interaction(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.019589975313180904;  // std dev = 4.992, 123.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=39 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '18.415', 'seconds']
Parameter learned model CLL:-0.352798 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), location(C, D)', 'true': 'phenotype(B, C)', 'false': 'interaction(E, A)', 'false,false': 'location(A, F), phenotype(B, F)', 'false,false,false': 'location(A, G), function(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [6.985, 156, 71], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.105, 27, 15]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'interaction(E, A), phenotype(B, E)', 'false,false': 'location(A, F)', 'false,false,true': 'location(F, G), phenotype(B, G)', 'false,false,false': 'interaction(H, A), enzyme(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.454, 168, 83], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [1.153, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'interaction(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.838, 137, 71], 'false,false,false': [3.038, 24, 15]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.334, 57, 28], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.291, 124, 58]}]
['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'phenotype(B, C)', 'true,false': 'complex(D, A), complex(D, C)', 'true,false,false': 'enzyme(C, E), complex(F, C)', 'false': 'complex(G, A)', 'false,false': 'interaction(A, H)', 'false,false,true': 'enzyme(H, I), interaction(H, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.856, 139, 71], 'false,true': [0.0, 0, 0], 'false,false,true,true': [2.07, 15, 6], 'false,false,true,false': [2.511, 21, 9], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'complex(E, A)', 'true,false': 'complex(F, C), enzyme(A, G)', 'true,false,false': 'phenotype(B, C)', 'false': 'complex(H, A)', 'false,false': 'complex(I, J)', 'false,false,true': 'phenotype(B, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.855, 39, 24], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.015, 59, 0], 'false,false,true,false': [5.843, 76, 62], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'interaction(F, A), phenotype(B, F)', 'false,false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.218, 40, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [5.489, 71, 52], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.704, 78, 34], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'interaction(D, A), phenotype(B, D)', 'false,false': 'interaction(E, A), enzyme(E, F)', 'false,false,true': 'interaction(G, E), location(G, H)', 'false,false,false': 'interaction(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [2.967, 29, 14], 'false,false,true,false': [1.257, 4, 3], 'false,false,false,true': [5.169, 93, 42], 'false,false,false,false': [4.14, 54, 27]}]
['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(B, C)', 'false': 'interaction(D, A), enzyme(D, E)', 'false,true': 'location(D, F)', 'false,true,true': 'phenotype(B, F)', 'false,false': 'location(A, G), complex(H, G)', 'false,false,false': 'enzyme(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.256, 32, 17], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.69, 46, 22], 'false,false,false,false': [5.387, 95, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(D, E)', 'false': 'function(F, A), interaction(G, A)', 'false,false': 'complex(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.268, 89, 47], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.992, 84, 39]}]
{'': [0.21494692309185134, 0.22959183673469336], 'false': [nan, 0.22959183673469336], 'false,false': [nan, 0.2295918367346934], 'false,false,false': [nan, 0.2295918367346934], 'true': [nan, 0.21494692309185134]}
{'': [nan, 0.22139252202928184], 'false': [nan, 0.22139252202928197], 'false,false': [0.22137873275656725, 0.22177157057811075], 'false,false,false': [0.22222222222222224, 0.22154483356140175], 'false,false,true': [nan, 0.22137873275656725]}
{'': [nan, 0.2268739297758903], 'false': [nan, 0.22687392977588985], 'false,false': [0.22482641233402567, 0.23667794740343778]}
{'': [nan, 0.21862764103066115], 'false': [0.2210151030624818, 0.21746328328051973], 'false,false': [nan, 0.21746328328051973], 'false,false,false': [nan, 0.21746328328051973]}
{'': [0.2238117608361322, 0.20767929778432723], 'true': [nan, 0.2238117608361322], 'true,false': [nan, 0.2238117608361322], 'true,false,false': [nan, 0.22381176083613172], 'false': [nan, 0.20767929778432723], 'false,false': [0.20767929778432723, nan], 'false,false,true': [0.20405087269928693, 0.2101403757768452]}
{'': [0.23588849392010922, 0.21565306027738385], 'true': [nan, 0.23588849392010922], 'true,false': [nan, 0.23588849392010922], 'true,false,false': [nan, 0.23588849392010922], 'false': [nan, 0.21565306027738385], 'false,false': [0.21565306027738385, nan], 'false,false,true': [3.818982118572033e-06, 0.24740495270358484]}
{'': [nan, 0.2057143730717649], 'false': [0.21127430503514166, 0.19760013152005507], 'false,true': [0.0011929057531251507, 0.24496918386117567], 'false,true,false': [nan, 0.24496918386117567], 'false,false': [nan, 0.19760013152005507], 'false,false,false': [0.19760013152005507, nan]}
{'': [nan, 0.20440085378795117], 'false': [nan, 0.20440085378795117], 'false,false': [0.20909243393940208, 0.20320938092856403], 'false,false,true': [0.20475270797293862, 0.2255473541139013], 'false,false,false': [0.19793660762409435, 0.2116153017219429]}
{'': [nan, 0.205560116922739], 'false': [0.2163832703738263, 0.20303405081189738], 'false,true': [0.2163832703738263, nan], 'false,true,true': [nan, 0.2163832703738263], 'false,false': [nan, 0.20303405081189715], 'false,false,false': [0.20027009112156333, 0.20434697607132501]}
{'': [0.204026502942577, 0.20258483126656235], 'true': [nan, 0.204026502942577], 'true,false': [0.204026502942577, nan], 'false': [nan, 0.20258483126656238], 'false,false': [nan, 0.20258483126656238]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
5;false;phenotype(B, K).;true;true
6;;proteinclass(A, B) :- interaction(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 9.911
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( phenotype(D, E) )
%   | then return 0.129993595293686;  // std dev = 0.445, 103.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=28 */
%   | else if ( enzyme(C, F), interaction(C, C) )
%   | | then return 0.10814893509951218;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(G, D), complex(G, H) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( complex(A, I), enzyme(A, J) )
%   | then if ( phenotype(A, K) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, L), complex(A, M) )
%   | | then return 0.12481560176617904;  // std dev = 0.442, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( phenotype(A, N), interaction(P, A) )
%   | | | then return 0.2905813675319448;  // std dev = 3.013, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.21408113848934288;  // std dev = 3.678, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( enzyme(A, E) )
%   | then if ( interaction(F, C), enzyme(F, G) )
%   | | then return 0.07243500191084226;  // std dev = 0.427, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | else if ( enzyme(C, E) )
%   | | | then return 0.04157667506678369;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.22097771613557157;  // std dev = 2.908, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | else if ( phenotype(C, H), location(C, D) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.3774682719653584;  // std dev = 2.948, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | | else return 0.2480458717530278;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else if ( interaction(J, C), complex(J, K) )
%   | | | then return 0.23268985464222086;  // std dev = 2.316, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.12053504124778075;  // std dev = 2.360, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   else if ( interaction(A, L), interaction(L, L) )
%   | then return 0.1139530355598075;  // std dev = 0.449, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else return 0.06752336830097856;  // std dev = 0.425, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(A, A), phenotype(D, E) )
%   | then return 0.0244982378913595;  // std dev = 0.418, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else if ( enzyme(D, F), complex(A, G) )
%   | | then return 0.13161986554125926;  // std dev = 0.464, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( complex(C, H) )
%   | | | then return 0.3466008445523991;  // std dev = 2.515, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return 0.1832973855136303;  // std dev = 3.429, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   else if ( enzyme(A, I) )
%   | then if ( phenotype(A, J) )
%   | | then if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.07051412222555697;  // std dev = 1.694, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.15888318118694666;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( enzyme(M, I), complex(M, N) )
%   | | | then return 0.38711351773641134;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.296561589793426;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.0761383755991599;  // std dev = 0.453, 91.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=26 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( phenotype(C, E), complex(A, F) )
%   | then if ( phenotype(A, G), interaction(H, C) )
%   | | then if ( enzyme(A, I), complex(H, D) )
%   | | | then return -0.01866291154612093;  // std dev = 1.281, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.21017435354291453;  // std dev = 1.978, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else return 0.6079936318531742;  // std dev = 0.914, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(J, C), interaction(J, A) )
%   | | then return 0.019887908233145107;  // std dev = 0.446, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.08227590939956278;  // std dev = 2.649, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.26525669484066905;  // std dev = 1.575, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( complex(A, L), interaction(M, A) )
%   | then return 0.0022904563556750716;  // std dev = 0.414, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else if ( interaction(A, N), phenotype(N, P) )
%   | | then return 0.04350639714317376;  // std dev = 0.448, 79.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=22 */
%   | | else return 0.12213846805803723;  // std dev = 0.480, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( interaction(E, C), interaction(A, F) )
%   | then if ( interaction(E, F), enzyme(F, G) )
%   | | then return 0.18960831966164812;  // std dev = 0.493, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else return 0.007015472190018421;  // std dev = 0.439, 93.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=24 */
%   | else if ( complex(A, H), enzyme(A, I) )
%   | | then return -0.06286363382441178;  // std dev = 0.424, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( phenotype(C, J), phenotype(A, J) )
%   | | | then return 0.280036580489661;  // std dev = 1.518, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.08592712362782977;  // std dev = 4.431, 85.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=30 */
%   else if ( interaction(A, K), phenotype(K, L) )
%   | then if ( enzyme(K, M), interaction(K, N) )
%   | | then return 0.003258470479785456;  // std dev = 0.431, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( complex(A, P) )
%   | | | then return 0.7552952377821995;  // std dev = 0.080, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17295097073833518;  // std dev = 1.889, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else return 0.04697244636143473;  // std dev = 0.444, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(A, E), complex(A, F) )
%   | then if ( interaction(G, A), phenotype(G, E) )
%   | | then return 0.4960805652149206;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.12422141338214661;  // std dev = 1.108, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3586239729180493;  // std dev = 1.060, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.051684608316511886;  // std dev = 0.465, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   else if ( phenotype(B, I) )
%   | then return -0.2891589208966206;  // std dev = 0.342, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( phenotype(A, L), complex(J, M) )
%   | | | then return 0.10561544682907929;  // std dev = 2.059, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.4306065463357469;  // std dev = 2.187, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | else if ( interaction(A, N) )
%   | | | then return 0.01794510317682377;  // std dev = 1.901, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.18694980982518825;  // std dev = 4.240, 72.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=34 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.2455280318731405;  // std dev = 0.057, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( location(A, E) )
%   | | then if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.3600514459602833;  // std dev = 3.226, 47.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=31 */
%   | | | else return 0.14750606762378826;  // std dev = 3.219, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   | | else return -0.2083917340481081;  // std dev = 0.429, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( interaction(H, A), enzyme(H, I) )
%   | then return 0.28424589596873956;  // std dev = 0.463, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( enzyme(A, L), interaction(J, J) )
%   | | | then return 0.3514008823553622;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.057844148860684334;  // std dev = 3.442, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.2193224150866041;  // std dev = 1.351, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.04058540836969937;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E), interaction(G, G) )
%   | | then return 0.16957703354106993;  // std dev = 1.191, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.13539065671219075;  // std dev = 0.429, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( complex(H, C), phenotype(A, I) )
%   | | | then return 0.2765182577625316;  // std dev = 1.038, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.09497512376367927;  // std dev = 1.911, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else return 0.24017257841650985;  // std dev = 1.065, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(J, A), enzyme(A, K) )
%   | then if ( interaction(A, L), interaction(M, J) )
%   | | then return 0.5249691497309107;  // std dev = 0.338, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( phenotype(J, N) )
%   | | | then return 0.061093138228761064;  // std dev = 2.219, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.07429373320723974;  // std dev = 1.391, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else return -0.007474526113170134;  // std dev = 0.435, 137.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=41 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( complex(C, E) )
%   | then return 0.030015558990924607;  // std dev = 0.465, 55.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=22 */
%   | else return -0.06556624631769443;  // std dev = 0.435, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( phenotype(A, H), interaction(I, F) )
%   | | then if ( interaction(F, I) )
%   | | | then return 0.0417865474836489;  // std dev = 1.838, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.3152160549383003;  // std dev = 0.733, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.09686553844198306;  // std dev = 0.418, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.2720172501220423;  // std dev = 0.829, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0535490679540319;  // std dev = 1.422, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.06935731544392316;  // std dev = 1.906, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.1636401478269718;  // std dev = 3.451, 51.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=24 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( phenotype(C, E), interaction(F, C) )
%   | then if ( phenotype(A, E), complex(C, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.05054175135828898;  // std dev = 1.003, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.18221040718971762;  // std dev = 1.128, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( phenotype(A, I), interaction(C, F) )
%   | | | then return 0.17163030940067692;  // std dev = 1.308, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.055024845976306434;  // std dev = 1.297, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else return -0.15850676751778733;  // std dev = 0.406, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   else if ( interaction(J, A), phenotype(J, K) )
%   | then if ( complex(J, L), interaction(A, M) )
%   | | then return -0.030405581185932534;  // std dev = 0.409, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | else if ( interaction(J, N), phenotype(N, P) )
%   | | | then return 0.024447464098449053;  // std dev = 4.054, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | | else return 0.41636293833396404;  // std dev = 0.639, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.03733887587398214;  // std dev = 0.425, 95.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=27 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.697', 'seconds']
Refined model CLL: -0.412399


******************************************
Best model found
******************************************
Results 

CLL : -0.361106 

AUC ROC : 0.664251 

AUC PR : 0.010297 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.911 

Total Inference Time : 3.813378095626831 

Total revision time: 27.462095905303954
Best scored revision CLL: -0.352798


Results 

CLL : -0.361106 

AUC ROC : 0.664251 

AUC PR : 0.010297 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 27.51112907028198 

Total Inference Time : 3.813378095626831 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 5.337
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( function(C, A), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18399163172872582;  // std dev = 7.658, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(F, G), location(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14617050459544828;  // std dev = 4.837, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
%   | | else if ( function(H, A), phenotype(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16757723242419253;  // std dev = 5.944, 159.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( function(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1321439439209491;  // std dev = 7.685, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(C, D), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then return 0.10581965776378478;  // std dev = 5.360, 133.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=42 */
%   | else if ( interaction(E, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1560030991441591;  // std dev = 5.341, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( function(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, E) )
%   | | then if ( phenotype(E, F), function(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10445539720577968;  // std dev = 7.594, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( function(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( location(B, H) )
%   | | | then return -0.2519033888088229;  // std dev = 0.049, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | | else return 0.30251990611278623;  // std dev = 6.224, 157.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=87 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(A, D) )
%   | then if ( location(B, E) )
%   | | then return -0.20785896508749924;  // std dev = 0.046, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else if ( location(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2486207252194483;  // std dev = 6.173, 155.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), location(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(E, A), phenotype(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return 0.036816334538348226;  // std dev = 6.869, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(C, A), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), phenotype(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.01616905158306985;  // std dev = 4.872, 135.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=42 */
%   | | | else return 0.01094727313814525;  // std dev = 5.020, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( function(A, C), function(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), function(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.01053629914327365;  // std dev = 6.961, 282.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '7.124', 'seconds']
Parameter learned model CLL:-0.319811 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'function(C, A), enzyme(C, D)', 'false': 'function(E, A)', 'false,false': 'enzyme(A, F), location(B, F)', 'false,false,false': 'enzyme(A, G), interaction(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.658, 180, 87]}]
['proteinclass(A, B)', {'': 'enzyme(A, C), phenotype(C, D)', 'false': 'function(E, A), location(B, E)', 'false,false': 'enzyme(A, F)', 'false,false,true': 'enzyme(F, G), location(B, G)', 'false,false,false': 'function(H, A), phenotype(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.837, 75, 34], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.944, 106, 53]}]
['proteinclass(A, B)', {'': 'function(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'function(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.685, 184, 87]}]
['proteinclass(A, B)', {'': 'phenotype(C, D), location(B, C)', 'false': 'phenotype(A, D)', 'false,false': 'interaction(E, F), location(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [5.36, 91, 42], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.341, 78, 45]}]
['proteinclass(A, B)', {'': 'function(C, A)', 'false': 'complex(D, A)', 'false,false': 'function(A, E)', 'false,false,true': 'phenotype(E, F), function(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.594, 171, 87], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(A, C), phenotype(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'location(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.049, 94, 0], 'false,false,true,false': [6.224, 70, 87], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(A, D)', 'false,true': 'location(B, E)', 'false,true,false': 'location(B, D)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.046, 108, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.173, 68, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(D, A), location(B, D)', 'false,false': 'function(E, A), phenotype(E, F)', 'false,false,false': 'function(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.869, 180, 87], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(C, A), location(B, C)', 'false': 'function(D, A), phenotype(D, E)', 'false,false': 'enzyme(A, F), complex(G, F)', 'false,false,false': 'phenotype(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.872, 93, 42], 'false,false,false,false': [5.02, 96, 45]}]
['proteinclass(A, B)', {'': 'function(A, C), function(C, D)', 'false': 'interaction(E, A), function(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [6.961, 195, 87]}]
{'': [nan, 0.21966923368261668], 'false': [nan, 0.21966923368261668], 'false,false': [nan, 0.21966923368261668], 'false,false,false': [nan, 0.21966923368261668]}
{'': [nan, 0.21924426375584893], 'false': [nan, 0.21924426375584768], 'false,false': [0.2146283982829737, 0.22222222222222385], 'false,false,false': [nan, 0.22222222222222385], 'false,false,true': [nan, 0.2146283982829737]}
{'': [nan, 0.21792620848605723], 'false': [nan, 0.21792620848605723], 'false,false': [nan, 0.21792620848605723]}
{'': [nan, 0.2242593147508737], 'false': [0.21599654160346765, 0.23188548211228768], 'false,false': [nan, 0.23188548211228768], 'false,false,false': [nan, 0.23188548211228768]}
{'': [nan, 0.22350644182076299], 'false': [nan, 0.22350644182076299], 'false,false': [0.22350644182076299, nan], 'false,false,true': [nan, 0.22350644182076299]}
{'': [nan, 0.2263435474575913], 'false': [nan, 0.2263435474575913], 'false,false': [0.2263435474575913, nan], 'false,false,true': [2.529152551696385e-05, 0.24672983154807507]}
{'': [nan, 0.19531315007950312], 'false': [0.19531315007950312, nan], 'false,true': [1.983677178133784e-05, 0.24582058059387857], 'false,true,false': [nan, 0.24582058059387857]}
{'': [nan, 0.17672477356037578], 'false': [nan, 0.17672477356037578], 'false,false': [nan, 0.17672477356037578], 'false,false,false': [0.17672477356037578, nan]}
{'': [nan, 0.17729898770492014], 'false': [nan, 0.17729898770492014], 'false,false': [nan, 0.17729898770491892], 'false,false,false': [0.17579783637520432, 0.17872292314969168]}
{'': [nan, 0.17184376471206605], 'false': [nan, 0.1718437647120661], 'false,false': [nan, 0.17184376471206605]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- location(B, H).;true;true
6;;proteinclass(A, B) :- location(B, E).;true;true


Refining candidate
***************************
Model training time 14.716
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( interaction(C, C) )
%   | then if ( phenotype(C, D), phenotype(A, D) )
%   | | then if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.1581489350995123;  // std dev = 0.458, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | else if ( location(A, G), location(C, G) )
%   | | then return 0.5724346493852266;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.1438632208137979;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( interaction(A, H), interaction(I, A) )
%   | then return 0.1321215378392382;  // std dev = 0.446, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then return 0.1971319859469691;  // std dev = 0.473, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.1914822684328457;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), interaction(A, F) )
%   | | then if ( complex(F, E), phenotype(D, C) )
%   | | | then return 0.18040675242716417;  // std dev = 1.802, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.43957551188847466;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.11631290074070143;  // std dev = 0.450, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | else return 0.07335193073493064;  // std dev = 0.428, 62.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   else if ( interaction(A, G), complex(A, H) )
%   | then return 0.6244777344472326;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( complex(A, K), interaction(L, I) )
%   | | | then return 0.5824188480446358;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.09140877449702149;  // std dev = 3.554, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.0824188480446358;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.2652250496491151;  // std dev = 3.151, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( location(C, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(A, G), location(G, E) )
%   | | | then return 0.17146917396150155;  // std dev = 3.376, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | | else return 0.30046640536278596;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.2552800726150744;  // std dev = 1.982, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.1096549695807005;  // std dev = 3.229, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | else return -0.03520735674766346;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   else if ( interaction(A, J), enzyme(J, K) )
%   | then if ( enzyme(A, K) )
%   | | then if ( location(A, L) )
%   | | | then return 0.2455439723287205;  // std dev = 1.036, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07497760313105273;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.47599003020635017;  // std dev = 0.825, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.09302869210984965;  // std dev = 0.455, 89.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=26 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( enzyme(A, E), location(A, F) )
%   | then return -0.039076214551862096;  // std dev = 0.415, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | else return 0.1372144975992287;  // std dev = 0.488, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   else if ( interaction(G, A), interaction(G, G) )
%   | then if ( interaction(A, A), complex(A, H) )
%   | | then return -0.015857018917050814;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.6075837296240524;  // std dev = 0.888, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.20584806681112858;  // std dev = 2.670, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | else if ( phenotype(A, J), interaction(K, A) )
%   | | then if ( enzyme(K, L) )
%   | | | then return 0.2902881831090172;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.05784674496413785;  // std dev = 3.522, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.01192452106655721;  // std dev = 1.871, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.17301005361605148;  // std dev = 3.973, 67.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=26 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( interaction(C, A), phenotype(C, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.020238290863208528;  // std dev = 2.207, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.1037488739147087;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.14487303832809498;  // std dev = 0.416, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | else if ( location(A, G) )
%   | | then return 0.04795069612379777;  // std dev = 0.454, 86.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=25 */
%   | | else return -0.030941762137657553;  // std dev = 0.407, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   else if ( interaction(A, H) )
%   | then return 0.30901940765825214;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( interaction(I, I), phenotype(A, K) )
%   | | | then return 0.39500868645856824;  // std dev = 1.121, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.06772148534474146;  // std dev = 5.055, 114.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=37 */
%   | | else return 0.28174987300780874;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.2610249097446356;  // std dev = 0.442, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( enzyme(A, E), phenotype(D, F) )
%   | | then return 0.4950125568313112;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(D, G) )
%   | | | then return 0.06109105591913419;  // std dev = 2.539, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.2280037612106457;  // std dev = 1.801, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return -0.051869944905604884;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.30824470973559126;  // std dev = 3.132, 40.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=23 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.45753037513952943;  // std dev = 2.176, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | | else return 0.3387119448208873;  // std dev = 3.250, 44.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=27 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.22585720283451377;  // std dev = 0.466, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( phenotype(A, D) )
%   | then if ( complex(A, E), enzyme(A, F) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.6924686370877973;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4165330380187083;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.19488145227825865;  // std dev = 1.943, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.3508744129284606;  // std dev = 2.871, 38.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=26 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return 0.04271382949779906;  // std dev = 1.973, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.26215282565570897;  // std dev = 1.565, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return 0.4020519851801822;  // std dev = 1.727, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.2096051885735899;  // std dev = 3.147, 39.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(A, E), complex(A, F) )
%   | | then return 0.030164658846467008;  // std dev = 0.409, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | else return -0.03811213031967859;  // std dev = 0.390, 97.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=26 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then return -0.2422509036750734;  // std dev = 0.873, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.12383468581035605;  // std dev = 0.432, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return 0.2649165091256703;  // std dev = 1.024, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then if ( complex(A, K), interaction(L, J) )
%   | | | then return -0.026944453863411252;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.13580442360325842;  // std dev = 2.183, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return -0.05013244719235926;  // std dev = 1.908, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.04108716723645458;  // std dev = 3.273, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E) )
%   | then if ( interaction(E, A), enzyme(A, F) )
%   | | then return -0.14178740446070232;  // std dev = 0.411, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.0249589271342893;  // std dev = 2.550, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return 0.2519750910156315;  // std dev = 1.586, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else return -0.09578640737695987;  // std dev = 0.389, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   else if ( phenotype(A, H), interaction(I, A) )
%   | then if ( complex(I, J), interaction(K, I) )
%   | | then if ( phenotype(K, H) )
%   | | | then return -0.09720528502834311;  // std dev = 1.916, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.018623313872597233;  // std dev = 1.196, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(I, I) )
%   | | | then return -0.05893462772619992;  // std dev = 1.120, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.10265284625079833;  // std dev = 2.159, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | else return 0.16322642688872624;  // std dev = 0.423, 70.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=33 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( enzyme(D, E), location(A, F) )
%   | | then return -0.12349728463906144;  // std dev = 0.372, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( enzyme(C, G) )
%   | | | then return 0.2247347882718204;  // std dev = 1.001, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.06770367345511967;  // std dev = 1.879, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else return -0.14206060323416014;  // std dev = 0.402, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   else if ( phenotype(A, H), interaction(I, A) )
%   | then if ( interaction(A, J), interaction(J, K) )
%   | | then if ( interaction(K, I) )
%   | | | then return 0.2860259465056722;  // std dev = 0.649, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.07407633556801949;  // std dev = 1.386, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0.13112100231409687;  // std dev = 0.416, 44.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
%   | else if ( complex(A, L), enzyme(A, M) )
%   | | then return -0.08535999833321892;  // std dev = 0.402, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else return -4.3353792679202724E-4;  // std dev = 0.423, 83.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.138', 'seconds']
Refined model CLL: -0.366423


******************************************
Best model found
******************************************
Results 

CLL : -0.316932 

AUC ROC : 0.805005 

AUC PR : 0.017829 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 14.716 

Total Inference Time : 5.183184385299683 

Total revision time: 38.772833135604856
Best scored revision CLL: -0.319811


Results 

CLL : -0.316932 

AUC ROC : 0.805005 

AUC PR : 0.017829 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 38.92687418746948 

Total Inference Time : 5.183184385299683 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.796
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( function(C, A), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21553725125071577;  // std dev = 8.175, 291.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(F, G), location(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12447848092806164;  // std dev = 4.825, 112.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=33 */
%   | | else if ( function(H, A), phenotype(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18483562378520704;  // std dev = 6.767, 200.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( function(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15051445040017086;  // std dev = 8.252, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(C, D), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then return 0.10713786205225297;  // std dev = 6.565, 196.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=64 */
%   | else if ( interaction(E, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09009207751016465;  // std dev = 5.255, 129.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( function(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, E) )
%   | | then if ( phenotype(E, F), function(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1166119270350631;  // std dev = 8.196, 294.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=104 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( function(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( location(B, H) )
%   | | | then return -0.2586658464485421;  // std dev = 0.067, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | | else return 0.31554447222642207;  // std dev = 6.652, 181.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=104 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(A, D) )
%   | then if ( location(B, E) )
%   | | then return -0.21217060527592557;  // std dev = 0.059, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | else if ( location(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21190055817406997;  // std dev = 6.949, 194.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), location(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(E, A), phenotype(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return 0.055037674259292665;  // std dev = 7.386, 294.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=104 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(C, A), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), phenotype(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.017822128306332636;  // std dev = 5.922, 195.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=64 */
%   | | | else return -6.521943385936715E-4;  // std dev = 4.787, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( function(A, C), function(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), function(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.031737175073798266;  // std dev = 7.437, 303.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '11.643', 'seconds']
Parameter learned model CLL:-0.334591 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'function(C, A), enzyme(C, D)', 'false': 'function(E, A)', 'false,false': 'enzyme(A, F), location(B, F)', 'false,false,false': 'enzyme(A, G), interaction(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.175, 187, 104]}]
['proteinclass(A, B)', {'': 'enzyme(A, C), phenotype(C, D)', 'false': 'function(E, A), location(B, E)', 'false,false': 'enzyme(A, F)', 'false,false,true': 'enzyme(F, G), location(B, G)', 'false,false,false': 'function(H, A), phenotype(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.825, 79, 33], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.767, 129, 71]}]
['proteinclass(A, B)', {'': 'function(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'function(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.252, 197, 104]}]
['proteinclass(A, B)', {'': 'phenotype(C, D), location(B, C)', 'false': 'phenotype(A, D)', 'false,false': 'interaction(E, F), location(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [6.565, 132, 64], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.255, 89, 40]}]
['proteinclass(A, B)', {'': 'function(C, A)', 'false': 'complex(D, A)', 'false,false': 'function(A, E)', 'false,false,true': 'phenotype(E, F), function(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [8.196, 190, 104], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(A, C), phenotype(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'location(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.067, 140, 0], 'false,false,true,false': [6.652, 77, 104], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(A, D)', 'false,true': 'location(B, E)', 'false,true,false': 'location(B, D)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.059, 136, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.949, 90, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(D, A), location(B, D)', 'false,false': 'function(E, A), phenotype(E, F)', 'false,false,false': 'function(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.386, 190, 104], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(C, A), location(B, C)', 'false': 'function(D, A), phenotype(D, E)', 'false,false': 'enzyme(A, F), complex(G, F)', 'false,false,false': 'phenotype(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.922, 131, 64], 'false,false,false,false': [4.787, 90, 40]}]
['proteinclass(A, B)', {'': 'function(A, C), function(C, D)', 'false': 'interaction(E, A), function(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.437, 199, 104]}]
{'': [nan, 0.229661907629813], 'false': [nan, 0.229661907629813], 'false,false': [nan, 0.22966190762981106], 'false,false,false': [nan, 0.22966190762981106]}
{'': [nan, 0.2222222222222208], 'false': [nan, 0.22222222222222085], 'false,false': [0.20782844387755142, 0.22897499999999746], 'false,false,false': [nan, 0.22897499999999746], 'false,false,true': [nan, 0.20782844387755142]}
{'': [nan, 0.22622892739953904], 'false': [nan, 0.22622892739953904], 'false,false': [nan, 0.22622892739953904]}
{'': [nan, 0.2176455197002894], 'false': [0.2198741751340689, 0.21408411626345603], 'false,false': [nan, 0.21408411626345603], 'false,false,false': [nan, 0.21408411626345603]}
{'': [nan, 0.22850510061718646], 'false': [nan, 0.22850510061718646], 'false,false': [0.22850510061718646, nan], 'false,false,true': [nan, 0.22850510061718646]}
{'': [nan, 0.21893343588916658], 'false': [nan, 0.21893343588916658], 'false,false': [0.21893343588916658, nan], 'false,false,true': [3.2314221507892936e-05, 0.24444720001198172]}
{'': [nan, 0.18991270989662118], 'false': [0.18991270989662118, nan], 'false,true': [2.556080516898994e-05, 0.24891509897452638], 'false,true,false': [nan, 0.24891509897452638]}
{'': [nan, 0.18553908128804966], 'false': [nan, 0.18553908128804966], 'false,false': [nan, 0.18553908128804966], 'false,false,false': [0.18553908128804966, nan]}
{'': [nan, 0.17852067448115488], 'false': [nan, 0.17852067448115488], 'false,false': [nan, 0.17852067448115452], 'false,false,false': [0.17986201438780472, 0.17630388426286547]}
{'': [nan, 0.1825293733190207], 'false': [nan, 0.18252937331902078], 'false,false': [nan, 0.1825293733190207]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- location(B, H).;true;true
6;;proteinclass(A, B) :- location(B, E).;true;true


Refining candidate
***************************
Model training time 26.745
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( phenotype(A, C) )
%   | then return 0.13087620782678497;  // std dev = 0.445, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else return 0.0803711573217344;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), enzyme(F, G) )
%   | | then if ( interaction(D, A), complex(F, H) )
%   | | | then return 0.17064893509951237;  // std dev = 3.211, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return 0.3152917922423695;  // std dev = 2.947, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | else if ( interaction(I, A), interaction(D, J) )
%   | | | then return 0.17633075328133055;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.03996711691769402;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then return 0.06648226843284567;  // std dev = 0.406, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.17427796735757722;  // std dev = 5.789, 155.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=49 */
%   | | | else return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( phenotype(A, E), interaction(C, A) )
%   | then return 0.22935833939871897;  // std dev = 0.490, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | else return 0.10897489376332065;  // std dev = 0.446, 87.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=24 */
%   else if ( complex(A, F), interaction(G, A) )
%   | then if ( enzyme(G, H) )
%   | | then if ( interaction(I, A), complex(I, F) )
%   | | | then return 0.16891609036009034;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.33558275702675694;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.13683330864417043;  // std dev = 0.459, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | else if ( enzyme(A, J), phenotype(A, K) )
%   | | then if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.2755160720558002;  // std dev = 1.489, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.5805077364344305;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, N) )
%   | | | then return 0.260854146693095;  // std dev = 4.604, 87.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=37 */
%   | | | else return 0.15896146933813904;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(E, D), interaction(C, E) )
%   | | then if ( interaction(D, D), enzyme(D, F) )
%   | | | then return 0.09647345690301606;  // std dev = 3.368, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.25330918673233116;  // std dev = 3.632, 53.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=24 */
%   | | else return 0.041823165939474966;  // std dev = 0.421, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | else if ( complex(C, G) )
%   | | then return 0.6292153838343462;  // std dev = 0.888, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.3050058090100247;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( phenotype(A, H), location(A, I) )
%   | then if ( interaction(J, A), phenotype(J, H) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.31591141754550695;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.1959133392062298;  // std dev = 1.898, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else return 0.11304920983401921;  // std dev = 0.464, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | else return 0.07251856016306284;  // std dev = 0.449, 86.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=24 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, C), complex(A, E) )
%   | then return 0.1564312809615631;  // std dev = 0.486, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else return 0.06740650653495481;  // std dev = 0.455, 122.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=36 */
%   else if ( phenotype(A, F), location(A, G) )
%   | then if ( phenotype(H, F), enzyme(H, I) )
%   | | then return 0.07601192696566826;  // std dev = 0.460, 86.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.17761452393921326;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.44428119060587995;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, K), interaction(L, A) )
%   | | then if ( complex(L, K) )
%   | | | then return 0.04935739821019023;  // std dev = 1.472, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.16913012269331995;  // std dev = 1.553, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.19927702026579747;  // std dev = 3.226, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return 0.12426120362669249;  // std dev = 1.778, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), enzyme(E, F) )
%   | then if ( phenotype(C, G), interaction(H, A) )
%   | | then return 0.06379554926452999;  // std dev = 0.459, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else return 0.21421144864866618;  // std dev = 0.491, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0.00736227405784662;  // std dev = 0.436, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   else if ( enzyme(A, I), interaction(J, A) )
%   | then if ( location(A, K) )
%   | | then if ( complex(A, L) )
%   | | | then return 0.23249894760432605;  // std dev = 2.063, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.10047800684429344;  // std dev = 2.915, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | else return 0.37871593452597957;  // std dev = 0.853, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return 0.007113191611633696;  // std dev = 0.446, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.09838448674236915;  // std dev = 4.438, 86.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=30 */
%   | | | else return 0.14627224957393437;  // std dev = 3.644, 55.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=22 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.2714741753198475;  // std dev = 0.413, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   else if ( location(A, D) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( location(E, D) )
%   | | | then return 0.17581396187532225;  // std dev = 3.374, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
%   | | | else return 0.36180701264061343;  // std dev = 1.379, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.22290485315152134;  // std dev = 3.477, 48.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.37835638583042625;  // std dev = 4.130, 74.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=48 */
%   | else if ( phenotype(A, G) )
%   | | then return -0.2025857163195429;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.16828587079379081;  // std dev = 1.490, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.39482369381141086;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.2248953903715614;  // std dev = 0.378, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then if ( enzyme(E, G) )
%   | | | then return 0.7147976118486493;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17402786581564617;  // std dev = 2.901, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | else if ( interaction(E, E) )
%   | | | then return 0.6758256350942842;  // std dev = 0.099, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.3489355386899069;  // std dev = 3.223, 48.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=33 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( phenotype(H, I) )
%   | | | then return 0.1433580997010267;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.030013414744889187;  // std dev = 1.438, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.1522731795240822;  // std dev = 2.485, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.2647671678291406;  // std dev = 3.207, 44.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=27 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(C, E), interaction(E, E) )
%   | then if ( enzyme(A, F), complex(C, G) )
%   | | then return 0.25810018655596284;  // std dev = 0.398, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return -0.0025844748017516406;  // std dev = 0.401, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | else if ( interaction(A, H), interaction(C, H) )
%   | | then return -0.12585557270816597;  // std dev = 0.391, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else return -0.0017963215898888201;  // std dev = 0.404, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   else if ( interaction(A, A) )
%   | then return 0.4464267135347059;  // std dev = 0.733, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( location(A, I) )
%   | | then if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.014262644342605501;  // std dev = 2.896, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return 0.0875530549958678;  // std dev = 4.220, 104.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=41 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.013393709314267652;  // std dev = 1.098, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.13111077080123248;  // std dev = 1.160, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(C, C), phenotype(A, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.14064381609538337;  // std dev = 1.006, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.011405917192866762;  // std dev = 1.097, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.051076405640475685;  // std dev = 0.405, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( complex(A, D), location(C, I) )
%   | | then if ( phenotype(A, J), phenotype(C, J) )
%   | | | then return 0.0013574490830497628;  // std dev = 1.044, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.17840460166613506;  // std dev = 1.947, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( interaction(A, K), interaction(C, K) )
%   | | | then return 0.07628549249666554;  // std dev = 2.888, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | | else return -0.0016063551678174644;  // std dev = 4.512, 119.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=39 */
%   else if ( location(A, L), interaction(A, M) )
%   | then return -0.1247627532406795;  // std dev = 0.371, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | else return 0.002377953269921841;  // std dev = 0.428, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A), location(D, C) )
%   | then if ( enzyme(D, E), enzyme(A, E) )
%   | | then if ( complex(D, F) )
%   | | | then return 0.2927852584023158;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.056146079458604135;  // std dev = 0.759, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return -0.06970752565952602;  // std dev = 2.499, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return -0.00528827359246218;  // std dev = 5.991, 204.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=65 */
%   | else if ( location(I, C), interaction(I, I) )
%   | | then return -0.07115016227183447;  // std dev = 0.394, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | else return 0.17737991934894298;  // std dev = 0.764, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(J, A), complex(J, K) )
%   | then return 0.262960351613516;  // std dev = 1.005, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, L) )
%   | | then return 0.04318586591759852;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.025246364783879403;  // std dev = 0.396, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.773', 'seconds']
Refined model CLL: -0.351638


******************************************
Best model found
******************************************
Results 

CLL : -0.329791 

AUC ROC : 0.805864 

AUC PR : 0.019053 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 26.745 

Total Inference Time : 7.822363376617432 

Total revision time: 51.78635584449768
Best scored revision CLL: -0.334591


Results 

CLL : -0.329791 

AUC ROC : 0.805864 

AUC PR : 0.019053 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 51.9403968963623 

Total Inference Time : 7.822363376617432 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.939
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( function(C, A), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19148226843284577;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(F, G), location(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1636402738402448;  // std dev = 5.044, 115.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=38 */
%   | | else if ( function(H, A), phenotype(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16247378391447395;  // std dev = 6.018, 164.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( function(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1577973193143554;  // std dev = 7.742, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(C, D), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then return 0.08844818094427812;  // std dev = 5.207, 128.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=39 */
%   | else if ( interaction(E, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14432320210122776;  // std dev = 5.822, 147.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=53 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( function(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, E) )
%   | | then if ( phenotype(E, F), function(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08672444527684633;  // std dev = 7.885, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( function(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( location(B, H) )
%   | | | then return -0.2539503682457226;  // std dev = 0.052, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | | else return 0.34344356789189906;  // std dev = 6.094, 154.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=92 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(A, D) )
%   | then if ( location(B, E) )
%   | | then return -0.20755274804424687;  // std dev = 0.051, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | else if ( location(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24063195800637296;  // std dev = 6.332, 163.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), location(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(E, A), phenotype(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return 0.07122211299237216;  // std dev = 6.769, 248.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=92 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(C, A), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), phenotype(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.029954448855522658;  // std dev = 4.522, 119.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=39 */
%   | | | else return 0.022396211611704263;  // std dev = 5.245, 159.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=53 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( function(A, C), function(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), function(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03668700840127218;  // std dev = 6.805, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '23.032', 'seconds']
Parameter learned model CLL:-0.340098 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'function(C, A), enzyme(C, D)', 'false': 'function(E, A)', 'false,false': 'enzyme(A, F), location(B, F)', 'false,false,false': 'enzyme(A, G), interaction(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.832, 184, 92]}]
['proteinclass(A, B)', {'': 'enzyme(A, C), phenotype(C, D)', 'false': 'function(E, A), location(B, E)', 'false,false': 'enzyme(A, F)', 'false,false,true': 'enzyme(F, G), location(B, G)', 'false,false,false': 'function(H, A), phenotype(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [5.044, 77, 38], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.018, 110, 54]}]
['proteinclass(A, B)', {'': 'function(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'function(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.742, 172, 92]}]
['proteinclass(A, B)', {'': 'phenotype(C, D), location(B, C)', 'false': 'phenotype(A, D)', 'false,false': 'interaction(E, F), location(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [5.207, 89, 39], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.822, 94, 53]}]
['proteinclass(A, B)', {'': 'function(C, A)', 'false': 'complex(D, A)', 'false,false': 'function(A, E)', 'false,false,true': 'phenotype(E, F), function(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.885, 192, 92], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(A, C), phenotype(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'location(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.052, 106, 0], 'false,false,true,false': [6.094, 62, 92], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(A, D)', 'false,true': 'location(B, E)', 'false,true,false': 'location(B, D)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.051, 124, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.332, 71, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(D, A), location(B, D)', 'false,false': 'function(E, A), phenotype(E, F)', 'false,false,false': 'function(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.769, 156, 92], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(C, A), location(B, C)', 'false': 'function(D, A), phenotype(D, E)', 'false,false': 'enzyme(A, F), complex(G, F)', 'false,false,false': 'phenotype(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.522, 80, 39], 'false,false,false,false': [5.245, 106, 53]}]
['proteinclass(A, B)', {'': 'function(A, C), function(C, D)', 'false': 'interaction(E, A), function(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [6.805, 172, 92]}]
{'': [nan, 0.2222222222222235], 'false': [nan, 0.2222222222222235], 'false,false': [nan, 0.22222222222222304], 'false,false,false': [nan, 0.22222222222222304]}
{'': [nan, 0.22101463239166988], 'false': [nan, 0.22101463239166877], 'false,false': [0.22124763705104036, 0.22085068411659622], 'false,false,true': [nan, 0.22124763705104036], 'false,false,false': [nan, 0.22085068411659622]}
{'': [nan, 0.22704457196547004], 'false': [nan, 0.22704457196547004], 'false,false': [nan, 0.22704457196547004]}
{'': [nan, 0.22262355841384207], 'false': [0.2118520234170213, 0.2305496967292795], 'false,false': [nan, 0.2305496967292795], 'false,false,false': [nan, 0.2305496967292795]}
{'': [nan, 0.21890509308513534], 'false': [nan, 0.21890509308513534], 'false,false': [0.21890509308513534, nan], 'false,false,true': [nan, 0.21890509308513534]}
{'': [nan, 0.22901212286404474], 'false': [nan, 0.22901212286404474], 'false,false': [0.22901212286404474, nan], 'false,false,true': [2.5961326828984135e-05, 0.24112894130018322]}
{'': [nan, 0.18900455720026127], 'false': [0.18900455720026127, nan], 'false,true': [2.1107300025873818e-05, 0.24598427246456883], 'false,true,false': [nan, 0.24598427246456883]}
{'': [nan, 0.18475453283974513], 'false': [nan, 0.18475453283974513], 'false,false': [nan, 0.18475453283974513], 'false,false,false': [0.18475453283974513, nan]}
{'': [nan, 0.17254032886560128], 'false': [nan, 0.17254032886560128], 'false,false': [nan, 0.17254032886560033], 'false,false,false': [0.17182581479593503, 0.1730506373454721]}
{'': [nan, 0.17542683408341694], 'false': [nan, 0.17542683408341753], 'false,false': [nan, 0.17542683408341694]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- location(B, H).;true;true
6;;proteinclass(A, B) :- location(B, E).;true;true


Refining candidate
***************************
Model training time 8.799
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), complex(E, F) )
%   | then return 0.21880467280442972;  // std dev = 0.480, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   | else return 0.13401100406502958;  // std dev = 0.447, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   else if ( interaction(A, G), phenotype(A, H) )
%   | then if ( interaction(G, G) )
%   | | then if ( phenotype(G, H) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.6081489350995123;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( complex(A, J), interaction(I, K) )
%   | | | then return 0.26991364098186527;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.14386322081379804;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.17393840878372288;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.28314893509951233;  // std dev = 3.126, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( interaction(C, E), location(A, F) )
%   | then if ( phenotype(C, D), complex(C, G) )
%   | | then return 0.1413274968060286;  // std dev = 0.463, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else return 0.07277561939505146;  // std dev = 0.437, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | else if ( phenotype(C, D) )
%   | | then return 0.33229038344498485;  // std dev = 1.006, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.17437365057162002;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( enzyme(A, H), phenotype(A, I) )
%   | then if ( phenotype(J, I), interaction(J, J) )
%   | | then return 0.3325015702729328;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5029163051846572;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( complex(A, K), interaction(A, L) )
%   | | then return 0.09382044238261758;  // std dev = 0.441, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.10760878897934989;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.21771817317143374;  // std dev = 4.884, 100.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(A, E), phenotype(A, F) )
%   | then if ( interaction(E, E) )
%   | | then return 0.11791983544415273;  // std dev = 0.461, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(E, G) )
%   | | | then return 0.4719842085653982;  // std dev = 0.787, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3163206032956549;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.04842133624582451;  // std dev = 0.436, 86.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=22 */
%   else if ( complex(A, H), phenotype(A, I) )
%   | then return 0.07921455278331278;  // std dev = 0.446, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), interaction(J, L) )
%   | | | then return 0.1510582936069086;  // std dev = 1.969, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.2663523066353418;  // std dev = 2.330, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( phenotype(A, M), enzyme(A, N) )
%   | | | then return 0.4349550328132908;  // std dev = 0.835, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11137680330590317;  // std dev = 4.676, 102.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=32 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( enzyme(D, E), phenotype(D, C) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.276248866709257;  // std dev = 1.228, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.14110487629558918;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(D, F), enzyme(A, G) )
%   | | then return -0.03259815965109409;  // std dev = 0.428, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else return 0.056278749392528596;  // std dev = 0.452, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   else if ( interaction(H, A), enzyme(A, I) )
%   | then return 0.05588499205944641;  // std dev = 0.445, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( location(A, L), location(J, L) )
%   | | | then return 0.008906396697530683;  // std dev = 1.518, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.12204665660439426;  // std dev = 1.419, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.394309312014658;  // std dev = 1.103, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1660294250999294;  // std dev = 4.770, 95.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=37 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, E), phenotype(E, D) )
%   | then if ( enzyme(E, F) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.010051841096376912;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1438511984431289;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( location(C, H), location(E, H) )
%   | | | then return 0.47295113884900913;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.16772820421144347;  // std dev = 1.102, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(I, C), enzyme(I, J) )
%   | | then if ( phenotype(I, D) )
%   | | | then return 0.2743755743615638;  // std dev = 1.420, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0814237368799345;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(K, C), interaction(C, K) )
%   | | | then return -0.056723790540715885;  // std dev = 1.554, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.08700234199851072;  // std dev = 3.476, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   else return 0.04587584883905212;  // std dev = 0.457, 184.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=54 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.26459714312748;  // std dev = 0.372, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( phenotype(A, D) )
%   | then if ( complex(A, E), interaction(A, F) )
%   | | then if ( interaction(F, G), complex(G, H) )
%   | | | then return 0.6224332029239608;  // std dev = 0.944, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.17184826988595572;  // std dev = 1.493, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.38978103332650577;  // std dev = 1.609, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.2346267253849264;  // std dev = 3.123, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | else if ( enzyme(A, K), location(A, L) )
%   | | then if ( complex(A, M), interaction(N, A) )
%   | | | then return 0.3375116738102607;  // std dev = 1.987, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.7659036875631191;  // std dev = 0.044, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, P) )
%   | | | then return 0.406162216268343;  // std dev = 2.434, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return 0.24037394074680912;  // std dev = 2.876, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.21383011452190664;  // std dev = 0.336, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( interaction(G, H) )
%   | | | then return 0.025453388692708745;  // std dev = 2.368, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.19264298959297127;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(I, D), interaction(I, I) )
%   | | | then return 0.35470819847926593;  // std dev = 1.173, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.06223223390687614;  // std dev = 1.552, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(J, A), interaction(A, K) )
%   | | then if ( enzyme(A, L), phenotype(K, M) )
%   | | | then return 0.7115650334433539;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08883193268694248;  // std dev = 3.076, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return 0.44986761358284233;  // std dev = 1.617, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.27478930711983224;  // std dev = 4.004, 68.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=41 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( interaction(E, A), phenotype(E, C) )
%   | then if ( enzyme(A, F), interaction(G, E) )
%   | | then return -0.08248891091823327;  // std dev = 0.395, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else return 0.06352278151926467;  // std dev = 0.452, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( complex(A, J), interaction(H, H) )
%   | | | then return 0.16128307608601103;  // std dev = 1.126, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.011164482591673412;  // std dev = 2.150, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.06558388940886295;  // std dev = 2.469, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.14016441022005235;  // std dev = 1.839, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   else if ( interaction(L, A), location(L, M) )
%   | then if ( phenotype(L, N), complex(L, P) )
%   | | then return -0.06735281156450874;  // std dev = 0.396, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | else return 0.03741186329519693;  // std dev = 0.414, 90.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=30 */
%   | else return -0.08643111909557374;  // std dev = 0.381, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then return -0.030189170089142993;  // std dev = 0.403, 250.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=69 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( complex(E, F) )
%   | | then if ( phenotype(A, G), location(A, H) )
%   | | | then return 0.08275450766405908;  // std dev = 1.219, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3211225867564154;  // std dev = 1.028, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.1720570742389752;  // std dev = 0.914, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.07562967308643521;  // std dev = 1.121, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return -0.06692122229691354;  // std dev = 1.104, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.05808386775145086;  // std dev = 1.722, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 7.626203362447367E-4;  // std dev = 1.058, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.11405651621035309;  // std dev = 0.824, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then return 0.005886307205164383;  // std dev = 0.402, 102.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=30 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), enzyme(F, G) )
%   | | then if ( interaction(F, H), interaction(E, H) )
%   | | | then return 0.23337642059090571;  // std dev = 1.145, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.041133029488979615;  // std dev = 1.382, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return -0.13456809382010426;  // std dev = 0.724, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.0054423092720948234;  // std dev = 3.723, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( phenotype(K, M) )
%   | | | then return 0.20254942339837823;  // std dev = 1.112, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.05529946441659828;  // std dev = 2.004, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.11730586202651264;  // std dev = 1.125, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.05308969047572659;  // std dev = 2.344, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.418', 'seconds']
Refined model CLL: -0.336284


******************************************
Best model found
******************************************
Results 

CLL : -0.358795 

AUC ROC : 0.798717 

AUC PR : 0.017315 

Precision : 0.016739 

Recall : 0.097473 

F1 : 0.028571 

Total Learning Time : 8.799 

Total Inference Time : 3.296201467514038 

Total revision time: 24.910844886779785
Best scored revision CLL: -0.336284


Results 

CLL : -0.358795 

AUC ROC : 0.798717 

AUC PR : 0.017315 

Precision : 0.016739 

Recall : 0.097473 

F1 : 0.028571 

Total Learning Time : 25.06488593864441 

Total Inference Time : 3.296201467514038 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.416
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( function(C, A), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19019526714584475;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(F, G), location(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19235863335894443;  // std dev = 4.237, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | else if ( function(H, A), phenotype(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2226460193510281;  // std dev = 5.952, 149.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( function(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1442018479582747;  // std dev = 7.520, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(C, D), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then return 0.1310470017313752;  // std dev = 5.857, 150.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=53 */
%   | else if ( interaction(E, F), location(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10430957125269408;  // std dev = 4.713, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( function(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, E) )
%   | | then if ( phenotype(E, F), function(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08962147223895704;  // std dev = 7.571, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( function(A, C), phenotype(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( location(B, H) )
%   | | | then return -0.2600642607767881;  // std dev = 0.036, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | | else return 0.3537533756967018;  // std dev = 5.757, 140.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=86 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(A, D) )
%   | then if ( location(B, E) )
%   | | then return -0.21428458440470138;  // std dev = 0.031, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( location(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21355098273028505;  // std dev = 6.235, 157.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), location(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(E, A), phenotype(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return 0.05711409229494527;  // std dev = 6.624, 236.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=86 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( function(C, A), location(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(D, A), phenotype(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.009546634342808436;  // std dev = 5.415, 179.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=53 */
%   | | | else return 0.03922611243604266;  // std dev = 4.122, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( function(A, C), function(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), function(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.027532255175921696;  // std dev = 6.645, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '28.190', 'seconds']
Parameter learned model CLL:-0.339188 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'function(C, A), enzyme(C, D)', 'false': 'function(E, A)', 'false,false': 'enzyme(A, F), location(B, F)', 'false,false,false': 'enzyme(A, G), interaction(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.579, 173, 86]}]
['proteinclass(A, B)', {'': 'enzyme(A, C), phenotype(C, D)', 'false': 'function(E, A), location(B, E)', 'false,false': 'enzyme(A, F)', 'false,false,true': 'enzyme(F, G), location(B, G)', 'false,false,false': 'function(H, A), phenotype(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.237, 50, 28], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.952, 91, 58]}]
['proteinclass(A, B)', {'': 'function(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'function(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.52, 165, 86]}]
['proteinclass(A, B)', {'': 'phenotype(C, D), location(B, C)', 'false': 'phenotype(A, D)', 'false,false': 'interaction(E, F), location(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [5.857, 97, 53], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.713, 68, 33]}]
['proteinclass(A, B)', {'': 'function(C, A)', 'false': 'complex(D, A)', 'false,false': 'function(A, E)', 'false,false,true': 'phenotype(E, F), function(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.571, 172, 86], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(A, C), phenotype(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'location(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.036, 92, 0], 'false,false,true,false': [5.757, 54, 86], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(A, D)', 'false,true': 'location(B, E)', 'false,true,false': 'location(B, D)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.031, 102, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.235, 71, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'function(D, A), location(B, D)', 'false,false': 'function(E, A), phenotype(E, F)', 'false,false,false': 'function(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.624, 150, 86], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'function(C, A), location(B, C)', 'false': 'function(D, A), phenotype(D, E)', 'false,false': 'enzyme(A, F), complex(G, F)', 'false,false,false': 'phenotype(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.415, 126, 53], 'false,false,false,false': [4.122, 61, 33]}]
['proteinclass(A, B)', {'': 'function(A, C), function(C, D)', 'false': 'interaction(E, A), function(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [6.645, 171, 86]}]
{'': [nan, 0.22179156542090983], 'false': [nan, 0.22179156542090983], 'false,false': [nan, 0.22179156542090966], 'false,false,false': [nan, 0.22179156542090966]}
{'': [nan, 0.23532379824952904], 'false': [nan, 0.2353237982495295], 'false,false': [0.2301117685733064, 0.23773703887212266], 'false,false,false': [nan, 0.23773703887212266], 'false,false,true': [nan, 0.2301117685733064]}
{'': [nan, 0.22532741149390162], 'false': [nan, 0.22532741149390162], 'false,false': [nan, 0.22532741149390162]}
{'': [nan, 0.2253217905275927], 'false': [0.22866130445393884, 0.21993489116724185], 'false,false': [nan, 0.21993489116724185], 'false,false,false': [nan, 0.21993489116724185]}
{'': [nan, 0.22217391332868228], 'false': [nan, 0.22217391332868228], 'false,false': [0.22217391332868228, nan], 'false,false,true': [nan, 0.22217391332868228]}
{'': [nan, 0.23302877899348454], 'false': [nan, 0.23302877899348454], 'false,false': [0.23302877899348454, nan], 'false,false,true': [1.4120998805687025e-05, 0.2367430748722778]}
{'': [nan, 0.19378897037584122], 'false': [0.19378897037584122, nan], 'false,true': [9.569095632496597e-06, 0.2475973282715691], 'false,true,false': [nan, 0.2475973282715691]}
{'': [nan, 0.1858944077354623], 'false': [nan, 0.1858944077354623], 'false,false': [nan, 0.1858944077354623], 'false,false,false': [0.1858944077354623, nan]}
{'': [nan, 0.17017358510114383], 'false': [nan, 0.17017358510114383], 'false,false': [nan, 0.1701735851011436], 'false,false,false': [0.16380561667555296, 0.180740109410841]}
{'': [nan, 0.17179857565284332], 'false': [nan, 0.17179857565284334], 'false,false': [nan, 0.17179857565284332]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- location(B, H).;true;true
6;;proteinclass(A, B) :- location(B, E).;true;true


Refining candidate
***************************
Model training time 8.997
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return 0.15814893509951225;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( complex(E, C) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(A, I), phenotype(I, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3581489350995122;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, A), complex(A, J) )
%   | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then if ( interaction(L, L), phenotype(L, M) )
%   | | | then return 0.09344305274657119;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.23314893509951234;  // std dev = 4.108, 72.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=27 */
%   | | else return 0.14905802600860224;  // std dev = 0.454, 110.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=32 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), enzyme(E, F) )
%   | then return 0.05298668653920026;  // std dev = 0.420, 69.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=16 */
%   | else return 0.14534334421827474;  // std dev = 0.459, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   else if ( enzyme(A, G), interaction(A, H) )
%   | then if ( interaction(H, H) )
%   | | then return 0.5868617051057348;  // std dev = 0.877, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(H, I) )
%   | | | then return 0.16066757255144135;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.077334239218108;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then if ( complex(K, J), phenotype(A, L) )
%   | | | then return 0.19744840516913426;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.03287449087937237;  // std dev = 1.754, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(A, M), interaction(M, A) )
%   | | | then return 0.060142534648804404;  // std dev = 1.762, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.16557653647946427;  // std dev = 5.428, 133.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then return 0.05631499256566548;  // std dev = 0.449, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   else if ( complex(A, E), location(A, F) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, G) )
%   | | | then return 0.2398626021004404;  // std dev = 1.302, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.5670432636535746;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.05360447230646723;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2439530594411948;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( enzyme(J, K) )
%   | | | then return 0.18857915330134584;  // std dev = 1.937, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.07283599696131002;  // std dev = 3.744, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.3153816308697662;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.1696129017643458;  // std dev = 4.391, 84.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=30 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( location(E, D), interaction(E, A) )
%   | then return 0.07210872322145624;  // std dev = 0.456, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | else return -0.00982254331819642;  // std dev = 0.416, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( complex(F, H), enzyme(F, I) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.46930003864387;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.26000198061680835;  // std dev = 1.417, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(J, F), interaction(J, A) )
%   | | | then return 0.05060430149654427;  // std dev = 2.430, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.17116098546338515;  // std dev = 3.767, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | else if ( phenotype(A, K), complex(A, L) )
%   | | then return -0.014059955103376386;  // std dev = 0.431, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.21673086497908955;  // std dev = 1.492, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.08508130301543758;  // std dev = 3.032, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( enzyme(A, E), location(A, F) )
%   | then return 0.11200086520718366;  // std dev = 0.475, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | else return 0.04254455446951866;  // std dev = 0.455, 128.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=37 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then if ( complex(A, H), interaction(I, A) )
%   | | then if ( enzyme(G, J) )
%   | | | then return 0.35425139617104445;  // std dev = 0.824, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11318605258870255;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.05291316456541387;  // std dev = 0.459, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | else if ( interaction(K, A) )
%   | | then if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.008735400653941326;  // std dev = 1.249, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.1438440264227273;  // std dev = 2.104, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.13986773383687717;  // std dev = 1.116, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5251728317545834;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.2647221046570937;  // std dev = 0.444, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(F, H), enzyme(H, I) )
%   | | | then return 0.3004743760453727;  // std dev = 1.920, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.05853039667854196;  // std dev = 2.211, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.4394606963671135;  // std dev = 2.701, 35.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=24 */
%   | | | else return 0.23265612692352033;  // std dev = 3.028, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( interaction(K, M) )
%   | | | then return 0.7068854922021919;  // std dev = 0.233, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.41981848050230447;  // std dev = 1.166, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, N), interaction(P, A) )
%   | | | then return 0.25233002027865004;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.45411838381492114;  // std dev = 1.735, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(B, C) )
%   then return -0.21524750424722602;  // std dev = 0.378, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( complex(E, D), location(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.20560166750500286;  // std dev = 1.722, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.01581249580255138;  // std dev = 1.558, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return 0.3536099594616896;  // std dev = 0.879, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6853924276168664;  // std dev = 0.059, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, J), interaction(K, A) )
%   | | then if ( phenotype(K, L), phenotype(A, L) )
%   | | | then return 0.5483871343260974;  // std dev = 0.946, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.19340157407435882;  // std dev = 3.137, 39.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=19 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.08424953784297068;  // std dev = 3.599, 55.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=24 */
%   | | | else return 0.21421313536014883;  // std dev = 2.704, 29.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( interaction(A, E), phenotype(E, C) )
%   | then if ( interaction(E, A) )
%   | | then return 0.048911668984288836;  // std dev = 0.454, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return -0.17975578281984528;  // std dev = 0.342, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | else if ( phenotype(F, C), interaction(F, G) )
%   | | then return 0.012261839889246801;  // std dev = 0.395, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else return -0.13169882251836768;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.01488222532872421;  // std dev = 0.393, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), interaction(L, K) )
%   | | | then return 0.07774286194359921;  // std dev = 2.700, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return -0.005144649917906745;  // std dev = 2.664, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.2679239490132458;  // std dev = 1.001, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.06390670498903865;  // std dev = 3.776, 80.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=29 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, C) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.2153325744703111;  // std dev = 0.792, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.06220142849084138;  // std dev = 0.759, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then return -0.026207358579611102;  // std dev = 0.330, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else return -0.09279308116855581;  // std dev = 0.381, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   else if ( location(A, H) )
%   | then if ( interaction(I, A) )
%   | | then if ( interaction(J, I), complex(J, K) )
%   | | | then return 0.11407904177442739;  // std dev = 3.514, 67.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=27 */
%   | | | else return 0.006080437643690748;  // std dev = 3.875, 86.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.09783234076977965;  // std dev = 1.870, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.2881625551563656;  // std dev = 1.175, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else return -0.1118082623972912;  // std dev = 1.117, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( phenotype(D, E), complex(C, F) )
%   | then return -0.00874557020906315;  // std dev = 0.405, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | else if ( complex(C, G), interaction(D, H) )
%   | | then return 0.640142742037806;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(D, I), phenotype(A, J) )
%   | | | then return 0.39880660227087994;  // std dev = 0.934, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.08949047049188226;  // std dev = 2.299, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   else if ( phenotype(A, K), enzyme(A, L) )
%   | then if ( interaction(A, M), interaction(M, M) )
%   | | then return -0.07296223381270579;  // std dev = 0.740, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(N, L), complex(N, P) )
%   | | | then return 0.23080248922759478;  // std dev = 0.996, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.06788678860276562;  // std dev = 1.778, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( interaction(Q, A), complex(Q, R) )
%   | | then return -0.0657649397419457;  // std dev = 0.403, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | else return -0.004598240011512824;  // std dev = 0.412, 81.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=27 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.102', 'seconds']
Refined model CLL: -0.361351


******************************************
Best model found
******************************************
Results 

CLL : -0.339957 

AUC ROC : 0.8034 

AUC PR : 0.017514 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.997 

Total Inference Time : 3.1919260025024414 

Total revision time: 23.391103160858155
Best scored revision CLL: -0.339188


Results 

CLL : -0.339957 

AUC ROC : 0.8034 

AUC PR : 0.017514 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 23.54514421272278 

Total Inference Time : 3.1919260025024414 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.238
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), interaction(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1889474141869645;  // std dev = 7.630, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(C, E), phenotype(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, A) )
%   | | | then return 0.2335574728387903;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.22244636172767981;  // std dev = 2.925, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   else if ( location(F, A), phenotype(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), phenotype(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16689080617212407;  // std dev = 4.163, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | | else if ( location(I, A), enzyme(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21748604426736248;  // std dev = 5.147, 112.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12924063171989933;  // std dev = 7.657, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.13944021566078188;  // std dev = 4.671, 95.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15054143389508068;  // std dev = 5.788, 144.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=53 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E) )
%   | | then if ( enzyme(E, F), location(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11062295044346046;  // std dev = 7.321, 234.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=83 */
%   | | else return 0.043462327335923145;  // std dev = 0.451, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( phenotype(B, H) )
%   | | | then return -0.26426844205686667;  // std dev = 0.042, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return 0.13698158320893924;  // std dev = 7.216, 217.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=87 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.21630250580346294;  // std dev = 0.026, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1609123069770262;  // std dev = 6.738, 183.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=83 */
%   | else if ( location(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.004484656140648839;  // std dev = 1.681, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), enzyme(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.04256894067346972;  // std dev = 7.101, 248.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=83 */
%   | | | else return 0.023529271423193197;  // std dev = 1.655, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), enzyme(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.01745250738853307;  // std dev = 4.608, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   | | | else return 0.050250145135101294;  // std dev = 5.626, 149.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=53 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), location(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.048334427783880626;  // std dev = 7.198, 236.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '23.238', 'seconds']
Parameter learned model CLL:-0.377976 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), interaction(C, D)', 'false': 'location(E, A)', 'false,false': 'interaction(A, F), phenotype(B, F)', 'false,false,false': 'interaction(A, G), function(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.63, 176, 87]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(C, E), phenotype(B, E)', 'true,false,false': 'interaction(A, A)', 'false': 'location(F, A), phenotype(B, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), phenotype(B, H)', 'false,false,false': 'location(I, A), enzyme(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.549, 6, 4], 'true,false,false,false': [2.925, 22, 14], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.163, 52, 26], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.147, 69, 43]}]
['proteinclass(A, B)', {'': 'location(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'location(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.657, 180, 87]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.671, 61, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.788, 91, 53]}]
['proteinclass(A, B)', {'': 'location(C, A)', 'false': 'complex(D, A)', 'false,false': 'location(A, E)', 'false,false,true': 'enzyme(E, F), location(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.321, 151, 83], 'false,false,false': [0.451, 10, 4]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'phenotype(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.042, 59, 0], 'false,false,true,false': [7.216, 130, 87], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'location(F, A), phenotype(B, F)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.026, 39, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.738, 100, 83], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.681, 11, 4]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(D, A), phenotype(B, D)', 'false,false': 'location(E, A), enzyme(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.101, 165, 83], 'false,false,false,false': [1.655, 10, 4]}]
['proteinclass(A, B)', {'': 'location(C, A), phenotype(B, C)', 'false': 'location(D, A), enzyme(D, E)', 'false,false': 'interaction(A, F), complex(G, F)', 'false,false,false': 'enzyme(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.608, 74, 34], 'false,false,false,false': [5.626, 96, 53]}]
['proteinclass(A, B)', {'': 'location(A, C), location(C, D)', 'false': 'function(E, A), location(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.198, 149, 87]}]
{'': [nan, 0.2213708453208816], 'false': [nan, 0.2213708453208816], 'false,false': [nan, 0.2213708453208818], 'false,false,false': [nan, 0.2213708453208818]}
{'': [0.23818525519848754, 0.23127423822714688], 'true': [nan, 0.23818525519848754], 'true,false': [nan, 0.23818525519848754], 'true,false,false': [0.24000000000000016, 0.23765432098765416], 'false': [nan, 0.23127423822714702], 'false,false': [0.22222222222222215, 0.23652742346938788], 'false,false,false': [nan, 0.23652742346938788], 'false,false,true': [nan, 0.22222222222222227]}
{'': [nan, 0.21961218171139874], 'false': [nan, 0.21961218171139874], 'false,false': [nan, 0.21961218171139874]}
{'': [nan, 0.23149133515601542], 'false': [0.22969318800824762, 0.23262862735141665], 'false,false': [nan, 0.23262862735141665], 'false,false,false': [nan, 0.23262862735141665]}
{'': [nan, 0.22783080061033814], 'false': [nan, 0.22783080061033814], 'false,false': [0.22902048274120226, 0.20369019205255404], 'false,false,true': [nan, 0.22902048274120226]}
{'': [nan, 0.21573157174934293], 'false': [nan, 0.21573157174934285], 'false,false': [0.21573157174934285, nan], 'false,false,true': [2.9809118829296912e-05, 0.23996158975502957]}
{'': [nan, 0.22325902775873568], 'false': [0.22510837306532425, 0.18827434322138492], 'false,true': [1.7212149607142983e-05, 0.24808155027422352], 'false,true,false': [nan, 0.24808155027422352], 'false,false': [nan, 0.18827434322138492], 'false,false,false': [nan, 0.18827434322138492]}
{'': [nan, 0.20292354811045066], 'false': [nan, 0.20292354811045066], 'false,false': [nan, 0.20292354811045066], 'false,false,false': [0.2033139179073172, 0.19566528769956879]}
{'': [nan, 0.20604861656318138], 'false': [nan, 0.20604861656318138], 'false,false': [nan, 0.2060486165631813], 'false,false,false': [0.19662280965059445, 0.212428706213348]}
{'': [nan, 0.21955419957834513], 'false': [nan, 0.21955419957834515], 'false,false': [nan, 0.21955419957834515]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- phenotype(B, H).;true;true
6;;proteinclass(A, B) :- location(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 33.684
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( enzyme(C, E), phenotype(C, F) )
%   | | then return 0.058148935099512175;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( phenotype(C, D) )
%   | | | then return 0.13592671287729013;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.088918165868743;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( enzyme(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.20189893509951234;  // std dev = 2.687, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return 0.10100607795665523;  // std dev = 3.588, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.27920156667845974;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.17673300589597166;  // std dev = 4.953, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
%   else if ( interaction(A, K), enzyme(K, L) )
%   | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then if ( phenotype(A, G), complex(A, F) )
%   | | then return 0.6356506654185746;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(A, H), complex(C, F) )
%   | | | then return 0.09986067845826002;  // std dev = 1.922, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.27490569827989625;  // std dev = 2.807, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | else return 0.14172943362555093;  // std dev = 0.461, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   else if ( interaction(A, I), phenotype(I, J) )
%   | then if ( complex(A, K), complex(I, K) )
%   | | then return 0.313460321665113;  // std dev = 1.230, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.07969841480203158;  // std dev = 0.434, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( interaction(A, L), enzyme(A, M) )
%   | | then return 0.49453358763872607;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.17365757594414766;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.27766023656662425;  // std dev = 3.257, 43.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, D), complex(C, E) )
%   | then if ( complex(A, F), enzyme(D, G) )
%   | | then if ( complex(D, H) )
%   | | | then return 0.1416682558937067;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.06994330722123503;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, I), phenotype(D, I) )
%   | | | then return 0.3051208068786907;  // std dev = 1.565, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.5453143259510277;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, J), phenotype(C, K) )
%   | | then if ( location(A, L), location(C, L) )
%   | | | then return 0.10571636338991712;  // std dev = 1.198, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3184687861228679;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.09652786002493939;  // std dev = 0.450, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   else if ( complex(A, M), interaction(A, N) )
%   | then return -0.007658850765635192;  // std dev = 0.417, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | else return 0.10691352160234942;  // std dev = 0.459, 163.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=49 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, E), interaction(E, C) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.4650988023845433;  // std dev = 1.148, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.11445899216312118;  // std dev = 0.476, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | else return 0.053000483582187244;  // std dev = 0.445, 156.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=42 */
%   else if ( enzyme(A, G), location(A, H) )
%   | then if ( enzyme(I, G), interaction(J, I) )
%   | | then if ( interaction(A, I) )
%   | | | then return -0.030982384904334016;  // std dev = 1.266, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.15912698814366125;  // std dev = 2.239, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else return -0.09839000216910443;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(K, A) )
%   | | then if ( interaction(L, K), interaction(L, A) )
%   | | | then return 0.3828742340973993;  // std dev = 1.550, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.18566142895105667;  // std dev = 2.772, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | else return 0.010466563671689882;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, E), interaction(E, F) )
%   | then if ( location(A, G), location(F, G) )
%   | | then if ( complex(A, H), complex(C, H) )
%   | | | then return -0.029727155857625167;  // std dev = 1.178, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.13969518931552588;  // std dev = 3.311, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | else return -0.06120005526065768;  // std dev = 0.402, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( interaction(C, C), enzyme(A, I) )
%   | | then return 0.35873799724014416;  // std dev = 1.116, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.23250191468981418;  // std dev = 2.454, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.13365809665079537;  // std dev = 3.623, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   else if ( phenotype(A, L), interaction(M, A) )
%   | then if ( interaction(M, M) )
%   | | then return 0.03728868752358768;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.23247227997710113;  // std dev = 0.500, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0.05849382006820577;  // std dev = 0.466, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(B, C) )
%   then return -0.2583338017880221;  // std dev = 0.256, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(A, A), phenotype(D, F) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.13026519976570036;  // std dev = 1.089, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.04214328043651927;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.5326662072261796;  // std dev = 0.918, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.24415499268930177;  // std dev = 2.315, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(A, L), complex(L, K) )
%   | | | then return 0.016214540563322544;  // std dev = 2.177, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.11728213930940456;  // std dev = 4.458, 86.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=32 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.16656947207645723;  // std dev = 3.729, 56.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=24 */
%   | | | else return 0.3823650257493625;  // std dev = 1.424, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.21856779400907503;  // std dev = 0.239, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( interaction(E, A) )
%   | | then if ( complex(E, F), enzyme(A, G) )
%   | | | then return 0.22156864564712975;  // std dev = 2.942, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | | else return 0.0695494468402382;  // std dev = 6.151, 162.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=60 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.3200438522479769;  // std dev = 0.878, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.44217194491911976;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(J, A), phenotype(J, K) )
%   | then return 0.09710293315382386;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.4670895879612127;  // std dev = 0.798, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, A), location(C, E) )
%   | then if ( interaction(D, D) )
%   | | then return -0.060819432926995085;  // std dev = 0.435, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | else if ( phenotype(C, F), location(D, E) )
%   | | | then return 0.04692849814329772;  // std dev = 3.124, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return 0.36065027473698813;  // std dev = 1.111, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.12892442218051825;  // std dev = 0.413, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( phenotype(A, I), complex(G, J) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.0510511093542239;  // std dev = 1.563, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.035173878720320274;  // std dev = 1.903, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( interaction(H, H), interaction(G, H) )
%   | | | then return 0.0382554749356285;  // std dev = 2.994, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.17404022352973977;  // std dev = 2.931, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | else return 0.3826782901805932;  // std dev = 0.918, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), complex(E, F) )
%   | then return 0.027342512381343286;  // std dev = 0.447, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( enzyme(G, I) )
%   | | | then return -0.022601923714303935;  // std dev = 0.756, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.22739413762138425;  // std dev = 1.035, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.432456712610531;  // std dev = 0.392, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   else if ( interaction(J, A), phenotype(J, K) )
%   | then if ( complex(J, L), phenotype(A, K) )
%   | | then if ( interaction(J, M), enzyme(M, N) )
%   | | | then return 0.12516926253399085;  // std dev = 2.325, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.25793143231714755;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, P), phenotype(A, Q) )
%   | | | then return -0.07715313261057893;  // std dev = 2.133, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.03945577240638778;  // std dev = 3.225, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | else return -0.06867534233373182;  // std dev = 0.426, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( phenotype(C, E), interaction(A, F) )
%   | then return -0.031144639355045946;  // std dev = 0.440, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   | else if ( interaction(A, G) )
%   | | then return 0.4168902466560458;  // std dev = 0.792, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, D) )
%   | | | then return 0.46226226315282765;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10198456237851404;  // std dev = 3.310, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   else if ( phenotype(A, H), interaction(I, A) )
%   | then return -0.0984864918972344;  // std dev = 0.446, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( interaction(L, A), enzyme(A, M) )
%   | | | then return 0.34947964245190727;  // std dev = 0.636, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 2.1393865156220062E-4;  // std dev = 1.585, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( location(A, N) )
%   | | | then return -0.027205810124829612;  // std dev = 3.457, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return -0.2472420214523328;  // std dev = 0.831, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '44.705', 'seconds']
Refined model CLL: -0.400761


******************************************
Best model found
******************************************
Results 

CLL : -0.366461 

AUC ROC : 0.679453 

AUC PR : 0.01097 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 33.684 

Total Inference Time : 32.86910033226013 

Total revision time: 79.74387724113464
Best scored revision CLL: -0.377976


Results 

CLL : -0.366461 

AUC ROC : 0.679453 

AUC PR : 0.01097 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 79.86245042991638 

Total Inference Time : 32.86910033226013 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.915
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), interaction(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1893591261823157;  // std dev = 8.340, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(C, E), phenotype(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, A) )
%   | | | then return 0.08350034431388176;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.2144527252662631;  // std dev = 3.854, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   else if ( location(F, A), phenotype(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), phenotype(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13938269725505842;  // std dev = 4.248, 85.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=26 */
%   | | else if ( location(I, A), enzyme(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14119265200619058;  // std dev = 6.000, 169.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14630842395955887;  // std dev = 8.311, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.1264916752842824;  // std dev = 4.667, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1304121565528292;  // std dev = 6.831, 207.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=71 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E) )
%   | | then if ( enzyme(E, F), location(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12154528638124092;  // std dev = 7.898, 272.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=97 */
%   | | else return 0.0970506013171338;  // std dev = 0.471, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( phenotype(B, H) )
%   | | | then return -0.256387231344704;  // std dev = 0.047, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return 0.20044765406946838;  // std dev = 7.509, 227.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=104 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.21196911089911089;  // std dev = 0.057, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16174767259324674;  // std dev = 7.240, 211.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=97 */
%   | else if ( location(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21800016506530323;  // std dev = 1.828, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), enzyme(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.03651293280675023;  // std dev = 7.655, 295.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=97 */
%   | | | else return 0.03429455604268276;  // std dev = 2.056, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), enzyme(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.03162930691781956;  // std dev = 4.478, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
%   | | | else return 0.013715729681744863;  // std dev = 6.620, 228.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=71 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), location(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03886812454706925;  // std dev = 7.830, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '6.359', 'seconds']
Parameter learned model CLL:-0.358034 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), interaction(C, D)', 'false': 'location(E, A)', 'false,false': 'interaction(A, F), phenotype(B, F)', 'false,false,false': 'interaction(A, G), function(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.34, 210, 104]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(C, E), phenotype(B, E)', 'true,false,false': 'interaction(A, A)', 'false': 'location(F, A), phenotype(B, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), phenotype(B, H)', 'false,false,false': 'location(I, A), enzyme(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.225, 6, 2], 'true,false,false,false': [3.854, 39, 24], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.248, 59, 26], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.0, 117, 52]}]
['proteinclass(A, B)', {'': 'location(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'location(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [8.311, 206, 104]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.667, 64, 33], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.831, 136, 71]}]
['proteinclass(A, B)', {'': 'location(C, A)', 'false': 'complex(D, A)', 'false,false': 'location(A, E)', 'false,false,true': 'enzyme(E, F), location(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.898, 175, 97], 'false,false,false': [0.471, 14, 7]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'phenotype(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.047, 76, 0], 'false,false,true,false': [7.509, 123, 104], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'location(F, A), phenotype(B, F)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.057, 92, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [7.24, 114, 97], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.828, 7, 7]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(D, A), phenotype(B, D)', 'false,false': 'location(E, A), enzyme(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.655, 198, 97], 'false,false,false,false': [2.056, 13, 7]}]
['proteinclass(A, B)', {'': 'location(C, A), phenotype(B, C)', 'false': 'location(D, A), enzyme(D, E)', 'false,false': 'interaction(A, F), complex(G, F)', 'false,false,false': 'enzyme(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.478, 63, 33], 'false,false,false,false': [6.62, 157, 71]}]
['proteinclass(A, B)', {'': 'location(A, C), location(C, D)', 'false': 'function(E, A), location(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.83, 197, 104]}]
{'': [nan, 0.22151000040569802], 'false': [nan, 0.22151000040569802], 'false,false': [nan, 0.22151000040569652], 'false,false,false': [nan, 0.22151000040569652]}
{'': [0.23209680618924722, 0.21278442556885024], 'true': [nan, 0.23209680618924722], 'true,false': [nan, 0.23209680618924722], 'true,false,false': [0.18749999999999997, 0.23582766439909209], 'false': [nan, 0.21278442556885035], 'false,false': [0.21231833910034514, 0.21301775147928906], 'false,false,false': [nan, 0.21301775147928906], 'false,false,true': [nan, 0.21231833910034517]}
{'': [nan, 0.22279325319791854], 'false': [nan, 0.2227932531979184], 'false,false': [nan, 0.2227932531979184]}
{'': [nan, 0.22512520049925513], 'false': [0.22454834843018862, 0.22539060852273535], 'false,false': [nan, 0.22539060852273535], 'false,false,false': [nan, 0.22539060852273535]}
{'': [nan, 0.2288580638464611], 'false': [nan, 0.2288580638464611], 'false,false': [0.22932954100809844, 0.2221943251095016], 'false,false,true': [nan, 0.22932954100809844]}
{'': [nan, 0.2253043689495184], 'false': [nan, 0.22530436894951814], 'false,false': [0.22530436894951814, nan], 'false,false,true': [2.8531880046753077e-05, 0.24838039486720523]}
{'': [nan, 0.20532888888784168], 'false': [0.20251515432548417, 0.23869202481346688], 'false,false': [nan, 0.23869202481346688], 'false,false,false': [nan, 0.23869202481346688], 'false,true': [3.47957384090518e-05, 0.24839412700693198], 'false,true,false': [nan, 0.24839412700693198]}
{'': [nan, 0.19946743320461433], 'false': [nan, 0.19946743320461433], 'false,false': [nan, 0.19946743320461433], 'false,false,false': [0.19866273052209885, 0.2113321890331052]}
{'': [nan, 0.19719931500993915], 'false': [nan, 0.19719931500993915], 'false,false': [nan, 0.1971993150099388], 'false,false,false': [0.20885175628802746, 0.1921979435752902]}
{'': [nan, 0.20370769489562426], 'false': [nan, 0.20370769489562437], 'false,false': [nan, 0.20370769489562437]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- phenotype(B, H).;true;true
6;;proteinclass(A, B) :- location(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 25.293
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), interaction(A, D) )
%   | then if ( interaction(D, A), complex(D, E) )
%   | | then return 0.1438632208137981;  // std dev = 0.452, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | else if ( phenotype(D, F), interaction(D, D) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.21431331866115597;  // std dev = 4.091, 73.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=26 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( location(G, C) )
%   | | | then return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0.14673953912635732;  // std dev = 0.453, 149.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=43 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( phenotype(I, J) )
%   | | then return 0.4295775065280837;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), phenotype(E, F) )
%   | then if ( interaction(E, C), phenotype(C, G) )
%   | | then if ( enzyme(A, H), interaction(C, C) )
%   | | | then return 0.03612326744174115;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.1488621155219048;  // std dev = 2.735, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | else return 0.5031486143761836;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.08078528704270123;  // std dev = 0.433, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   else if ( interaction(I, A), interaction(J, I) )
%   | then if ( enzyme(I, K), interaction(J, J) )
%   | | then if ( complex(J, L) )
%   | | | then return 0.5543909382310414;  // std dev = 1.194, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.3013607028832021;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( interaction(I, J), enzyme(A, M) )
%   | | | then return 0.26600785943364397;  // std dev = 3.007, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.1840248063679176;  // std dev = 5.286, 123.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
%   | else return 0.13094169779954867;  // std dev = 0.457, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, D) )
%   | | then return 0.006716709075017208;  // std dev = 0.415, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( complex(D, F) )
%   | | | then return 0.14367047496895277;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.26551046939108036;  // std dev = 1.631, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( complex(G, I), phenotype(G, J) )
%   | | | then return 0.5503301628334557;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2343940634622596;  // std dev = 1.863, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( complex(K, C), interaction(K, K) )
%   | | | then return 0.27280675512926245;  // std dev = 1.789, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.16580742439229376;  // std dev = 2.879, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   else if ( phenotype(A, L), interaction(M, A) )
%   | then return 0.1318696975629138;  // std dev = 0.471, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   | else return 0.06717061844161133;  // std dev = 0.442, 105.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=28 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( complex(A, D), complex(C, D) )
%   | then if ( interaction(C, A) )
%   | | then if ( interaction(C, E), enzyme(E, F) )
%   | | | then return 0.012566359585096502;  // std dev = 1.710, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.16840116252990475;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.32354385030327715;  // std dev = 1.792, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.08397754414494946;  // std dev = 1.828, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else return 0.02428967923723652;  // std dev = 0.431, 138.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=34 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), interaction(I, I) )
%   | | then if ( enzyme(A, J), complex(I, K) )
%   | | | then return 0.20314231694214205;  // std dev = 2.725, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.1021404691729254;  // std dev = 4.670, 101.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=32 */
%   | | else return 0.2972839072058755;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.007582347639988163;  // std dev = 0.425, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C), phenotype(A, D) )
%   then if ( interaction(A, A) )
%   | then return -0.03277476076140079;  // std dev = 0.455, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then if ( phenotype(E, F) )
%   | | | then return 0.07681215896175345;  // std dev = 2.456, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.24607195890524736;  // std dev = 1.986, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.057718348812307474;  // std dev = 0.456, 145.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=43 */
%   else if ( enzyme(A, G), location(A, H) )
%   | then if ( interaction(I, A), complex(I, J) )
%   | | then return 0.02552972793119595;  // std dev = 0.451, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else return 0.10560457375176277;  // std dev = 0.472, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then return 0.031196542027806706;  // std dev = 0.454, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.21073892609411882;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.13373589420796758;  // std dev = 3.500, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(B, C) )
%   then return -0.2580768733499182;  // std dev = 0.278, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( complex(E, G), phenotype(A, F) )
%   | | | then return 0.1391918034797521;  // std dev = 3.007, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return 0.011888439766425256;  // std dev = 1.689, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( complex(A, H), complex(E, I) )
%   | | | then return 0.39385612961154826;  // std dev = 1.857, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.17650301415948955;  // std dev = 4.171, 71.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=31 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(J, L), interaction(L, A) )
%   | | | then return 0.5054140519184199;  // std dev = 1.508, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.25452375229683477;  // std dev = 1.894, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.16350352968441434;  // std dev = 3.401, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | | else return 0.39622678560763147;  // std dev = 1.570, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.21095007328140442;  // std dev = 0.243, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( complex(A, E) )
%   | | then if ( enzyme(A, F), interaction(A, G) )
%   | | | then return 0.3281410271575932;  // std dev = 1.385, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.070642874211083;  // std dev = 4.607, 86.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=35 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.1176847559632345;  // std dev = 3.794, 59.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=25 */
%   | | | else return 0.20891490539039093;  // std dev = 4.059, 65.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=32 */
%   else if ( interaction(J, A), enzyme(J, K) )
%   | then return 0.10134740079558713;  // std dev = 0.465, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( complex(A, L) )
%   | | then return -0.11193717314857396;  // std dev = 0.859, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.046837650685189414;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.07855610328331507;  // std dev = 1.231, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.021753884622783985;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.15318288139582625;  // std dev = 1.979, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.14171874258831438;  // std dev = 1.288, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.4505412489549944;  // std dev = 0.833, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(C, I) )
%   | | then if ( complex(C, J), enzyme(A, K) )
%   | | | then return -0.03890246531954063;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.05556390235589035;  // std dev = 2.008, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else return 0.16355763166775025;  // std dev = 1.173, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( complex(A, L), enzyme(A, M) )
%   | then return -0.0394170536878661;  // std dev = 0.429, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | else return 0.043125448157430524;  // std dev = 0.449, 195.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=66 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( enzyme(C, D), interaction(C, A) )
%   | then return 0.1140064284525776;  // std dev = 0.423, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return -0.027322519803736105;  // std dev = 0.416, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   else if ( location(A, E), phenotype(A, F) )
%   | then if ( interaction(G, A), phenotype(G, F) )
%   | | then if ( complex(A, H), location(G, E) )
%   | | | then return 0.07289125136418954;  // std dev = 1.891, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.16966437253986041;  // std dev = 2.503, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.053283618550500636;  // std dev = 1.798, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.09053282119257562;  // std dev = 3.300, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return -0.06300871358277968;  // std dev = 0.401, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.04814855894342475;  // std dev = 4.066, 77.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=28 */
%   | | | else return -0.01048343819546893;  // std dev = 1.829, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, A), complex(A, E) )
%   | then if ( complex(C, F), phenotype(A, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.02682863393150703;  // std dev = 1.360, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3143558221701946;  // std dev = 1.378, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.12549950430477824;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.0712505154607468;  // std dev = 1.716, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( phenotype(A, D) )
%   | | then if ( enzyme(C, H), interaction(I, A) )
%   | | | then return 0.03688075906150868;  // std dev = 1.864, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.08576555366180538;  // std dev = 2.458, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.2781803998721261;  // std dev = 1.044, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.08766933827750231;  // std dev = 2.363, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   else return -0.01111572374402856;  // std dev = 0.435, 197.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=60 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '1.131', 'seconds']
Refined model CLL: -0.375078


******************************************
Best model found
******************************************
Results 

CLL : -0.370633 

AUC ROC : 0.662805 

AUC PR : 0.011062 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 25.293 

Total Inference Time : 14.216795444488525 

Total revision time: 59.26053481864929
Best scored revision CLL: -0.358034


Results 

CLL : -0.370633 

AUC ROC : 0.662805 

AUC PR : 0.011062 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 59.37910800743103 

Total Inference Time : 14.216795444488525 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.33
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), interaction(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20929397326745144;  // std dev = 7.726, 262.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(C, E), phenotype(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, A) )
%   | | | then return 0.25928684146571845;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.19182652400540057;  // std dev = 2.882, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   else if ( location(F, A), phenotype(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), phenotype(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1672538744327508;  // std dev = 4.819, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
%   | | else if ( location(I, A), enzyme(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17238207956095625;  // std dev = 5.195, 120.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15301029025007074;  // std dev = 7.742, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.07747968261330068;  // std dev = 5.163, 127.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=38 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15482650203473675;  // std dev = 5.809, 144.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=54 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E) )
%   | | then if ( enzyme(E, F), location(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10358924832095165;  // std dev = 7.628, 257.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=89 */
%   | | else return 0.2625717877762637;  // std dev = 0.500, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( phenotype(B, H) )
%   | | | then return -0.26437868092537936;  // std dev = 0.071, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0.13585461016674935;  // std dev = 7.432, 231.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=92 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.21603355646481792;  // std dev = 0.048, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08635497378355117;  // std dev = 7.453, 237.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=89 */
%   | else if ( location(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06944880486652616;  // std dev = 1.347, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), enzyme(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.039815392189506596;  // std dev = 7.547, 271.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=89 */
%   | | | else return -0.07811570648606975;  // std dev = 1.495, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), enzyme(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.05718239524056505;  // std dev = 4.865, 110.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=38 */
%   | | | else return 0.01571780902049849;  // std dev = 5.914, 171.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=54 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), location(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.029113506410544943;  // std dev = 7.598, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '19.018', 'seconds']
Parameter learned model CLL:-0.355412 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), interaction(C, D)', 'false': 'location(E, A)', 'false,false': 'interaction(A, F), phenotype(B, F)', 'false,false,false': 'interaction(A, G), function(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.726, 170, 92]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(C, E), phenotype(B, E)', 'true,false,false': 'interaction(A, A)', 'false': 'location(F, A), phenotype(B, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), phenotype(B, H)', 'false,false,false': 'location(I, A), enzyme(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.309, 4, 3], 'true,false,false,false': [2.882, 23, 13], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.819, 69, 35], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.195, 79, 41]}]
['proteinclass(A, B)', {'': 'location(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'location(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.742, 172, 92]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [5.163, 89, 38], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.809, 90, 54]}]
['proteinclass(A, B)', {'': 'location(C, A)', 'false': 'complex(D, A)', 'false,false': 'location(A, E)', 'false,false,true': 'enzyme(E, F), location(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.628, 168, 89], 'false,false,false': [0.5, 3, 3]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'phenotype(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.071, 50, 0], 'false,false,true,false': [7.432, 139, 92], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'location(F, A), phenotype(B, F)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.048, 51, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [7.453, 148, 89], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.347, 5, 3]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(D, A), phenotype(B, D)', 'false,false': 'location(E, A), enzyme(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.547, 182, 89], 'false,false,false,false': [1.495, 9, 3]}]
['proteinclass(A, B)', {'': 'location(C, A), phenotype(B, C)', 'false': 'location(D, A), enzyme(D, E)', 'false,false': 'interaction(A, F), complex(G, F)', 'false,false,false': 'enzyme(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.865, 72, 38], 'false,false,false,false': [5.914, 117, 54]}]
['proteinclass(A, B)', {'': 'location(A, C), location(C, D)', 'false': 'function(E, A), location(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.598, 193, 92]}]
{'': [nan, 0.22784220033797703], 'false': [nan, 0.22784220033797703], 'false,false': [nan, 0.22784220033797642], 'false,false,false': [nan, 0.22784220033797642]}
{'': [0.23363980530016196, 0.22417091836734768], 'true': [nan, 0.23363980530016196], 'true,false': [nan, 0.23363980530016196], 'true,false,false': [0.24489795918367355, 0.2307098765432095], 'false': [nan, 0.22417091836734485], 'false,false': [0.2232803254437878, 0.22493055555555622], 'false,false,false': [nan, 0.22493055555555622], 'false,false,true': [nan, 0.22328032544378767]}
{'': [nan, 0.22702631879377888], 'false': [nan, 0.22702631879377835], 'false,false': [nan, 0.22702631879377835]}
{'': [nan, 0.2243872285557963], 'false': [0.20991444604064297, 0.23434779739815964], 'false,false': [nan, 0.23434779739815964], 'false,false,false': [nan, 0.23434779739815964]}
{'': [nan, 0.22748376091213104], 'false': [nan, 0.22748376091213104], 'false,false': [0.22638043293053609, 0.25004415445885164], 'false,false,true': [nan, 0.22638043293053609]}
{'': [nan, 0.22003021635366088], 'false': [nan, 0.2200302163536609], 'false,false': [0.2200302163536609, nan], 'false,false,true': [0.00010209617496094836, 0.23913073629964493]}
{'': [nan, 0.20678454463964124], 'false': [0.20619359691899844, 0.2267523281446499], 'false,false': [nan, 0.2267523281446499], 'false,false,false': [nan, 0.2267523281446499], 'false,true': [4.498877946706459e-05, 0.23436239819688726], 'false,true,false': [nan, 0.23436239819688726]}
{'': [nan, 0.20972187932223274], 'false': [nan, 0.20972187932223274], 'false,false': [nan, 0.20972187932223274], 'false,false,false': [0.21017171108178662, 0.18624516237973252]}
{'': [nan, 0.2091153933109054], 'false': [nan, 0.2091153933109054], 'false,false': [nan, 0.20911539331090598], 'false,false,false': [0.21515744003627765, 0.2045556563373591]}
{'': [nan, 0.2025644686936111], 'false': [nan, 0.20256446869361114], 'false,false': [nan, 0.20256446869361114]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- phenotype(B, H).;true;true
6;;proteinclass(A, B) :- location(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 21.696
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, E) )
%   | then if ( enzyme(A, F), phenotype(E, D) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.17522210583121967;  // std dev = 0.465, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | else if ( enzyme(A, G), complex(A, H) )
%   | | then if ( interaction(I, C), enzyme(I, J) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.30259337954395665;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.3364098046647297;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   else if ( interaction(A, L), complex(L, M) )
%   | then if ( interaction(L, A) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.23314893509951135;  // std dev = 0.484, 64.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=24 */
%   | else return 0.16151972161636627;  // std dev = 0.460, 89.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=27 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.10029028033697072;  // std dev = 0.450, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( phenotype(A, E) )
%   | | then if ( enzyme(A, F), interaction(C, A) )
%   | | | then return 0.45382605456385056;  // std dev = 0.842, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16468276878953558;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.8300404948804877;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16399884033136147;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( interaction(I, A), interaction(A, I) )
%   | then return 0.05243174849302202;  // std dev = 0.442, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.2871947179513051;  // std dev = 1.951, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.13023243080028962;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else return 0.1310597167062033;  // std dev = 0.463, 175.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(C, E), interaction(F, A) )
%   | then if ( interaction(C, C), enzyme(A, D) )
%   | | then return 0.4579145573988537;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, F), phenotype(C, G) )
%   | | | then return -0.042426991154930614;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.16665966859075415;  // std dev = 1.749, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else return -0.04167461569991241;  // std dev = 0.431, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( complex(H, J), phenotype(I, K) )
%   | | then return 0.15136996221050125;  // std dev = 0.472, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | else return 0.06965583305388369;  // std dev = 0.442, 123.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=33 */
%   | else if ( interaction(L, A), enzyme(L, M) )
%   | | then return 0.018801392772832153;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.14847209954369953;  // std dev = 2.563, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.22727381800583707;  // std dev = 3.124, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), interaction(D, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( enzyme(D, G), enzyme(A, G) )
%   | | | then return -0.04750070657239116;  // std dev = 1.535, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.18631625414215028;  // std dev = 4.513, 85.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=34 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.23321295130668881;  // std dev = 2.465, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.07259715167573294;  // std dev = 4.886, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(J, J) )
%   | | | then return 0.1896381265201425;  // std dev = 1.102, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.020036537991567564;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.43429234832180635;  // std dev = 1.159, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, A) )
%   | then return 0.050662364408094025;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.03448871960426742;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( interaction(A, E), enzyme(E, F) )
%   | then return -0.04188489997462513;  // std dev = 0.444, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then return 0.12936877101694227;  // std dev = 0.488, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | else return -0.024621152747908694;  // std dev = 0.421, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( interaction(A, I), enzyme(I, J) )
%   | then if ( interaction(K, A) )
%   | | then if ( interaction(K, I) )
%   | | | then return 0.13270779293731136;  // std dev = 1.080, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.04368197770894993;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.36517386383910494;  // std dev = 1.057, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( phenotype(A, L) )
%   | | then return 0.0490555438897881;  // std dev = 0.458, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.05333144540425177;  // std dev = 2.391, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.1146157483954682;  // std dev = 4.324, 81.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=29 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(B, C) )
%   then return -0.26113188873748167;  // std dev = 0.236, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( location(E, F) )
%   | | then if ( enzyme(A, G), phenotype(E, H) )
%   | | | then return 0.23731325771974743;  // std dev = 2.780, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | | else return 0.10995526551555386;  // std dev = 4.904, 102.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=38 */
%   | | else return 0.5257671025403617;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, I), interaction(A, J) )
%   | | then if ( phenotype(A, K), enzyme(J, I) )
%   | | | then return 0.06105959512082134;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.21449306393708126;  // std dev = 2.076, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.33173803387946976;  // std dev = 2.527, 27.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | | | else return 0.18351403519462198;  // std dev = 2.198, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.21496287453753307;  // std dev = 0.265, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then if ( enzyme(E, G), phenotype(E, H) )
%   | | | then return 0.15017704334944018;  // std dev = 2.290, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.018671535485384784;  // std dev = 4.555, 93.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=31 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return -0.05134818329821829;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.16810858490056702;  // std dev = 5.022, 101.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=47 */
%   else if ( interaction(A, A) )
%   | then return 0.01576172749836476;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.058313164964545125;  // std dev = 0.373, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( complex(A, E), phenotype(C, F) )
%   | then if ( location(A, D), phenotype(A, G) )
%   | | then if ( interaction(H, C), interaction(I, H) )
%   | | | then return 0.1622944190697056;  // std dev = 1.691, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.019109097790703713;  // std dev = 1.623, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.37203153416581153;  // std dev = 1.121, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.18965948921338985;  // std dev = 1.008, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(C, K), enzyme(A, L) )
%   | | then if ( interaction(A, M), complex(C, N) )
%   | | | then return 0.0466295296556288;  // std dev = 0.759, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.10716264647436179;  // std dev = 1.660, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( phenotype(A, P), interaction(Q, C) )
%   | | | then return 0.12737951172602183;  // std dev = 2.348, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.0297492047050511;  // std dev = 4.719, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   else return -0.03769508517603821;  // std dev = 0.430, 94.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=25 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( location(C, E) )
%   | then if ( enzyme(C, F), complex(A, G) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.06751219301495137;  // std dev = 1.131, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.22507779837319078;  // std dev = 1.263, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(A, H), complex(C, I) )
%   | | | then return 0.09069896520520282;  // std dev = 2.405, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return -0.0544425370993273;  // std dev = 3.687, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | else return 0.3822146595667447;  // std dev = 0.903, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, J), enzyme(J, K) )
%   | then return -0.08216461520367795;  // std dev = 0.427, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | else if ( interaction(L, A), enzyme(L, M) )
%   | | then return 0.33345681265340804;  // std dev = 1.029, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.06084943130599806;  // std dev = 2.769, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return 0.12538808314312788;  // std dev = 3.933, 69.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=28 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( enzyme(A, E), complex(A, F) )
%   | then return -0.08149993642718231;  // std dev = 0.438, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | else if ( interaction(A, A), complex(D, G) )
%   | | then return 0.35303334222416033;  // std dev = 0.824, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 5.570883181904551E-5;  // std dev = 0.442, 124.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=38 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then if ( complex(H, J) )
%   | | then if ( interaction(H, H), enzyme(A, I) )
%   | | | then return 0.2533958647008444;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.6690395117405602;  // std dev = 0.173, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.03178054506218231;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( location(A, M), location(K, M) )
%   | | | then return 0.4036679203592448;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.11401661614886269;  // std dev = 1.668, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else return -0.027812589076627627;  // std dev = 0.433, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '58.914', 'seconds']
Refined model CLL: -0.395925


******************************************
Best model found
******************************************
Results 

CLL : -0.341432 

AUC ROC : 0.682894 

AUC PR : 0.011121 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 21.696 

Total Inference Time : 9.989994525909424 

Total revision time: 46.24418208694458
Best scored revision CLL: -0.355412


Results 

CLL : -0.341432 

AUC ROC : 0.682894 

AUC PR : 0.011121 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 46.36275527572632 

Total Inference Time : 9.989994525909424 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.106
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), interaction(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19148226843284563;  // std dev = 7.572, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(C, E), phenotype(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, A) )
%   | | | then return 0.08320549123154834;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.16653882456488242;  // std dev = 3.742, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   else if ( location(F, A), phenotype(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), phenotype(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15138730941336712;  // std dev = 4.369, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | | else if ( location(I, A), enzyme(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14513209673613628;  // std dev = 4.837, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12858006228600793;  // std dev = 7.662, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(C, D), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then return 0.08844719314451374;  // std dev = 4.436, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
%   | else if ( function(E, F), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12601768210621356;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E) )
%   | | then if ( enzyme(E, F), location(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12298720838824824;  // std dev = 7.336, 236.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=83 */
%   | | else return 0.04440738372337878;  // std dev = 0.445, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, G) )
%   | | then if ( phenotype(B, H) )
%   | | | then return -0.25012499109737385;  // std dev = 0.045, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0.1754325400292674;  // std dev = 7.025, 202.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=86 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( phenotype(B, E) )
%   | | then return -0.20637469176702464;  // std dev = 0.029, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( phenotype(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1679991974113089;  // std dev = 6.736, 183.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=83 */
%   | else if ( location(F, A), phenotype(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.330842440622162;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), phenotype(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), enzyme(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.08240572934191331;  // std dev = 6.871, 228.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=83 */
%   | | | else return 0.05732165598832513;  // std dev = 1.325, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(C, A), phenotype(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), enzyme(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), complex(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.08667793523533403;  // std dev = 3.950, 72.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=28 */
%   | | | else return 0.01846866215893225;  // std dev = 5.975, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), location(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( function(E, A), location(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.017306565466080285;  // std dev = 7.420, 301.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '18.707', 'seconds']
Parameter learned model CLL:-0.34582 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), interaction(C, D)', 'false': 'location(E, A)', 'false,false': 'interaction(A, F), phenotype(B, F)', 'false,false,false': 'interaction(A, G), function(H, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.572, 172, 86]}]
['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(C, D)', 'true': 'phenotype(B, C)', 'true,false': 'location(C, E), phenotype(B, E)', 'true,false,false': 'interaction(A, A)', 'false': 'location(F, A), phenotype(B, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), phenotype(B, H)', 'false,false,false': 'location(I, A), enzyme(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.5, 9, 3], 'true,false,false,false': [3.742, 42, 21], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.369, 60, 28], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.837, 75, 34]}]
['proteinclass(A, B)', {'': 'location(A, C), complex(D, C)', 'false': 'complex(E, A)', 'false,false': 'location(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.662, 185, 86]}]
['proteinclass(A, B)', {'': 'enzyme(C, D), phenotype(B, C)', 'false': 'enzyme(A, D)', 'false,false': 'function(E, F), phenotype(B, F)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [4.436, 66, 28], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.209, 115, 58]}]
['proteinclass(A, B)', {'': 'location(C, A)', 'false': 'complex(D, A)', 'false,false': 'location(A, E)', 'false,false,true': 'enzyme(E, F), location(E, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [7.336, 153, 83], 'false,false,false': [0.445, 8, 3]}]
['proteinclass(A, B)', {'': 'location(A, C), enzyme(C, D)', 'false': 'complex(E, A)', 'false,false': 'complex(F, G)', 'false,false,true': 'phenotype(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.045, 56, 0], 'false,false,true,false': [7.025, 116, 86], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(A, D)', 'false,true': 'phenotype(B, E)', 'false,true,false': 'phenotype(B, D)', 'false,false': 'location(F, A), phenotype(B, F)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.029, 57, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.736, 100, 83], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.095, 2, 3]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'location(D, A), phenotype(B, D)', 'false,false': 'location(E, A), enzyme(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.871, 145, 83], 'false,false,false,false': [1.325, 5, 3]}]
['proteinclass(A, B)', {'': 'location(C, A), phenotype(B, C)', 'false': 'location(D, A), enzyme(D, E)', 'false,false': 'interaction(A, F), complex(G, F)', 'false,false,false': 'enzyme(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.95, 44, 28], 'false,false,false,false': [5.975, 121, 58]}]
['proteinclass(A, B)', {'': 'location(A, C), location(C, D)', 'false': 'function(E, A), location(F, A)', 'false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.42, 215, 86]}]
{'': [nan, 0.22222222222222304], 'false': [nan, 0.22222222222222304], 'false,false': [nan, 0.22222222222222313], 'false,false,false': [nan, 0.22222222222222313]}
{'': [0.21760000000000077, 0.21567162256177763], 'true': [nan, 0.21760000000000077], 'true,false': [nan, 0.21760000000000077], 'true,false,false': [0.18750000000000014, 0.22222222222222174], 'false': [nan, 0.21567162256177597], 'false,false': [0.21694214876033133, 0.21462839828297356], 'false,false,true': [nan, 0.21694214876033116], 'false,false,false': [nan, 0.21462839828297356]}
{'': [nan, 0.2166559121259627], 'false': [nan, 0.2166559121259626], 'false,false': [nan, 0.2166559121259626]}
{'': [nan, 0.21841234459273928], 'false': [0.20936286969137852, 0.2228324530751564], 'false,false': [nan, 0.2228324530751564], 'false,false,false': [nan, 0.2228324530751564]}
{'': [nan, 0.2269727793820087], 'false': [nan, 0.2269727793820087], 'false,false': [0.22803500249385691, 0.19828346709794004], 'false,false,true': [nan, 0.22803500249385691]}
{'': [nan, 0.22204463722477735], 'false': [nan, 0.22204463722477732], 'false,false': [0.22204463722477732, nan], 'false,false,true': [3.686142175698562e-05, 0.2442829911905503]}
{'': [nan, 0.2161982786223622], 'false': [0.2144168366441887, 0.23961938764010488], 'false,false': [nan, 0.23961938764010488], 'false,false,false': [nan, 0.23961938764010488], 'false,true': [1.430656209492323e-05, 0.2479109479580019], 'false,true,false': [nan, 0.2479109479580019]}
{'': [nan, 0.20752637120451486], 'false': [nan, 0.20752637120451486], 'false,false': [nan, 0.20752637120451486], 'false,false,false': [0.20708240918045479, 0.21957140733171268]}
{'': [nan, 0.2053313480683213], 'false': [nan, 0.2053313480683213], 'false,false': [nan, 0.20533134806832054], 'false,false,false': [0.21670286988886608, 0.19942274502963137]}
{'': [nan, 0.18290793068960554], 'false': [nan, 0.18290793068960556], 'false,false': [nan, 0.18290793068960556]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;proteinclass(A, B) :- phenotype(B, H).;true;true
6;;proteinclass(A, B) :- location(A, D).;true;true
6;true;phenotype(B, E).;true;true


Refining candidate
***************************
Model training time 8.916
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( phenotype(A, G), complex(F, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.28672036367094084;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.12130682983635432;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   else if ( interaction(I, A), enzyme(I, J) )
%   | then return 0.10259337954395681;  // std dev = 0.430, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | else if ( interaction(A, K), phenotype(A, L) )
%   | | then if ( interaction(K, K), complex(K, M) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.12345505754849195;  // std dev = 3.090, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return 0.1402002171507944;  // std dev = 2.810, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.22719655414713064;  // std dev = 4.423, 84.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=31 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, C), phenotype(C, E) )
%   | then return 0.07818289446190116;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( complex(A, F), phenotype(C, G) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.15733426649434096;  // std dev = 1.396, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.6295028007968777;  // std dev = 0.884, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(C, H), interaction(C, I) )
%   | | | then return 0.06203771095120708;  // std dev = 1.228, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.22384158042506197;  // std dev = 2.920, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   else if ( phenotype(A, J), complex(A, K) )
%   | then return 0.057113175486572694;  // std dev = 0.423, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | else if ( interaction(A, L), interaction(L, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.15773881082917962;  // std dev = 1.416, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.5924464823271188;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.1528140792790043;  // std dev = 0.466, 147.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=47 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( enzyme(C, E), enzyme(A, F) )
%   | then if ( enzyme(G, E), interaction(G, G) )
%   | | then return 0.0450999237833496;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(H, A), phenotype(C, I) )
%   | | | then return 0.4850252159045845;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.25573732153190054;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.03755704876978285;  // std dev = 0.438, 98.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=25 */
%   else if ( complex(A, J) )
%   | then return 0.09333899632162525;  // std dev = 0.449, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( enzyme(L, M), phenotype(K, N) )
%   | | | then return 0.12446998619715748;  // std dev = 2.189, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.38354698944248744;  // std dev = 3.206, 42.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=24 */
%   | | else if ( interaction(A, P), phenotype(P, Q) )
%   | | | then return 0.47725357037822436;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10176724771199787;  // std dev = 2.658, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( enzyme(D, E), complex(D, C) )
%   | then return -0.11711414519311424;  // std dev = 0.388, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | else if ( enzyme(D, F) )
%   | | then return 0.17697332394000884;  // std dev = 0.488, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else return 0.04710677680260485;  // std dev = 0.433, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   else if ( enzyme(A, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.051614879364665266;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.31703322479031154;  // std dev = 1.642, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.16493837341496995;  // std dev = 3.008, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then return 0.017336663804239053;  // std dev = 0.436, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.22949434066977337;  // std dev = 2.632, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.07747516876241398;  // std dev = 4.027, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return -0.018691690601755625;  // std dev = 0.444, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | else if ( interaction(A, F), phenotype(F, G) )
%   | | then return 0.17759869493347386;  // std dev = 0.495, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | else return 0.07416900998518687;  // std dev = 0.465, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( enzyme(H, J), phenotype(H, K) )
%   | | then return 0.003965080169591271;  // std dev = 0.420, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( enzyme(I, L), phenotype(I, M) )
%   | | | then return 0.2441520692014911;  // std dev = 1.929, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.10912514161475217;  // std dev = 2.857, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | else if ( interaction(N, A), enzyme(N, P) )
%   | | then return 0.046627857355469045;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, Q), complex(Q, R) )
%   | | | then return 0.1977144367933541;  // std dev = 1.847, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.5515884766491825;  // std dev = 0.872, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(B, C) )
%   then return -0.2827909674878184;  // std dev = 0.336, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(D, F), phenotype(A, G) )
%   | | then if ( interaction(A, H), phenotype(A, E) )
%   | | | then return 0.1259419452751492;  // std dev = 1.488, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.509556359921252;  // std dev = 1.209, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( location(A, I), location(D, I) )
%   | | | then return 0.15750017892940635;  // std dev = 4.317, 75.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=33 */
%   | | | else return 0.26381592509544455;  // std dev = 2.570, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, L), interaction(L, M) )
%   | | | then return 0.11887276292893212;  // std dev = 2.723, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.3601268133212666;  // std dev = 1.374, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(A, N), complex(A, P) )
%   | | | then return 0.1483003341969819;  // std dev = 1.083, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.043284698083948005;  // std dev = 2.486, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( phenotype(B, D) )
%   | then return -0.21346631449897813;  // std dev = 0.247, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.22719210247973942;  // std dev = 2.974, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | | else return 0.1169552576216561;  // std dev = 2.443, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else if ( complex(A, H), interaction(I, A) )
%   | | | then return 0.14408568741756755;  // std dev = 2.458, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.060042254108940714;  // std dev = 5.149, 112.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=43 */
%   else if ( interaction(J, A) )
%   | then if ( interaction(J, J) )
%   | | then return 0.01329668735153553;  // std dev = 0.813, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.13539182888506532;  // std dev = 0.743, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.25976280722063627;  // std dev = 0.830, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then if ( enzyme(A, G), complex(E, H) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.18929229062246777;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.44136654844113044;  // std dev = 0.702, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(E, I) )
%   | | | then return 0.07862530257940392;  // std dev = 2.343, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.23986627553037057;  // std dev = 1.162, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( complex(J, C), interaction(J, J) )
%   | | | then return -0.02653248359280354;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.18963361169424123;  // std dev = 1.564, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return -0.10914724426198431;  // std dev = 0.385, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   else if ( interaction(L, A), complex(L, M) )
%   | then return 0.020198649729086332;  // std dev = 0.445, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | else return -0.029124992627306133;  // std dev = 0.433, 140.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=39 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), complex(C, F) )
%   | then return -0.019241531805932955;  // std dev = 0.434, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
%   | else if ( complex(A, G), interaction(H, C) )
%   | | then return 0.29211174181535826;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.1125964886579432;  // std dev = 1.881, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.012173435650258514;  // std dev = 3.559, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   else if ( interaction(A, J), location(A, K) )
%   | then if ( interaction(J, L), location(L, K) )
%   | | then if ( phenotype(A, M), interaction(L, L) )
%   | | | then return 0.19142443554394514;  // std dev = 1.518, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.05820295525081638;  // std dev = 2.614, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | else if ( phenotype(J, N) )
%   | | | then return -0.11231976898211982;  // std dev = 1.692, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.11647599955978824;  // std dev = 1.051, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.3907673701301648;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then return -0.037527838047063666;  // std dev = 0.436, 90.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( phenotype(E, H) )
%   | | | then return 0.10546505741693944;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.30260529658341995;  // std dev = 1.386, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( enzyme(E, I) )
%   | | | then return 0.11541056108167203;  // std dev = 1.618, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.06135630568120931;  // std dev = 1.132, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(A, J), complex(A, K) )
%   | | then if ( location(A, L) )
%   | | | then return 0.27599343924317765;  // std dev = 1.314, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.03367930248967997;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return -0.08924365941659532;  // std dev = 2.800, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return 0.032548549045574554;  // std dev = 3.850, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.602', 'seconds']
Refined model CLL: -0.380417


******************************************
Best model found
******************************************
Results 

CLL : -0.360402 

AUC ROC : 0.664475 

AUC PR : 0.010307 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.916 

Total Inference Time : 3.525435447692871 

Total revision time: 25.488033220291136
Best scored revision CLL: -0.34582


Results 

CLL : -0.360402 

AUC ROC : 0.664475 

AUC PR : 0.010307 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 25.606606409072874 

Total Inference Time : 3.525435447692871 

