Starting experiment 27_nell_sports_imdb 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.078
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1745331158904739;  // std dev = 0.465, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.2064086277971776;  // std dev = 5.936, 151.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.14458467764875457;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1250658711579929;  // std dev = 0.475, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.07758453385985355;  // std dev = 0.466, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.05605458950998216;  // std dev = 0.463, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.05414755186510919;  // std dev = 6.171, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.056779578707756795;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.024792567814415634;  // std dev = 0.464, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.668', 'seconds']
Parameter learned model CLL:-0.361612 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.465, 121, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [5.936, 95, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.474, 109, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.475, 107, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.466, 120, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.463, 124, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.171, 119, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.11, 112, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.464, 123, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.2162852309361937, nan]}
{'': [0.2333230998640425, nan], 'true': [0.2333230998640425, nan]}
{'': [0.22420569329660173, nan]}
{'': [0.22552598893447223, nan]}
{'': [0.2169421487603306, nan], 'true': [0.2169421487603306, nan]}
{'': [0.21432098765431992, nan]}
{'': [0.21760000000000096, nan]}
{'': [0.22222222222222177, nan]}
{'': [0.2149745638400814, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 3.548
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048763;  // std dev = 8.69e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839136;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 9.06e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.09269127618926083;  // std dev = 7.45e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else if ( female(A) )
%   | | | then return 0.3059474498976706;  // std dev = 0.406, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.3207118471601495;  // std dev = 2.11e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25653007297154246;  // std dev = 0.011, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12235439229466145;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08630709780225167;  // std dev = 0.130, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.0786953434509942;  // std dev = 1.83e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( female(A) )
%   | | then return 0.21198862773568314;  // std dev = 3.33e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.18886772753467823;  // std dev = 0.079, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07317559720170747;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1793679646644371;  // std dev = 0.005, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1307909709707274;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06836515181210044;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15446487530988792;  // std dev = 0.004, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11691412576194404;  // std dev = 0.000997, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06413728812457072;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( female(A) )
%   | then return 0.12624489846051493;  // std dev = 0.045, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.13582067429686218;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.491', 'seconds']
Refined model CLL: -0.065888


******************************************
Best model found
******************************************
Results 

CLL : -0.074626 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.548 

Total Inference Time : 2.365088701248169 

Total revision time: 8.156543565750123
Best scored revision CLL: -0.065888


Results 

CLL : -0.074626 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.193546606063844 

Total Inference Time : 2.365088701248169 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.083
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.17508882580989615;  // std dev = 0.465, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.1506887188656486;  // std dev = 6.302, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.19032170686308636;  // std dev = 0.485, 154.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09327346631778552;  // std dev = 0.463, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.08729522331909323;  // std dev = 0.467, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06956523097906589;  // std dev = 0.466, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08704311234562338;  // std dev = 6.143, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0852356878800995;  // std dev = 6.070, 159.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0523690425385977;  // std dev = 0.477, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.452, 202.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.637', 'seconds']
Parameter learned model CLL:-0.381764 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.465, 125, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [6.302, 126, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.485, 96, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.463, 129, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.467, 123, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.466, 124, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.143, 108, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.07, 101, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.477, 108, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.21648899638687363, nan]}
{'': [0.2158553875236278, nan], 'true': [0.2158553875236278, nan]}
{'': [0.23477820880418293, nan]}
{'': [0.21396093682976566, nan]}
{'': [0.2177589206678651, nan], 'true': [0.2177589206678651, nan]}
{'': [0.21712353580485633, nan]}
{'': [0.22731891421106196, nan]}
{'': [0.2317155175823752, nan]}
{'': [0.22731891421106012, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 4.188
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.8105298874804645;  // std dev = 0.213, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.832507909458486;  // std dev = 0.158, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return -0.14185106490048763;  // std dev = 7.88e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7261241329559044;  // std dev = 0.016, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.2734411479578512;  // std dev = 0.007, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.56191552496196;  // std dev = 0.020, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.22300676991343693;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11231637819360621;  // std dev = 7.88e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.42239227266481477;  // std dev = 0.019, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1878654507447181;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.3240235484575296;  // std dev = 0.017, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.15865656716852972;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0926912761892609;  // std dev = 6.14e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2574321020335656;  // std dev = 0.015, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.13982959653162247;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.08518475138839683;  // std dev = 5.27e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.21135362247557293;  // std dev = 0.013, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12372947993527228;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.0787767547310916;  // std dev = 6.05e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07324622576333716;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1782666687122642;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1113388356644938;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06842697784420264;  // std dev = 5.96e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15363132291891843;  // std dev = 0.010, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1005780401645158;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13469972133925806;  // std dev = 0.009, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09107774883748217;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '52.610', 'seconds']
Refined model CLL: -0.064682


******************************************
Best model found
******************************************
Results 

CLL : -0.066791 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.188 

Total Inference Time : 3.701176881790161 

Total revision time: 10.269414993286134
Best scored revision CLL: -0.064682


Results 

CLL : -0.066791 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.306418033599854 

Total Inference Time : 3.701176881790161 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.568
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.17600607795665069;  // std dev = 0.466, 560.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.16681634014872357;  // std dev = 10.909, 537.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1507952701709453;  // std dev = 0.474, 524.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.12339108800967823;  // std dev = 0.473, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.1309882875272891;  // std dev = 0.482, 487.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06538519759188276;  // std dev = 0.468, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.060508897231751936;  // std dev = 10.904, 536.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06599049190414709;  // std dev = 10.759, 509.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.026911245554897798;  // std dev = 0.468, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 554.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.270', 'seconds']
Parameter learned model CLL:-0.400781 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.466, 382, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [10.909, 359, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.474, 346, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.473, 351, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.482, 309, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.468, 371, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.904, 358, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.759, 331, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.468, 371, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.21682397959183966, nan]}
{'': [0.2215980219787795, nan], 'true': [0.2215980219787795, nan]}
{'': [0.22430219684167763, nan]}
{'': [0.22326249548851315, nan]}
{'': [0.2319105785326108, nan], 'true': [0.2319105785326108, nan]}
{'': [0.21910345353863922, nan]}
{'': [0.2218060815326384, nan]}
{'': [0.22741150451017395, nan]}
{'': [0.21910345353864583, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 13.361
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 5.77e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.14185106490048824;  // std dev = 0.000, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.1254446385283916;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.1254446385283918;  // std dev = 0.000, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360624;  // std dev = 5.87e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return -0.11231637819360678;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783617;  // std dev = 5.05e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.10159632948783644;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.09269127618926086;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else return -0.09269127618926043;  // std dev = 1.66e-07, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839685;  // std dev = 3.41e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.08518475138839678;  // std dev = 8.43e-08, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109169;  // std dev = 3.33e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.07877675473109147;  // std dev = 5.77e-08, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333707;  // std dev = 2.11e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.07324622576333681;  // std dev = 1.07e-07, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0684269778442027;  // std dev = 3.07e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202618;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return -0.064191840082026;  // std dev = 1.08e-07, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.754', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 13.361 

Total Inference Time : 6.421340227127075 

Total revision time: 22.62767825508118
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 22.6646812953949 

Total Inference Time : 6.421340227127075 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.877
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.19649479976116643;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.19250771523185317;  // std dev = 5.367, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1952275733616071;  // std dev = 0.488, 115.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.10713917138343387;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.05592780503478154;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09013080835292551;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.05451884505624169;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.043483991817544566;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.039435320634560074;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.166', 'seconds']
Parameter learned model CLL:-0.382555 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.473, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [5.367, 80, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.488, 70, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.472, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.46, 103, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.477, 84, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.487, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.487, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.472, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.2238679405280127, nan]}
{'': [0.23039999999999938, nan], 'true': [0.23039999999999938, nan]}
{'': [0.23818525519848838, nan]}
{'': [0.22304522165292984, nan]}
{'': [0.21160518626734723, nan], 'true': [0.21160518626734723, nan]}
{'': [0.22714981070849066, nan]}
{'': [0.22139922145328744, nan]}
{'': [0.2213992214532865, nan]}
{'': [0.2230452216529287, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 2.298
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.43e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12711218636990385;  // std dev = 0.154, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.1121502287745353;  // std dev = 5.77e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10310619519104959;  // std dev = 0.133, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09391922688500595;  // std dev = 0.124, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.08485497694291685;  // std dev = 3.94e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.19372802283455617;  // std dev = 0.066, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return -0.0784935096148107;  // std dev = 1.05e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17887066640612576;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09403305803145981;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07300045581548822;  // std dev = 2.24e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1540885673344117;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08632233501270735;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06821180767383064;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06400196134186045;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else return 0.13036055170017793;  // std dev = 0.214, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '15.893', 'seconds']
Refined model CLL: -0.065974


******************************************
Best model found
******************************************
Results 

CLL : -0.067799 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.298 

Total Inference Time : 1.4857275485992432 

Total revision time: 5.625001001358032
Best scored revision CLL: -0.065974


Results 

CLL : -0.067799 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.662004041671753 

Total Inference Time : 1.4857275485992432 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.868
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.18903128804068875;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.1693667314264473;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.11275665877800142;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.10979850949418354;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.08879717104169835;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08921829988832;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.051548955063829234;  // std dev = 5.562, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.10088649826908604;  // std dev = 5.316, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.023285642859143873;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.955', 'seconds']
Parameter learned model CLL:-0.369707 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.471, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [5.467, 89, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.46, 103, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.466, 96, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.465, 97, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.471, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.562, 99, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.316, 76, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.464, 98, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.2213992214532882, nan]}
{'': [0.22304522165293117, nan], 'true': [0.22304522165293117, nan]}
{'': [0.21160518626734787, nan]}
{'': [0.21729289271163363, nan]}
{'': [0.2164749057726654, nan], 'true': [0.2164749057726654, nan]}
{'': [0.22222222222222252, nan]}
{'': [0.214843750000001, nan]}
{'': [0.23359060173485455, nan]}
{'': [0.21565846740671846, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 1.938
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.30e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.12544463852839152;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 7.45e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( female(A) )
%   | | then return 0.5019518115510934;  // std dev = 0.181, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.1015963294878362;  // std dev = 5.27e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.42418082192032036;  // std dev = 0.044, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.18065305191124995;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.09269127618926103;  // std dev = 3.16e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.3252508712446578;  // std dev = 0.039, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1508473886911871;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839679;  // std dev = 3.16e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( female(A) )
%   | | then return 0.24687093018593687;  // std dev = 0.079, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.2361050019949637;  // std dev = 0.079, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.0787767547310917;  // std dev = 2.79e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2147381916861851;  // std dev = 0.024, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.16403645940146183;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.18074319919140616;  // std dev = 0.021, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14224177199620258;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06842697784420265;  // std dev = 4.28e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( female(A) )
%   | | then return 0.13567386609075624;  // std dev = 0.077, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.15264472826035333;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13754195338304362;  // std dev = 0.024, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1430174657253715;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.230', 'seconds']
Refined model CLL: -0.069832


******************************************
Best model found
******************************************
Results 

CLL : -0.090784 

AUC ROC : 0.993093 

AUC PR : 0.649298 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.938 

Total Inference Time : 1.054149866104126 

Total revision time: 4.812160497665405
Best scored revision CLL: -0.069832


Results 

CLL : -0.090784 

AUC ROC : 0.993093 

AUC PR : 0.649298 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.849163537979126 

Total Inference Time : 1.054149866104126 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.461
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.2290098622518314;  // std dev = 0.483, 151.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.12899998323984727;  // std dev = 6.256, 186.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12514682988180365;  // std dev = 0.465, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10504021937116031;  // std dev = 0.465, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.10002959694942504;  // std dev = 0.470, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09392301497739679;  // std dev = 0.474, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0958440127855852;  // std dev = 5.981, 155.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.042936143594933314;  // std dev = 6.137, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.054455621990125304;  // std dev = 0.476, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 183.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.706', 'seconds']
Parameter learned model CLL:-0.377261 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.483, 95, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [6.256, 130, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.465, 121, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.465, 121, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [0.47, 114, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.474, 108, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.981, 99, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.137, 115, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.476, 105, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.23332309986404123, nan]}
{'': [0.21042895132385414, nan], 'true': [0.21042895132385414, nan]}
{'': [0.21628523093619362, nan]}
{'': [0.21628523093619315, nan]}
{'': [0.22089965397924055, nan], 'true': [0.22089965397924055, nan]}
{'': [0.2248661511005356, nan]}
{'': [0.23075962539021905, nan]}
{'': [0.2202387059266082, nan]}
{'': [0.22684310018903472, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
1;true;movie(E, F).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
4;true;movie(E, F).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 29.115
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.16e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839133;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 9.06e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1015963294878364;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( female(A) )
%   | | then return 0.41751358415831;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.3840226219875909;  // std dev = 0.128, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.09269127618926093;  // std dev = 5.48e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32451270300900104;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.14376844127822633;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839682;  // std dev = 5.67e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.25776765880708535;  // std dev = 0.024, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1257184147822791;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2115915669419089;  // std dev = 0.021, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11338496963326003;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109158;  // std dev = 6.14e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else return -0.18535712773732976;  // std dev = 0.477, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17844173646721623;  // std dev = 0.018, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10273499856095851;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333707;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else if ( female(B) )
%   | | | then return -0.0663324281299266;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.19870710073962045;  // std dev = 0.426, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06787574739683848;  // std dev = 0.025, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15376449092208816;  // std dev = 0.016, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09364405839416785;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13480393761073156;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08624477095050585;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06369365223628304;  // std dev = 0.028, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17', 'minutes', 'and', '11.618', 'seconds']
Refined model CLL: -0.06436


******************************************
Best model found
******************************************
Results 

CLL : -0.072585 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 29.115 

Total Inference Time : 27.694901704788208 

Total revision time: 60.038820529937745
Best scored revision CLL: -0.06436


Results 

CLL : -0.072585 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 60.101689363479615 

Total Inference Time : 27.694901704788208 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.519
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1821712814682287;  // std dev = 0.468, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.18389305620267488;  // std dev = 6.143, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12619511564122995;  // std dev = 0.466, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11297751859550391;  // std dev = 0.469, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.07941980248192404;  // std dev = 0.463, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09033321364025758;  // std dev = 0.473, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08534492990787144;  // std dev = 6.143, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.048577455135049366;  // std dev = 6.236, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0386600241251874;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.548', 'seconds']
Parameter learned model CLL:-0.369342 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.468, 121, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [6.143, 108, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.466, 124, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.469, 120, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [0.463, 128, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.473, 114, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.143, 108, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.236, 118, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.47, 118, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.2190318654224278, nan]}
{'': [0.22731891421106243, nan], 'true': [0.22731891421106243, nan]}
{'': [0.21712353580485644, nan]}
{'': [0.21966923368261568, nan]}
{'': [0.2145912822291576, nan], 'true': [0.2145912822291576, nan]}
{'': [0.2234991887506783, nan]}
{'': [0.22731891421105957, nan]}
{'': [0.22094524793388368, nan]}
{'': [0.22094524793388318, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
1;true;movie(E, F).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
4;true;movie(E, F).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 20.325
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048763;  // std dev = 8.43e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1254446385283913;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.11231637819360625;  // std dev = 7.74e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.1015963294878363;  // std dev = 2.58e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.09269127618926092;  // std dev = 5.77e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.08518475138839682;  // std dev = 5.37e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.07877675473109157;  // std dev = 6.50e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333709;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06842697784420264;  // std dev = 5.27e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12', 'minutes', 'and', '7.051', 'seconds']
Refined model CLL: -0.063482


******************************************
Best model found
******************************************
Results 

CLL : -0.064768 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 20.325 

Total Inference Time : 19.571495532989502 

Total revision time: 43.162674087524415
Best scored revision CLL: -0.063482


Results 

CLL : -0.064768 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 43.225542921066285 

Total Inference Time : 19.571495532989502 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 2.816
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.20244293896797985;  // std dev = 0.475, 517.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.17398436603558656;  // std dev = 10.820, 520.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12432365164108798;  // std dev = 0.466, 559.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11656358972800605;  // std dev = 0.471, 538.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.07179864234049274;  // std dev = 0.461, 581.000 (wgt'ed) examples reached here.  /* #neg=403 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09394507529219359;  // std dev = 0.474, 521.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06038378479244438;  // std dev = 10.953, 546.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.048439446623487814;  // std dev = 10.953, 546.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03625135998432982;  // std dev = 0.468, 550.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 538.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.462', 'seconds']
Parameter learned model CLL:-0.391074 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.475, 339, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [10.82, 342, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.466, 381, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 360, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [0.461, 403, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.474, 343, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.953, 368, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.953, 368, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.468, 372, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.22575564276869173, nan]}
{'': [0.22513313609467378, nan], 'true': [0.22513313609467378, nan]}
{'': [0.217030795472364, nan]}
{'': [0.2213899752629133, nan]}
{'': [0.2125067765529751, nan], 'true': [0.2125067765529751, nan]}
{'': [0.224925490253867, nan]}
{'': [0.2197265493968782, nan]}
{'': [0.2197265493968797, nan]}
{'': [0.2188958677685989, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
1;true;movie(E, F).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
4;true;movie(E, F).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 73.439
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.14185106490048816;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.12544463852839183;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360626;  // std dev = 4.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.11231637819360683;  // std dev = 0.000, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783619;  // std dev = 4.59e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.10159632948783648;  // std dev = 0.000, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.09269127618926107;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.09269127618926065;  // std dev = 0.000, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.08518475138839678;  // std dev = 8.43e-08, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109172;  // std dev = 2.69e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.07877675473109147;  // std dev = 5.16e-08, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.07324622576333681;  // std dev = 1.07e-07, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 2.89e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return -0.06842697784420271;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202619;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else return -0.06419184008202608;  // std dev = 8.69e-08, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27', 'minutes', 'and', '9.958', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 73.439 

Total Inference Time : 45.033167362213135 

Total revision time: 123.08669293403625
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 123.14956176757812 

Total Inference Time : 45.033167362213135 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.227
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.20971143509951237;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.15439770544634343;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14616338549343696;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13293826704821848;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.0754341222427096;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08509619952688709;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03644484427453914;  // std dev = 5.588, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.051551724748038145;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06148165661473936;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.509', 'seconds']
Parameter learned model CLL:-0.376513 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.477, 83, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [5.516, 94, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.473, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.477, 84, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [0.464, 98, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.473, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.588, 102, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.497, 92, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.477, 84, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.22796630859375092, nan]}
{'': [0.21893276745509935, nan], 'true': [0.21893276745509935, nan]}
{'': [0.22386794052801165, nan]}
{'': [0.2271498107084911, nan]}
{'': [0.21565846740672007, nan], 'true': [0.21565846740672007, nan]}
{'': [0.22386794052801215, nan]}
{'': [0.21241149521033015, nan]}
{'': [0.22057648249773537, nan]}
{'': [0.2271498107084915, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
1;true;movie(E, F).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
4;true;movie(E, F).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 19.165
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.14185106490048768;  // std dev = 6.50e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 7.30e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783615;  // std dev = 5.87e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.2977450069740712;  // std dev = 0.568, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | else return -0.09269127618926108;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25848879320571094;  // std dev = 0.013, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12095012096119392;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.08685432444177887;  // std dev = 0.148, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07865567735971601;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2120985092515286;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10470169302457281;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17881193697079678;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09893492066860476;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07513914290540852;  // std dev = 0.183, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15404426101635063;  // std dev = 0.009, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09077635465719051;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06819172485065385;  // std dev = 0.002, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13502163231076858;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08397019108314614;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06398217788440713;  // std dev = 0.002, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '32', 'minutes', 'and', '5.600', 'seconds']
Refined model CLL: -0.06516


******************************************
Best model found
******************************************
Results 

CLL : -0.066977 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 19.165 

Total Inference Time : 14.049536228179932 

Total revision time: 35.726186077117916
Best scored revision CLL: -0.06516


Results 

CLL : -0.066977 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 35.789054910659786 

Total Inference Time : 14.049536228179932 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.25
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16636811318170394;  // std dev = 0.462, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.18550377290295583;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13113875314399992;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14868037852160432;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.10118508498032915;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05873489063265051;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06603809024907828;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.048041440163275016;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04311202928119726;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.465', 'seconds']
Parameter learned model CLL:-0.373609 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.462, 101, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [5.413, 84, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 95, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.48, 80, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [0.473, 88, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.464, 98, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.477, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.497, 92, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.21322011634453095, nan]}
{'': [0.22714981070849116, nan], 'true': [0.22714981070849116, nan]}
{'': [0.21811224489795877, nan]}
{'': [0.23039999999999966, nan]}
{'': [0.22386794052801315, nan], 'true': [0.22386794052801315, nan]}
{'': [0.21565846740671832, nan]}
{'': [0.2222222222222232, nan]}
{'': [0.22057648249773476, nan]}
{'': [0.2222222222222233, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
1;true;movie(E, F).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
4;true;movie(E, F).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 16.048
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.45e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.6842684934301482;  // std dev = 0.827, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.7194734122109542;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.12735923049457243;  // std dev = 0.154, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11212563231671362;  // std dev = 6.14e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5598005837456406;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.225475638957652;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1014390942975067;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4208208179387581;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.18854342392807422;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.09255960887689627;  // std dev = 3.49e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.3229614422956922;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1601088371701563;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08507299520097371;  // std dev = 3.94e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( female(A) )
%   | | then return 0.2599938976327258;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.22031509754169187;  // std dev = 0.109, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.21352525311896445;  // std dev = 0.003, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.17197181822682092;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07871955859886391;  // std dev = 0.003, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1798549398153545;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1484677746498261;  // std dev = 0.000462, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.07316033515176647;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else return -0.17710832567953222;  // std dev = 0.465, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06789025142983497;  // std dev = 0.016, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15483322486522938;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.13055391931715787;  // std dev = 0.000476, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06363449301916536;  // std dev = 0.016, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1356360720632165;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11672383816776014;  // std dev = 0.000399, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '19', 'minutes', 'and', '45.002', 'seconds']
Refined model CLL: -0.066569


******************************************
Best model found
******************************************
Results 

CLL : -0.075585 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 16.048 

Total Inference Time : 10.298390865325928 

Total revision time: 28.88857259559631
Best scored revision CLL: -0.066569


Results 

CLL : -0.075585 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 28.951441429138182 

Total Inference Time : 10.298390865325928 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.073
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.21483683318868552;  // std dev = 0.479, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.11564879160821667;  // std dev = 6.325, 196.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.18140461486518497;  // std dev = 0.482, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.11323883936934073;  // std dev = 0.470, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.08772375074838362;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09140241680201035;  // std dev = 0.475, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.036232053203983185;  // std dev = 6.234, 183.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.024099497798773586;  // std dev = 6.256, 186.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07486011334578001;  // std dev = 0.479, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.645', 'seconds']
Parameter learned model CLL:-0.367042 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.479, 101, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [6.325, 140, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.482, 96, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.47, 114, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.468, 117, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.475, 107, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.234, 127, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.256, 130, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.479, 101, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.22946164144590064, nan]}
{'': [0.20408163265306137, nan], 'true': [0.20408163265306137, nan]}
{'': [0.23268698060941737, nan]}
{'': [0.2208996539792397, nan]}
{'': [0.21891810618463833, nan], 'true': [0.21891810618463833, nan]}
{'': [0.22552598893447262, nan]}
{'': [0.21236824031771678, nan]}
{'': [0.21042895132385306, nan]}
{'': [0.22946164144589956, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 3.021
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.43e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.12544463852839133;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 7.45e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.39897394438523337;  // std dev = 0.096, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.40020992037010517;  // std dev = 0.093, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return -0.10159632948783631;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.09269127618926079;  // std dev = 7.74e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32462383836920533;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.1442243549548758;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839682;  // std dev = 5.05e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2578398244093116;  // std dev = 0.000884, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1274119106837731;  // std dev = 0.000112, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2116402970009182;  // std dev = 0.000771, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11385394940084305;  // std dev = 0.000108, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07872178712611855;  // std dev = 0.007, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07324995711874056;  // std dev = 5.27e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17847605702524807;  // std dev = 0.000678, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10286220004808933;  // std dev = 9.88e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06843024395714102;  // std dev = 2.58e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1537895898185102;  // std dev = 0.000601, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.0937939434546985;  // std dev = 8.58e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419472176823156;  // std dev = 2.98e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( female(A) )
%   | then return 0.1270063898498386;  // std dev = 0.041, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1273898574772802;  // std dev = 0.040, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.050', 'seconds']
Refined model CLL: -0.065975


******************************************
Best model found
******************************************
Results 

CLL : -0.082191 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 3.021 

Total Inference Time : 1.5914671421051025 

Total revision time: 6.916022438049316
Best scored revision CLL: -0.065975


Results 

CLL : -0.082191 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 7.002461093902587 

Total Inference Time : 1.5914671421051025 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.082
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.2422548953644142;  // std dev = 0.486, 151.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.15936288536562054;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.11544055919672105;  // std dev = 0.464, 185.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.12412656657459144;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.0780572352008121;  // std dev = 0.465, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06885959641357846;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.05033136849381102;  // std dev = 6.294, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.03359584138899695;  // std dev = 6.325, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.033603365406778905;  // std dev = 0.465, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 161.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.496', 'seconds']
Parameter learned model CLL:-0.357687 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.486, 93, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [6.218, 116, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.464, 127, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.474, 112, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.465, 125, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.467, 122, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.294, 125, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.325, 129, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.465, 125, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.2365685715538793, nan]}
{'': [0.22222222222222232, nan], 'true': [0.22222222222222232, nan]}
{'': [0.21522279035792705, nan]}
{'': [0.2247750865051893, nan]}
{'': [0.21648899638687366, nan], 'true': [0.21648899638687366, nan]}
{'': [0.21839506172839676, nan]}
{'': [0.2164889963868719, nan]}
{'': [0.21396093682976447, nan]}
{'': [0.21648899638687522, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 3.206
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.12544463852839108;  // std dev = 7.60e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else if ( female(A) )
%   | | | then return 0.7194734122109542;  // std dev = 5.96e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.6772275096739875;  // std dev = 1.165, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360624;  // std dev = 6.99e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5621842170692446;  // std dev = 0.038, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.22384864919461314;  // std dev = 0.009, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783624;  // std dev = 4.71e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4226030656056371;  // std dev = 0.037, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.18575911927278477;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.09269127618926098;  // std dev = 4.47e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32417293287167354;  // std dev = 0.033, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.15928527642510926;  // std dev = 0.007, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.0851847513883968;  // std dev = 6.14e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.25753763422712705;  // std dev = 0.029, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.13951892012554187;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07877675473109158;  // std dev = 6.14e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21143028487907092;  // std dev = 0.025, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12359654611919084;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17832421933500708;  // std dev = 0.022, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10942459773094426;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07360091568458813;  // std dev = 0.036, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06840437169282802;  // std dev = 6.23e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else if ( female(A) )
%   | | then return 0.15009263369208842;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.14282327367145256;  // std dev = 0.056, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06417189428244809;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1357174077313823;  // std dev = 0.021, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11328293249607177;  // std dev = 0.005, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.155', 'seconds']
Refined model CLL: -0.067861


******************************************
Best model found
******************************************
Results 

CLL : -0.088117 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 3.206 

Total Inference Time : 1.5855770111083984 

Total revision time: 7.060677183151245
Best scored revision CLL: -0.067861


Results 

CLL : -0.088117 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 7.147115839004517 

Total Inference Time : 1.5855770111083984 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.622
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.19023848733831383;  // std dev = 0.471, 536.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.15878960751360385;  // std dev = 10.958, 547.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.14599702267024114;  // std dev = 0.472, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.11267838300665164;  // std dev = 0.469, 546.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.07888534005706159;  // std dev = 0.463, 571.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09310867816508822;  // std dev = 0.474, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06899023916177291;  // std dev = 10.888, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.04798450850542847;  // std dev = 10.948, 545.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.05197704081365776;  // std dev = 0.474, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.254', 'seconds']
Parameter learned model CLL:-0.396187 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.471, 358, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [10.958, 369, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.472, 352, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.469, 368, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.463, 393, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.474, 345, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.888, 355, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.948, 367, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.474, 345, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.22180608153263837, nan]}
{'': [0.21951879789712822, nan], 'true': [0.21951879789712822, nan]}
{'': [0.2230544677821302, nan]}
{'': [0.2197265493968757, nan]}
{'': [0.2145558380694445, nan], 'true': [0.2145558380694445, nan]}
{'': [0.22451001539141854, nan]}
{'': [0.22243029473157744, nan]}
{'': [0.21993434896052275, nan]}
{'': [0.22451001539141904, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 12.588
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( actor(A), director(B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048768;  // std dev = 5.37e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return -0.14185106490048793;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.12544463852839113;  // std dev = 6.83e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return -0.12544463852839194;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360626;  // std dev = 4.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.11231637819360688;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1015963294878362;  // std dev = 4.59e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.10159632948783645;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.09269127618926107;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return -0.09269127618926074;  // std dev = 8.16e-08, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.08518475138839678;  // std dev = 8.43e-08, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( actor(A), director(B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return -0.07877675473109143;  // std dev = 4.71e-08, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333707;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.0732462257633368;  // std dev = 1.05e-07, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 2.89e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.06419184008202625;  // std dev = 0.000, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '32.403', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 12.588 

Total Inference Time : 5.89671778678894 

Total revision time: 21.36759825706482
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 21.45403691291809 

Total Inference Time : 5.89671778678894 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.92
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.2240025936360978;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.19748936496189495;  // std dev = 5.329, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1370971429316293;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1167185969921482;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.06307723061187984;  // std dev = 0.462, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06214800261803099;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.028967030019487694;  // std dev = 5.620, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.029273208849249298;  // std dev = 5.596, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08520106314576958;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.156', 'seconds']
Parameter learned model CLL:-0.373962 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.482, 78, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [5.329, 77, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.473, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.474, 87, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.462, 101, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.466, 96, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.62, 106, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.596, 103, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.482, 78, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.23200475907198184, nan]}
{'': [0.23280032249395458, nan], 'true': [0.23280032249395458, nan]}
{'': [0.22386794052801257, nan]}
{'': [0.2246900826446293, nan]}
{'': [0.2132201163445296, nan], 'true': [0.2132201163445296, nan]}
{'': [0.21729289271163424, nan]}
{'': [0.2092013508179455, nan]}
{'': [0.21160518626734853, nan]}
{'': [0.23200475907198154, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 2.229
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.88e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.12713031188992027;  // std dev = 0.154, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11214842398288541;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462844;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.5182729470274015;  // std dev = 0.153, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.42434957409724305;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1759056566427562;  // std dev = 0.005, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.10224848724756734;  // std dev = 0.073, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.09250895161320809;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.3253554830570241;  // std dev = 0.023, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1522021094159051;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08502999243948416;  // std dev = 2.11e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2583415807337102;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.13380083980135488;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.21199595280347422;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11854962947931678;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.07970268843567227;  // std dev = 0.066, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1787376321912746;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10769413193148694;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07775519112826634;  // std dev = 0.387, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1539884954840702;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09755536484825772;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.06796515134608602;  // std dev = 2.98e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else return -0.21820393346469732;  // std dev = 0.411, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06323843527947436;  // std dev = 0.018, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13497850731113195;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08889349213796732;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '36.586', 'seconds']
Refined model CLL: -0.065388


******************************************
Best model found
******************************************
Results 

CLL : -0.069619 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.229 

Total Inference Time : 1.3372654914855957 

Total revision time: 5.435402702331543
Best scored revision CLL: -0.065388


Results 

CLL : -0.069619 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.5218413581848145 

Total Inference Time : 1.3372654914855957 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.803
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.19649479976116643;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.23791312063725872;  // std dev = 5.173, 111.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08698963476360509;  // std dev = 0.454, 155.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.12836563386442856;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.10839137808464132;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07008827956200224;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06129049266380035;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.05400473737446802;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.03774181460380824;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.458, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.214', 'seconds']
Parameter learned model CLL:-0.382746 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.473, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [5.173, 66, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.454, 110, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.476, 85, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.477, 84, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.471, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.467, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.446, 87, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.472, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.2238679405280127, nan]}
{'': [0.24105186267348377, nan], 'true': [0.24105186267348377, nan]}
{'': [0.20603537981269426, nan]}
{'': [0.22633136094674655, nan]}
{'': [0.22714981070849066, nan], 'true': [0.22714981070849066, nan]}
{'': [0.22139922145328794, nan]}
{'': [0.22304522165292898, nan]}
{'': [0.22469008264462934, nan]}
{'': [0.2230452216529283, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 2.378
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048766;  // std dev = 6.99e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.12544463852839152;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 7.60e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.3958840044230538;  // std dev = 0.104, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.39494358791282524;  // std dev = 0.106, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return -0.10159632948783617;  // std dev = 5.77e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.3058885709001824;  // std dev = 0.459, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.32564861804583595;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.09713155618919314;  // std dev = 0.341, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.26039031817192543;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.18861727845023332;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08543864167493802;  // std dev = 0.047, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.21343768647852399;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.15889715334923443;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.078907501348207;  // std dev = 0.044, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07291937816609372;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17979135190131185;  // std dev = 0.009, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1403025660003516;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15478540579356073;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12431510674487052;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.07145168626648835;  // std dev = 0.343, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.12639591162857847;  // std dev = 0.049, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.12375853634925507;  // std dev = 0.050, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.06410528389020607;  // std dev = 0.031, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '36.941', 'seconds']
Refined model CLL: -0.066817


******************************************
Best model found
******************************************
Results 

CLL : -0.073786 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.378 

Total Inference Time : 1.274266004562378 

Total revision time: 5.443753248214722
Best scored revision CLL: -0.066817


Results 

CLL : -0.073786 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.530191904067993 

Total Inference Time : 1.274266004562378 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.031
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.19754287449345298;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.1367093482913504;  // std dev = 6.242, 184.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.15808922092399239;  // std dev = 0.476, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.13712108385723645;  // std dev = 0.477, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.08142397083688534;  // std dev = 0.466, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.04295159352852992;  // std dev = 0.456, 190.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07337053270223255;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.05125692369226748;  // std dev = 6.146, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.042840037728550516;  // std dev = 0.469, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.682', 'seconds']
Parameter learned model CLL:-0.361987 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.474, 109, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [6.242, 128, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.476, 106, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.477, 104, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.466, 120, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.456, 134, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.11, 112, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.146, 116, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.469, 115, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.22420569329660267, nan]}
{'': [0.2117202268430974, nan], 'true': [0.2117202268430974, nan]}
{'': [0.22618503276939209, nan]}
{'': [0.2275000000000007, nan]}
{'': [0.2169421487603288, nan], 'true': [0.2169421487603288, nan]}
{'': [0.20786703601107867, nan]}
{'': [0.22222222222222143, nan]}
{'': [0.21957815035154118, nan]}
{'': [0.22023870592661068, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 3.154
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.94e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.12544463852839133;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5315206219270028;  // std dev = 0.124, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.11231637819360622;  // std dev = 7.30e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783637;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4203150077150414;  // std dev = 0.022, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.17948546566504398;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.09269127618926089;  // std dev = 6.32e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( female(A) )
%   | | | then return 0.3253136819123846;  // std dev = 2.98e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.2894120588252594;  // std dev = 0.651, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.0851847513883968;  // std dev = 6.99e-08, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2595094517383392;  // std dev = 0.009, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.19903269365682003;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.0787767547310916;  // std dev = 5.67e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21281710151697059;  // std dev = 0.008, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.16868223602406363;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17933735960545835;  // std dev = 0.007, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14617984090506292;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07330978471405288;  // std dev = 0.007, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1544417776452854;  // std dev = 0.006, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12859066167043662;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.0684805801229958;  // std dev = 0.007, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641848024201315;  // std dev = 3.25e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( female(A) )
%   | then return 0.12565652272824157;  // std dev = 0.046, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.127657259817025;  // std dev = 0.045, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.718', 'seconds']
Refined model CLL: -0.066943


******************************************
Best model found
******************************************
Results 

CLL : -0.082906 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 3.154 

Total Inference Time : 1.620676040649414 

Total revision time: 7.053892431259155
Best scored revision CLL: -0.066943


Results 

CLL : -0.082906 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 7.086829004287719 

Total Inference Time : 1.620676040649414 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.033
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.21617362645753826;  // std dev = 0.479, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.11546002907294141;  // std dev = 6.437, 203.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.15398542202735746;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.11967389077093533;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.09901042731217903;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09264817706696411;  // std dev = 0.475, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06308608490908531;  // std dev = 6.227, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0524253840238032;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.057779216203160906;  // std dev = 0.477, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.549', 'seconds']
Parameter learned model CLL:-0.375795 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.479, 104, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [6.437, 145, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.474, 112, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.471, 117, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.471, 117, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.475, 111, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.227, 117, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.218, 116, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.477, 108, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.22984301173601604, nan]}
{'': [0.20408163265306214, nan], 'true': [0.20408163265306214, nan]}
{'': [0.22477508650519132, nan]}
{'': [0.2215836734693854, nan]}
{'': [0.2215836734693857, nan], 'true': [0.2215836734693857, nan]}
{'': [0.22541227548055168, nan]}
{'': [0.2215836734693871, nan]}
{'': [0.2222222222222236, nan]}
{'': [0.22731891421105996, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 3.774
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.94e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.1254446385283913;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11231637819360625;  // std dev = 7.30e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783633;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.30004169099267897;  // std dev = 0.570, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | | else return -0.09269127618926094;  // std dev = 5.37e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25775912377774535;  // std dev = 0.014, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12267371860026566;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.08518475138839682;  // std dev = 5.48e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return -0.22263386402997265;  // std dev = 0.476, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839691;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07877675473109155;  // std dev = 6.91e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21158413398951587;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.109301043217487;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07307022233006727;  // std dev = 0.012, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1784354014471604;  // std dev = 0.011, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09888524384870255;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1537591024637969;  // std dev = 0.010, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09013179873302964;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.06843819798716223;  // std dev = 1.67e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return -0.17995795064704573;  // std dev = 0.415, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06843819798716233;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0635741039634624;  // std dev = 0.029, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13479932995403127;  // std dev = 0.009, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08300824623392009;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.849', 'seconds']
Refined model CLL: -0.064875


******************************************
Best model found
******************************************
Results 

CLL : -0.07246 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 3.774 

Total Inference Time : 2.515981674194336 

Total revision time: 8.550650197982788
Best scored revision CLL: -0.064875


Results 

CLL : -0.07246 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 8.583586771011353 

Total Inference Time : 2.515981674194336 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.624
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.19914510368188337;  // std dev = 0.474, 522.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.1673544072777481;  // std dev = 10.878, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.13285748118467489;  // std dev = 0.469, 547.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1335994303219761;  // std dev = 0.476, 512.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.09532049317270949;  // std dev = 0.471, 535.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09190301820393984;  // std dev = 0.476, 513.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.05916206431355006;  // std dev = 10.904, 536.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06215471664379368;  // std dev = 10.781, 513.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.03381898884658105;  // std dev = 0.471, 537.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.398', 'seconds']
Parameter learned model CLL:-0.402963 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.474, 344, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [10.878, 353, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.469, 369, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.476, 334, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.471, 357, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.476, 335, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.904, 358, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.781, 335, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.471, 359, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.22471778159451875, nan]}
{'': [0.22284642202290675, nan], 'true': [0.22284642202290675, nan]}
{'': [0.219518797897126, nan]}
{'': [0.22679138183593783, nan]}
{'': [0.22201414970739758, nan], 'true': [0.22201414970739758, nan]}
{'': [0.22658443813671322, nan]}
{'': [0.22180608153263684, nan]}
{'': [0.22658443813670817, nan]}
{'': [0.22159802197878142, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 12.123
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.66e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.14185106490048807;  // std dev = 0.000, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.1254446385283919;  // std dev = 0.000, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360629;  // std dev = 4.08e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.11231637819360682;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783619;  // std dev = 4.83e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.10159632948783644;  // std dev = 0.000, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.09269127618926107;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.09269127618926064;  // std dev = 2.98e-08, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( director(B), actor(A) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839678;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.08518475138839678;  // std dev = 1.05e-07, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109176;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.07877675473109144;  // std dev = 4.94e-08, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.07324622576333688;  // std dev = 1.11e-07, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 2.47e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.06842697784420278;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.06419184008202623;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.138', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 12.123 

Total Inference Time : 5.968818664550781 

Total revision time: 20.99515821647644
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 21.028094789505005 

Total Inference Time : 5.968818664550781 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.846
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.18423589162125137;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.15563869125569338;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.17445508206510904;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08953589589678607;  // std dev = 0.461, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.07818123562622598;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.11651208518670596;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07485327571087134;  // std dev = 5.435, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.01243515186154425;  // std dev = 5.628, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07099203667771135;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.147', 'seconds']
Parameter learned model CLL:-0.377516 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.469, 93, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [5.526, 95, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.481, 79, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.461, 102, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.463, 100, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.481, 79, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.435, 86, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.628, 107, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.479, 81, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.21975425330812953, nan]}
{'': [0.21811224489796052, nan], 'true': [0.21811224489796052, nan]}
{'': [0.231204474505723, nan]}
{'': [0.21241149521032957, nan]}
{'': [0.21403091557669526, nan], 'true': [0.21403091557669526, nan]}
{'': [0.2312044745057235, nan]}
{'': [0.22551133383835487, nan]}
{'': [0.20840547091412834, nan]}
{'': [0.22959183673469274, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 2.249
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.74e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.12729085221006592;  // std dev = 0.154, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11213243979309;  // std dev = 4.94e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10144470656540626;  // std dev = 4.34e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.09256430907210604;  // std dev = 2.98e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09267576127669343;  // std dev = 0.000147, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518596044708684;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.08507657573141517;  // std dev = 3.46e-05, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.19372796515699736;  // std dev = 0.066, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return -0.07868383448137228;  // std dev = 3.22e-05, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07316599066300766;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17887067282282518;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09472153136726526;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15408857219363845;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08703236269309744;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A) )
%   | | then return -0.06835674199652404;  // std dev = 1.67e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( female(B) )
%   | | | then return -0.06835674199652407;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.19116887348964742;  // std dev = 0.425, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1350560590875201;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07979904768423025;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06318772192629142;  // std dev = 0.020, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.444', 'seconds']
Refined model CLL: -0.065534


******************************************
Best model found
******************************************
Results 

CLL : -0.070374 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.249 

Total Inference Time : 1.2689433097839355 

Total revision time: 5.327659816741944
Best scored revision CLL: -0.065534


Results 

CLL : -0.070374 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.3605963897705085 

Total Inference Time : 1.2689433097839355 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.867
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.19905802600860323;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.18371249781891194;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09711151043230105;  // std dev = 0.455, 154.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.12754719693943137;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.08410193731306508;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.108986401253439;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.027009437648120447;  // std dev = 5.628, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.033831321234812056;  // std dev = 5.579, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09072602616630361;  // std dev = 0.483, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.149', 'seconds']
Parameter learned model CLL:-0.374522 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.474, 87, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [5.402, 83, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.455, 109, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.473, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.465, 97, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.479, 81, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.628, 107, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.579, 101, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.483, 76, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.22469008264462906, nan]}
{'': [0.2279663085937504, nan], 'true': [0.2279663085937504, nan]}
{'': [0.20682239838083946, nan]}
{'': [0.2238679405280119, nan]}
{'': [0.2164749057726637, nan], 'true': [0.2164749057726637, nan]}
{'': [0.22959183673469435, nan]}
{'': [0.20840547091412623, nan]}
{'': [0.21322011634452873, nan]}
{'': [0.23359060173485363, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 1.951
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048766;  // std dev = 6.99e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( female(A) )
%   | | | then return 0.6842684934301482;  // std dev = 0.827, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.7194734122109542;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5313155975153315;  // std dev = 0.157, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.11648030302586167;  // std dev = 0.196, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.43199087312340423;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.3544569186246163;  // std dev = 0.209, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else return -0.10261796545538907;  // std dev = 0.106, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.33252788055165394;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.4258408445839469;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09361309004804239;  // std dev = 0.098, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08471001818563371;  // std dev = 2.58e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2632206107250009;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.32636421887539624;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07836895705266199;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21542782632373267;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.25756778585582235;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07289234686993237;  // std dev = 3.33e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( female(A) )
%   | | then return 0.16352664828981264;  // std dev = 0.079, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.18263113453737875;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06811713148417911;  // std dev = 1.29e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0.15698549252422703;  // std dev = 0.000367, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06391839202779291;  // std dev = 3.41e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( female(A) )
%   | then return 0.13735761600132568;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.10312523564972897;  // std dev = 0.113, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '52.381', 'seconds']
Refined model CLL: -0.075911


******************************************
Best model found
******************************************
Results 

CLL : -0.092346 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.951 

Total Inference Time : 1.2931478023529053 

Total revision time: 5.10138074684143
Best scored revision CLL: -0.075911


Results 

CLL : -0.092346 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.134317319869995 

Total Inference Time : 1.2931478023529053 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.425
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.20814893509951354;  // std dev = 0.477, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.16620571688433905;  // std dev = 6.101, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.135633668330699;  // std dev = 0.470, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1574824994121953;  // std dev = 0.484, 150.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.09776876291876617;  // std dev = 0.474, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09452565868390116;  // std dev = 0.479, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06697316209124284;  // std dev = 6.043, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05110292723491967;  // std dev = 6.053, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.007543535477788173;  // std dev = 0.464, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.348', 'seconds']
Parameter learned model CLL:-0.380153 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.477, 104, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [6.101, 111, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.47, 114, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.484, 94, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [0.474, 108, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.479, 101, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.043, 105, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.053, 106, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.464, 123, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.22750000000000026, nan]}
{'': [0.22288357416902613, nan], 'true': [0.22288357416902613, nan]}
{'': [0.22089965397923955, nan]}
{'': [0.23395555555555372, nan]}
{'': [0.22486615110053376, nan], 'true': [0.22486615110053376, nan]}
{'': [0.22946164144589876, nan]}
{'': [0.22684310018903528, nan]}
{'': [0.2261850327693963, nan]}
{'': [0.21497456384007932, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
1;true;movie(E, F).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
4;true;movie(E, F).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 18.201
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.69e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( female(A) )
%   | | then return 0.822434649385226;  // std dev = 0.186, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.8248156017661784;  // std dev = 0.180, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.12544463852839133;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( female(A) )
%   | | | then return 0.726624861664361;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.692818318046742;  // std dev = 0.983, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360617;  // std dev = 9.42e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5664049145615588;  // std dev = 0.029, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.4337329109847639;  // std dev = 0.011, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4257598751258939;  // std dev = 0.029, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.33173581849473543;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10633309503444004;  // std dev = 0.467, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.3263132366504494;  // std dev = 0.026, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.2632928960838955;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09647901915283744;  // std dev = 0.450, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2589939405888566;  // std dev = 0.023, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.21494956693594638;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09101697669369592;  // std dev = 0.475, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07774115299765057;  // std dev = 2.98e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21245561934924614;  // std dev = 0.020, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1808964572748693;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0723470958257055;  // std dev = 4.21e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17907397646341555;  // std dev = 0.017, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.15438249301397716;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06763937319133431;  // std dev = 1.49e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15424312281291624;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.136395794269989;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13517694661184906;  // std dev = 0.014, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12222653507721272;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06470132209438345;  // std dev = 0.121, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11', 'minutes', 'and', '25.204', 'seconds']
Refined model CLL: -0.065482


******************************************
Best model found
******************************************
Results 

CLL : -0.08027 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 18.201 

Total Inference Time : 17.403117656707764 

Total revision time: 38.76240403747559
Best scored revision CLL: -0.065482


Results 

CLL : -0.08027 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 38.82653839683533 

Total Inference Time : 17.403117656707764 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.488
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.19340905070645;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.12006625932776496;  // std dev = 6.430, 202.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15875134074841485;  // std dev = 0.475, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12573219772396543;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.09110991618729404;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10813090257971641;  // std dev = 0.479, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09869740868000089;  // std dev = 6.059, 158.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05097321102111852;  // std dev = 6.191, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.019904577495315826;  // std dev = 0.466, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 185.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.909', 'seconds']
Parameter learned model CLL:-0.374801 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.472, 115, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [6.43, 144, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.475, 111, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.472, 115, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [0.467, 122, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.479, 105, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.059, 100, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.191, 113, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.466, 124, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.2228607704901603, nan]}
{'': [0.20468581511616596, nan], 'true': [0.20468581511616596, nan]}
{'': [0.22541227548054782, nan]}
{'': [0.22286077049016056, nan]}
{'': [0.21839506172839324, nan], 'true': [0.21839506172839324, nan]}
{'': [0.22921449809928765, nan]}
{'': [0.23233456176894815, nan]}
{'': [0.22413734140419217, nan]}
{'': [0.21712353580485316, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
1;true;movie(E, F).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
4;true;movie(E, F).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 21.095
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.14185106490048782;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.12544463852839108;  // std dev = 7.60e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360622;  // std dev = 8.16e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783631;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926105;  // std dev = 1.83e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839682;  // std dev = 5.87e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0787767547310916;  // std dev = 5.77e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06842697784420267;  // std dev = 4.47e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06419184008202626;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '19', 'minutes', 'and', '13.214', 'seconds']
Refined model CLL: -0.064247


******************************************
Best model found
******************************************
Results 

CLL : -0.071702 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 21.095 

Total Inference Time : 26.919647693634033 

Total revision time: 51.3054178314209
Best scored revision CLL: -0.064247


Results 

CLL : -0.071702 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 51.36955219078064 

Total Inference Time : 26.919647693634033 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 2.831
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.19979960688453668;  // std dev = 0.474, 521.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.15627225618165258;  // std dev = 10.968, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1442787815181867;  // std dev = 0.472, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10823973233449762;  // std dev = 0.467, 552.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.10095180359756073;  // std dev = 0.472, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07447524820457795;  // std dev = 0.469, 546.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0590068329450236;  // std dev = 10.963, 548.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.049721771509967164;  // std dev = 10.943, 544.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03200703120419997;  // std dev = 0.466, 557.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 548.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.480', 'seconds']
Parameter learned model CLL:-0.390241 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.474, 343, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [10.968, 371, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.472, 353, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 374, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [0.472, 355, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.469, 368, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.963, 370, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.943, 366, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.466, 379, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.22492549025387049, nan]}
{'': [0.21910345353863922, nan], 'true': [0.21910345353863922, nan]}
{'': [0.2228464220229076, nan]}
{'': [0.21848088636841426, nan]}
{'': [0.22243029473157572, nan], 'true': [0.22243029473157572, nan]}
{'': [0.2197265493968814, nan]}
{'': [0.21931109808727536, nan]}
{'': [0.22014219290657053, nan]}
{'': [0.21744469764608174, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
1;true;movie(E, F).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
4;true;movie(E, F).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 73.69800000000001
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.99e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return -0.14185106490048813;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.1254446385283916;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return -0.12544463852839177;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360629;  // std dev = 3.94e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.11231637819360685;  // std dev = 0.000, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1015963294878362;  // std dev = 4.08e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.10159632948783644;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.09269127618926107;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.09269127618926065;  // std dev = 1.12e-07, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.08518475138839678;  // std dev = 8.16e-08, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109169;  // std dev = 3.33e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.07877675473109147;  // std dev = 5.96e-08, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.07324622576333688;  // std dev = 1.11e-07, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0684269778442027;  // std dev = 1.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.06842697784420278;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.06419184008202625;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '29', 'minutes', 'and', '15.004', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 73.69800000000001 

Total Inference Time : 45.57517886161804 

Total revision time: 123.98743815803529
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 124.05157251739503 

Total Inference Time : 45.57517886161804 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.277
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.18188994229375685;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.16062127524284336;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12364829009960207;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12480852103032926;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.127270479855024;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0682557559140441;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05513423805572351;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11409998117686511;  // std dev = 5.234, 115.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.032697416666527084;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.213', 'seconds']
Parameter learned model CLL:-0.386391 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.468, 94, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [5.507, 93, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.464, 99, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [0.479, 81, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 95, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.526, 95, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.234, 70, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.21893276745510165, nan]}
{'': [0.21975425330812806, nan], 'true': [0.21975425330812806, nan]}
{'': [0.21484375000000033, nan]}
{'': [0.22222222222222218, nan]}
{'': [0.22959183673469374, nan], 'true': [0.22959183673469374, nan]}
{'': [0.21811224489795836, nan]}
{'': [0.21811224489795997, nan]}
{'': [0.238185255198488, nan]}
{'': [0.22222222222222093, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
1;true;movie(E, F).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
4;true;movie(E, F).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 12.739
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.45e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1271871323403089;  // std dev = 0.154, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11214276642969544;  // std dev = 4.59e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.10145322001900035;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.0925714388940271;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08508303717464806;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.07868921860183345;  // std dev = 1.60e-05, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07317045994549962;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06836065453992297;  // std dev = 1.67e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641333197555082;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.12299598166967574;  // std dev = 0.045, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14', 'minutes', 'and', '48.109', 'seconds']
Refined model CLL: -0.065629


******************************************
Best model found
******************************************
Results 

CLL : -0.069596 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 12.739 

Total Inference Time : 7.527911186218262 

Total revision time: 22.793140378952028
Best scored revision CLL: -0.065629


Results 

CLL : -0.069596 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 22.85727473831177 

Total Inference Time : 7.527911186218262 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.28
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.2124796437609297;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.1471683569543363;  // std dev = 5.544, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11885398221194306;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10857976572949947;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.06686752423445884;  // std dev = 0.457, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0712888270101682;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06240285075164912;  // std dev = 5.544, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.035494987955956694;  // std dev = 5.604, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04117084929883456;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.209', 'seconds']
Parameter learned model CLL:-0.350866 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.478, 82, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [5.544, 97, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.463, 100, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.466, 96, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [0.457, 107, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.464, 99, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.544, 97, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.604, 104, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.464, 98, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.22878045756091603, nan]}
{'': [0.21647490577266532, nan], 'true': [0.21647490577266532, nan]}
{'': [0.21403091557669554, nan]}
{'': [0.21729289271163468, nan]}
{'': [0.20840547091412806, nan], 'true': [0.20840547091412806, nan]}
{'': [0.2148437500000001, nan]}
{'': [0.21647490577266412, nan]}
{'': [0.2108013152560696, nan]}
{'': [0.21565846740671904, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
1;true;movie(E, F).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
4;true;movie(E, F).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 16.611
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.6827378447875044;  // std dev = 0.826, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return -0.12544463852839147;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5597917868267478;  // std dev = 0.030, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.22325715565803392;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.11565594397266518;  // std dev = 0.201, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10129191754153605;  // std dev = 2.79e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( female(A) )
%   | | then return 0.4164377512274697;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.3745198381941792;  // std dev = 0.169, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.09243633631909988;  // std dev = 2.98e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( female(A) )
%   | | | then return 0.2956816418931691;  // std dev = 0.571, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.3373338100229199;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0849683437311573;  // std dev = 5.27e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.26281997004877106;  // std dev = 0.024, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.3163673383185503;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0785908976163921;  // std dev = 5.16e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( female(A) )
%   | | then return 0.192454081126583;  // std dev = 0.094, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.19788381845778275;  // std dev = 0.096, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07308497139699567;  // std dev = 4.08e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.18402773506089304;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.29787684947991827;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15798268622618616;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.2338179296993436;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A) )
%   | | then return -0.0682858103466933;  // std dev = 2.79e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return -0.3057927303712402;  // std dev = 0.475, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06828581034669341;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06358537301811115;  // std dev = 0.022, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( female(A) )
%   | then return 0.12225548905473695;  // std dev = 0.067, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.14000524252859223;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18', 'minutes', 'and', '48.585', 'seconds']
Refined model CLL: -0.071926


******************************************
Best model found
******************************************
Results 

CLL : -0.085949 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 16.611 

Total Inference Time : 9.963275671005249 

Total revision time: 29.165921894073488
Best scored revision CLL: -0.071926


Results 

CLL : -0.085949 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 29.23005625343323 

Total Inference Time : 9.963275671005249 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.056
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.15444523139580957;  // std dev = 0.457, 189.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.13616169970415798;  // std dev = 6.270, 188.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.14645662238969012;  // std dev = 0.469, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09893923544945628;  // std dev = 0.459, 185.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.10341285985702596;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.12041323726148913;  // std dev = 0.480, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.10017334386607671;  // std dev = 5.981, 155.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.02849147217533602;  // std dev = 6.219, 181.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.03888969432124458;  // std dev = 0.469, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 184.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.572', 'seconds']
Parameter learned model CLL:-0.363673 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.457, 133, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [6.27, 132, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.469, 115, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.459, 129, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.468, 117, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.48, 100, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.981, 99, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.219, 125, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.469, 116, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.2085048010973942, nan]}
{'': [0.20914440923494965, nan], 'true': [0.20914440923494965, nan]}
{'': [0.22023870592661077, nan]}
{'': [0.21107377647918354, nan]}
{'': [0.21891810618463564, nan], 'true': [0.21891810618463564, nan]}
{'': [0.23011176857330504, nan]}
{'': [0.23075962539021788, nan]}
{'': [0.21366869143188447, nan]}
{'': [0.21957815035154035, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 3.083
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.30e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.12544463852839136;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783634;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( female(A) )
%   | | then return 0.41751358415831;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.3840226219875909;  // std dev = 0.128, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.09269127618926092;  // std dev = 5.77e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( female(A) )
%   | | | then return 0.30402472002671227;  // std dev = 0.459, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.3123700896516908;  // std dev = 0.463, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839682;  // std dev = 5.77e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.26086693673990957;  // std dev = 0.018, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.18748862344319284;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07877675473109158;  // std dev = 5.96e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21377364506107893;  // std dev = 0.016, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.16035768676171633;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then return 0.17445566684274913;  // std dev = 0.316, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333707;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else return -0.25947806650317773;  // std dev = 0.645, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06759989474225742;  // std dev = 0.030, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( female(A) )
%   | | then return 0.15399262871559471;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.1467133214190022;  // std dev = 0.057, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06387597266925962;  // std dev = 0.020, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1369650723223367;  // std dev = 0.014, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.18338184890510945;  // std dev = 0.007, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.491', 'seconds']
Refined model CLL: -0.068124


******************************************
Best model found
******************************************
Results 

CLL : -0.090813 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 3.083 

Total Inference Time : 1.4577066898345947 

Total revision time: 6.808268369674683
Best scored revision CLL: -0.068124


Results 

CLL : -0.090813 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 6.89825087928772 

Total Inference Time : 1.4577066898345947 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.02
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1699768920887609;  // std dev = 0.463, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.15485412298552967;  // std dev = 6.286, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.12400220304444026;  // std dev = 0.463, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09798523876002194;  // std dev = 0.460, 191.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.11311023120452188;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08723818626231268;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07657868145471332;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09114425854508433;  // std dev = 6.070, 159.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.039308628212710084;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.584', 'seconds']
Parameter learned model CLL:-0.371217 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.463, 128, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [6.286, 124, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.463, 129, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.46, 133, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.472, 115, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.47, 118, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.209, 115, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.07, 101, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.471, 117, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.2145912822291598, nan]}
{'': [0.21712353580485566, nan], 'true': [0.21712353580485566, nan]}
{'': [0.21396093682976217, nan]}
{'': [0.21145253693703686, nan]}
{'': [0.22286077049015746, nan], 'true': [0.22286077049015746, nan]}
{'': [0.22094524793388481, nan]}
{'': [0.22286077049015995, nan]}
{'': [0.231715517582376, nan]}
{'': [0.22158367346938682, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 3.687
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 7.88e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.1254446385283913;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.11231637819360624;  // std dev = 7.88e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.10159632948783631;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09269127618926098;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.09269127618926092;  // std dev = 5.96e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.0851847513883968;  // std dev = 6.50e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.19601797894855336;  // std dev = 0.061, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.2023593958796219;  // std dev = 0.285, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return -0.08220583608762935;  // std dev = 0.351, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17849810825827103;  // std dev = 0.003, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09449963788661513;  // std dev = 0.000543, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07301379590991448;  // std dev = 4.47e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06822348907232986;  // std dev = 3.16e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1538063200376963;  // std dev = 0.003, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08686803294238668;  // std dev = 0.000635, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06401227143348787;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13483595229033385;  // std dev = 0.003, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08031367809111063;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '31.155', 'seconds']
Refined model CLL: -0.064614


******************************************
Best model found
******************************************
Results 

CLL : -0.071132 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.687 

Total Inference Time : 2.925055742263794 

Total revision time: 8.853721839904786
Best scored revision CLL: -0.064614


Results 

CLL : -0.071132 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.943704349517823 

Total Inference Time : 2.925055742263794 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.656
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.19914510368188337;  // std dev = 0.474, 522.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.17576717840238376;  // std dev = 10.809, 518.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1477854430169098;  // std dev = 0.474, 521.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.12039325585717194;  // std dev = 0.473, 526.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.10707411583438957;  // std dev = 0.476, 514.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07786440692738288;  // std dev = 0.473, 528.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.046811724207493535;  // std dev = 10.991, 554.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.061053314264860964;  // std dev = 10.798, 516.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.036227968245302354;  // std dev = 0.471, 535.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 539.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.358', 'seconds']
Parameter learned model CLL:-0.402144 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.474, 344, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [10.809, 340, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.474, 343, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.473, 348, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.476, 336, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.473, 350, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.991, 376, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.798, 338, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.471, 357, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.22471778159451875, nan]}
{'': [0.22554821782621268, nan], 'true': [0.22554821782621268, nan]}
{'': [0.2249254902538673, nan]}
{'': [0.22388642310861345, nan]}
{'': [0.22637738648579145, nan], 'true': [0.22637738648579145, nan]}
{'': [0.22347050045914077, nan]}
{'': [0.21806618097459626, nan]}
{'': [0.22596298299380985, nan]}
{'': [0.2220141497073987, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 12.61
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 5.96e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.14185106490048813;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.12544463852839188;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360628;  // std dev = 4.47e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.11231637819360689;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783621;  // std dev = 4.08e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.10159632948783644;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.09269127618926107;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.09269127618926062;  // std dev = 4.21e-08, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.08518475138839678;  // std dev = 7.45e-08, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109179;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.07877675473109146;  // std dev = 6.14e-08, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.07324622576333681;  // std dev = 1.10e-07, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 1.97e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.06842697784420287;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06419184008202625;  // std dev = 0.000, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.255', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 12.61 

Total Inference Time : 5.852032423019409 

Total revision time: 21.483619657516478
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 21.573602167129515 

Total Inference Time : 5.852032423019409 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.895
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.17283424978482687;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.19292386208948953;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.14338228628782815;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06554265016850544;  // std dev = 0.450, 160.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.09908483692391849;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.10129672525178154;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.05967384518507887;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.05999491178832556;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.045363926975913994;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.053', 'seconds']
Parameter learned model CLL:-0.372898 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.464, 98, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [5.379, 81, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.472, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.45, 115, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.469, 93, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.476, 85, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.516, 94, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.467, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.471, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.21565846740672015, nan]}
{'': [0.22959183673469316, nan], 'true': [0.22959183673469316, nan]}
{'': [0.22304522165293028, nan]}
{'': [0.2021484375, nan]}
{'': [0.21975425330812773, nan], 'true': [0.21975425330812773, nan]}
{'': [0.2263313609467456, nan]}
{'': [0.21893276745510076, nan]}
{'': [0.22304522165292992, nan]}
{'': [0.22222222222222118, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 2.215
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 7.74e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.1254446385283915;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360622;  // std dev = 6.83e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783621;  // std dev = 5.05e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926108;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 3.80e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07877675473109162;  // std dev = 4.83e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07850370359113301;  // std dev = 0.455, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06809260082459358;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06389647038822276;  // std dev = 1.99e-05, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '48.121', 'seconds']
Refined model CLL: -0.065037


******************************************
Best model found
******************************************
Results 

CLL : -0.070212 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 2.215 

Total Inference Time : 1.3149375915527344 

Total revision time: 5.380495891571044
Best scored revision CLL: -0.065037


Results 

CLL : -0.070212 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 5.4704784011840815 

Total Inference Time : 1.3149375915527344 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.835
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.18188994229375685;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.16786765205443757;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.18503573764647754;  // std dev = 0.484, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.14577476294879982;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.09222919012783476;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0825270706435783;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.03919208368389076;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.05298416209617776;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.03691208089841084;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.131', 'seconds']
Parameter learned model CLL:-0.383639 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.468, 94, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [5.477, 90, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.484, 75, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.482, 78, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.473, 88, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.476, 85, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.535, 96, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.446, 87, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.472, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.21893276745510165, nan]}
{'': [0.2222222222222217, nan], 'true': [0.2222222222222217, nan]}
{'': [0.23437500000000047, nan]}
{'': [0.2320047590719813, nan]}
{'': [0.22386794052801165, nan], 'true': [0.22386794052801165, nan]}
{'': [0.22633136094674502, nan]}
{'': [0.2172928927116331, nan]}
{'': [0.22469008264462886, nan]}
{'': [0.22304522165292825, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 1.954
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.60e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1254446385283914;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 7.30e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783627;  // std dev = 4.21e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.09269127618926107;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839679;  // std dev = 2.36e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07877675473109162;  // std dev = 4.83e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07324622576333707;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06842697784420265;  // std dev = 4.15e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return -0.17254572090975243;  // std dev = 0.485, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '37.996', 'seconds']
Refined model CLL: -0.064411


******************************************
Best model found
******************************************
Results 

CLL : -0.070493 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.954 

Total Inference Time : 1.1850149631500244 

Total revision time: 4.934975112915039
Best scored revision CLL: -0.064411


Results 

CLL : -0.070493 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 5.024957622528076 

Total Inference Time : 1.1850149631500244 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.01
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.20814893509951354;  // std dev = 0.477, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.16420970890030714;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.12471536384712299;  // std dev = 0.466, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1320060232172298;  // std dev = 0.476, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.10686954638707025;  // std dev = 0.475, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06530290558322861;  // std dev = 0.467, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.043661416277100386;  // std dev = 6.203, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.059486280321463345;  // std dev = 6.092, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0713347482924029;  // std dev = 0.480, 155.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.702', 'seconds']
Parameter learned model CLL:-0.377362 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.477, 104, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [6.11, 112, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.466, 120, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.476, 106, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.475, 107, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.467, 118, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.203, 123, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.092, 110, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.48, 99, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.22750000000000026, nan]}
{'': [0.2222222222222211, nan], 'true': [0.2222222222222211, nan]}
{'': [0.21694214876033274, nan]}
{'': [0.22618503276939464, nan]}
{'': [0.2255259889344746, nan], 'true': [0.2255259889344746, nan]}
{'': [0.21825868674857862, nan]}
{'': [0.21497456384008118, nan]}
{'': [0.22354478153578142, nan]}
{'': [0.23075962539021916, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 3.128
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.69e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( female(A) )
%   | | | then return 0.689297767541692;  // std dev = 0.830, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.6913094771863096;  // std dev = 0.831, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.1123163781936062;  // std dev = 8.16e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5625484866787078;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.22230816917297483;  // std dev = 0.000322, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783627;  // std dev = 3.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( female(A) )
%   | | then return 0.3810937936232919;  // std dev = 0.154, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | else return 0.4226249533344918;  // std dev = 5.96e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.09269127618926093;  // std dev = 5.77e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.3288133571177019;  // std dev = 0.036, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.2564244448608139;  // std dev = 0.010, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.0851847513883968;  // std dev = 6.05e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( female(A) )
%   | | then return 0.24822908863461662;  // std dev = 0.087, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.2566516213797989;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.21957728847559277;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.18047781346570385;  // std dev = 0.115, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else return -0.0805286848452827;  // std dev = 0.180, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07312739149251259;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else if ( female(A) )
%   | | then return 0.18426588552596623;  // std dev = 1.83e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.15152086155648536;  // std dev = 0.117, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06832294993824138;  // std dev = 3.25e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( female(A) )
%   | | then return 0.14064715120640933;  // std dev = 0.091, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.16082593706492068;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14030284199492774;  // std dev = 0.000135, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.3641844732916993;  // std dev = 6.01e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06615132102078641;  // std dev = 0.241, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.395', 'seconds']
Refined model CLL: -0.074107


******************************************
Best model found
******************************************
Results 

CLL : -0.110551 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 3.128 

Total Inference Time : 1.4558806419372559 

Total revision time: 6.8051156883239745
Best scored revision CLL: -0.074107


Results 

CLL : -0.110551 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 6.842813241958618 

Total Inference Time : 1.4558806419372559 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.049
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.22292880931335002;  // std dev = 0.481, 159.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.15463202376727436;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1682205160629126;  // std dev = 0.481, 160.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.10025149768137642;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.13931975481033876;  // std dev = 0.485, 153.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.050868557788553086;  // std dev = 0.465, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.039095144996531564;  // std dev = 6.302, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.038217701208667736;  // std dev = 6.270, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0596754913610384;  // std dev = 0.477, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.617', 'seconds']
Parameter learned model CLL:-0.376647 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.481, 101, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [6.253, 120, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.481, 102, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.467, 122, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.485, 95, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.465, 125, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.302, 126, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.27, 122, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.477, 107, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.2317155175823743, nan]}
{'': [0.21966923368261487, nan], 'true': [0.21966923368261487, nan]}
{'': [0.23109375000000215, nan]}
{'': [0.21839506172839662, nan]}
{'': [0.23537955487205858, nan], 'true': [0.23537955487205858, nan]}
{'': [0.21648899638687333, nan]}
{'': [0.21585538752362865, nan]}
{'': [0.2183950617283939, nan]}
{'': [0.22795224977043105, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 3.695
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 6.66e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12670546738416896;  // std dev = 0.154, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5235720169872421;  // std dev = 0.142, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.5382463645683382;  // std dev = 0.106, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return -0.11351931613335899;  // std dev = 0.143, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4229182940318354;  // std dev = 0.013, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.17718250621875217;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.10242966693250231;  // std dev = 0.133, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.0924143631581925;  // std dev = 3.16e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.3243792912144348;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.15296269281818753;  // std dev = 0.003, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08494968766457939;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.25767378690682124;  // std dev = 0.010, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.13479696274289654;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07857487227762301;  // std dev = 5.05e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21152359490095063;  // std dev = 0.009, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11949318540527908;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07307106514504565;  // std dev = 4.71e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17839084371460662;  // std dev = 0.008, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10779307319690039;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06827363460001391;  // std dev = 2.58e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15372519843005242;  // std dev = 0.007, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09734081317751896;  // std dev = 0.002, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13477278968063225;  // std dev = 0.006, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08959267275095778;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06381427801970213;  // std dev = 0.016, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '23.054', 'seconds']
Refined model CLL: -0.064982


******************************************
Best model found
******************************************
Results 

CLL : -0.071258 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.695 

Total Inference Time : 2.190044641494751 

Total revision time: 8.219167512893677
Best scored revision CLL: -0.064982


Results 

CLL : -0.071258 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.25686506652832 

Total Inference Time : 2.190044641494751 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.644
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.18839012248355239;  // std dev = 0.470, 539.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.18334008130892743;  // std dev = 10.759, 509.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.14697575507680152;  // std dev = 0.474, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.11352498892806448;  // std dev = 0.471, 538.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.11591612789286987;  // std dev = 0.478, 504.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08676162069751858;  // std dev = 0.476, 515.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0599890666720983;  // std dev = 10.873, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.03740821885233373;  // std dev = 10.958, 547.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.055350457312236576;  // std dev = 0.477, 507.000 (wgt'ed) examples reached here.  /* #neg=329 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 524.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.301', 'seconds']
Parameter learned model CLL:-0.40615 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.47, 361, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [10.759, 331, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.474, 345, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.471, 360, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.478, 326, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.476, 337, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.873, 352, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.958, 369, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.477, 329, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.22118194553922396, nan]}
{'': [0.2274115045101714, nan], 'true': [0.2274115045101714, nan]}
{'': [0.2245100153914237, nan]}
{'': [0.22138997526291973, nan]}
{'': [0.22844230284706804, nan], 'true': [0.22844230284706804, nan]}
{'': [0.2261702328211917, nan]}
{'': [0.2230544677821285, nan]}
{'': [0.21951879789712037, nan]}
{'': [0.22782426696855754, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 12.025
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.14185106490048827;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.12544463852839188;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360628;  // std dev = 4.47e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.11231637819360683;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783621;  // std dev = 3.80e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.10159632948783656;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.09269127618926107;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.09269127618926064;  // std dev = 2.11e-08, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.67e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.08518475138839679;  // std dev = 8.43e-08, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109168;  // std dev = 3.57e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return -0.07877675473109146;  // std dev = 5.96e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.0732462257633369;  // std dev = 1.06e-07, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 2.24e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.06842697784420261;  // std dev = 5.16e-08, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.06419184008202623;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.418', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 12.025 

Total Inference Time : 5.731672525405884 

Total revision time: 20.686263174057007
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 20.72396072769165 

Total Inference Time : 5.731672525405884 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.876
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.21814893509951241;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.1579336674612873;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1228532147098349;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1403447374355505;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.12146341722306243;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08221788107390778;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.028650850068429958;  // std dev = 5.588, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.04521514177859624;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06747913804106591;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.029', 'seconds']
Parameter learned model CLL:-0.385222 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.48, 80, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [5.497, 92, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.465, 97, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.478, 82, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.48, 80, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.475, 86, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.588, 102, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.497, 92, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.48, 80, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.23040000000000088, nan]}
{'': [0.22057648249773557, nan], 'true': [0.22057648249773557, nan]}
{'': [0.21647490577266335, nan]}
{'': [0.22878045756091564, nan]}
{'': [0.23040000000000005, nan], 'true': [0.23040000000000005, nan]}
{'': [0.22551133383835475, nan]}
{'': [0.21241149521032915, nan]}
{'': [0.22057648249773637, nan]}
{'': [0.2304000000000002, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 2.222
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.14185106490048766;  // std dev = 6.83e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.7194734122109544;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.6725335205032132;  // std dev = 1.161, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5640998419850812;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.21937409961582466;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360626;  // std dev = 5.37e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4240364826145079;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1851404772127067;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.10159632948783626;  // std dev = 4.21e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.3251461643698348;  // std dev = 0.030, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.16171949416731465;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926096;  // std dev = 4.83e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 4.21e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2582008967053958;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.13757824508954206;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.21189794942821216;  // std dev = 0.022, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12333305283059079;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07911167990109148;  // std dev = 0.029, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17866662855448953;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1094410829294528;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07318210131447525;  // std dev = 0.003, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06840971774358337;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15393520897931798;  // std dev = 0.017, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10349652754465884;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13493730059313827;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09147101242472064;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06412222599451384;  // std dev = 0.005, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '29.754', 'seconds']
Refined model CLL: -0.06542


******************************************
Best model found
******************************************
Results 

CLL : -0.066326 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.222 

Total Inference Time : 1.4221687316894531 

Total revision time: 5.492290447235107
Best scored revision CLL: -0.06542


Results 

CLL : -0.066326 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.529988000869751 

Total Inference Time : 1.4221687316894531 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.896
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1561621801326247;  // std dev = 0.457, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.1842103201219744;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1472965907543152;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.10480434834990869;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.10820687454345895;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08101496650107516;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06072920440212;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0976361203783392;  // std dev = 5.303, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.019549400480123484;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.074', 'seconds']
Parameter learned model CLL:-0.376625 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.457, 106, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [5.424, 85, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.472, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.465, 97, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.473, 88, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.471, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.507, 93, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.303, 75, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.465, 97, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.20920135081794763, nan]}
{'': [0.2263313609467467, nan], 'true': [0.2263313609467467, nan]}
{'': [0.22304522165292998, nan]}
{'': [0.21647490577266434, nan]}
{'': [0.22386794052801096, nan], 'true': [0.22386794052801096, nan]}
{'': [0.2213992214532865, nan]}
{'': [0.21975425330812812, nan]}
{'': [0.23437499999999847, nan]}
{'': [0.21647490577266415, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 2.208
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.14185106490048766;  // std dev = 7.45e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( female(A) )
%   | | | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.6827378447875044;  // std dev = 0.826, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360624;  // std dev = 5.87e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5597917868267478;  // std dev = 0.030, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.2275182985526726;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4208151934409159;  // std dev = 0.030, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.18815433863320172;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10444035865433021;  // std dev = 0.229, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.09245237137186282;  // std dev = 3.65e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32295821768032373;  // std dev = 0.027, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1607531777233922;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08498195771450684;  // std dev = 5.58e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( female(A) )
%   | | then return 0.23681142841484917;  // std dev = 0.079, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.2429931289985229;  // std dev = 0.081, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07860259156788273;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21366143959790243;  // std dev = 0.017, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.17191599452420117;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1799556034450876;  // std dev = 0.015, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14751772623970316;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.07309511878973102;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else return -0.1740489711211696;  // std dev = 0.365, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15491009957972993;  // std dev = 0.013, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.13049190416120823;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06878524590321174;  // std dev = 0.068, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.12344829580798107;  // std dev = 0.050, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.1375283442675577;  // std dev = 2.11e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( actor(A) )
%   | then return -0.0640457020283166;  // std dev = 2.98e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return -0.16940460537207713;  // std dev = 0.310, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.321', 'seconds']
Refined model CLL: -0.066792


******************************************
Best model found
******************************************
Results 

CLL : -0.074064 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.208 

Total Inference Time : 1.212639331817627 

Total revision time: 5.282534507751465
Best scored revision CLL: -0.066792


Results 

CLL : -0.074064 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.3202320613861085 

Total Inference Time : 1.212639331817627 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.515
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.18184835706483143;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.15637914147174695;  // std dev = 6.163, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14915302216636947;  // std dev = 0.473, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15158752306044773;  // std dev = 0.481, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.10091411549183078;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.111134116809653;  // std dev = 0.482, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04274983123637632;  // std dev = 6.163, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0304107010972827;  // std dev = 6.179, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0768168638400261;  // std dev = 0.483, 151.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.614', 'seconds']
Parameter learned model CLL:-0.38471 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.468, 117, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [6.163, 118, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.473, 110, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.481, 98, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [0.474, 109, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.482, 96, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.163, 118, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.179, 120, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.483, 95, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.21891810618463733, nan]}
{'': [0.21825868674858062, nan], 'true': [0.21825868674858062, nan]}
{'': [0.22354478153578214, nan]}
{'': [0.23140495867768754, nan]}
{'': [0.22420569329660064, nan], 'true': [0.22420569329660064, nan]}
{'': [0.23268698060941648, nan]}
{'': [0.21825868674857957, nan]}
{'': [0.2169421487603322, nan]}
{'': [0.23332309986404054, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
1;true;movie(E, F).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
4;true;movie(E, F).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 13.955
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.69e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 9.06e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783626;  // std dev = 4.71e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.0926912761892609;  // std dev = 6.14e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839682;  // std dev = 5.37e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( female(A) )
%   | | then return 0.2316993464344629;  // std dev = 0.086, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | else return 0.25517224256948956;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then return 0.20609014956836008;  // std dev = 0.314, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109157;  // std dev = 6.32e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.25664313714018494;  // std dev = 0.616, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0787767547310918;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 4.34e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( female(A) )
%   | | then return 0.18108649000962626;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.15786926438063087;  // std dev = 0.075, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.15576397813212978;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.1361705420415864;  // std dev = 0.074, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else return -0.06870957848601811;  // std dev = 0.048, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06408656817591919;  // std dev = 0.010, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else return 0.13754804825601222;  // std dev = 0.009, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '38.443', 'seconds']
Refined model CLL: -0.069411


******************************************
Best model found
******************************************
Results 

CLL : -0.093118 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 13.955 

Total Inference Time : 4.307337760925293 

Total revision time: 21.530158014297484
Best scored revision CLL: -0.069411


Results 

CLL : -0.093118 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 21.593636722564696 

Total Inference Time : 4.307337760925293 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.562
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17859092404978988;  // std dev = 0.467, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.15543135588974374;  // std dev = 6.278, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13466747154096437;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12439061599850332;  // std dev = 0.471, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.1345333339725685;  // std dev = 0.481, 159.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0783837922208168;  // std dev = 0.471, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07718315622939198;  // std dev = 6.153, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06590873484966901;  // std dev = 6.133, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.007636436787095831;  // std dev = 0.461, 189.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.575', 'seconds']
Parameter learned model CLL:-0.371934 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 123, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [6.278, 123, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 122, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 116, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [0.481, 101, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 116, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.153, 109, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.133, 107, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.461, 131, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.21775892066786756, nan]}
{'': [0.21775892066786923, nan], 'true': [0.21775892066786923, nan]}
{'': [0.21839506172839518, nan]}
{'': [0.22222222222222202, nan]}
{'': [0.231715517582376, nan], 'true': [0.231715517582376, nan]}
{'': [0.22222222222222135, nan]}
{'': [0.22668435583922006, nan]}
{'': [0.22795224977043252, nan]}
{'': [0.21270401164581004, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
1;true;movie(E, F).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
4;true;movie(E, F).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 15.501
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 6.32e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.12544463852839136;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( female(A) )
%   | | | then return 0.6792392193186044;  // std dev = 0.825, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.6978088468073818;  // std dev = 0.834, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 7.45e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5622849568829554;  // std dev = 0.017, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.22244973988595795;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.42563739579170684;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.39067504195797254;  // std dev = 0.133, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else return -0.1058963259296708;  // std dev = 0.475, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.09233028100602304;  // std dev = 5.58e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.3285920260564198;  // std dev = 0.013, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.2549226555461056;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2605430563887822;  // std dev = 0.011, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.21121570650378305;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A) )
%   | | then return -0.08487829281573502;  // std dev = 2.98e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return -0.2216663934940838;  // std dev = 0.474, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09084280789568927;  // std dev = 0.051, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0782986927442981;  // std dev = 0.013, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21354496399953524;  // std dev = 0.010, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1762512146365899;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07288411955891609;  // std dev = 0.012, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17986962150515706;  // std dev = 0.009, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.15359066454096154;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1548445100565917;  // std dev = 0.008, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.13428675805454338;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.06840250056414066;  // std dev = 0.028, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1356449843834203;  // std dev = 0.007, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1185656283488301;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0642210357941077;  // std dev = 0.027, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '56.740', 'seconds']
Refined model CLL: -0.066715


******************************************
Best model found
******************************************
Results 

CLL : -0.07862 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 15.501 

Total Inference Time : 4.9204723834991455 

Total revision time: 23.806811845779418
Best scored revision CLL: -0.066715


Results 

CLL : -0.07862 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 23.87029055404663 

Total Inference Time : 4.9204723834991455 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 2.816
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.19085921547333964;  // std dev = 0.471, 535.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.17363622974108361;  // std dev = 10.836, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12561468338571383;  // std dev = 0.466, 560.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12849089537649988;  // std dev = 0.474, 522.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.10554341839485026;  // std dev = 0.474, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08867612987956873;  // std dev = 0.475, 519.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06501437861650812;  // std dev = 10.868, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04819332429594015;  // std dev = 10.899, 535.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.038281739106324576;  // std dev = 0.471, 535.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 515.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.812', 'seconds']
Parameter learned model CLL:-0.400148 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 357, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [10.836, 345, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.466, 382, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.474, 344, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [0.474, 345, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.475, 341, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.868, 351, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.899, 357, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 357, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.2220141497074011, nan]}
{'': [0.22451001539142226, nan], 'true': [0.22451001539142226, nan]}
{'': [0.21682397959183694, nan]}
{'': [0.2247177815945128, nan]}
{'': [0.2245100153914223, nan], 'true': [0.2245100153914223, nan]}
{'': [0.22534071376331755, nan]}
{'': [0.223262495488509, nan]}
{'': [0.22201414970739802, nan]}
{'': [0.2220141497074019, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
1;true;movie(E, F).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
4;true;movie(E, F).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 71.757
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.14e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.14185106490048813;  // std dev = 0.000, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.1254446385283916;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.12544463852839186;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360635;  // std dev = 1.83e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.1123163781936068;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783624;  // std dev = 2.98e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.10159632948783655;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.09269127618926104;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return -0.09269127618926065;  // std dev = 2.11e-08, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0851847513883968;  // std dev = 1.29e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.08518475138839678;  // std dev = 8.43e-08, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0787767547310917;  // std dev = 2.36e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.07877675473109147;  // std dev = 6.50e-08, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.07324622576333682;  // std dev = 9.88e-08, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0684269778442027;  // std dev = 1.39e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.06842697784420267;  // std dev = 2.58e-08, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.06419184008202623;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25', 'minutes', 'and', '44.880', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 71.757 

Total Inference Time : 43.784173250198364 

Total revision time: 120.19362621116639
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 120.2571049194336 

Total Inference Time : 43.784173250198364 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.276
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.18903128804068875;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.17445492681315014;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14124754382271976;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11837055460144129;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.1302428395034979;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10598529470051984;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.038383416360258195;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05757251319633686;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03278994270935541;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.322', 'seconds']
Parameter learned model CLL:-0.386292 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [5.446, 87, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [0.482, 78, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.482, 78, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.535, 96, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.424, 85, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.2213992214532882, nan]}
{'': [0.22469008264462986, nan], 'true': [0.22469008264462986, nan]}
{'': [0.22222222222222296, nan]}
{'': [0.22222222222222177, nan]}
{'': [0.23200475907198048, nan], 'true': [0.23200475907198048, nan]}
{'': [0.23200475907198181, nan]}
{'': [0.21729289271163332, nan]}
{'': [0.22633136094674686, nan]}
{'': [0.22222222222222143, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
1;true;movie(E, F).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
4;true;movie(E, F).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 14.326
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1273592304945724;  // std dev = 0.154, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.11212563231671362;  // std dev = 6.99e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10143909429750664;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0925593186416525;  // std dev = 1.85e-05, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.08507287210473778;  // std dev = 1.22e-05, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07868081319479601;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.07316279086196675;  // std dev = 1.71e-05, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.07088676604054632;  // std dev = 0.239, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06659032586309258;  // std dev = 0.229, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24', 'minutes', 'and', '50.244', 'seconds']
Refined model CLL: -0.064067


******************************************
Best model found
******************************************
Results 

CLL : -0.06618 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 14.326 

Total Inference Time : 11.921126365661621 

Total revision time: 28.811901571273804
Best scored revision CLL: -0.064067


Results 

CLL : -0.06618 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 28.875380279541016 

Total Inference Time : 11.921126365661621 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.252
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.2240025936360978;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.1306503287642934;  // std dev = 5.604, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16642416876993898;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12061224056108934;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.08711257548106162;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06625326459814061;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.038152128334482296;  // std dev = 5.588, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0903334120116621;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.025236897784012863;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.975', 'seconds']
Parameter learned model CLL:-0.373602 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.482, 78, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [5.604, 104, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.479, 81, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.473, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [0.469, 93, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 95, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.588, 102, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.342, 78, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.466, 96, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.23200475907198184, nan]}
{'': [0.2108013152560709, nan], 'true': [0.2108013152560709, nan]}
{'': [0.22959183673469352, nan]}
{'': [0.2238679405280111, nan]}
{'': [0.21975425330812728, nan], 'true': [0.21975425330812728, nan]}
{'': [0.21811224489795808, nan]}
{'': [0.21241149521032884, nan]}
{'': [0.23200475907198098, nan]}
{'': [0.2172928927116336, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
1;true;movie(E, F).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
4;true;movie(E, F).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 12.232
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1271871323403089;  // std dev = 0.154, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11214276642969538;  // std dev = 5.96e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( female(A) )
%   | | then return 0.5275463194571225;  // std dev = 0.133, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.5263367491402023;  // std dev = 0.136, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.42443890881096524;  // std dev = 0.000991, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.17651311138011647;  // std dev = 0.000144, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10237531491782237;  // std dev = 0.074, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.09249401020271722;  // std dev = 2.58e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.3254106600776191;  // std dev = 0.000890, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.15231416941522133;  // std dev = 0.000191, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2583759398349642;  // std dev = 0.000777, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.13361897435643427;  // std dev = 0.000192, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.08568186220425762;  // std dev = 0.057, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2120182247892335;  // std dev = 0.000678, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11886698129440383;  // std dev = 0.000116, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07940715264192448;  // std dev = 0.053, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07302401471520106;  // std dev = 4.08e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( female(A) )
%   | | then return 0.15580731130207806;  // std dev = 0.078, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.17884346486800998;  // std dev = 2.11e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06823243710746142;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return 0.15553277005765528;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06402016890234777;  // std dev = 3.57e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( female(A) )
%   | then return 0.12584801180784513;  // std dev = 0.056, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.12277312302452106;  // std dev = 0.057, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14', 'minutes', 'and', '37.351', 'seconds']
Refined model CLL: -0.069253


******************************************
Best model found
******************************************
Results 

CLL : -0.081157 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 12.232 

Total Inference Time : 7.773684978485107 

Total revision time: 22.57377198600769
Best scored revision CLL: -0.069253


Results 

CLL : -0.081157 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 22.6372506942749 

Total Inference Time : 7.773684978485107 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.075
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1856343152164726;  // std dev = 0.469, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.18621788027424688;  // std dev = 6.023, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1566125581973382;  // std dev = 0.477, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.13769334157709248;  // std dev = 0.479, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.10437329888292696;  // std dev = 0.476, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06429824114157817;  // std dev = 0.469, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06354974252663281;  // std dev = 6.082, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.013985129794976394;  // std dev = 6.249, 185.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.021251142308817566;  // std dev = 0.464, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.457, 189.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.708', 'seconds']
Parameter learned model CLL:-0.36541 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.469, 115, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [6.023, 103, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.477, 104, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.479, 101, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.476, 105, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.469, 115, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.082, 109, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.249, 129, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.464, 123, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.2202387059266102, nan]}
{'': [0.2281555318223155, nan], 'true': [0.2281555318223155, nan]}
{'': [0.22749999999999843, nan]}
{'': [0.22946164144590075, nan]}
{'': [0.22684310018903547, nan], 'true': [0.22684310018903547, nan]}
{'': [0.22023870592661157, nan]}
{'': [0.22420569329660367, nan]}
{'': [0.21107377647918146, nan]}
{'': [0.21497456384007854, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 3.32
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.7891834178581324;  // std dev = 0.253, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | else return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.1418510649004877;  // std dev = 5.58e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.12544463852839108;  // std dev = 7.88e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else if ( female(A) )
%   | | | then return 0.7331799252676823;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.6549572831786966;  // std dev = 1.368, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.1123163781936062;  // std dev = 9.31e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5701416308757999;  // std dev = 0.008, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.42921824739687275;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783665;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4285646928326878;  // std dev = 0.008, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.32988527365651976;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.328214414544287;  // std dev = 0.008, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.26118446856072725;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09295351932908127;  // std dev = 0.022, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08516431744679893;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2602855214633041;  // std dev = 0.007, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.2137366603106161;  // std dev = 0.002, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07875920818847333;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21336339519491473;  // std dev = 0.006, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.17959959600654127;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07323100399839369;  // std dev = 5.87e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17973671570979768;  // std dev = 0.005, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.15500385545317646;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06841365379188696;  // std dev = 1.67e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( female(A) )
%   | | then return 0.14374444380554313;  // std dev = 0.054, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.1456424636330214;  // std dev = 0.052, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.13629446597254638;  // std dev = 1.83e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.12748500669778573;  // std dev = 0.052, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else if ( actor(A) )
%   | then return -0.06418008413010261;  // std dev = 3.65e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( female(B) )
%   | | then return -0.06418008413010275;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.2437792379314566;  // std dev = 0.440, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21.566', 'seconds']
Refined model CLL: -0.06792


******************************************
Best model found
******************************************
Results 

CLL : -0.081802 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 3.32 

Total Inference Time : 1.9338583946228027 

Total revision time: 7.618920106887817
Best scored revision CLL: -0.06792


Results 

CLL : -0.081802 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 7.710480470657348 

Total Inference Time : 1.9338583946228027 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.066
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1683093629070002;  // std dev = 0.463, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.16782967892830172;  // std dev = 6.227, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.18631603648849854;  // std dev = 0.484, 155.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.10605392436153123;  // std dev = 0.468, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.08563663697421904;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.05611090538053216;  // std dev = 0.462, 188.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09052469278879176;  // std dev = 6.123, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.04478452063648917;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.04701369836867586;  // std dev = 0.473, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.569', 'seconds']
Parameter learned model CLL:-0.370758 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.463, 129, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [6.227, 117, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.484, 97, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.468, 121, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.467, 122, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.462, 130, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.123, 106, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.253, 120, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.473, 114, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.21396093682976386, nan]}
{'': [0.22158367346938557, nan], 'true': [0.22158367346938557, nan]}
{'': [0.23417273673256908, nan]}
{'': [0.21903186542242742, nan]}
{'': [0.21839506172839698, nan], 'true': [0.21839506172839698, nan]}
{'': [0.21333182435491105, nan]}
{'': [0.22858417608566445, nan]}
{'': [0.21966923368261643, nan]}
{'': [0.22349918875067462, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 3.557
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.12669529940952562;  // std dev = 0.154, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11219174598660671;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.10149348858544105;  // std dev = 1.13e-05, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.09260526235739683;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | else if ( female(A) )
%   | | | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.30004169099267897;  // std dev = 0.570, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08511174739347817;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.25775912377774535;  // std dev = 0.014, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12119451979315107;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07871406389723053;  // std dev = 1.05e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21158413398951587;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10920446550338807;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1784354014471604;  // std dev = 0.011, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09894847892746812;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.07361911238151267;  // std dev = 0.036, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.0683521561519946;  // std dev = 3.94e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15375910246379687;  // std dev = 0.010, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09068383073997763;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06412582074224112;  // std dev = 2.47e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( female(A) )
%   | then return 0.1332236168672316;  // std dev = 1.05e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.12469315062660438;  // std dev = 0.048, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21.499', 'seconds']
Refined model CLL: -0.066153


******************************************
Best model found
******************************************
Results 

CLL : -0.076608 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 3.557 

Total Inference Time : 2.1904397010803223 

Total revision time: 8.09303936767578
Best scored revision CLL: -0.066153


Results 

CLL : -0.076608 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 8.184599731445312 

Total Inference Time : 2.1904397010803223 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.587
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.17042963685389378;  // std dev = 0.463, 570.000 (wgt'ed) examples reached here.  /* #neg=392 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.16452405846711832;  // std dev = 10.934, 542.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.13712079908054212;  // std dev = 0.468, 548.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.12258683429015386;  // std dev = 0.471, 536.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.11310248528849166;  // std dev = 0.475, 518.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08151285645956592;  // std dev = 0.471, 535.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07546937444448852;  // std dev = 10.820, 520.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.052726448507905685;  // std dev = 10.883, 532.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.03455159098468698;  // std dev = 0.469, 544.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 551.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.330', 'seconds']
Parameter learned model CLL:-0.397036 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.463, 392, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [10.934, 364, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.468, 370, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.471, 358, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.475, 340, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.471, 357, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.82, 342, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.883, 354, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.469, 366, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.2147614650661771, nan]}
{'': [0.2205579989379168, nan], 'true': [0.2205579989379168, nan]}
{'': [0.21931109808727015, nan]}
{'': [0.22180608153263615, nan]}
{'': [0.22554821782621504, nan], 'true': [0.22554821782621504, nan]}
{'': [0.22201414970739672, nan]}
{'': [0.22513313609467372, nan]}
{'': [0.22263836282435773, nan]}
{'': [0.220142192906573, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 11.819
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.14185106490048816;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.12544463852839155;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else return -0.12544463852839177;  // std dev = 0.000, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1123163781936063;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.11231637819360676;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783621;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.10159632948783655;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.09269127618926107;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.09269127618926067;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.08518475138839678;  // std dev = 7.88e-08, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109173;  // std dev = 2.36e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.07877675473109146;  // std dev = 5.77e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.07324622576333686;  // std dev = 8.69e-08, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0684269778442027;  // std dev = 1.67e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.06842697784420279;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.06419184008202625;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '32.001', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.819 

Total Inference Time : 5.741503477096558 

Total revision time: 20.472040992736815
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 20.563601356506346 

Total Inference Time : 5.741503477096558 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.931
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.16849376268571906;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.16725822666197154;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.14551487059572335;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.17032678902749063;  // std dev = 0.486, 118.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.0440298366658276;  // std dev = 0.451, 158.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08690012961476422;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08604323840510714;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0531868448629739;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.058021179909328424;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.054', 'seconds']
Parameter learned model CLL:-0.383939 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.463, 100, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [5.487, 91, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.471, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.486, 73, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.451, 113, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.472, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.402, 83, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.467, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.477, 83, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.21403091557669546, nan]}
{'': [0.22139922145328597, nan], 'true': [0.22139922145328597, nan]}
{'': [0.2222222222222232, nan]}
{'': [0.23592358517667306, nan]}
{'': [0.20369331837846494, nan], 'true': [0.20369331837846494, nan]}
{'': [0.2230452216529282, nan]}
{'': [0.2279663085937494, nan]}
{'': [0.22304522165292873, nan]}
{'': [0.22796630859374944, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 2.234
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.60e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839144;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 7.15e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783615;  // std dev = 5.96e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( female(A) )
%   | | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.388674144511302;  // std dev = 0.119, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32548322033124727;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14425592975617366;  // std dev = 0.006, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.09322602610368161;  // std dev = 0.050, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25842733046123567;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.126176811242883;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08949184747162776;  // std dev = 0.359, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.1814087041954837;  // std dev = 0.090, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.20391030463592905;  // std dev = 0.054, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return -0.07899194588994396;  // std dev = 0.043, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07290368789520045;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.18078609875200496;  // std dev = 0.003, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1352466113703422;  // std dev = 0.000857, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15553709184110726;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11997077086653804;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06848657837331497;  // std dev = 0.033, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13618392287014894;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10787070325868066;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.0639056499375102;  // std dev = 1.29e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.18668805175408076;  // std dev = 0.301, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06390564993751027;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '27.282', 'seconds']
Refined model CLL: -0.066988


******************************************
Best model found
******************************************
Results 

CLL : -0.07127 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.234 

Total Inference Time : 1.4379453659057617 

Total revision time: 5.6095059299468994
Best scored revision CLL: -0.066988


Results 

CLL : -0.07127 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.701066293716431 

Total Inference Time : 1.4379453659057617 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.857
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.20166038548119172;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.16760709093753168;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09547696422820018;  // std dev = 0.453, 156.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.12259099010159498;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.14577007427747185;  // std dev = 0.484, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.05650588617324819;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.01790632030205972;  // std dev = 5.673, 158.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06792380656014486;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.015970016610647734;  // std dev = 0.458, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.576', 'seconds']
Parameter learned model CLL:-0.358001 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.475, 86, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [5.467, 89, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.453, 111, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.471, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.484, 75, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.464, 99, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.673, 113, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.457, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.458, 105, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.22551133383835537, nan]}
{'': [0.22304522165292864, nan], 'true': [0.22304522165292864, nan]}
{'': [0.20525147928994017, nan]}
{'': [0.2213992214532867, nan]}
{'': [0.23437499999999886, nan], 'true': [0.23437499999999886, nan]}
{'': [0.21484374999999983, nan]}
{'': [0.20369331837846397, nan]}
{'': [0.223867940528013, nan]}
{'': [0.20999999999999974, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 2.128
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.69e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.6778067455442877;  // std dev = 0.979, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.675995151341389;  // std dev = 0.978, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return -0.1272271896693185;  // std dev = 0.154, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11213877811294175;  // std dev = 5.16e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( female(A) )
%   | | then return 0.5656302139058323;  // std dev = 8.94e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.4827419229630956;  // std dev = 0.276, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.1014499319983671;  // std dev = 4.08e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4353486107517888;  // std dev = 0.070, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.5644200536386107;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.09256868526300832;  // std dev = 4.21e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( female(A) )
%   | | | then return 0.32367484643393674;  // std dev = 3.65e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.3095962917837483;  // std dev = 0.740, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.22500975293725836;  // std dev = 0.154, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.2765117655969042;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.08792556569620341;  // std dev = 0.215, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( actor(B) )
%   | | then return -0.07848140663264405;  // std dev = 1.05e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0.2205695959870693;  // std dev = 0.027, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(B) )
%   | | then return -0.07848140663264404;  // std dev = 1.97e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return -0.5622666429880735;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.0729899516387907;  // std dev = 4.89e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.18498981460896258;  // std dev = 0.024, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.4267100019708187;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06820260939784653;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( female(A) )
%   | | then return 0.1353400672017571;  // std dev = 0.097, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.1619348038725148;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06399384273230975;  // std dev = 4.21e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1398701299177168;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.35793875008300013;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.466', 'seconds']
Refined model CLL: -0.076009


******************************************
Best model found
******************************************
Results 

CLL : -0.096397 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 2.128 

Total Inference Time : 1.2095425128936768 

Total revision time: 5.174553499221802
Best scored revision CLL: -0.076009


Results 

CLL : -0.096397 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 5.266113862991333 

Total Inference Time : 1.2095425128936768 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.053
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.17998801555928362;  // std dev = 0.467, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.14940352417662373;  // std dev = 6.195, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.18648318471164757;  // std dev = 0.484, 150.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.12254511073460929;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.07446888245921678;  // std dev = 0.464, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08316670835864555;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06516675506515923;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08248908007781718;  // std dev = 5.970, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.021884682792051118;  // std dev = 0.466, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.626', 'seconds']
Parameter learned model CLL:-0.374451 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.467, 118, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [6.195, 122, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.484, 94, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.474, 109, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.464, 123, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.472, 111, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.11, 112, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.97, 98, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.466, 119, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.2182586867485801, nan]}
{'': [0.21562933972983472, nan], 'true': [0.21562933972983472, nan]}
{'': [0.23395555555555755, nan]}
{'': [0.22420569329660242, nan]}
{'': [0.21497456384008062, nan], 'true': [0.21497456384008062, nan]}
{'': [0.22288357416902957, nan]}
{'': [0.22222222222222143, nan]}
{'': [0.2314049586776858, nan]}
{'': [0.21760000000000118, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 3.542
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.822434649385226;  // std dev = 0.186, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.8248156017661784;  // std dev = 0.180, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return -0.14185106490048763;  // std dev = 8.69e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.12544463852839136;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7263798063385707;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.27351034127400614;  // std dev = 0.000566, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 8.82e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( female(A) )
%   | | then return 0.5083315739791652;  // std dev = 0.199, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | else return 0.5618822483727807;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783634;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( female(A) )
%   | | then return 0.3837571456775326;  // std dev = 0.192, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | else return 0.4223636961421877;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.31803357471741894;  // std dev = 0.743, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.3240017976707506;  // std dev = 5.16e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.09622419111537586;  // std dev = 0.348, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08490984047034081;  // std dev = 5.77e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2669021611414625;  // std dev = 0.074, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.5048355437718394;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07854064243191859;  // std dev = 2.36e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21803136100760923;  // std dev = 0.064, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.3747222942855603;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07304136042997927;  // std dev = 2.36e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.18315464023717065;  // std dev = 0.056, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.2883385538962541;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15733285556243226;  // std dev = 0.050, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.22990463072506837;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06831920382333692;  // std dev = 0.008, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06402928394439927;  // std dev = 2.79e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( female(A) )
%   | then return 0.1317835795329066;  // std dev = 0.062, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.12051018077331685;  // std dev = 0.061, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '31.382', 'seconds']
Refined model CLL: -0.070225


******************************************
Best model found
******************************************
Results 

CLL : -0.089474 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 3.542 

Total Inference Time : 2.289271593093872 

Total revision time: 8.102539510726928
Best scored revision CLL: -0.070225


Results 

CLL : -0.089474 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 8.136057109832763 

Total Inference Time : 2.289271593093872 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.089
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.20545432432107047;  // std dev = 0.476, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.16846398929480666;  // std dev = 6.200, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.14948532912288168;  // std dev = 0.475, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.11329841559331527;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.073759408452746;  // std dev = 0.463, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09560020366435558;  // std dev = 0.476, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08788980532896988;  // std dev = 6.102, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.04940019082708401;  // std dev = 6.200, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.00722307771100989;  // std dev = 0.461, 190.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.579', 'seconds']
Parameter learned model CLL:-0.37019 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.476, 109, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [6.2, 114, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.475, 111, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.471, 117, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.463, 128, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.476, 109, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.102, 104, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.2, 114, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.461, 132, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.22668435583921998, nan]}
{'': [0.22349918875067826, nan], 'true': [0.22349918875067826, nan]}
{'': [0.2254122754805501, nan]}
{'': [0.22158367346938804, nan]}
{'': [0.2145912822291595, nan], 'true': [0.2145912822291595, nan]}
{'': [0.22668435583922067, nan]}
{'': [0.229843011736018, nan]}
{'': [0.2234991887506767, nan]}
{'': [0.21207756232687, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 3.441
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.14185106490048763;  // std dev = 8.69e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.1254446385283913;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360624;  // std dev = 7.45e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09476617547542195;  // std dev = 0.223, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08502319710231612;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07863801327422766;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07312585470744377;  // std dev = 4.08e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07145943482757867;  // std dev = 0.375, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.06391087917394264;  // std dev = 4.59e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.1547623793209941;  // std dev = 0.315, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06390773388484354;  // std dev = 2.35e-05, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '29.145', 'seconds']
Refined model CLL: -0.063582


******************************************
Best model found
******************************************
Results 

CLL : -0.068336 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.441 

Total Inference Time : 2.6532537937164307 

Total revision time: 8.40115740776062
Best scored revision CLL: -0.063582


Results 

CLL : -0.068336 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.434675006866454 

Total Inference Time : 2.6532537937164307 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.616
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.17543948768417805;  // std dev = 0.465, 561.000 (wgt'ed) examples reached here.  /* #neg=383 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.16444345298151464;  // std dev = 10.929, 541.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.16402582557797718;  // std dev = 0.478, 505.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.12748410143095992;  // std dev = 0.474, 520.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.0943642920151885;  // std dev = 0.471, 537.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07625796762320844;  // std dev = 0.471, 538.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06970981517438875;  // std dev = 10.847, 525.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.039188969174589916;  // std dev = 10.982, 552.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.067572505024455;  // std dev = 0.480, 496.000 (wgt'ed) examples reached here.  /* #neg=318 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 521.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.357', 'seconds']
Parameter learned model CLL:-0.403779 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.465, 383, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [10.929, 363, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.478, 327, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.474, 342, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.471, 359, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.471, 360, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.847, 347, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.982, 374, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.48, 318, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.2166172578251878, nan]}
{'': [0.22076595337585775, nan], 'true': [0.22076595337585775, nan]}
{'': [0.2282364474071195, nan]}
{'': [0.2251331360946761, nan]}
{'': [0.22159802197878367, nan], 'true': [0.22159802197878367, nan]}
{'': [0.22138997526291446, nan]}
{'': [0.22409433106576387, nan]}
{'': [0.21848088636840562, nan]}
{'': [0.2300825962539023, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 11.81
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.14e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.1418510649004881;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.12544463852839177;  // std dev = 0.000, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360626;  // std dev = 4.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.11231637819360688;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783617;  // std dev = 5.27e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return -0.10159632948783656;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.09269127618926107;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.0926912761892607;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.67e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return -0.08518475138839678;  // std dev = 7.60e-08, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109172;  // std dev = 2.58e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.07877675473109144;  // std dev = 5.96e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.07324622576333681;  // std dev = 1.07e-07, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 2.69e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.06842697784420289;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06419184008202623;  // std dev = 0.000, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '37.231', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.81 

Total Inference Time : 5.722195386886597 

Total revision time: 20.457939744949343
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 20.491457344055178 

Total Inference Time : 5.722195386886597 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.892
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.16220298915356618;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.16811730631805732;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.12122787589894463;  // std dev = 0.462, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08799405292807524;  // std dev = 0.456, 153.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.16703593573451445;  // std dev = 0.487, 116.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0450781601492163;  // std dev = 0.457, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0573581218754522;  // std dev = 5.544, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07019163544796016;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0667663452597478;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.127', 'seconds']
Parameter learned model CLL:-0.374512 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.46, 103, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [5.487, 91, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.462, 101, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.456, 108, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.487, 71, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.457, 107, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.544, 97, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.446, 87, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.477, 83, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.21160518626734948, nan]}
{'': [0.2213992214532865, nan], 'true': [0.2213992214532865, nan]}
{'': [0.21322011634453064, nan]}
{'': [0.20761245674740425, nan]}
{'': [0.23744054696789457, nan], 'true': [0.23744054696789457, nan]}
{'': [0.2084054709141275, nan]}
{'': [0.21647490577266337, nan]}
{'': [0.2246900826446272, nan]}
{'': [0.22796630859375036, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 2.24
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.14185106490048766;  // std dev = 7.60e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360624;  // std dev = 6.66e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783624;  // std dev = 4.83e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.23626352068294032;  // std dev = 0.078, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return -0.08572374871667884;  // std dev = 0.050, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2121388494114118;  // std dev = 0.009, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10579185013946163;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07930903589527077;  // std dev = 0.047, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17884130712124421;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.0961243970422418;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.07366202598760711;  // std dev = 0.044, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06833224523329248;  // std dev = 4.21e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15406639828116964;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08459741791162143;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13503881764286138;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08147907492754893;  // std dev = 0.001, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06491454210049566;  // std dev = 0.061, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '13.879', 'seconds']
Refined model CLL: -0.064854


******************************************
Best model found
******************************************
Results 

CLL : -0.065786 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.24 

Total Inference Time : 1.4846551418304443 

Total revision time: 5.6021182842254635
Best scored revision CLL: -0.064854


Results 

CLL : -0.065786 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.6356358833312985 

Total Inference Time : 1.4846551418304443 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.835
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.164271384079104;  // std dev = 0.461, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.1969528912033574;  // std dev = 5.367, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1207649938010176;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1013505535959895;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then return 0.07969444676339986;  // std dev = 0.462, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.03662521358316768;  // std dev = 0.449, 161.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.10465461144365674;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.03020953115519278;  // std dev = 5.612, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.060037821170385745;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.161', 'seconds']
Parameter learned model CLL:-0.35884 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.461, 102, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [5.367, 80, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.464, 99, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.464, 99, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)', 'true': 'genre(E, F)'}, {'true,true': [0.462, 101, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.449, 116, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.39, 82, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.612, 105, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.472, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.21241149521033006, nan]}
{'': [0.2303999999999986, nan], 'true': [0.2303999999999986, nan]}
{'': [0.21484374999999956, nan]}
{'': [0.21484375000000083, nan]}
{'': [0.21322011634453036, nan], 'true': [0.21322011634453036, nan]}
{'': [0.2013811195555731, nan]}
{'': [0.22878045756091536, nan]}
{'': [0.21000000000000113, nan]}
{'': [0.22304522165292884, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
1;true;genre(E, F).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
4;true;genre(E, F).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 2.0
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.30e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1274851904923475;  // std dev = 0.154, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11211309317387472;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.4997262021679603;  // std dev = 0.185, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4241577551860988;  // std dev = 0.046, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.17256315463257305;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10431651267034425;  // std dev = 0.258, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( genre(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.09230870726133822;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.3252365329807285;  // std dev = 0.041, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14929608555119467;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08485997287870699;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2582672309244992;  // std dev = 0.036, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.13346893594687229;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2119475883839973;  // std dev = 0.031, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11975173339596644;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.08367847561871565;  // std dev = 0.396, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17870478334055148;  // std dev = 0.027, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10715841986140426;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07764045872437098;  // std dev = 0.381, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.13997534192907823;  // std dev = 0.050, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.14666909097742672;  // std dev = 0.052, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return -0.06805610752235573;  // std dev = 0.040, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06342867801314529;  // std dev = 4.59e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13621012394630852;  // std dev = 0.019, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11072706073772706;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.507', 'seconds']
Refined model CLL: -0.065687


******************************************
Best model found
******************************************
Results 

CLL : -0.072695 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.0 

Total Inference Time : 1.2205538749694824 

Total revision time: 4.989695272445679
Best scored revision CLL: -0.065687


Results 

CLL : -0.072695 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.023212871551514 

Total Inference Time : 1.2205538749694824 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.488
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.2017072173081025;  // std dev = 0.475, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.1711735820954308;  // std dev = 6.082, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16088243671153557;  // std dev = 0.478, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09827968156847394;  // std dev = 0.466, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.09218731496821764;  // std dev = 0.470, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06939203863480996;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08451192470616145;  // std dev = 6.023, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03180630433555648;  // std dev = 6.187, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03260187302237948;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.817', 'seconds']
Parameter learned model CLL:-0.367912 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.475, 107, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [6.082, 109, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.478, 102, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.466, 120, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [0.47, 114, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.468, 117, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.023, 103, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.187, 121, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.468, 117, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.22552598893447276, nan]}
{'': [0.22420569329660336, nan], 'true': [0.22420569329660336, nan]}
{'': [0.2288094856593479, nan]}
{'': [0.21694214876032894, nan]}
{'': [0.2208996539792398, nan], 'true': [0.2208996539792398, nan]}
{'': [0.21891810618463545, nan]}
{'': [0.22815553182231552, nan]}
{'': [0.2162852309361946, nan]}
{'': [0.2189181061846361, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
1;true;movie(E, F).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
4;true;movie(E, F).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 28.17
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048782;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839105;  // std dev = 8.30e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360625;  // std dev = 7.15e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783638;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( female(A) )
%   | | then return 0.38171290045857575;  // std dev = 0.132, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | else return 0.4175135841583101;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.3244961508672302;  // std dev = 0.029, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.14505413793603514;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09322964055312938;  // std dev = 0.054, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25775689259741286;  // std dev = 0.026, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12930107680729466;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.08601421073146376;  // std dev = 0.070, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07867754760199494;  // std dev = 5.87e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21158428620557324;  // std dev = 0.022, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11452698298505559;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07316015713514612;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1784366018421755;  // std dev = 0.020, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10314101823982737;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15376073141985552;  // std dev = 0.017, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09297219554675369;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07100526224530493;  // std dev = 0.296, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06396629212940136;  // std dev = 4.53e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13480109579929564;  // std dev = 0.016, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08636016226655725;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26', 'minutes', 'and', '12.072', 'seconds']
Refined model CLL: -0.06432


******************************************
Best model found
******************************************
Results 

CLL : -0.070822 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 28.17 

Total Inference Time : 41.87457251548767 

Total revision time: 73.27921105194092
Best scored revision CLL: -0.06432


Results 

CLL : -0.070822 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 73.34499097633362 

Total Inference Time : 41.87457251548767 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.558
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.19340905070645;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.13660246792244643;  // std dev = 6.355, 191.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11202470741574669;  // std dev = 0.458, 194.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11410987700454028;  // std dev = 0.466, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.09491544700874265;  // std dev = 0.466, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0833393134525555;  // std dev = 0.468, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0751876641935892;  // std dev = 6.227, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05501188479977192;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06756704993816688;  // std dev = 0.477, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 157.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.877', 'seconds']
Parameter learned model CLL:-0.365018 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.472, 115, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [6.355, 133, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.458, 136, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.466, 124, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [0.466, 124, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.468, 121, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.227, 117, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.253, 120, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.477, 108, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.2228607704901603, nan]}
{'': [0.2114525369370366, nan], 'true': [0.2114525369370366, nan]}
{'': [0.20958656605377898, nan]}
{'': [0.21712353580485538, nan]}
{'': [0.2171235358048524, nan], 'true': [0.2171235358048524, nan]}
{'': [0.21903186542242806, nan]}
{'': [0.22158367346938584, nan]}
{'': [0.21966923368261712, nan]}
{'': [0.22731891421106068, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
1;true;movie(E, F).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
4;true;movie(E, F).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 15.298
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.12544463852839108;  // std dev = 7.45e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360622;  // std dev = 7.60e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10547447534552902;  // std dev = 0.479, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(B) )
%   | | then return -0.09236564044349828;  // std dev = 4.08e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else if ( female(A) )
%   | | | then return 0.301025984143511;  // std dev = 0.403, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.3207118471601495;  // std dev = 2.11e-08, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08490831793366224;  // std dev = 4.08e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.25646861521163083;  // std dev = 0.014, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12288483660664457;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.21067370583846118;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10976082085416572;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(A) )
%   | | then return -0.07853933448793865;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return -0.23164896123059475;  // std dev = 0.530, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08308247340097119;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1777684647213316;  // std dev = 0.010, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10036801246532216;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.07304022536161021;  // std dev = 4.21e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( female(B) )
%   | | | then return -0.07273322657270956;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.13570349944482246;  // std dev = 0.534, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06782289985848755;  // std dev = 0.016, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15325370121836665;  // std dev = 0.009, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09119731962620445;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06366338112576443;  // std dev = 0.018, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1344051237341896;  // std dev = 0.008, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08374308372281475;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '3.124', 'seconds']
Refined model CLL: -0.065161


******************************************
Best model found
******************************************
Results 

CLL : -0.076565 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 15.298 

Total Inference Time : 4.927729368209839 

Total revision time: 23.593477064132692
Best scored revision CLL: -0.065161


Results 

CLL : -0.076565 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 23.659256988525392 

Total Inference Time : 4.927729368209839 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 2.833
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17771805538676097;  // std dev = 0.466, 557.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.16111692348194367;  // std dev = 10.953, 546.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16418604458698635;  // std dev = 0.478, 505.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10092894758996265;  // std dev = 0.465, 564.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.1216980999901712;  // std dev = 0.478, 503.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0831845618578733;  // std dev = 0.473, 527.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08179368506235304;  // std dev = 10.736, 505.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03947748621727476;  // std dev = 10.948, 545.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03557911663714155;  // std dev = 0.471, 538.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 522.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.506', 'seconds']
Parameter learned model CLL:-0.400498 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.466, 379, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [10.953, 368, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.478, 327, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.465, 386, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [0.478, 325, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.473, 349, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.736, 327, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.948, 367, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 360, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.21744469764608723, nan]}
{'': [0.21972654939687442, nan], 'true': [0.21972654939687442, nan]}
{'': [0.22823644740711485, nan]}
{'': [0.21599768623308266, nan]}
{'': [0.2286479927591473, nan], 'true': [0.2286479927591473, nan]}
{'': [0.22367847794072668, nan]}
{'': [0.22823644740711782, nan]}
{'': [0.21993434896052144, nan]}
{'': [0.22138997526291795, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
1;true;movie(E, F).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
4;true;movie(E, F).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 73.866
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.14185106490048818;  // std dev = 0.000, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( director(B), actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.1254446385283916;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return -0.12544463852839188;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1123163781936063;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.11231637819360683;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783621;  // std dev = 3.65e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.10159632948783656;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.09269127618926107;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return -0.09269127618926067;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 2.24e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.08518475138839679;  // std dev = 8.16e-08, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109176;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.07877675473109146;  // std dev = 5.77e-08, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.0732462257633368;  // std dev = 1.12e-07, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0684269778442027;  // std dev = 1.97e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.06842697784420261;  // std dev = 4.94e-08, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.06419184008202625;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '28', 'minutes', 'and', '29.704', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 73.866 

Total Inference Time : 44.4408438205719 

Total revision time: 123.0700458278656
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 123.1358257522583 

Total Inference Time : 44.4408438205719 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.234
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.20971143509951237;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.1822191982520988;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1203626619292281;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12466786313239189;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then return 0.10539589999576315;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12039111127784893;  // std dev = 0.485, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07010670584518042;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.02557988218268417;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.029677124617641062;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.724', 'seconds']
Parameter learned model CLL:-0.386302 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.477, 83, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [5.402, 83, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.465, 97, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.474, 87, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(E, F)'}, {'true,true': [0.475, 86, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.485, 74, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.402, 83, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.526, 95, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {}, {}]
{'': [0.22796630859375092, nan]}
{'': [0.22796630859374878, nan], 'true': [0.22796630859374878, nan]}
{'': [0.21647490577266396, nan]}
{'': [0.2246900826446292, nan]}
{'': [0.22551133383835528, nan], 'true': [0.22551133383835528, nan]}
{'': [0.23515288468328477, nan]}
{'': [0.22796630859375058, nan]}
{'': [0.21811224489795963, nan]}
{'': [0.2213992214532874, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
1;true;movie(E, F).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
4;true;movie(E, F).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 18.164
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.14185106490048766;  // std dev = 6.66e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839144;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360622;  // std dev = 6.66e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.388674144511302;  // std dev = 0.119, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return -0.10159632948783619;  // std dev = 5.58e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, F) )
%   | then if ( actor(A), director(B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.32548322033124727;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14429649730652938;  // std dev = 0.005, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09269127618926107;  // std dev = 1.05e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 3.80e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.25842733046123567;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12777936809146143;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07877675473109166;  // std dev = 3.80e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21205562268224035;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11332745259251362;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17878082126032935;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10242918946987342;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07317170552189499;  // std dev = 0.005, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15402087992975516;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09320387497344171;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.06837945155355085;  // std dev = 0.005, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13500353106520527;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0855880325872827;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06414705791944175;  // std dev = 0.004, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
