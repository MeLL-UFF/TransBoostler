Starting experiment 17_cora_yeast 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.547
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2006686201388824;  // std dev = 7.563, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13934541020136373;  // std dev = 7.762, 283.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14359159757513373;  // std dev = 7.623, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11812665305494466;  // std dev = 7.637, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10542577933547558;  // std dev = 7.594, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07721838632232232;  // std dev = 7.644, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08211924453557011;  // std dev = 7.532, 250.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.051119025984381936;  // std dev = 7.616, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03811474543028835;  // std dev = 7.630, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.054465918329736414;  // std dev = 7.490, 245.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.458', 'seconds']
Parameter learned model CLL:-0.37825 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.563, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.762, 196, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.623, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.637, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.594, 171, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.644, 178, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.532, 163, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.616, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.63, 176, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.49, 158, 87]}]
{'': [nan, 0.22519995039990162], 'false': [nan, 0.22519995039990162]}
{'': [0.0, 0.2129131341382716], 'false': [nan, 0.212913134138272], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22179651535458164], 'false': [nan, 0.22179651535458164], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22094524793388465], 'false': [nan, 0.22094524793388473]}
{'': [2.3129646346357427e-18, 0.22349918875067576], 'false': [nan, 0.22349918875067548], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [nan, 0.22051975792096765], 'false': [nan, 0.22051975792096765]}
{'': [0.0, 0.22689599999999968], 'false': [nan, 0.22689599999999968], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.2222222222222224], 'false': [nan, 0.22222222222222077], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [0.0, 0.22137084532088092], 'false': [nan, 0.22137084532088203], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22900458142440658], 'false': [nan, 0.22900458142440658], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 52.45
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(C, E), phenotype(A, F) )
%   | then if ( interaction(A, G), phenotype(D, H) )
%   | | then if ( interaction(C, C), phenotype(G, E) )
%   | | | then return 0.15444523139580865;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.2929315437951645;  // std dev = 2.377, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( complex(A, I), complex(D, I) )
%   | | | then return 0.06867525088898598;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.1402002171507944;  // std dev = 2.810, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | else if ( enzyme(A, J), enzyme(C, K) )
%   | | then return 0.09814893509951236;  // std dev = 0.427, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else if ( interaction(A, L), interaction(C, L) )
%   | | | then return 0.4831489350995123;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return 0.2500408269914035;  // std dev = 4.199, 74.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=29 */
%   else if ( location(A, M) )
%   | then return 0.16584124279182005;  // std dev = 0.462, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else return -0.030739953789376676;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15545083631029702;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, A), enzyme(A, D) )
%   | then return 0.5939045948414929;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.0917730688519661;  // std dev = 3.201, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.171875519674055;  // std dev = 2.305, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.11013018735624656;  // std dev = 2.783, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.19350116640736126;  // std dev = 5.689, 140.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=51 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15736862121419587;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, A), interaction(D, D) )
%   | | then if ( location(A, F) )
%   | | | then return 0.07975219518824878;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.0017460717956024954;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, D), location(D, G) )
%   | | | then return 0.45597154379254623;  // std dev = 0.837, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1990135989763562;  // std dev = 3.400, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | else if ( interaction(H, A), location(A, I) )
%   | | then if ( interaction(J, H), complex(J, K) )
%   | | | then return 0.12430096014173542;  // std dev = 5.694, 148.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=48 */
%   | | | else return 0.018433619910127787;  // std dev = 2.501, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.23044111316948857;  // std dev = 1.707, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.1561909988265931;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( enzyme(C, E), interaction(A, F) )
%   | then if ( complex(F, G), interaction(H, C) )
%   | | then return 0.5479660770988338;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(C, C) )
%   | | | then return 0.058830976827842364;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.30820602576531014;  // std dev = 1.291, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( complex(A, I) )
%   | | then if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.14106540753839394;  // std dev = 2.559, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.26826626372978885;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | else if ( phenotype(A, L), location(C, M) )
%   | | | then return 0.21027969083073794;  // std dev = 2.269, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.07258624941721607;  // std dev = 3.227, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   else if ( location(A, N) )
%   | then return 0.04328848875823428;  // std dev = 0.444, 104.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=28 */
%   | else return 0.20612479827504754;  // std dev = 0.497, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15451607712471818;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( complex(D, F), interaction(A, G) )
%   | | then if ( complex(G, F) )
%   | | | then return -0.15101767080056921;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.05146211021176956;  // std dev = 1.491, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(H, D), location(A, I) )
%   | | | then return 0.03728758811052746;  // std dev = 3.251, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return 0.3506882085073222;  // std dev = 1.180, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then if ( interaction(K, L), complex(L, J) )
%   | | | then return 0.25647912140748275;  // std dev = 1.877, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.11510194155331357;  // std dev = 2.287, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.013522046638772515;  // std dev = 2.428, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.09827921249938042;  // std dev = 5.154, 120.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=40 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( enzyme(A, E), location(A, D) )
%   | then if ( interaction(F, C) )
%   | | then if ( phenotype(C, G), complex(F, H) )
%   | | | then return 0.007672840899997096;  // std dev = 2.529, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.15534664416864136;  // std dev = 2.403, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else return 0.40239864930897057;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(C, I), interaction(J, C) )
%   | | then return -0.02402119560526965;  // std dev = 0.437, 133.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=34 */
%   | | else return 0.04619907721397269;  // std dev = 0.455, 84.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=25 */
%   else if ( interaction(A, K), interaction(K, K) )
%   | then return -0.03690799386306538;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( phenotype(A, L) )
%   | | then return 0.358744801688213;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.09179792956088524;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.10122718121471737;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15785381088087236;  // std dev = 0.017, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), interaction(F, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.20177553998108622;  // std dev = 2.177, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.06341425439890722;  // std dev = 2.625, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | else if ( interaction(G, A), location(A, H) )
%   | | | then return 0.17056106413543515;  // std dev = 2.360, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.4854557352210886;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( interaction(K, A) )
%   | | | then return 0.013418297806899753;  // std dev = 2.390, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return -0.1503900025443835;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.11570316979947746;  // std dev = 5.016, 106.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=41 */
%   | | | else return 0.007614551932835117;  // std dev = 1.723, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1695692435811011;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( enzyme(A, F), complex(A, G) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.4086838375558833;  // std dev = 0.799, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.047318655439786896;  // std dev = 1.797, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( location(A, E), complex(D, J) )
%   | | | then return -0.003893843899946645;  // std dev = 3.895, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | | else return -0.08357382290499096;  // std dev = 3.139, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | else if ( enzyme(A, K), phenotype(A, L) )
%   | | then if ( enzyme(M, K), interaction(M, M) )
%   | | | then return 0.05075103077373366;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.028765646453278556;  // std dev = 2.087, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return 0.027132981986715512;  // std dev = 2.201, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.11042255320570131;  // std dev = 4.335, 79.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10112534293063587;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( interaction(D, F), phenotype(D, G) )
%   | | then if ( location(D, H), location(A, I) )
%   | | | then return 0.08271085081714293;  // std dev = 2.329, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.08690590365809168;  // std dev = 1.219, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( enzyme(D, J) )
%   | | | then return 0.02022058717967245;  // std dev = 1.366, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.1265739288022756;  // std dev = 1.819, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( complex(K, M), location(A, N) )
%   | | | then return 0.0169315721650145;  // std dev = 4.954, 112.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
%   | | | else return 0.11684132698375456;  // std dev = 3.994, 65.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=28 */
%   | | else if ( interaction(A, P) )
%   | | | then return 0.20537003682758204;  // std dev = 1.008, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3042764716949951;  // std dev = 1.126, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.0925931944208;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), enzyme(A, E) )
%   | then if ( interaction(F, D), interaction(F, F) )
%   | | then if ( complex(F, G), complex(D, G) )
%   | | | then return 0.2658554381089681;  // std dev = 1.482, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.024362575495279256;  // std dev = 2.495, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.02340655353646138;  // std dev = 1.841, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return -0.13040725614875776;  // std dev = 2.977, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.01923704302839111;  // std dev = 3.281, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return -0.1397593891542171;  // std dev = 1.982, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.4157971642565441;  // std dev = 0.896, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.09391016566013;  // std dev = 4.400, 78.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=33 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '22.066', 'seconds']
Refined model CLL: -0.412228


******************************************
Best model found
******************************************
Results 

CLL : -0.377655 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 52.45 

Total Inference Time : 26.776925563812256 

Total revision time: 82.9794571609497
Best scored revision CLL: -0.37825


Results 

CLL : -0.377655 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 84.84712912750244 

Total Inference Time : 26.776925563812256 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.541
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2269432613406476;  // std dev = 8.102, 282.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16920254057334272;  // std dev = 8.279, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15062086629690977;  // std dev = 8.236, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11119239784838506;  // std dev = 8.327, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08103552629822582;  // std dev = 8.391, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07199655717387274;  // std dev = 8.353, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.050873531461537544;  // std dev = 8.397, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03971050102879345;  // std dev = 8.403, 324.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0655745001669793;  // std dev = 8.191, 293.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.015000090466555783;  // std dev = 8.422, 327.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.177', 'seconds']
Parameter learned model CLL:-0.368716 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.102, 178, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.279, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.236, 195, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.327, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.391, 218, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.353, 212, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.397, 219, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.403, 220, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.191, 189, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.422, 223, 104]}]
{'': [0.0, 0.23278507117348274], 'false': [nan, 0.23278507117348274], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22471378661650165], 'false': [nan, 0.22471378661650168], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.226843100189035], 'false': [nan, 0.226843100189035]}
{'': [0.0, 0.22222222222222116], 'false': [nan, 0.2222222222222205], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21866440337949805], 'false': [nan, 0.21866440337949775], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22079794904662792], 'false': [nan, 0.22079794904662792]}
{'': [0.0, 0.2183093866518408], 'false': [nan, 0.2183093866518408], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21795458009449833], 'false': [nan, 0.21795458009449817], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22896015096273667], 'false': [nan, 0.22896015096273642], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21689158226486757], 'false': [nan, 0.21689158226486757], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 13.958
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D) )
%   | then if ( complex(E, D), enzyme(E, F) )
%   | | then if ( interaction(G, E), enzyme(G, H) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.14386322081379807;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( complex(I, D), interaction(A, I) )
%   | | | then return 0.18423589162125148;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return 0.35814893509951234;  // std dev = 2.449, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( interaction(J, A), interaction(A, J) )
%   | | then if ( interaction(J, J), complex(J, K) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2581489350995123;  // std dev = 2.449, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.08395538671241559;  // std dev = 2.328, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.17283424978482612;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(E, E), enzyme(A, F) )
%   | | then if ( enzyme(E, G) )
%   | | | then return 0.26523634126217427;  // std dev = 1.310, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.499348731493989;  // std dev = 1.149, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( phenotype(E, D), complex(E, H) )
%   | | | then return 0.20245758405887523;  // std dev = 4.187, 75.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
%   | | | else return 0.08949223645373686;  // std dev = 4.312, 98.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=25 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.32840738048618223;  // std dev = 1.405, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.8290620129010365;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.058741135785634994;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.23851972106279762;  // std dev = 4.634, 89.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=36 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( phenotype(F, H) )
%   | | | then return 0.2596092223455287;  // std dev = 2.764, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.04106057158954798;  // std dev = 1.728, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( interaction(A, I), interaction(E, I) )
%   | | | then return 0.09975457126422749;  // std dev = 2.777, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.16140420451129533;  // std dev = 4.406, 86.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=30 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then return 0.08385739289944551;  // std dev = 0.461, 89.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=27 */
%   | | else return 0.14824262448146286;  // std dev = 0.474, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   else if ( interaction(L, A), complex(L, M) )
%   | then if ( interaction(A, N) )
%   | | then return 0.14753177251918678;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.2094761080808746;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.5960676879938002;  // std dev = 0.890, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12095278896868923;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(A, F), complex(D, F) )
%   | | then if ( interaction(A, G), phenotype(G, E) )
%   | | | then return 0.15176432462246456;  // std dev = 2.610, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.43083405826660554;  // std dev = 0.829, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.04751128377602006;  // std dev = 3.604, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | else return 0.10239845355322225;  // std dev = 6.061, 166.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=55 */
%   | else if ( interaction(J, A), phenotype(A, K) )
%   | | then if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.14565214509104626;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5106037163129677;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( phenotype(A, M), complex(A, N) )
%   | | | then return 0.02713972706238943;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.150799021894868;  // std dev = 2.497, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10918723819108624;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, F), phenotype(D, G) )
%   | | then if ( interaction(A, D), interaction(D, D) )
%   | | | then return 0.14023263627990307;  // std dev = 1.103, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.04272891543949689;  // std dev = 2.653, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | else if ( location(A, H), phenotype(D, I) )
%   | | | then return 0.12622928214358703;  // std dev = 3.718, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | | else return -0.020273613006673824;  // std dev = 2.397, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( enzyme(J, L), interaction(J, M) )
%   | | | then return 0.0021291445259999414;  // std dev = 2.094, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.1828673698506485;  // std dev = 3.459, 49.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=21 */
%   | | else if ( interaction(A, N) )
%   | | | then return -0.014841073092778413;  // std dev = 1.510, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.08556067829139469;  // std dev = 4.715, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( interaction(E, A), phenotype(E, C) )
%   | then if ( location(A, F), location(E, F) )
%   | | then if ( enzyme(E, D) )
%   | | | then return 0.24115984280706615;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.03793408677932462;  // std dev = 2.233, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else return 0.27009127264471733;  // std dev = 0.978, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( complex(A, G) )
%   | | then return 0.01665967910020602;  // std dev = 0.431, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( enzyme(H, D), complex(H, I) )
%   | | | then return 0.3658719506176872;  // std dev = 1.374, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.24042623128511506;  // std dev = 1.240, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, J), interaction(J, J) )
%   | then if ( phenotype(J, K), complex(A, L) )
%   | | then return 0.21539130593842265;  // std dev = 0.501, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.054517622249158085;  // std dev = 0.479, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | else return 0.02131996821367605;  // std dev = 0.454, 224.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=65 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10044784742838317;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( enzyme(A, E), enzyme(D, F) )
%   | | then return 0.13729496125283522;  // std dev = 0.499, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.0869675214048679;  // std dev = 1.704, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.07916915976589314;  // std dev = 3.631, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( enzyme(H, I), phenotype(G, J) )
%   | | | then return 0.3533274097483428;  // std dev = 1.605, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return -0.0340299156461211;  // std dev = 4.164, 91.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=23 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.10677581723542459;  // std dev = 4.070, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
%   | | | else return 0.05829425332629351;  // std dev = 3.933, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( phenotype(D, E), phenotype(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.03563411483785085;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.10722785722904109;  // std dev = 1.961, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( enzyme(D, F) )
%   | | | then return 0.33769832185109977;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.032356113855886964;  // std dev = 2.832, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( interaction(A, I), enzyme(I, G) )
%   | | | then return -0.22274218410310362;  // std dev = 1.289, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.01834765916652403;  // std dev = 3.354, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.19875234414949716;  // std dev = 2.981, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return 0.033672488604324334;  // std dev = 5.735, 150.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11068563400025822;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( complex(D, F), location(A, G) )
%   | | then if ( interaction(H, A), complex(H, F) )
%   | | | then return 0.010006144667619229;  // std dev = 3.859, 67.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
%   | | | else return -0.1345004933689003;  // std dev = 1.826, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else return 0.2662904158614013;  // std dev = 1.012, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( phenotype(A, K), interaction(A, I) )
%   | | | then return 0.22408774908831589;  // std dev = 1.915, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.072725264479333;  // std dev = 5.614, 135.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=49 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.22112130102719646;  // std dev = 1.582, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.04491435804217944;  // std dev = 3.101, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11059636591720699;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( complex(E, F), interaction(G, A) )
%   | | then if ( interaction(E, G), complex(G, H) )
%   | | | then return 0.3797531093071881;  // std dev = 1.175, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.14022298083724383;  // std dev = 1.485, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( enzyme(E, I) )
%   | | | then return -0.08338462315489902;  // std dev = 1.497, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.2436178479531732;  // std dev = 0.862, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.04661296512890619;  // std dev = 2.014, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.10985685448058051;  // std dev = 3.053, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else if ( interaction(M, A), complex(A, N) )
%   | | | then return -0.05396600810647863;  // std dev = 4.019, 80.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=22 */
%   | | | else return 0.025934486377821767;  // std dev = 5.602, 141.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=46 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.851', 'seconds']
Refined model CLL: -0.40094


******************************************
Best model found
******************************************
Results 

CLL : -0.369631 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.958 

Total Inference Time : 7.10054612159729 

Total revision time: 25.339378284454348
Best scored revision CLL: -0.368716


Results 

CLL : -0.369631 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 27.207050251007082 

Total Inference Time : 7.10054612159729 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.581
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19148226843284577;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1653354551304659;  // std dev = 7.839, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1641593167240989;  // std dev = 7.702, 259.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12945322797489878;  // std dev = 7.750, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11057735608662815;  // std dev = 7.726, 262.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10086026190932243;  // std dev = 7.660, 254.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.043810537952511636;  // std dev = 7.880, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.025932391115108144;  // std dev = 7.932, 291.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03181254555852421;  // std dev = 7.866, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04755361307656958;  // std dev = 7.734, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.415', 'seconds']
Parameter learned model CLL:-0.377893 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.832, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.839, 185, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.702, 167, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.75, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.726, 170, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.66, 162, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.88, 191, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.932, 199, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.866, 189, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.86e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.734, 171, 92]}]
{'': [nan, 0.2222222222222231], 'false': [nan, 0.2222222222222231]}
{'': [0.0, 0.22181965097942047], 'false': [nan, 0.22181965097941983], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22903653791684705], 'false': [nan, 0.22903653791684705], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22664293342826566], 'false': [nan, 0.2266429334282662], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22784220033797473], 'false': [nan, 0.22784220033797511], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.23101246202492462], 'false': [nan, 0.23101246202492462], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [nan, 0.2194059109240964], 'false': [nan, 0.2194059109240964]}
{'': [0.0, 0.21619961974941343], 'false': [nan, 0.2161996197494116], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22020997707729148], 'false': [nan, 0.2202099770772918], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [1.1564823173178713e-18, 0.22744292963610985], 'false': [nan, 0.22744292963610985], 'true': [nan, 1.1564823173178713e-18], 'true,false': [nan, 1.1564823173178713e-18], 'true,false,false': [nan, 1.1564823173178713e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 9.96
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( complex(C, E), interaction(C, C) )
%   | then if ( complex(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.16723984419042145;  // std dev = 0.462, 110.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=34 */
%   else if ( interaction(F, A), phenotype(A, G) )
%   | then if ( location(F, H), interaction(A, I) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(F, F) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( complex(A, J), enzyme(A, K) )
%   | | then return 0.16117923812981538;  // std dev = 0.460, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.324815601766179;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.21341209299424788;  // std dev = 4.172, 76.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=27 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( complex(E, F), enzyme(A, G) )
%   | | then if ( phenotype(A, H), interaction(I, E) )
%   | | | then return 0.044155144856163925;  // std dev = 1.745, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.17714322515209915;  // std dev = 2.925, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | else if ( location(E, D) )
%   | | | then return 0.3196002317583713;  // std dev = 4.080, 67.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=33 */
%   | | | else return 0.16569561733306273;  // std dev = 3.556, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | else if ( complex(A, J) )
%   | | then if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.10018032875312662;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.2628434527226548;  // std dev = 1.311, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.1323356134692252;  // std dev = 2.209, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.03937864393461618;  // std dev = 2.658, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.21837106042470464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(A, E) )
%   | | then if ( enzyme(D, F), enzyme(A, F) )
%   | | | then return 0.05114171991357741;  // std dev = 1.491, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.17157933138769563;  // std dev = 2.475, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( location(A, G), complex(D, H) )
%   | | | then return 0.3945301918396151;  // std dev = 1.103, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.22906511600101695;  // std dev = 1.707, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( enzyme(A, K), complex(A, L) )
%   | | | then return 0.23420082003702833;  // std dev = 1.313, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.03537087330490139;  // std dev = 3.140, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.1703131572311564;  // std dev = 3.979, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
%   | | | else return 0.10470864743301274;  // std dev = 4.563, 98.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=30 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14124848451376415;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), location(A, E) )
%   | then if ( complex(A, F), interaction(A, G) )
%   | | then if ( phenotype(G, D), complex(G, F) )
%   | | | then return 0.07167917222982734;  // std dev = 1.817, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.24363493543344247;  // std dev = 1.938, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( location(H, E), interaction(H, A) )
%   | | | then return 0.018387224596471113;  // std dev = 2.699, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return 0.09108135516492877;  // std dev = 3.333, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( complex(I, J) )
%   | | | then return -0.003471368339068934;  // std dev = 1.750, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.21200676782381714;  // std dev = 1.494, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.20925090283461242;  // std dev = 3.291, 44.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
%   | | | else return 0.13430957313516675;  // std dev = 4.180, 77.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=27 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.16317333150030508;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( phenotype(A, E), location(A, F) )
%   | | then if ( interaction(D, G) )
%   | | | then return -0.020077626835158905;  // std dev = 2.605, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return -0.08753294392065207;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(H, A), complex(D, I) )
%   | | | then return 0.2375951285944307;  // std dev = 2.457, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.027510939985425295;  // std dev = 2.977, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | else if ( enzyme(A, J), complex(A, K) )
%   | | then if ( interaction(A, L) )
%   | | | then return 0.30576311689092706;  // std dev = 1.493, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.14414036499465044;  // std dev = 2.232, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.003981769226274462;  // std dev = 3.642, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | | else return 0.12065460906739346;  // std dev = 4.148, 74.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11310814673862912;  // std dev = 0.014, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( phenotype(D, F), complex(D, G) )
%   | | then if ( enzyme(D, H), location(A, E) )
%   | | | then return 0.017547138834371003;  // std dev = 1.893, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.21814415575161755;  // std dev = 2.769, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | else if ( location(A, E), interaction(I, D) )
%   | | | then return 0.01661573251081643;  // std dev = 4.149, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | | | else return 0.06372140611251878;  // std dev = 3.856, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( interaction(K, L) )
%   | | | then return 0.14406284369860026;  // std dev = 3.458, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return 0.4977886573691678;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, M) )
%   | | | then return -0.10339224765332192;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.08864296612553409;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C), phenotype(A, D) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then if ( phenotype(E, F) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.08812981545778645;  // std dev = 1.739, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.11282319026816703;  // std dev = 1.531, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else return 0.19007192282534327;  // std dev = 1.191, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then return -0.06259701431260885;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( complex(A, H), enzyme(A, I) )
%   | | | then return 0.22768078819901388;  // std dev = 2.070, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.12413173389449207;  // std dev = 3.213, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   else if ( location(A, J) )
%   | then if ( interaction(K, A) )
%   | | then return -0.008128253119106218;  // std dev = 0.450, 145.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=41 */
%   | | else return 0.1247667708820376;  // std dev = 0.495, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | else return -0.15330362723185037;  // std dev = 0.401, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09799246286698099;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F), complex(A, G) )
%   | | then if ( interaction(F, F), phenotype(F, H) )
%   | | | then return -0.05884688189283065;  // std dev = 1.499, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.029527145009409294;  // std dev = 1.941, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return 0.4414271774985159;  // std dev = 1.240, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.11710743786409694;  // std dev = 3.711, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( interaction(K, K) )
%   | | | then return 0.7108986140718991;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0015171223030848724;  // std dev = 2.029, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( location(A, M), enzyme(A, N) )
%   | | | then return -0.06021443631754959;  // std dev = 2.968, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | | else return -0.01257498955733018;  // std dev = 4.810, 114.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=32 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( phenotype(A, E), location(A, H) )
%   | | | then return -0.017665524816663516;  // std dev = 1.872, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.2378960987423629;  // std dev = 1.495, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(I, D), enzyme(A, J) )
%   | | | then return -0.16403241915917047;  // std dev = 2.189, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return -0.020380301521919175;  // std dev = 3.909, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( interaction(A, K) )
%   | | | then return 0.4449916684353177;  // std dev = 0.881, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.16169161172140442;  // std dev = 2.876, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return -0.11660693750593844;  // std dev = 1.786, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.07517587861169336;  // std dev = 4.477, 80.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=32 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( location(D, F), interaction(E, E) )
%   | | then if ( enzyme(A, G), complex(A, H) )
%   | | | then return 0.14922164455228748;  // std dev = 1.531, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.6407501289485404;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, D) )
%   | | | then return 0.04370783208852884;  // std dev = 3.227, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | | else return 0.4687369735349019;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.04380057339092713;  // std dev = 2.664, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return -0.09551352885089745;  // std dev = 2.808, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else if ( interaction(A, N) )
%   | | | then return -0.015087423947967997;  // std dev = 3.357, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.11374906752871604;  // std dev = 3.874, 62.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=26 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.954', 'seconds']
Refined model CLL: -0.435445


******************************************
Best model found
******************************************
Results 

CLL : -0.37802 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.96 

Total Inference Time : 4.506733179092407 

Total revision time: 18.90215264892578
Best scored revision CLL: -0.377893


Results 

CLL : -0.37802 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 20.769824615478516 

Total Inference Time : 4.506733179092407 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.491
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18639320990867314;  // std dev = 7.601, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1892834406174311;  // std dev = 7.446, 242.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12571788886075855;  // std dev = 7.649, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11510210650411297;  // std dev = 7.594, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11375526901848447;  // std dev = 7.487, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09132319917398268;  // std dev = 7.495, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0735697610498818;  // std dev = 7.495, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06012434715781904;  // std dev = 7.487, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07999160946668131;  // std dev = 7.299, 226.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04071510635215612;  // std dev = 7.429, 240.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.185', 'seconds']
Parameter learned model CLL:-0.398692 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.601, 176, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.446, 156, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.649, 183, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.594, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.487, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.495, 162, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.495, 162, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.487, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.299, 140, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.429, 154, 86]}]
{'': [0.0, 0.22049997086416934], 'false': [nan, 0.22049997086416934], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2290827129294459], 'false': [nan, 0.22908271292944574]}
{'': [0.0, 0.2174928483575401], 'false': [nan, 0.2174928483575401], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22093040325303612], 'false': [nan, 0.22093040325303656], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22695012211313026], 'false': [nan, 0.22695012211313012], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22652185223725216], 'false': [nan, 0.22652185223725216]}
{'': [nan, 0.22652185223725388], 'false': [nan, 0.22652185223725388]}
{'': [2.3129646346357427e-18, 0.22695012211313104], 'false': [nan, 0.2269501221131313], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [0.0, 0.23572715169551306], 'false': [nan, 0.23572715169551334], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22993055555555578], 'false': [nan, 0.22993055555555578]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 9.879
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), complex(F, G) )
%   | | then if ( enzyme(F, H), complex(A, G) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2867203636709409;  // std dev = 3.703, 56.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=24 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1615197216163663;  // std dev = 4.337, 89.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=27 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then if ( phenotype(L, M), interaction(K, K) )
%   | | | then return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.16003572755234255;  // std dev = 3.342, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.0803711573217346;  // std dev = 2.160, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( interaction(D, D), phenotype(A, E) )
%   | then return 0.22416709590657286;  // std dev = 0.489, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else return 0.05519560545252511;  // std dev = 0.422, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   else if ( enzyme(A, F), phenotype(A, G) )
%   | then if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.43021552164511456;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5830342419990205;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A), phenotype(J, G) )
%   | | | then return 0.5039947092245346;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18273994514850064;  // std dev = 2.137, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else if ( interaction(K, A), interaction(A, K) )
%   | | then return 0.05914543021664665;  // std dev = 0.419, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.24536713840359053;  // std dev = 3.257, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | | else return 0.12610080390235837;  // std dev = 4.336, 90.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( phenotype(E, F), interaction(E, G) )
%   | | then if ( interaction(G, H), interaction(E, H) )
%   | | | then return 0.04883233760804561;  // std dev = 2.266, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return -0.03404968701215638;  // std dev = 1.579, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( enzyme(E, I) )
%   | | | then return 0.18431620458992715;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1377590417138786;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then if ( phenotype(J, K), interaction(J, L) )
%   | | | then return 0.09316201211146909;  // std dev = 2.523, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.2665344856853295;  // std dev = 2.313, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( enzyme(A, M), complex(A, N) )
%   | | | then return 0.2421935024233126;  // std dev = 1.292, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.1092117541237896;  // std dev = 5.839, 161.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=49 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.8014524203015917;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, G), location(A, H) )
%   | | | then return 0.07686906380514069;  // std dev = 1.660, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.24213459246436528;  // std dev = 2.223, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(A, K) )
%   | | | then return 0.05729101127828676;  // std dev = 3.858, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | | | else return 0.1355852890895794;  // std dev = 3.951, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.08651726856497738;  // std dev = 2.912, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0.28666188026525485;  // std dev = 2.532, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13162628234810278;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( phenotype(F, D) )
%   | | | then return 0.5378884024951521;  // std dev = 0.824, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.20321154287776252;  // std dev = 1.310, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( phenotype(E, D), complex(E, H) )
%   | | | then return 0.042643695689802086;  // std dev = 2.379, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.15901688777883244;  // std dev = 3.069, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), interaction(I, J) )
%   | | | then return -0.01345918825563667;  // std dev = 3.871, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
%   | | | else return 0.06683486369345641;  // std dev = 4.418, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.12293970818143563;  // std dev = 1.787, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.42023366809695606;  // std dev = 0.826, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(D, D), enzyme(A, E) )
%   | then return -0.12691529814413474;  // std dev = 0.422, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else return 0.0032338544771604192;  // std dev = 0.455, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( complex(A, G), enzyme(F, H) )
%   | | then return 0.3787222100975531;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, A), enzyme(A, I) )
%   | | | then return -0.01940470666221054;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.18833790770892467;  // std dev = 1.988, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(J, L), interaction(A, L) )
%   | | | then return -0.046651272392637645;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.2654074989456728;  // std dev = 1.951, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.03119627617364626;  // std dev = 4.041, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
%   | | | else return 0.09295022302703518;  // std dev = 2.915, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( phenotype(A, E), phenotype(C, F) )
%   | then return -0.03582988805028153;  // std dev = 0.443, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | else if ( interaction(A, G) )
%   | | then return -0.003724212717045116;  // std dev = 0.451, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( complex(C, H) )
%   | | | then return 0.13699491316269885;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.06334501835566043;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   else if ( enzyme(A, I) )
%   | then return 0.32544837444749086;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(J, A), complex(A, K) )
%   | | then if ( interaction(L, J), complex(L, K) )
%   | | | then return 0.047361027606522554;  // std dev = 2.384, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.3654285196403242;  // std dev = 1.381, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.09435147640654915;  // std dev = 3.795, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   | | | else return 0.030855853786706175;  // std dev = 3.843, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(D, F), interaction(H, D) )
%   | | | then return 0.1542831438591401;  // std dev = 2.176, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return -0.04201705532406117;  // std dev = 2.598, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | else if ( complex(A, E) )
%   | | | then return -0.019605513068345067;  // std dev = 1.457, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.18948197814811338;  // std dev = 2.793, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), interaction(K, K) )
%   | | | then return -2.3094624741805666E-4;  // std dev = 2.801, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.14302178443130428;  // std dev = 2.629, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.011195385261339215;  // std dev = 3.482, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | | | else return -0.09621818529362433;  // std dev = 2.662, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11737028613250201;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), interaction(E, F) )
%   | | then if ( interaction(E, E), interaction(A, F) )
%   | | | then return 0.09601409102672728;  // std dev = 1.921, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.024084722025994834;  // std dev = 5.602, 150.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=44 */
%   | | else return 0.3266520663683131;  // std dev = 1.066, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( location(A, I), interaction(G, J) )
%   | | | then return 0.02160147916177572;  // std dev = 2.438, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return -0.12214964159476603;  // std dev = 1.278, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.09375573108842646;  // std dev = 3.326, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | | else return 0.31301041668304325;  // std dev = 1.229, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), interaction(F, A) )
%   | then if ( complex(F, G), location(A, H) )
%   | | then if ( complex(A, D), enzyme(E, I) )
%   | | | then return 0.2742279426187193;  // std dev = 1.381, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.06663421993592675;  // std dev = 2.145, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else return 0.4173691644778206;  // std dev = 0.447, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(C, J), enzyme(J, K) )
%   | | then if ( location(J, L), complex(J, D) )
%   | | | then return 0.2888050998439877;  // std dev = 1.125, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.0014616180837806025;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.014236501720388504;  // std dev = 0.453, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   else if ( interaction(M, A), complex(M, N) )
%   | then return -0.030049143203787092;  // std dev = 0.462, 72.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | else if ( interaction(P, A), location(A, Q) )
%   | | then return 0.07181659464839284;  // std dev = 0.479, 77.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=28 */
%   | | else return -0.05854667199189379;  // std dev = 0.474, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.232', 'seconds']
Refined model CLL: -0.415045


******************************************
Best model found
******************************************
Results 

CLL : -0.398092 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.879 

Total Inference Time : 3.9369542598724365 

Total revision time: 17.55282389640808
Best scored revision CLL: -0.398692


Results 

CLL : -0.398092 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 19.420495862960813 

Total Inference Time : 3.9369542598724365 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.666
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2006686201388824;  // std dev = 7.563, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18558345208708296;  // std dev = 7.499, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14822993507821408;  // std dev = 7.555, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09982747800156477;  // std dev = 7.692, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08699203852171752;  // std dev = 7.665, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.056961888742309376;  // std dev = 7.744, 280.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08753744823560751;  // std dev = 7.507, 247.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0551357250383959;  // std dev = 7.594, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04124348452287631;  // std dev = 7.608, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08467253608995445;  // std dev = 7.305, 225.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.585', 'seconds']
Parameter learned model CLL:-0.389458 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.563, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.499, 159, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.555, 166, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.692, 185, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.665, 181, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.744, 193, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.507, 160, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.594, 171, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.608, 173, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.305, 138, 87]}]
{'': [0.0, 0.22519995039990162], 'false': [nan, 0.22519995039990162], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22858417608566386], 'false': [nan, 0.22858417608566436], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22562452155165735], 'false': [nan, 0.22562452155165735]}
{'': [0.0, 0.2175470371972317], 'false': [nan, 0.21754703719723062], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.219244263755848], 'false': [nan, 0.21924426375584902], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21417091836734706], 'false': [nan, 0.21417091836734706], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2281630579094894], 'false': [nan, 0.2281630579094894], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22349918875067676], 'false': [nan, 0.2234991887506781], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22264792899408298], 'false': [nan, 0.22264792899408162]}
{'': [0.0, 0.2371555555555549], 'false': [nan, 0.2371555555555549], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 24.034
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( phenotype(A, F), interaction(D, G) )
%   | | then if ( enzyme(G, H), complex(D, I) )
%   | | | then return 0.1308762078267851;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.2956489350995123;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( interaction(J, A), phenotype(J, E) )
%   | | | then return 0.4581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.26555634250691973;  // std dev = 2.553, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | else if ( interaction(A, K), location(A, L) )
%   | | then if ( location(K, L) )
%   | | | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.018148935099512268;  // std dev = 1.833, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.33183314562582816;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.1977715766089449;  // std dev = 4.876, 106.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( enzyme(A, F), enzyme(E, G) )
%   | | | then return 0.1515558589308764;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3901283526688929;  // std dev = 2.112, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.16203123864456218;  // std dev = 4.242, 81.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=27 */
%   | | | else return 0.3347698614716525;  // std dev = 1.221, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( enzyme(A, J), complex(A, K) )
%   | | then if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.33822852684662796;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.1624382531916578;  // std dev = 1.152, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return 0.0672209993471971;  // std dev = 2.113, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.1548683711940582;  // std dev = 4.705, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( interaction(A, A) )
%   | then return -0.0545887693068176;  // std dev = 0.388, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( enzyme(A, E), phenotype(C, F) )
%   | | then return 0.055687312053835876;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else return 0.16018171370238443;  // std dev = 0.481, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   else if ( enzyme(A, G), interaction(A, H) )
%   | then if ( complex(H, I), phenotype(A, J) )
%   | | then return 0.1262045105035233;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(H, K), complex(K, L) )
%   | | | then return 0.41629249922045397;  // std dev = 1.356, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.30865651042595443;  // std dev = 1.582, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( location(A, M), interaction(N, A) )
%   | | then if ( interaction(P, N), location(P, M) )
%   | | | then return 0.18554208928171756;  // std dev = 5.096, 109.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=42 */
%   | | | else return 0.08703325001905236;  // std dev = 2.674, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else return 0.036760047837936946;  // std dev = 0.425, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1321875796245159;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, D), interaction(G, F) )
%   | | then if ( phenotype(D, H), phenotype(F, I) )
%   | | | then return 0.17021322499817385;  // std dev = 5.375, 120.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=49 */
%   | | | else return 0.06567633978039693;  // std dev = 4.129, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | | else if ( interaction(J, D) )
%   | | | then return 0.5505099466769545;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1880613346443265;  // std dev = 1.535, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( phenotype(A, K) )
%   | | then if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.03222271993865167;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.047373227444328245;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( enzyme(A, N) )
%   | | | then return -0.011431519212920394;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.19524075023199253;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11774693915695411;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(A, E), enzyme(A, F) )
%   | | then return 0.43899469689964743;  // std dev = 0.806, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return -0.1545864945092431;  // std dev = 1.287, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.045846976350929526;  // std dev = 3.172, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | else if ( interaction(I, A), interaction(A, J) )
%   | | then if ( enzyme(A, K), enzyme(J, L) )
%   | | | then return 0.3760044738157273;  // std dev = 1.160, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.11826638415135846;  // std dev = 3.444, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | else if ( phenotype(A, M), complex(A, N) )
%   | | | then return 0.13518143173214808;  // std dev = 2.472, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.04360061598536092;  // std dev = 5.129, 127.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=37 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09570093726886499;  // std dev = 0.015, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, F), location(D, G) )
%   | | then if ( interaction(A, H), complex(D, I) )
%   | | | then return 0.039841153123693775;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.0858258778394473;  // std dev = 2.549, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | else if ( location(A, J), interaction(A, D) )
%   | | | then return 0.2133265341570061;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.006506355383249764;  // std dev = 2.838, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then if ( interaction(A, L), complex(K, M) )
%   | | | then return 0.10009549371043872;  // std dev = 2.243, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return -0.03103877187838328;  // std dev = 2.387, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( complex(A, N), phenotype(A, P) )
%   | | | then return 0.018735018721989294;  // std dev = 2.650, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.10375122333947008;  // std dev = 4.870, 102.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=37 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09731776235463925;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, D), enzyme(E, F) )
%   | | then if ( interaction(E, E), location(E, G) )
%   | | | then return 0.41149740478921437;  // std dev = 0.837, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.07287223103997872;  // std dev = 1.966, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( interaction(E, E) )
%   | | | then return -0.07244389176373985;  // std dev = 2.954, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | | else return 0.0013466852450141377;  // std dev = 3.703, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( phenotype(H, J) )
%   | | | then return 0.06307278570817729;  // std dev = 3.624, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | | else return 0.3433934609777507;  // std dev = 1.103, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, K), enzyme(A, L) )
%   | | | then return 0.10770941925708002;  // std dev = 1.768, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.04006423779878422;  // std dev = 3.725, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08706043052843913;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(D, E) )
%   | | then if ( phenotype(A, F), enzyme(A, G) )
%   | | | then return 0.0594126303859435;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.03400628321690748;  // std dev = 1.709, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( phenotype(A, H), interaction(D, A) )
%   | | | then return 0.09806438792766306;  // std dev = 2.088, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.4076555114522295;  // std dev = 1.140, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I) )
%   | | | then return 0.0010726175260841755;  // std dev = 3.052, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0.24716770284235;  // std dev = 1.213, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( location(A, L), interaction(M, A) )
%   | | | then return -0.029566252735464343;  // std dev = 5.920, 178.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=48 */
%   | | | else return 0.04307340655564364;  // std dev = 2.030, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( location(A, D) )
%   | then return -0.06932077817623518;  // std dev = 0.439, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | else return 0.23731719322953482;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( phenotype(A, E), complex(A, F) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then return -0.13486835673845493;  // std dev = 0.409, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.3719801097058814;  // std dev = 0.820, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.003955358488197505;  // std dev = 3.034, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( location(A, K), complex(J, L) )
%   | | | then return 0.02855254470124935;  // std dev = 3.165, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return 0.10447672284531696;  // std dev = 4.343, 81.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=31 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.07488734322774533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.061255982601743045;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(D, E) )
%   | | then if ( phenotype(A, F), phenotype(D, F) )
%   | | | then return 0.09902299204005958;  // std dev = 1.083, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.018876870329174827;  // std dev = 1.688, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.033191913289991444;  // std dev = 2.252, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return -0.15199750963862932;  // std dev = 1.832, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( interaction(J, H), interaction(J, J) )
%   | | | then return 0.11524139437570051;  // std dev = 4.319, 76.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=32 */
%   | | | else return 0.006454196943599457;  // std dev = 4.680, 102.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=32 */
%   | | else if ( phenotype(A, K), interaction(A, L) )
%   | | | then return -0.16001949778585392;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.03597626123103847;  // std dev = 1.670, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.693', 'seconds']
Refined model CLL: -0.382751


******************************************
Best model found
******************************************
Results 

CLL : -0.379544 

AUC ROC : 0.502784 

AUC PR : 0.007095 

Precision : 0.00738 

Recall : 0.007092 

F1 : 0.007233 

Total Learning Time : 24.034 

Total Inference Time : 5.440984725952148 

Total revision time: 33.78188271522522
Best scored revision CLL: -0.382751


Results 

CLL : -0.379544 

AUC ROC : 0.502784 

AUC PR : 0.007095 

Precision : 0.00738 

Recall : 0.007092 

F1 : 0.007233 

Total Learning Time : 33.89076704978943 

Total Inference Time : 5.440984725952148 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.576
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19041730570654164;  // std dev = 8.333, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17545870411236328;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14087640138749194;  // std dev = 8.327, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1180297033444566;  // std dev = 8.327, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10507048423642636;  // std dev = 8.279, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06962494645164641;  // std dev = 8.379, 320.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1107233308651742;  // std dev = 8.033, 274.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02983637137143723;  // std dev = 8.403, 324.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.033863063303669186;  // std dev = 8.340, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.023605308368671814;  // std dev = 8.359, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.849', 'seconds']
Parameter learned model CLL:-0.373498 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.333, 209, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.272, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.327, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.327, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.279, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.379, 216, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.033, 170, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.403, 220, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.34, 210, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.359, 213, 104]}]
{'': [nan, 0.22186610050117953], 'false': [nan, 0.22186610050117953]}
{'': [nan, 0.22506925207756312], 'false': [nan, 0.22506925207755946]}
{'': [nan, 0.22222222222222138], 'false': [nan, 0.22222222222222138]}
{'': [nan, 0.2222222222222222], 'false': [nan, 0.22222222222221985]}
{'': [0.0, 0.2247137866165021], 'false': [nan, 0.22471378661650018], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21937499999999957], 'false': [nan, 0.21937499999999957], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2354946987053122], 'false': [nan, 0.2354946987053122]}
{'': [nan, 0.21795458009449653], 'false': [nan, 0.21795458009449598]}
{'': [0.0, 0.2215100004056966], 'false': [nan, 0.22151000040569788], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [-1.1564823173178713e-18, 0.2204420384320662], 'false': [nan, 0.2204420384320662], 'true': [nan, -1.1564823173178713e-18], 'true,false': [nan, -1.1564823173178713e-18], 'true,false,false': [nan, -1.1564823173178713e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 14.782
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, A) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(D, A), complex(A, E) )
%   | | then return 0.15951879811321046;  // std dev = 0.459, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | | else if ( phenotype(F, C), interaction(F, G) )
%   | | | then return 0.23858371770820663;  // std dev = 4.657, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
%   | | | else return 0.124815601766179;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   else if ( interaction(H, A), complex(A, I) )
%   | then if ( interaction(A, J) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2265699877310913;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( enzyme(H, K) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.13649945056342896;  // std dev = 0.448, 97.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=27 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), complex(A, F) )
%   | then return 0.05444482893772135;  // std dev = 0.417, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | else return 0.18139107031564627;  // std dev = 0.477, 86.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=30 */
%   else if ( interaction(G, A), complex(G, H) )
%   | then if ( interaction(A, I), complex(A, H) )
%   | | then if ( interaction(G, I), enzyme(I, J) )
%   | | | then return 0.3199682935632474;  // std dev = 0.966, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09758416865657515;  // std dev = 2.077, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( interaction(G, G), complex(A, K) )
%   | | | then return 0.5736075378978908;  // std dev = 0.851, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.22060259330088988;  // std dev = 4.641, 91.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=35 */
%   | else if ( interaction(L, A), interaction(M, L) )
%   | | then return 0.1061373573317802;  // std dev = 0.450, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( interaction(A, N) )
%   | | | then return 0.16271999254585132;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.4400859613486488;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(A, E), interaction(F, A) )
%   | then return 0.12612646341853728;  // std dev = 0.462, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | else return 0.049863495225997416;  // std dev = 0.433, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then if ( interaction(G, A), complex(A, H) )
%   | | then return 0.020721159401642163;  // std dev = 0.427, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(G, I), complex(I, H) )
%   | | | then return 0.3311600046745117;  // std dev = 2.269, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.14690210548252924;  // std dev = 1.638, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), interaction(L, M) )
%   | | | then return 0.2122423057300805;  // std dev = 2.030, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.08718172868562576;  // std dev = 1.474, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.06480399384864756;  // std dev = 3.742, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return 0.1241255166200685;  // std dev = 4.525, 93.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=30 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(E, D), enzyme(E, F) )
%   | then return 0.04706727738918485;  // std dev = 0.441, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
%   | else if ( interaction(G, D), interaction(G, G) )
%   | | then return 0.07907460550712692;  // std dev = 0.462, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( complex(D, H) )
%   | | | then return 0.3825039157368822;  // std dev = 1.550, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.057203438327228316;  // std dev = 1.463, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else if ( complex(A, I), phenotype(A, J) )
%   | then return 0.4551625887600863;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( location(A, M), location(K, M) )
%   | | | then return 0.13400051057394866;  // std dev = 4.844, 103.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=36 */
%   | | | else return 0.2835427472497014;  // std dev = 2.551, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.05126406850620106;  // std dev = 2.440, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.176002480423016;  // std dev = 2.052, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.31122697766638663;  // std dev = 0.030, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( complex(A, F), phenotype(A, G) )
%   | | then if ( complex(D, F) )
%   | | | then return 0.17078243747640498;  // std dev = 2.537, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.39778471619255795;  // std dev = 1.585, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( enzyme(D, H), interaction(E, D) )
%   | | | then return 0.08959879383381379;  // std dev = 2.481, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.012647351890117295;  // std dev = 3.844, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | else if ( location(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), complex(K, L) )
%   | | | then return 0.07963667242038466;  // std dev = 3.167, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return 0.20341066386011786;  // std dev = 1.637, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( complex(A, M), phenotype(A, N) )
%   | | | then return -3.4943008947275654E-4;  // std dev = 1.466, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.249976858013293;  // std dev = 4.166, 69.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=34 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.17066597200202155;  // std dev = 0.023, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E), interaction(A, F) )
%   | | then if ( complex(A, G), phenotype(F, H) )
%   | | | then return 0.2480173896530765;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.06451512478855513;  // std dev = 2.528, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else if ( phenotype(D, I), complex(D, J) )
%   | | | then return 0.11232987774335086;  // std dev = 6.311, 167.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=65 */
%   | | | else return 0.028525156997078797;  // std dev = 4.048, 76.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then return 0.3631535585215193;  // std dev = 1.176, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.026301692465994748;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( interaction(A, E), phenotype(E, D) )
%   | then return -0.05173471335135649;  // std dev = 0.438, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | else return 0.07136043101407269;  // std dev = 0.483, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( interaction(F, H), phenotype(H, G) )
%   | | then if ( interaction(F, F), enzyme(A, I) )
%   | | | then return 0.4300063970652186;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.03766184563321305;  // std dev = 3.344, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | else if ( interaction(F, J), enzyme(J, K) )
%   | | | then return 0.5336981272194238;  // std dev = 0.766, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.07690435607508855;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(L, A), interaction(L, L) )
%   | | then return -0.06256725424363203;  // std dev = 0.416, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else if ( location(A, M), phenotype(A, N) )
%   | | | then return 0.1363089674739017;  // std dev = 2.920, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.019888255332956566;  // std dev = 4.377, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( complex(A, E), interaction(C, C) )
%   | then if ( phenotype(C, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.223224517126792;  // std dev = 1.725, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.009086124709333454;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.3403699212098569;  // std dev = 0.986, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( complex(A, H), phenotype(A, I) )
%   | | then if ( enzyme(C, J) )
%   | | | then return 0.1731810741487662;  // std dev = 1.248, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.006651336922832628;  // std dev = 2.778, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( interaction(A, C), enzyme(C, K) )
%   | | | then return 0.3711188613246427;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10284486250089146;  // std dev = 5.711, 134.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=55 */
%   else if ( enzyme(A, L), interaction(M, A) )
%   | then return 0.11615720279633229;  // std dev = 0.493, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else return 0.0027234721338618637;  // std dev = 0.457, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( phenotype(D, F), phenotype(A, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.008349502590658399;  // std dev = 2.606, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return -0.1017280248268101;  // std dev = 4.102, 90.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=22 */
%   | | else if ( phenotype(D, H), interaction(I, D) )
%   | | | then return -7.441691537409688E-4;  // std dev = 5.306, 130.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=42 */
%   | | | else return 0.11846984219446455;  // std dev = 2.109, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( interaction(J, A), complex(A, K) )
%   | | then if ( interaction(L, J) )
%   | | | then return 0.39628966930017717;  // std dev = 1.184, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.059672620443762946;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return -0.05396923198022294;  // std dev = 1.851, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.06719032442213907;  // std dev = 2.773, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13382937021362962;  // std dev = 0.014, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( enzyme(D, E) )
%   | | | then return -0.20713562725131193;  // std dev = 1.287, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.14180745488895158;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(D, G), interaction(H, A) )
%   | | | then return 0.1414239040375527;  // std dev = 1.509, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.06018925756156575;  // std dev = 2.227, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( interaction(I, A), location(A, J) )
%   | | then if ( interaction(K, I), interaction(I, K) )
%   | | | then return 0.013894083219147264;  // std dev = 6.903, 206.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=71 */
%   | | | else return 0.1768481063738251;  // std dev = 2.268, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.18985629963225625;  // std dev = 1.267, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.01851816171688642;  // std dev = 2.200, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.672', 'seconds']
Refined model CLL: -0.411927


******************************************
Best model found
******************************************
Results 

CLL : -0.374397 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 14.782 

Total Inference Time : 7.419910430908203 

Total revision time: 26.157102544784546
Best scored revision CLL: -0.373498


Results 

CLL : -0.374397 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 26.265986879348755 

Total Inference Time : 7.419910430908203 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.682
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19888967584025322;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13480508999333418;  // std dev = 8.010, 304.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1398972853766098;  // std dev = 7.866, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11080333794438528;  // std dev = 7.906, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11329655268574086;  // std dev = 7.780, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07124980762046193;  // std dev = 7.906, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07166646287500684;  // std dev = 7.824, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08520473876743392;  // std dev = 7.660, 254.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.033018323484811006;  // std dev = 7.866, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.043280594363073;  // std dev = 7.765, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.741', 'seconds']
Parameter learned model CLL:-0.375218 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.788, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.01, 212, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.866, 189, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.906, 195, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.78, 177, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.906, 195, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.824, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.66, 162, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.866, 189, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.765, 175, 92]}]
{'': [0.0, 0.22463648834019292], 'false': [nan, 0.22463648834019292], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21104570637119208], 'false': [nan, 0.21104570637118927]}
{'': [0.0, 0.2202099770772905], 'false': [nan, 0.2202099770772905], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21780038606757327], 'false': [nan, 0.21780038606757324], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22503834938710096], 'false': [nan, 0.22503834938710113], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21780038606757482], 'false': [nan, 0.21780038606757482], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22262479338842897], 'false': [nan, 0.22262479338842897], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.231012462024924], 'false': [nan, 0.23101246202492223], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22020997707729037], 'false': [nan, 0.2202099770772922]}
{'': [0.0, 0.22584129388825663], 'false': [nan, 0.22584129388825663], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 7.9
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, D), interaction(F, A) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( phenotype(D, G), phenotype(A, G) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3343394112899885;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J), interaction(J, H) )
%   | | | then return 0.2010060779566552;  // std dev = 2.808, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.3081489350995123;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( complex(A, K), interaction(A, L) )
%   | | | then return 0.07243464938522651;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.18314893509951138;  // std dev = 5.925, 160.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( phenotype(D, E), interaction(D, F) )
%   | then if ( phenotype(F, E), location(A, G) )
%   | | then if ( enzyme(A, H), complex(F, I) )
%   | | | then return 0.1793182317089103;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.12692385889704783;  // std dev = 2.050, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(F, D) )
%   | | | then return 0.3331190600534468;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16769372855027884;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( phenotype(D, C) )
%   | | then return 0.14968927808182195;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.5954156514931853;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.279085240415969;  // std dev = 1.649, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else if ( complex(A, L), interaction(A, M) )
%   | then return 0.2029736778256253;  // std dev = 0.488, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | else return 0.1408195837530916;  // std dev = 0.462, 175.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14945558337670445;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E) )
%   | | then if ( interaction(E, A), enzyme(D, F) )
%   | | | then return 0.03519903440047589;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.16906200460823254;  // std dev = 1.934, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( complex(D, G) )
%   | | | then return 0.09968669664013793;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.0014724109258522182;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( complex(H, I), interaction(J, A) )
%   | | | then return -0.00186670819407866;  // std dev = 1.770, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.14245210800062247;  // std dev = 2.667, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.19422875275859722;  // std dev = 4.208, 75.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=29 */
%   | | | else return 0.14873471794331614;  // std dev = 4.790, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12875762865519538;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( interaction(A, A) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.057181985524418444;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.007181985524418441;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(G, E), interaction(A, G) )
%   | | | then return 0.49444184234912025;  // std dev = 0.894, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.18654971134812814;  // std dev = 2.753, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( phenotype(H, I) )
%   | | | then return 0.10750981136051387;  // std dev = 1.828, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return -0.0015110833591787188;  // std dev = 1.994, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.13733057648353347;  // std dev = 3.562, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | | else return 0.08547938305641162;  // std dev = 5.535, 144.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=44 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12148025146494792;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( interaction(D, D) )
%   | | then if ( phenotype(D, F), complex(A, G) )
%   | | | then return 0.2479780256759375;  // std dev = 1.543, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.058043957795427974;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( enzyme(A, H), phenotype(D, E) )
%   | | | then return -0.12249668444009114;  // std dev = 1.258, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.018641540179865905;  // std dev = 2.661, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(K, I), complex(K, J) )
%   | | | then return 0.15072373077798049;  // std dev = 3.214, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | | else return 0.05145719348374941;  // std dev = 3.053, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | else if ( interaction(A, L), complex(A, M) )
%   | | | then return 0.0705151499718031;  // std dev = 2.303, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.2144028149897081;  // std dev = 4.088, 68.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=30 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10429915508578844;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( enzyme(A, D), complex(A, E) )
%   | then if ( enzyme(F, D), interaction(F, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.08562712103979879;  // std dev = 1.779, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.042500969188696607;  // std dev = 1.134, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(H, A), complex(H, E) )
%   | | | then return 0.151559825203653;  // std dev = 1.861, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.053846533570456934;  // std dev = 2.775, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.2172722809086672;  // std dev = 1.418, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.02481932911085881;  // std dev = 4.054, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
%   | | else if ( interaction(M, A), interaction(A, N) )
%   | | | then return 0.33431040606273904;  // std dev = 1.539, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.10655958214467481;  // std dev = 4.713, 95.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=35 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09353583191683752;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then return 0.540277026890707;  // std dev = 0.950, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( location(A, G), location(D, G) )
%   | | | then return 0.2671506741319379;  // std dev = 1.850, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.04010139951674046;  // std dev = 2.309, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( phenotype(H, J), interaction(K, H) )
%   | | | then return 0.10425751645240743;  // std dev = 3.451, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | | else return -0.025225817818862586;  // std dev = 5.375, 148.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=39 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return 0.02593697840753269;  // std dev = 1.831, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.20633222044960603;  // std dev = 1.993, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08887388402886018;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( phenotype(A, F), enzyme(E, G) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.18972897179308745;  // std dev = 1.531, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.12157072642848009;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( location(A, I) )
%   | | | then return -0.015261945665915235;  // std dev = 3.311, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return -0.156744362224378;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( complex(A, J) )
%   | | then if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.05963218930991972;  // std dev = 2.526, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.03728849588458011;  // std dev = 3.621, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | else if ( interaction(A, M), phenotype(A, N) )
%   | | | then return 0.43967544088121663;  // std dev = 1.450, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.09365882033661496;  // std dev = 4.539, 85.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, E), interaction(E, C) )
%   | | then return -0.12108644050884702;  // std dev = 0.446, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(F, C), phenotype(F, G) )
%   | | | then return -0.005313147196215007;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.06780937808389562;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( phenotype(C, H), enzyme(A, I) )
%   | | then return 0.019852926122168355;  // std dev = 0.453, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( complex(A, D), enzyme(C, J) )
%   | | | then return 0.01535827349118247;  // std dev = 1.630, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.14039913090441464;  // std dev = 3.347, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
%   else if ( phenotype(A, K), interaction(A, L) )
%   | then return -0.07231644289959537;  // std dev = 0.450, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | else if ( complex(A, M) )
%   | | then return -0.04481097589561054;  // std dev = 0.424, 65.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | | else return 0.0692732852948829;  // std dev = 0.488, 57.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08257044099009164;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(D, F), interaction(D, G) )
%   | | then if ( complex(A, H), enzyme(A, I) )
%   | | | then return -0.00658056515543577;  // std dev = 2.463, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return -0.10540205939190322;  // std dev = 3.024, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.10911821901387102;  // std dev = 2.180, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return -0.06435267710034086;  // std dev = 1.671, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( location(A, K) )
%   | | then if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.009029862734122571;  // std dev = 2.983, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return 0.048054761373792866;  // std dev = 5.251, 120.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=43 */
%   | | else return -0.08693257638594434;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.043', 'seconds']
Refined model CLL: -0.405437


******************************************
Best model found
******************************************
Results 

CLL : -0.375341 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.9 

Total Inference Time : 3.467092514038086 

Total revision time: 15.45086501312256
Best scored revision CLL: -0.375218


Results 

CLL : -0.375341 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 15.559749347686768 

Total Inference Time : 3.467092514038086 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.513
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1940864350995129;  // std dev = 7.557, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15018643883609736;  // std dev = 7.662, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15625980586783297;  // std dev = 7.503, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14557795623737915;  // std dev = 7.420, 239.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08597818370917079;  // std dev = 7.615, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09665849354850006;  // std dev = 7.462, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0792785794160693;  // std dev = 7.454, 243.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.023166004091525482;  // std dev = 7.682, 274.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.009462167563858008;  // std dev = 7.731, 282.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0295201811602509;  // std dev = 7.608, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.519', 'seconds']
Parameter learned model CLL:-0.366375 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.557, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.662, 185, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.503, 163, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.42, 153, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.615, 178, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.462, 158, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.454, 157, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.682, 188, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.731, 196, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.608, 177, 86]}]
{'': [0.0, 0.22308349609375056], 'false': [nan, 0.22308349609375056], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2166364837080097], 'false': [nan, 0.21663648370800923], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22609312753020255], 'false': [nan, 0.22609312753020255]}
{'': [nan, 0.2303531100646012], 'false': [nan, 0.23035311006460168]}
{'': [0.0, 0.21963957759412123], 'false': [nan, 0.21963957759412095], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2282316581564087], 'false': [nan, 0.2282316581564087], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22865755558942602], 'false': [nan, 0.22865755558942602], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21535510682508477], 'false': [nan, 0.2153551068250855], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21196116895528475], 'false': [nan, 0.2119611689552847], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22006968439618893], 'false': [nan, 0.22006968439618893]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 8.991
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( enzyme(E, G), interaction(F, F) )
%   | | | then return 0.011995088945666036;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.11648226843284518;  // std dev = 4.795, 120.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=31 */
%   | | else if ( enzyme(E, H), complex(E, I) )
%   | | | then return 0.058148935099512286;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.2672398441904214;  // std dev = 3.261, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( enzyme(J, L), interaction(J, M) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.23314893509951234;  // std dev = 2.739, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.21926004621062345;  // std dev = 2.882, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), phenotype(A, F) )
%   | | then if ( interaction(G, E), complex(G, H) )
%   | | | then return 0.3446284846495265;  // std dev = 1.228, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.16790667430555353;  // std dev = 1.830, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.04911706013181264;  // std dev = 1.762, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.15061841418664562;  // std dev = 2.620, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | else if ( complex(A, J), location(A, K) )
%   | | then if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.25755920893005874;  // std dev = 2.752, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.4341493551209443;  // std dev = 1.395, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(N, A), interaction(A, N) )
%   | | | then return 0.07925928411081633;  // std dev = 1.518, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.21219633506963817;  // std dev = 5.157, 113.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( location(A, E), location(D, E) )
%   | then if ( complex(D, C), interaction(F, A) )
%   | | then return 0.05591347357036944;  // std dev = 0.438, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else return 0.1941997381259905;  // std dev = 0.487, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | else return -0.04992528911928732;  // std dev = 0.362, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   else if ( enzyme(A, G), interaction(H, A) )
%   | then if ( complex(A, I) )
%   | | then return 0.28605409479295224;  // std dev = 1.216, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.06783916346824738;  // std dev = 0.442, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( interaction(J, J), interaction(L, A) )
%   | | | then return 0.05938179622968114;  // std dev = 1.498, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.1813358317273882;  // std dev = 2.098, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.1308262990423689;  // std dev = 2.025, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.2202913491686174;  // std dev = 4.238, 74.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=31 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( location(D, C) )
%   | then return 0.09118248675895009;  // std dev = 0.462, 194.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=60 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.5227438898629276;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(F, D) )
%   | | | then return 0.27813274396531074;  // std dev = 0.982, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.15919154207210134;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( interaction(A, G), enzyme(G, H) )
%   | then if ( interaction(G, G), phenotype(A, I) )
%   | | then return 0.3029559443687089;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.07077838589659825;  // std dev = 0.468, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | else if ( complex(A, J) )
%   | | then return 0.17995197816966643;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.43367412628517865;  // std dev = 0.829, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.32952798676371664;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(D, F) )
%   | | then if ( interaction(G, D), complex(G, H) )
%   | | | then return 0.24385595072708247;  // std dev = 2.285, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.07574132647022506;  // std dev = 1.419, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.4340827096041531;  // std dev = 1.080, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( enzyme(A, K), phenotype(I, L) )
%   | | | then return 0.38578259617091926;  // std dev = 1.553, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.14666063472680452;  // std dev = 3.607, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.1343799021374463;  // std dev = 2.071, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.03888538908977572;  // std dev = 4.933, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( interaction(D, E) )
%   | | | then return 0.11273557378832914;  // std dev = 1.599, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.02598804382120355;  // std dev = 2.217, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( enzyme(D, G) )
%   | | | then return 0.09427532347226225;  // std dev = 1.980, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.23045561586125682;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( complex(H, I) )
%   | | | then return 0.0683056181475029;  // std dev = 1.674, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.33826373383129177;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(J, A), interaction(A, J) )
%   | | | then return 0.24352277548939227;  // std dev = 1.423, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.010069317306144895;  // std dev = 6.054, 172.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=52 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( enzyme(D, F), enzyme(A, F) )
%   | | then return 0.2767215616562292;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(D, G), enzyme(D, H) )
%   | | | then return -0.11938581255422921;  // std dev = 1.557, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.019468182286035245;  // std dev = 4.982, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
%   | else if ( location(A, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.17267195454754777;  // std dev = 2.411, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.07871117000411507;  // std dev = 4.567, 90.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=32 */
%   | | else return -0.12455567532599102;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12783929402520114;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( phenotype(F, D), interaction(A, F) )
%   | | then if ( enzyme(A, G), complex(F, E) )
%   | | | then return -0.18395168000395243;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.06100142004300456;  // std dev = 2.095, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.1753652118122893;  // std dev = 1.412, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.025988101973428608;  // std dev = 2.014, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return 0.04127583346277398;  // std dev = 2.331, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return -0.08946288468317097;  // std dev = 1.462, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( enzyme(A, L), interaction(A, M) )
%   | | | then return 0.2141160738445794;  // std dev = 1.935, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.06618218251551274;  // std dev = 5.693, 141.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=50 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13196891067850003;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( location(E, D) )
%   | | then if ( enzyme(A, F), interaction(E, E) )
%   | | | then return 0.2974618608177338;  // std dev = 1.283, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.05164659770802952;  // std dev = 6.008, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
%   | | else if ( interaction(G, E) )
%   | | | then return -0.12695036103307217;  // std dev = 1.939, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return -0.02533622001085092;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( enzyme(A, H) )
%   | | then if ( interaction(A, I), enzyme(I, H) )
%   | | | then return -0.2575391320362719;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.1599688346548921;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.11984948604583355;  // std dev = 1.650, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.03302463159346468;  // std dev = 2.388, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(A, G), complex(G, H) )
%   | | then return 0.1879035455726906;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.00434935781750978;  // std dev = 1.163, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return -0.0921400303110867;  // std dev = 0.444, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   else if ( interaction(A, I), interaction(I, I) )
%   | then if ( complex(A, J), enzyme(I, K) )
%   | | then return 0.2883866353445292;  // std dev = 1.019, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.05361624056223083;  // std dev = 2.301, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.04101403900217585;  // std dev = 2.405, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else if ( enzyme(A, L), complex(A, M) )
%   | | then return 0.6449437081763537;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(N, A), complex(A, P) )
%   | | | then return 0.1494927050537395;  // std dev = 2.280, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.0803592335203112;  // std dev = 4.610, 89.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.210', 'seconds']
Refined model CLL: -0.421463


******************************************
Best model found
******************************************
Results 

CLL : -0.36569 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.991 

Total Inference Time : 3.3521921634674072 

Total revision time: 16.179610065460203
Best scored revision CLL: -0.366375


Results 

CLL : -0.36569 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 16.288494400024412 

Total Inference Time : 3.3521921634674072 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.592
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1876943896449668;  // std dev = 7.637, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17490771466418342;  // std dev = 7.571, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1560513772284829;  // std dev = 7.532, 250.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1279169917191681;  // std dev = 7.547, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09604411229412955;  // std dev = 7.601, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09729261846104752;  // std dev = 7.490, 245.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.057755768657879084;  // std dev = 7.608, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), function(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0816422915497821;  // std dev = 7.402, 235.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02771712666087245;  // std dev = 7.616, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03508386896392307;  // std dev = 7.540, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.293', 'seconds']
Parameter learned model CLL:-0.388058 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.637, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.571, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.532, 163, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.547, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.601, 172, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.49, 158, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.608, 173, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), function(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.402, 148, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.616, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.54, 164, 87]}]
{'': [0.0, 0.22094524793388517], 'false': [nan, 0.22094524793388517], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22477508650519148], 'false': [nan, 0.2247750865051916], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.226896000000001], 'false': [nan, 0.226896000000001]}
{'': [0.0, 0.22604875283446568], 'false': [nan, 0.22604875283446516], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22307359759097214], 'false': [nan, 0.22307359759097242], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22900458142440674], 'false': [nan, 0.22900458142440674], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22264792899408306], 'false': [nan, 0.22264792899408306]}
{'': [nan, 0.2331552738795834], 'false': [nan, 0.2331552738795849]}
{'': [0.0, 0.22222222222222124], 'false': [nan, 0.22222222222222132], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22647259567308398], 'false': [nan, 0.22647259567308398]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 24.115
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(A, F), interaction(D, D) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, G), location(D, G) )
%   | | | then return 0.15544623239680966;  // std dev = 2.780, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.04333412028469739;  // std dev = 2.018, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(H, A), location(A, J) )
%   | | | then return 0.26991364098186527;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.09148226843284567;  // std dev = 2.317, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.21189043169815278;  // std dev = 5.797, 147.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=52 */
%   | | | else return 0.3581489350995122;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( enzyme(D, F) )
%   | | then if ( location(D, E) )
%   | | | then return 0.13259203437761408;  // std dev = 3.011, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return 0.2813630218102527;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( location(D, E), phenotype(A, G) )
%   | | | then return 0.11024084008074303;  // std dev = 2.937, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0.057709191945237;  // std dev = 3.045, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), interaction(I, J) )
%   | | | then return 0.38034996631533596;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.13804227400764388;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.15122717081761178;  // std dev = 4.445, 91.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=29 */
%   | | | else return 0.32314702280543584;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(A, E), interaction(A, F) )
%   | then if ( enzyme(F, G), enzyme(A, H) )
%   | | then return 0.07538907960431261;  // std dev = 0.444, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(I, D) )
%   | | | then return 0.261646856269005;  // std dev = 3.056, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | | else return 0.07206488650052023;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( complex(C, J), complex(A, K) )
%   | | then return 0.03188193894926595;  // std dev = 0.427, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | else return 0.14185469408611612;  // std dev = 0.470, 133.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
%   else if ( interaction(A, L), interaction(L, L) )
%   | then return 0.03177741915624537;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(M, A), complex(M, N) )
%   | | then return 0.10323562972708951;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, P), complex(P, Q) )
%   | | | then return 0.5581311423057838;  // std dev = 0.876, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3523866326889083;  // std dev = 1.295, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, E), enzyme(A, F) )
%   | | then if ( interaction(A, D), phenotype(A, G) )
%   | | | then return 0.10997794761480445;  // std dev = 1.169, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.4194015481520083;  // std dev = 1.353, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(E, E), interaction(D, E) )
%   | | | then return 0.1631428336419106;  // std dev = 4.851, 100.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=38 */
%   | | | else return 0.09620144683984411;  // std dev = 4.769, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
%   | else if ( location(A, H) )
%   | | then if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.05243519311151707;  // std dev = 1.301, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.09176036485521721;  // std dev = 1.949, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else return -0.17441911954716222;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), enzyme(D, G) )
%   | | then if ( enzyme(F, H) )
%   | | | then return 0.2041832172371281;  // std dev = 1.303, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.4423287693617728;  // std dev = 0.799, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, I), phenotype(D, J) )
%   | | | then return 0.07387834748922655;  // std dev = 4.013, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
%   | | | else return 0.16917617337519364;  // std dev = 3.533, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
%   | else if ( interaction(K, A), location(K, L) )
%   | | then if ( phenotype(K, M) )
%   | | | then return 0.10601270182551004;  // std dev = 2.550, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.012260587470005753;  // std dev = 3.859, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | else if ( interaction(A, N) )
%   | | | then return 0.1320786152262532;  // std dev = 1.754, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.43498258192570977;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(D, F), interaction(A, G) )
%   | | then if ( interaction(H, D), complex(G, I) )
%   | | | then return -0.006097252884151995;  // std dev = 1.496, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.37229813725406224;  // std dev = 1.357, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.01707408170433772;  // std dev = 3.438, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | | else return 0.06085759696378821;  // std dev = 4.631, 96.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=32 */
%   | else if ( complex(A, L), interaction(M, A) )
%   | | then return 0.49178602342478184;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, N), phenotype(A, P) )
%   | | | then return 0.28207883340674467;  // std dev = 1.596, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.10676285935547997;  // std dev = 3.807, 62.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=23 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(E, D), interaction(D, E) )
%   | then if ( interaction(A, D), interaction(E, E) )
%   | | then return -0.038163845183177676;  // std dev = 0.421, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( enzyme(D, F), interaction(E, A) )
%   | | | then return -0.1046716522870637;  // std dev = 1.270, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.07232178241901945;  // std dev = 3.372, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | else return -0.09570721577200623;  // std dev = 0.422, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   else if ( interaction(A, A) )
%   | then if ( location(A, G), enzyme(A, H) )
%   | | then return 0.3395628675265947;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.196164082249017;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then return 0.013047687261476289;  // std dev = 0.449, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.1866323186511529;  // std dev = 2.609, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.07232222988155815;  // std dev = 4.185, 76.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=27 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( phenotype(C, E), phenotype(A, F) )
%   | then if ( complex(A, G), interaction(H, C) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.06097112113324029;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.11013176930809916;  // std dev = 1.084, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.06338242086551682;  // std dev = 0.446, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( location(A, I), location(C, I) )
%   | | then if ( location(J, I), interaction(A, J) )
%   | | | then return 0.7007590588261708;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16294288191962156;  // std dev = 1.653, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.11397952183636433;  // std dev = 1.765, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.0435592314768645;  // std dev = 1.694, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   else if ( enzyme(A, M) )
%   | then return -0.030812104016114377;  // std dev = 0.453, 79.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=22 */
%   | else return 0.030643340414321638;  // std dev = 0.469, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, D), phenotype(A, F) )
%   | | then if ( phenotype(D, F), interaction(G, A) )
%   | | | then return 0.02111771822307056;  // std dev = 2.347, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.2693696556277262;  // std dev = 1.300, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( enzyme(A, H), interaction(I, A) )
%   | | | then return 0.0575390520496265;  // std dev = 2.536, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return -0.08050422572038113;  // std dev = 3.698, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | else if ( complex(A, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.049311212181637594;  // std dev = 2.281, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.36935085272877927;  // std dev = 1.480, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.0691506605887086;  // std dev = 2.119, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.03145847082504729;  // std dev = 4.190, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, A), enzyme(A, C) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then return -0.0019999385621759735;  // std dev = 1.122, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.3661545994838452;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( complex(A, F), interaction(G, A) )
%   | then if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( interaction(G, J), interaction(J, G) )
%   | | | then return 0.47559230190597035;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0193505676483819;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(G, K), interaction(L, G) )
%   | | | then return 0.002969826151384701;  // std dev = 3.542, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return 0.14892013071219468;  // std dev = 1.992, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else if ( phenotype(A, M), interaction(N, A) )
%   | | then return -0.030229947673339433;  // std dev = 0.449, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else if ( interaction(P, A), enzyme(P, Q) )
%   | | | then return -0.027779069733562707;  // std dev = 2.070, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.03276123935753031;  // std dev = 4.430, 88.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=30 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.543', 'seconds']
Refined model CLL: -0.407236


******************************************
Best model found
******************************************
Results 

CLL : -0.387474 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 24.115 

Total Inference Time : 13.4597008228302 

Total revision time: 41.50141404342651
Best scored revision CLL: -0.388058


Results 

CLL : -0.387474 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 41.56346200180053 

Total Inference Time : 13.4597008228302 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.603
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19471851438753876;  // std dev = 8.306, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19137594139980088;  // std dev = 8.167, 290.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13349514380551125;  // std dev = 8.353, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09671902332446909;  // std dev = 8.445, 331.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0916296827141378;  // std dev = 8.372, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10739044291136086;  // std dev = 8.167, 290.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0690177173460048;  // std dev = 8.279, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), function(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06669802905323409;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.001797265294758185;  // std dev = 8.523, 345.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0489639674408397;  // std dev = 8.228, 298.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.082', 'seconds']
Parameter learned model CLL:-0.374645 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.306, 205, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.167, 186, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.353, 212, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.445, 227, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.372, 215, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.167, 186, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.279, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), function(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.206, 191, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.523, 241, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.228, 194, 104]}]
{'': [0.0, 0.22329049758590774], 'false': [nan, 0.22329049758590774], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2300118906064201], 'false': [nan, 0.2300118906064229], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22079794904662728], 'false': [nan, 0.22079794904662728], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21547813546791408], 'false': [nan, 0.21547813546791042], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2197305451007741], 'false': [nan, 0.21973054510077444]}
{'': [nan, 0.23001189060642127], 'false': [nan, 0.23001189060642127]}
{'': [2.3129646346357427e-18, 0.2247137866165021], 'false': [nan, 0.2247137866165021], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [nan, 0.22825624820453977], 'false': [nan, 0.2282562482045406]}
{'': [0.0, 0.21057760974585082], 'false': [nan, 0.21057760974585124], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [-6.938893903907229e-19, 0.2271969731093202], 'false': [nan, 0.2271969731093202], 'true': [nan, -6.938893903907229e-19], 'true,false': [nan, -6.938893903907229e-19], 'true,false,false': [nan, -6.938893903907229e-19]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 15.955
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D) )
%   | | then if ( interaction(A, G), complex(F, H) )
%   | | | then return 0.221785298735876;  // std dev = 3.191, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return 0.09344305274657118;  // std dev = 3.498, 68.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | | else if ( interaction(D, I), interaction(A, I) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(A, L), enzyme(A, M) )
%   | | | then return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.2681489350995118;  // std dev = 4.918, 100.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=41 */
%   | | else if ( enzyme(A, N), complex(A, P) )
%   | | | then return 0.14386322081379804;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.22957750652808379;  // std dev = 2.859, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, E), phenotype(A, F) )
%   | | then if ( complex(D, G), complex(E, H) )
%   | | | then return 0.19656114192753507;  // std dev = 3.351, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return 0.0910555472296453;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( complex(E, I), location(A, J) )
%   | | | then return 0.06062333711250224;  // std dev = 3.896, 82.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=20 */
%   | | | else return 0.18934708300777323;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( complex(A, M), phenotype(K, N) )
%   | | | then return 0.11602866650295016;  // std dev = 2.071, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.21102524138636666;  // std dev = 4.447, 84.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=32 */
%   | | else if ( interaction(A, P), complex(A, Q) )
%   | | | then return 0.4302188097150538;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.11595448690048996;  // std dev = 3.350, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( interaction(E, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0.15763616264849808;  // std dev = 2.764, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.027099309413226635;  // std dev = 1.982, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( phenotype(E, G), complex(E, H) )
%   | | | then return 0.3148904444538546;  // std dev = 2.524, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else return 0.12730756204921034;  // std dev = 1.832, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( phenotype(I, K), phenotype(A, K) )
%   | | | then return 0.2565975974504399;  // std dev = 2.109, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.10530932686092906;  // std dev = 5.530, 143.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=44 */
%   | | else if ( interaction(A, L), location(A, M) )
%   | | | then return -0.0370328168892498;  // std dev = 1.273, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.09442306907099585;  // std dev = 3.250, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( enzyme(D, F), enzyme(A, G) )
%   | | then if ( phenotype(A, H), interaction(I, D) )
%   | | | then return 0.32895223144624874;  // std dev = 1.640, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.0910388443857541;  // std dev = 1.644, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( phenotype(A, J), interaction(D, D) )
%   | | | then return 0.14959954899081887;  // std dev = 2.837, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return 0.08340394452193868;  // std dev = 6.397, 192.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=59 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( interaction(L, A) )
%   | | | then return -0.005221088124975537;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.02684233614219853;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( location(A, M) )
%   | | | then return 0.2864302177165532;  // std dev = 2.835, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.09411612170089194;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then return 0.1099001508132789;  // std dev = 1.127, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.5000676170963774;  // std dev = 0.883, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( complex(A, E), enzyme(A, F) )
%   | then if ( complex(G, E), phenotype(G, H) )
%   | | then return -0.01977134155630269;  // std dev = 0.431, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.07745728019644293;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.16906810345827483;  // std dev = 1.089, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.057423506379839534;  // std dev = 2.021, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.16538316477355056;  // std dev = 2.720, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.10311172564367743;  // std dev = 4.494, 89.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=31 */
%   | | | else return 0.06077694682988679;  // std dev = 5.072, 122.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=37 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( enzyme(C, E), enzyme(A, F) )
%   | then return 0.3653939886062327;  // std dev = 1.152, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.013661725349742856;  // std dev = 0.459, 134.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=39 */
%   else if ( enzyme(A, G), location(A, H) )
%   | then if ( interaction(I, A), enzyme(I, G) )
%   | | then return -0.10342631662992148;  // std dev = 0.369, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.05723414896962755;  // std dev = 3.083, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return 0.1805343996750336;  // std dev = 1.489, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(A, L) )
%   | | then if ( interaction(L, M), interaction(M, M) )
%   | | | then return 0.06380520763356064;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3030319260271037;  // std dev = 1.325, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.14311133580503033;  // std dev = 3.472, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | | | else return 0.056732008147981766;  // std dev = 3.200, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), enzyme(A, E) )
%   | then if ( phenotype(A, F), complex(A, G) )
%   | | then if ( interaction(H, A), phenotype(H, F) )
%   | | | then return 0.01633913042494367;  // std dev = 2.075, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return -0.11941735956357984;  // std dev = 1.289, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.022148731135859016;  // std dev = 3.528, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | | else return 0.20738386971095632;  // std dev = 1.594, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( phenotype(A, M), interaction(A, A) )
%   | | | then return -0.038128196691491256;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1384146268785935;  // std dev = 3.123, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | else if ( phenotype(A, N), interaction(A, P) )
%   | | | then return -0.015870663082645516;  // std dev = 2.898, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return 0.07710497493934408;  // std dev = 5.308, 123.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=44 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), phenotype(E, F) )
%   | then if ( interaction(E, G), complex(G, C) )
%   | | then return -0.01766375347065996;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(H, A), phenotype(H, F) )
%   | | | then return 0.32078322869412085;  // std dev = 1.530, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.09487751315837115;  // std dev = 1.366, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0.3887029840827669;  // std dev = 0.764, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( enzyme(A, I), interaction(J, A) )
%   | then return -0.027924449005090342;  // std dev = 0.451, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | else if ( location(A, K), interaction(L, A) )
%   | | then if ( interaction(M, L), enzyme(M, N) )
%   | | | then return 0.06637528835806417;  // std dev = 5.033, 111.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=39 */
%   | | | else return 0.17365123423989542;  // std dev = 3.647, 53.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=25 */
%   | | else if ( complex(A, P) )
%   | | | then return -0.12517264538031755;  // std dev = 1.542, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.06817162508826555;  // std dev = 1.885, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.16091626346559695;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( phenotype(D, F), interaction(D, E) )
%   | | then if ( enzyme(E, G), complex(E, H) )
%   | | | then return 0.0770956056022724;  // std dev = 3.343, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | | else return -0.0226004320810383;  // std dev = 6.429, 198.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=58 */
%   | | else if ( complex(A, I), location(A, J) )
%   | | | then return 0.03764277861165573;  // std dev = 2.304, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.21866931145888147;  // std dev = 2.190, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | else if ( interaction(A, K), enzyme(A, L) )
%   | | then if ( enzyme(K, M), interaction(K, N) )
%   | | | then return -0.13942214446815313;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.22299647283023258;  // std dev = 0.962, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, P) )
%   | | | then return -0.0893839718057297;  // std dev = 1.502, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.11632057866142743;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13038440496265016;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( location(A, F), complex(D, G) )
%   | | then if ( enzyme(E, H), complex(A, I) )
%   | | | then return 0.1628162450476952;  // std dev = 3.098, 39.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   | | | else return 0.0032790340051320707;  // std dev = 6.392, 184.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=60 */
%   | | else if ( phenotype(A, J), location(A, K) )
%   | | | then return 0.02644157385903693;  // std dev = 2.005, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.26737016480491665;  // std dev = 2.023, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | else if ( location(A, L), interaction(M, A) )
%   | | then if ( complex(A, N) )
%   | | | then return -0.07996260381213516;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.18896544278475955;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, P) )
%   | | | then return -0.010629748834999958;  // std dev = 1.621, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.1533912628134539;  // std dev = 1.579, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.530', 'seconds']
Refined model CLL: -0.410963


******************************************
Best model found
******************************************
Results 

CLL : -0.375538 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 15.955 

Total Inference Time : 7.567572832107544 

Total revision time: 27.949871452331543
Best scored revision CLL: -0.374645


Results 

CLL : -0.375538 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 28.011919410705566 

Total Inference Time : 7.567572832107544 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.583
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17870642638871098;  // std dev = 7.906, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19434845216612395;  // std dev = 7.677, 256.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13975821733220795;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1702252847727547;  // std dev = 7.512, 238.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08675802653728167;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06552679321240557;  // std dev = 7.859, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05380630447462571;  // std dev = 7.853, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0753829843541906;  // std dev = 7.660, 254.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.020321000873929625;  // std dev = 7.893, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.027754816692137172;  // std dev = 7.824, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.382', 'seconds']
Parameter learned model CLL:-0.378381 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.906, 195, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.677, 164, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.832, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.512, 146, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.832, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.859, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.853, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.66, 162, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.893, 193, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.824, 183, 92]}]
{'': [0.0, 0.2178003860675749], 'false': [nan, 0.2178003860675749], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23022460937500006], 'false': [nan, 0.23022460937499895], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22222222222222252], 'false': [nan, 0.22222222222222252], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23713014617611766], 'false': [nan, 0.23713014617611855], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22222222222222202], 'false': [nan, 0.2222222222222236], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22061224489796002], 'false': [nan, 0.22061224489796002], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22101463239167096], 'false': [nan, 0.22101463239167096]}
{'': [0.0, 0.23101246202492468], 'false': [nan, 0.23101246202492504], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21860264696829743], 'false': [nan, 0.21860264696829781]}
{'': [0.0, 0.22262479338843005], 'false': [nan, 0.22262479338843005], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 9.913
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( interaction(F, D), location(D, G) )
%   | | | then return 0.1914822684328457;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.008148935099512197;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else if ( interaction(D, D), complex(A, H) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1856343152164722;  // std dev = 6.137, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.23314893509951234;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.3581489350995123;  // std dev = 2.739, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, E), interaction(D, A) )
%   | | then if ( location(D, F) )
%   | | | then return 0.250007346428392;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.523820739239253;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, E), enzyme(A, G) )
%   | | | then return 0.2475355198654572;  // std dev = 2.169, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.10881402248261861;  // std dev = 4.545, 101.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=29 */
%   | else if ( interaction(A, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.5840166224126104;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.17016752409610106;  // std dev = 1.637, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.10674389513988315;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.2157730648956641;  // std dev = 4.830, 99.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=38 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(A, A), complex(A, F) )
%   | | | then return 0.17051748960688506;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.02468362814897617;  // std dev = 2.173, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( interaction(G, D), complex(G, H) )
%   | | | then return 0.19543199002095313;  // std dev = 4.471, 83.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=33 */
%   | | | else return 0.10801674569327369;  // std dev = 4.169, 81.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=25 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( complex(I, J) )
%   | | | then return 0.07302225616002235;  // std dev = 2.392, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.2512567711632927;  // std dev = 1.476, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.009226132758452809;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.05463564926748269;  // std dev = 2.584, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(A, E), complex(D, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.016381903024620385;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.13687655832928228;  // std dev = 1.106, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.25080175658513404;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.281251008246781;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.14661423380003694;  // std dev = 2.389, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.05410683070123538;  // std dev = 5.035, 127.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=35 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.08652451558337708;  // std dev = 3.442, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | | else return 0.18498238337017167;  // std dev = 3.284, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.24107907503494871;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.007348385991081888;  // std dev = 2.303, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | else if ( interaction(H, D), interaction(H, H) )
%   | | | then return 0.03627610026582129;  // std dev = 3.005, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return 0.15326811624077827;  // std dev = 5.173, 112.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=44 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( location(A, J) )
%   | | | then return -0.1133848038823367;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.08623164196212736;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.15042755837739255;  // std dev = 2.597, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.042877298571803675;  // std dev = 2.931, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( enzyme(A, D), complex(A, E) )
%   | then if ( enzyme(F, D), interaction(F, G) )
%   | | then if ( complex(G, E) )
%   | | | then return 0.13528692628303954;  // std dev = 2.834, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return -0.016185139267198768;  // std dev = 2.088, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.5273392186591523;  // std dev = 0.902, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.06356252054013108;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( location(A, I) )
%   | | then if ( interaction(J, A), location(J, I) )
%   | | | then return 0.050014595532368145;  // std dev = 4.740, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
%   | | | else return 0.0037679920886654413;  // std dev = 4.845, 120.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=32 */
%   | | else return 0.1798219153899083;  // std dev = 0.494, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( phenotype(C, E), location(A, F) )
%   | then if ( interaction(D, C), interaction(G, D) )
%   | | then return -0.027777881494062923;  // std dev = 0.440, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( complex(A, H), interaction(A, D) )
%   | | | then return 0.336560378057992;  // std dev = 1.317, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.09422155848941695;  // std dev = 2.655, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | else return -0.0767812180512854;  // std dev = 0.411, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   else if ( location(A, I) )
%   | then if ( complex(A, J), interaction(A, K) )
%   | | then if ( interaction(K, L), location(L, I) )
%   | | | then return 0.31128563641886414;  // std dev = 1.303, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.11240151532108211;  // std dev = 1.359, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( enzyme(A, M), interaction(A, N) )
%   | | | then return -0.007914843571419517;  // std dev = 1.231, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.09850944209283799;  // std dev = 5.658, 138.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=52 */
%   | else return -0.05282221941446072;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D) )
%   | then if ( complex(E, D), interaction(E, F) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.0970100688409827;  // std dev = 2.575, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return -0.013813313953280898;  // std dev = 3.821, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.08408934226120723;  // std dev = 2.924, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.24756852757957873;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), interaction(L, L) )
%   | | | then return 0.18405184367390778;  // std dev = 1.938, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.051784642810388075;  // std dev = 2.448, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( interaction(M, A), interaction(A, N) )
%   | | | then return -0.04179794351491325;  // std dev = 2.142, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.052692427929280694;  // std dev = 4.124, 76.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=26 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(E, F), location(D, G) )
%   | | then if ( interaction(A, H), phenotype(A, I) )
%   | | | then return -0.04447822657561192;  // std dev = 1.702, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.22412262350735226;  // std dev = 2.308, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else return -0.0340663197316408;  // std dev = 0.446, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | else return -0.09480038598596507;  // std dev = 0.439, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   else if ( interaction(J, A), phenotype(J, K) )
%   | then if ( interaction(L, J), interaction(J, L) )
%   | | then if ( enzyme(J, M) )
%   | | | then return 0.30125341401467925;  // std dev = 1.072, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1894382695387262;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(J, N), interaction(N, P) )
%   | | | then return 0.058855411681486274;  // std dev = 2.532, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.2013640243579422;  // std dev = 1.215, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.016710762860246236;  // std dev = 0.463, 93.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09739076905176852;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( interaction(F, A), complex(A, G) )
%   | | then if ( interaction(D, H), interaction(I, F) )
%   | | | then return 0.05406667665588505;  // std dev = 2.284, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return -0.06195527460572439;  // std dev = 1.752, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( enzyme(D, E) )
%   | | | then return 0.07055169741747289;  // std dev = 1.539, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.31306328739374495;  // std dev = 1.724, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( complex(A, L), complex(J, M) )
%   | | | then return -0.016247299553380695;  // std dev = 3.261, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.060524953013450795;  // std dev = 4.821, 99.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=38 */
%   | | else if ( interaction(A, N) )
%   | | | then return -0.04652291610115818;  // std dev = 3.330, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | | else return -0.17705056217847556;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.601', 'seconds']
Refined model CLL: -0.394973


******************************************
Best model found
******************************************
Results 

CLL : -0.378509 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.913 

Total Inference Time : 3.5302488803863525 

Total revision time: 17.660812803268435
Best scored revision CLL: -0.378381


Results 

CLL : -0.378509 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 17.72286076164246 

Total Inference Time : 3.5302488803863525 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.524
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18390651085708856;  // std dev = 7.615, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15515119174464018;  // std dev = 7.642, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.152946595679923;  // std dev = 7.527, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0965300889620992;  // std dev = 7.707, 278.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06916928071079975;  // std dev = 7.767, 288.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11347289964630927;  // std dev = 7.446, 242.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07131808028301934;  // std dev = 7.565, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), function(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07221555308625077;  // std dev = 7.479, 246.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.031225467584209313;  // std dev = 7.629, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.022314555526788852;  // std dev = 7.642, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.620', 'seconds']
Parameter learned model CLL:-0.365811 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.615, 178, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.642, 182, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.527, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.707, 192, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.767, 202, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.446, 156, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.565, 171, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), function(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.479, 160, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.629, 180, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.642, 182, 86]}]
{'': [0.0, 0.21963957759412364], 'false': [nan, 0.21963957759412364], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21792158609935453], 'false': [nan, 0.21792158609935502], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22480473670950019], 'false': [nan, 0.22480473670950019]}
{'': [0.0, 0.21365353760157396], 'false': [nan, 0.21365353760157352], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2094425154320983], 'false': [nan, 0.20944251543209735], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2290827129294459], 'false': [nan, 0.2290827129294459]}
{'': [0.0, 0.22265287892322483], 'false': [nan, 0.22265287892322483], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2273778835349332], 'false': [nan, 0.2273778835349331]}
{'': [0.0, 0.21878003278873956], 'false': [nan, 0.21878003278874047], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21792158609935441], 'false': [nan, 0.21792158609935441], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 8.081
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( enzyme(A, F), complex(E, D) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( complex(E, G), phenotype(A, H) )
%   | | | then return 0.5010060779566552;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.2581489350995123;  // std dev = 2.449, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | else if ( interaction(I, A), interaction(A, J) )
%   | | then if ( interaction(J, K), interaction(A, K) )
%   | | | then return 0.1402002171507944;  // std dev = 2.810, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.3581489350995123;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.14730556160553568;  // std dev = 4.130, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | | | else return 0.2059750220560341;  // std dev = 3.230, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, A), phenotype(A, D) )
%   | then return 0.5493019909223994;  // std dev = 0.883, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( location(A, G), location(E, G) )
%   | | | then return 0.11550403188763138;  // std dev = 5.326, 136.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=40 */
%   | | | else return 0.21839438238635045;  // std dev = 2.921, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.2572118006642112;  // std dev = 2.837, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.15707429627025532;  // std dev = 3.184, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(A, A), interaction(C, A) )
%   | then return 0.26623795792421384;  // std dev = 0.490, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0.06384590193059078;  // std dev = 0.440, 95.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=25 */
%   else if ( phenotype(A, E) )
%   | then if ( enzyme(A, F) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.17534002595118914;  // std dev = 1.928, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.4193745649624023;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.07979790267245228;  // std dev = 2.391, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.15829337023439052;  // std dev = 3.309, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then return 0.5606542045340136;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.25389601204505896;  // std dev = 3.045, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | | else return 0.09369628854758243;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14386438656023134;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( interaction(E, D) )
%   | | | then return 0.46201969748421107;  // std dev = 1.238, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.1904705278281586;  // std dev = 1.748, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( complex(A, G), interaction(A, A) )
%   | | | then return -0.06446423792062733;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.15423529371091746;  // std dev = 2.359, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else if ( complex(A, H), phenotype(A, I) )
%   | | then if ( interaction(J, A), phenotype(J, I) )
%   | | | then return 0.11045020486729476;  // std dev = 1.418, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.00867987519939621;  // std dev = 2.738, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.13008194915099747;  // std dev = 4.102, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
%   | | | else return 0.07206717569278762;  // std dev = 4.184, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12376084848699646;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(A, A), phenotype(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.2724194139966847;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.024534090836767757;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(D, G) )
%   | | | then return 0.12888602579876676;  // std dev = 2.111, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.029114321826051132;  // std dev = 2.901, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.12961990153407685;  // std dev = 1.607, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.3438265089691828;  // std dev = 1.832, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.23494842532119742;  // std dev = 2.250, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.08385304416757088;  // std dev = 5.304, 128.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=42 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then return -0.03255165697793686;  // std dev = 0.449, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( interaction(E, A), phenotype(E, C) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.1626163856133537;  // std dev = 2.010, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.7235530844932029;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, G), interaction(A, H) )
%   | | | then return 0.29356869085943466;  // std dev = 1.639, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.08907716825363733;  // std dev = 4.527, 88.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=32 */
%   else if ( complex(A, I), interaction(A, A) )
%   | then return 0.40823136321294257;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( location(A, J) )
%   | | then if ( interaction(A, K) )
%   | | | then return -0.0057590731556469675;  // std dev = 3.493, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return 0.06401410988045149;  // std dev = 2.719, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | else return 0.3217632118094299;  // std dev = 1.149, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12323933651174525;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, A), complex(A, D) )
%   | then if ( complex(E, D), phenotype(E, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.13340122815334934;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.14391729254542707;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.09391729254542706;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( phenotype(H, J), phenotype(I, J) )
%   | | | then return -0.028329175430425905;  // std dev = 4.248, 91.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=25 */
%   | | | else return 0.09785927865236335;  // std dev = 4.010, 67.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=26 */
%   | | else if ( location(A, K) )
%   | | | then return -0.013117982203736044;  // std dev = 4.595, 106.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=29 */
%   | | | else return -0.1459891978445135;  // std dev = 1.284, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, A) )
%   | then return -0.23583636972785113;  // std dev = 0.408, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else return -0.008840118069010174;  // std dev = 0.457, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(E, F), complex(A, G) )
%   | | then return -0.02509222476282031;  // std dev = 0.451, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( interaction(H, F), enzyme(H, I) )
%   | | | then return 0.2791840717252145;  // std dev = 1.850, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.04708280591339171;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( complex(A, J) )
%   | | then if ( interaction(K, A), complex(K, J) )
%   | | | then return -0.07721238902588855;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.1535885486471912;  // std dev = 2.102, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.2517062439678364;  // std dev = 1.259, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -6.43546314875963E-4;  // std dev = 4.356, 93.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=26 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(A, E) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then if ( enzyme(H, F), interaction(A, H) )
%   | | | then return 0.47605103030147244;  // std dev = 0.825, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0018141233317580663;  // std dev = 1.145, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.21572408964072742;  // std dev = 1.517, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.030870702711074213;  // std dev = 3.351, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( enzyme(L, M), interaction(A, K) )
%   | | | then return -0.1528731788430317;  // std dev = 1.998, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return -0.03668347447950995;  // std dev = 4.836, 116.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=32 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return 0.1133618053681776;  // std dev = 2.497, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return -0.0015309162323462356;  // std dev = 2.903, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(G, A), phenotype(G, D) )
%   | | | then return 0.07497018573940774;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.14947914863645115;  // std dev = 1.505, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( enzyme(H, E), complex(H, I) )
%   | | | then return 0.12378728530050455;  // std dev = 2.128, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.3702038271406118;  // std dev = 1.422, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( interaction(J, A), interaction(A, K) )
%   | | then if ( enzyme(J, L), phenotype(A, M) )
%   | | | then return -0.17794409484642326;  // std dev = 1.582, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.013294885802527152;  // std dev = 4.141, 81.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=25 */
%   | | else if ( enzyme(A, N) )
%   | | | then return -0.012733294051395562;  // std dev = 2.090, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.043325029667480204;  // std dev = 4.674, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.218', 'seconds']
Refined model CLL: -0.398787


******************************************
Best model found
******************************************
Results 

CLL : -0.365124 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.081 

Total Inference Time : 3.2233076095581055 

Total revision time: 15.003900747299195
Best scored revision CLL: -0.365811


Results 

CLL : -0.365124 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 15.065948705673218 

Total Inference Time : 3.2233076095581055 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.456
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18037115732173445;  // std dev = 7.679, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1855503879308856;  // std dev = 7.515, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15277408620074637;  // std dev = 7.547, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10973939617807628;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11282536569811205;  // std dev = 7.523, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07965891115837356;  // std dev = 7.594, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06025910149086152;  // std dev = 7.616, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04186960570052077;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0395235335863239;  // std dev = 7.616, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03776709259443965;  // std dev = 7.578, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.224', 'seconds']
Parameter learned model CLL:-0.375315 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.679, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.515, 161, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.547, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.651, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.523, 162, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.594, 171, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.616, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.651, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.616, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.578, 169, 87]}]
{'': [0.0, 0.21839506172839596], 'false': [nan, 0.21839506172839596], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22774128511966657], 'false': [nan, 0.22774128511966765], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.226048752834468], 'false': [nan, 0.226048752834468]}
{'': [0.0, 0.2200944089547182], 'false': [nan, 0.22009440895471938], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2273189142110612], 'false': [nan, 0.22731891421106248]}
{'': [nan, 0.22349918875067562], 'false': [nan, 0.22349918875067562]}
{'': [0.0, 0.2222222222222214], 'false': [nan, 0.2222222222222214], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22009440895471777], 'false': [nan, 0.2200944089547178], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22222222222222188], 'false': [nan, 0.2222222222222217], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2243499755859375], 'false': [nan, 0.2243499755859375]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 86.381
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( location(D, F) )
%   | | then if ( phenotype(A, G), interaction(H, D) )
%   | | | then return 0.1914822684328457;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.11269438964496688;  // std dev = 3.231, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, I) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.17633075328133055;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.3105298874804647;  // std dev = 3.226, 42.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
%   | | else if ( location(A, K) )
%   | | | then return 0.1979547603422294;  // std dev = 4.807, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D) )
%   | then if ( enzyme(A, E), interaction(A, A) )
%   | | then return 0.5034268250535473;  // std dev = 0.821, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, F), interaction(A, G) )
%   | | | then return 0.2065550278875185;  // std dev = 3.527, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | else return 0.16340543972522975;  // std dev = 6.381, 183.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=61 */
%   | else if ( interaction(A, A) )
%   | | then return -0.018371060424704655;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.15963864757492338;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.058741135785635;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( phenotype(C, E), interaction(F, C) )
%   | then if ( interaction(A, G), location(F, D) )
%   | | then if ( interaction(A, C), interaction(G, G) )
%   | | | then return 0.04869510205179025;  // std dev = 2.453, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.2502745782193528;  // std dev = 2.978, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | else return 0.060379177253930015;  // std dev = 0.437, 113.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=29 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then return 0.016411512429271722;  // std dev = 0.417, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.33365630569484206;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.1910075192810245;  // std dev = 3.042, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   else if ( interaction(A, K), interaction(K, L) )
%   | then if ( enzyme(A, M) )
%   | | then return 0.2908598591613525;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.15499803988153157;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.6232328025108871;  // std dev = 0.921, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15556862927844595;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(D, D), enzyme(A, F) )
%   | | then if ( phenotype(A, G), phenotype(D, G) )
%   | | | then return 0.14988866596694886;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.10097369613276927;  // std dev = 1.607, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( enzyme(D, H), complex(D, I) )
%   | | | then return 0.2226516242326392;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.04376780042618205;  // std dev = 4.496, 99.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=28 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.20705247930973622;  // std dev = 2.517, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.08026807275275807;  // std dev = 2.922, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.18754289351043657;  // std dev = 2.320, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.31388902112910144;  // std dev = 2.434, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(D, C), phenotype(A, E) )
%   | then if ( complex(C, F), interaction(C, G) )
%   | | then if ( enzyme(G, H), complex(D, F) )
%   | | | then return 0.0611422082453437;  // std dev = 1.903, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.38483373248518327;  // std dev = 1.098, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.0059185537968046795;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( phenotype(C, I) )
%   | | then if ( interaction(D, D), interaction(C, J) )
%   | | | then return 0.4990275490543938;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2109576451490339;  // std dev = 2.736, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | else if ( enzyme(C, K) )
%   | | | then return -0.03563844862175739;  // std dev = 1.253, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.12174739768093754;  // std dev = 2.096, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   else if ( enzyme(A, L), interaction(M, A) )
%   | then return 0.11315511634870001;  // std dev = 0.487, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | else return 0.007792372862373611;  // std dev = 0.441, 121.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=32 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( complex(A, E), complex(D, F) )
%   | then if ( complex(C, E), phenotype(D, G) )
%   | | then return -0.013041815775932736;  // std dev = 0.434, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return 0.1604813433629627;  // std dev = 0.504, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | else return -0.010368808290887438;  // std dev = 0.447, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   else if ( enzyme(A, H) )
%   | then if ( enzyme(I, H), phenotype(I, J) )
%   | | then if ( interaction(K, I), interaction(I, L) )
%   | | | then return 0.31893548244373104;  // std dev = 1.062, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.03355071546187056;  // std dev = 3.064, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | else return -0.07321323112734132;  // std dev = 0.426, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( interaction(M, A), interaction(N, M) )
%   | | then if ( phenotype(M, P), interaction(N, A) )
%   | | | then return 0.18685873660688151;  // std dev = 2.285, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.06344586161867773;  // std dev = 3.301, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | else return 0.4702182285525577;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(E, E) )
%   | | then if ( complex(D, F), interaction(A, G) )
%   | | | then return 0.036547642117311784;  // std dev = 3.587, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | | else return 0.1178033434109574;  // std dev = 4.049, 69.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=27 */
%   | | else if ( location(D, H), phenotype(A, I) )
%   | | | then return 0.07145779336061282;  // std dev = 3.228, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return -0.04634705450783506;  // std dev = 3.502, 65.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | else if ( interaction(A, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return -0.046423392744528974;  // std dev = 1.474, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.02963295717744693;  // std dev = 1.323, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.09555175980098558;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.19006542249302855;  // std dev = 1.278, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.17694354808049403;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( phenotype(A, F), complex(E, G) )
%   | | then if ( complex(D, G), complex(A, H) )
%   | | | then return 0.09200335533788531;  // std dev = 2.235, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return -0.02589382768270027;  // std dev = 2.411, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( location(A, I), location(E, I) )
%   | | | then return 0.18355126338361355;  // std dev = 2.286, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.43033763989274754;  // std dev = 0.959, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, J), enzyme(A, K) )
%   | | then if ( interaction(L, A) )
%   | | | then return 0.08386668011657351;  // std dev = 1.409, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.297131605813492;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.10948832308873035;  // std dev = 2.366, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.00268744875075491;  // std dev = 5.553, 140.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=44 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13146265944515742;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( enzyme(A, G), complex(E, H) )
%   | | | then return 0.264145475628284;  // std dev = 1.700, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.009546346508767302;  // std dev = 4.014, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.005230824849495447;  // std dev = 1.396, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.0986418702973334;  // std dev = 2.823, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( phenotype(K, M), phenotype(L, M) )
%   | | | then return 0.1161780538507091;  // std dev = 3.320, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | | else return 0.0404406015567071;  // std dev = 3.774, 62.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=22 */
%   | | else return 0.2745076049300511;  // std dev = 1.087, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, D), phenotype(E, F) )
%   | then if ( interaction(C, E), complex(C, G) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.09585978993823989;  // std dev = 4.355, 80.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=32 */
%   | | | else return 0.45795956206965077;  // std dev = 0.860, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(D, D), interaction(C, E) )
%   | | | then return -0.06346511853164157;  // std dev = 2.747, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return 0.08034631801702583;  // std dev = 4.109, 72.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=28 */
%   | else return -0.0748388376019676;  // std dev = 0.450, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   else if ( enzyme(A, H) )
%   | then if ( interaction(A, I), complex(I, J) )
%   | | then if ( enzyme(I, H) )
%   | | | then return -0.124873191441783;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.014630969304241435;  // std dev = 1.193, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.09564738386744526;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.17673083540561044;  // std dev = 0.424, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '23.017', 'seconds']
Refined model CLL: -0.421058


******************************************
Best model found
******************************************
Results 

CLL : -0.374723 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 86.381 

Total Inference Time : 15.450160503387451 

Total revision time: 105.6649619216919
Best scored revision CLL: -0.375315


Results 

CLL : -0.374723 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 105.69564663124085 

Total Inference Time : 15.450160503387451 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.705
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1947185143875389;  // std dev = 8.306, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17486051490252327;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12116629517548477;  // std dev = 8.445, 331.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13638169798904567;  // std dev = 8.228, 298.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08968273604152503;  // std dev = 8.372, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06514004548876323;  // std dev = 8.422, 327.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09075701088435557;  // std dev = 8.183, 292.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06906818179255643;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0020014888814638304;  // std dev = 8.534, 347.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04853770155755695;  // std dev = 8.243, 300.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.746', 'seconds']
Parameter learned model CLL:-0.371721 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.306, 205, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.272, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.445, 227, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.228, 194, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.372, 215, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.422, 223, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.183, 188, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.206, 191, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.534, 243, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.243, 196, 104]}]
{'': [0.0, 0.2232904975859077], 'false': [nan, 0.2232904975859077], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22506925207756148], 'false': [nan, 0.22506925207756462], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21547813546791159], 'false': [nan, 0.21547813546791159], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22719697310931933], 'false': [nan, 0.22719697310932171], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21973054510077442], 'false': [nan, 0.21973054510077422], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21689158226486874], 'false': [nan, 0.21689158226486874], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22931131544379849], 'false': [nan, 0.22931131544379849], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22825624820453844], 'false': [nan, 0.22825624820453905], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2098846431745145], 'false': [nan, 0.20988464317451494]}
{'': [-5.782411586589357e-19, 0.2264888888888883], 'false': [nan, 0.2264888888888883], 'true': [nan, -5.782411586589357e-19], 'true,false': [nan, -5.782411586589357e-19], 'true,false,false': [nan, -5.782411586589357e-19]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 14.261
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( enzyme(E, D) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.44638422921715937;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.22400259363609773;  // std dev = 3.084, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | else if ( interaction(A, G), complex(A, H) )
%   | | then if ( interaction(G, I), interaction(I, G) )
%   | | | then return 0.16962434493557788;  // std dev = 3.617, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return 0.06504548682365024;  // std dev = 2.181, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | else if ( interaction(A, J), interaction(J, A) )
%   | | | then return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.17432540568774657;  // std dev = 5.423, 136.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(E, E) )
%   | | then if ( complex(E, F), phenotype(E, G) )
%   | | | then return 0.5317655937030675;  // std dev = 0.902, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19024478673385273;  // std dev = 1.554, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( phenotype(E, H) )
%   | | | then return 0.09383331646497987;  // std dev = 3.695, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | | else return 0.3063200865964125;  // std dev = 1.401, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(A, A), complex(A, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.10894836598293513;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.036221093255662404;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.2333528612759698;  // std dev = 4.097, 70.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=28 */
%   | | | else return 0.1757914629629331;  // std dev = 5.267, 124.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=42 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( location(A, E), location(D, E) )
%   | | then if ( enzyme(D, F) )
%   | | | then return 0.023933248050122032;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.11179929556029052;  // std dev = 3.302, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | else if ( phenotype(D, G) )
%   | | | then return -0.09822686568216109;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.03220266935647177;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( location(A, H), phenotype(A, I) )
%   | | then if ( interaction(J, A), phenotype(J, I) )
%   | | | then return 0.19265315739572045;  // std dev = 3.531, 51.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
%   | | | else return 0.08022248168429133;  // std dev = 4.267, 91.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=25 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.1270564108605099;  // std dev = 2.731, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.20376670279959877;  // std dev = 3.951, 64.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=26 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(E, E), phenotype(E, F) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.060489918346811264;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.1297365049685077;  // std dev = 1.567, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( enzyme(E, G), interaction(H, E) )
%   | | | then return 0.1988456068836724;  // std dev = 1.935, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.04773156155971067;  // std dev = 3.603, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( phenotype(A, K), enzyme(J, L) )
%   | | | then return 0.19590020141411463;  // std dev = 1.541, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.057168092209876266;  // std dev = 4.110, 87.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=23 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return 0.12088651338778696;  // std dev = 3.988, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   | | | else return 0.19120307259038466;  // std dev = 3.683, 56.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( interaction(A, F), enzyme(F, D) )
%   | | then if ( complex(A, G), interaction(F, H) )
%   | | | then return 0.03772177747529615;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08636741848615287;  // std dev = 1.741, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.1560662993693267;  // std dev = 3.099, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | | else return 0.02746783246933361;  // std dev = 2.657, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(A, J), complex(A, L) )
%   | | | then return 0.19767869672080757;  // std dev = 2.853, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.12439880676906517;  // std dev = 5.500, 130.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=48 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return 0.05547716628204862;  // std dev = 2.090, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.0068570986095125575;  // std dev = 1.956, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( interaction(E, A) )
%   | | then if ( complex(E, F), complex(A, G) )
%   | | | then return 0.03792500629521888;  // std dev = 2.772, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return -0.049722364371593664;  // std dev = 2.756, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | else if ( interaction(H, A), complex(E, I) )
%   | | | then return 0.15712130343630176;  // std dev = 2.304, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.04445080925531464;  // std dev = 1.984, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( interaction(L, A), enzyme(L, J) )
%   | | | then return -0.17780958910455363;  // std dev = 1.269, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.05323848050396257;  // std dev = 3.502, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.18484531699180376;  // std dev = 2.592, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.09218927913753937;  // std dev = 4.895, 104.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=37 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( phenotype(A, D), location(A, E) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.10233338308779173;  // std dev = 3.775, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | | | else return 0.27595919898714655;  // std dev = 1.389, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(I, D), interaction(I, J) )
%   | | | then return 0.04261614146175361;  // std dev = 4.648, 101.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=32 */
%   | | | else return 0.24390354185087837;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(L, L), enzyme(A, M) )
%   | | | then return 0.3024192966985822;  // std dev = 1.486, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.13396049061701434;  // std dev = 4.205, 73.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=31 */
%   | | else if ( enzyme(A, N) )
%   | | | then return -0.03141111939117125;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.10408983575186972;  // std dev = 1.563, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, A), phenotype(D, F) )
%   | | then if ( interaction(D, A), complex(E, G) )
%   | | | then return 0.003211592049984511;  // std dev = 3.570, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.17774296175192675;  // std dev = 2.195, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.15455762964645042;  // std dev = 2.395, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | | else return -0.020449890805867094;  // std dev = 3.408, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( enzyme(A, L), phenotype(J, M) )
%   | | | then return 0.1409911904521842;  // std dev = 2.774, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.014915177596331953;  // std dev = 4.880, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.0582303052201338;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.25178854156248287;  // std dev = 1.321, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( interaction(E, A), location(E, D) )
%   | then if ( enzyme(E, F), complex(E, G) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.09605570824041545;  // std dev = 1.913, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.49378685697352553;  // std dev = 0.899, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return 0.13537145940696416;  // std dev = 1.740, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.02849602107432371;  // std dev = 5.079, 118.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=38 */
%   | else if ( enzyme(A, K), complex(A, L) )
%   | | then return 0.008268244987126685;  // std dev = 1.140, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, M), interaction(N, A) )
%   | | | then return 0.027710464101426784;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.26632156368117116;  // std dev = 1.657, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   else if ( location(A, P), interaction(Q, A) )
%   | then return -0.0212186096894901;  // std dev = 0.462, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   | else return 0.09441697917619028;  // std dev = 0.490, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( phenotype(A, F), enzyme(D, G) )
%   | | then if ( interaction(D, H), enzyme(H, I) )
%   | | | then return -0.08308088439283891;  // std dev = 1.951, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.2147538289157498;  // std dev = 1.395, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(D, A), complex(A, J) )
%   | | | then return 0.2283558574357703;  // std dev = 2.183, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.05688106886627909;  // std dev = 3.906, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( location(A, M), location(K, M) )
%   | | | then return -0.11587901216884927;  // std dev = 3.030, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | | else return -0.06337580555476921;  // std dev = 2.945, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return -0.035141308618779066;  // std dev = 4.860, 113.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=33 */
%   | | | else return 0.23230445324863844;  // std dev = 1.321, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.420', 'seconds']
Refined model CLL: -0.402744


******************************************
Best model found
******************************************
Results 

CLL : -0.372624 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 14.261 

Total Inference Time : 5.891015291213989 

Total revision time: 24.625118413925172
Best scored revision CLL: -0.371721


Results 

CLL : -0.372624 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 24.655803123474122 

Total Inference Time : 5.891015291213989 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.579
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20015637004375036;  // std dev = 7.780, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16532986246232967;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12375484166417432;  // std dev = 7.932, 291.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10056529398801732;  // std dev = 7.951, 294.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10126845997538249;  // std dev = 7.846, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09521225804300981;  // std dev = 7.773, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09882550857896669;  // std dev = 7.643, 252.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), function(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07478354872046247;  // std dev = 7.669, 255.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0417706710255422;  // std dev = 7.773, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.003610994550036984;  // std dev = 7.944, 293.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.461', 'seconds']
Parameter learned model CLL:-0.376211 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.78, 177, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.832, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.932, 199, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.951, 202, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.846, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.773, 176, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.643, 160, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), function(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.669, 163, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.773, 176, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.944, 201, 92]}]
{'': [nan, 0.22503834938710165], 'false': [nan, 0.22503834938710165]}
{'': [0.0, 0.2222222222222236], 'false': [nan, 0.22222222222222004], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21619961974941418], 'false': [nan, 0.21619961974941418], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2150030080059233], 'false': [nan, 0.21500300800592234], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [-1.1564823173178713e-18, 0.22141711091558394], 'false': [nan, 0.22141711091558522], 'true': [nan, -1.1564823173178713e-18], 'true,false': [nan, -1.1564823173178713e-18], 'true,false,false': [nan, -1.1564823173178713e-18]}
{'': [0.0, 0.22543996435731872], 'false': [nan, 0.22543996435731872], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.231796422272614], 'false': [nan, 0.231796422272614]}
{'': [nan, 0.23061899269511688], 'false': [nan, 0.23061899269511887]}
{'': [0.0, 0.2254399643573172], 'false': [nan, 0.22543996435731695], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21540146070425958], 'false': [nan, 0.21540146070425958], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 7.624
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( interaction(A, E), interaction(E, F) )
%   | then return 0.24276431971489695;  // std dev = 0.487, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | else return 0.06327714022771744;  // std dev = 0.404, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   else if ( interaction(A, G), interaction(G, G) )
%   | then if ( interaction(H, A), interaction(I, H) )
%   | | then return 0.09814893509951236;  // std dev = 0.427, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.1914822684328457;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( enzyme(A, K), complex(A, L) )
%   | | then if ( enzyme(M, K), interaction(A, M) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( enzyme(A, N), location(A, P) )
%   | | | then return 0.13814893509951237;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.23004976154579312;  // std dev = 5.316, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.191258864214365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( complex(E, F), interaction(G, E) )
%   | | then if ( phenotype(G, H), interaction(I, G) )
%   | | | then return 0.31678369834713366;  // std dev = 1.589, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.5887114097912324;  // std dev = 1.274, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( interaction(A, J), location(E, K) )
%   | | | then return 0.12208680024738956;  // std dev = 2.232, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.279428106640419;  // std dev = 2.489, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | else if ( location(A, L) )
%   | | then if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.09425361685687032;  // std dev = 3.093, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return 0.1897740252508235;  // std dev = 5.414, 127.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=46 */
%   | | else return 0.43497644456082873;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(D, E), phenotype(A, F) )
%   | | then return 0.6038620063469494;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.07840128843721389;  // std dev = 2.410, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.233823068600477;  // std dev = 2.260, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( interaction(A, J), phenotype(J, I) )
%   | | | then return -0.05557344929389292;  // std dev = 1.311, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.09086623133531531;  // std dev = 2.677, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0.030305990507019417;  // std dev = 2.221, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.12756851244129727;  // std dev = 5.882, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( phenotype(D, E), phenotype(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.0074297033621291645;  // std dev = 1.735, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.31092621273653914;  // std dev = 1.516, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( location(A, G), location(D, G) )
%   | | | then return 0.046430156084243786;  // std dev = 2.218, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return -0.03408436301021122;  // std dev = 2.023, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.08005417287415202;  // std dev = 2.054, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.3841872579443716;  // std dev = 1.545, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.05820485486847014;  // std dev = 3.544, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.1223808403699236;  // std dev = 5.172, 118.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=41 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14823718059376728;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( enzyme(F, D), complex(E, G) )
%   | | | then return -0.2193384515808405;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.05297913980627982;  // std dev = 2.166, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( location(E, H), location(A, H) )
%   | | | then return 0.033390213636288926;  // std dev = 3.572, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return 0.19127006248114778;  // std dev = 1.701, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( interaction(J, K), interaction(K, K) )
%   | | | then return 0.05070876354254956;  // std dev = 3.478, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | | else return 0.12006139042114186;  // std dev = 3.157, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.06357307063892757;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.18024805715694076;  // std dev = 3.798, 59.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=25 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15413774950243728;  // std dev = 0.033, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(F, A), phenotype(F, D) )
%   | | then if ( interaction(G, F), enzyme(G, H) )
%   | | | then return -0.03945913812024999;  // std dev = 1.522, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.22451392104973347;  // std dev = 1.277, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( enzyme(A, I), interaction(A, J) )
%   | | | then return 0.11625158530742087;  // std dev = 1.914, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.28581840594194957;  // std dev = 2.228, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | else if ( interaction(K, A), complex(A, L) )
%   | | then if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.11098977219873915;  // std dev = 2.118, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.026800776407540583;  // std dev = 2.535, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( phenotype(A, P), interaction(Q, A) )
%   | | | then return 0.02219707046102097;  // std dev = 2.404, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.11419418527916078;  // std dev = 5.284, 118.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=45 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( enzyme(A, E), enzyme(C, F) )
%   | then return -0.02634923282473979;  // std dev = 0.449, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( phenotype(A, G), interaction(D, C) )
%   | | then return 0.4155011516459953;  // std dev = 0.455, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( complex(D, H), complex(C, I) )
%   | | | then return 0.2654385515851696;  // std dev = 1.643, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.1104434023282927;  // std dev = 2.481, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   else if ( complex(A, J), enzyme(A, K) )
%   | then if ( interaction(A, L), enzyme(L, K) )
%   | | then return 0.11416070369635456;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.034322927413708446;  // std dev = 0.451, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | else if ( complex(A, M), interaction(N, A) )
%   | | then if ( location(A, P), location(N, P) )
%   | | | then return 0.22310538869460791;  // std dev = 1.820, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.006586426329729511;  // std dev = 1.448, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.018316782307220874;  // std dev = 0.459, 134.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=41 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( interaction(E, C), interaction(A, F) )
%   | then return -0.06071296441748302;  // std dev = 0.444, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | else return 0.023493232386087432;  // std dev = 0.475, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   else if ( enzyme(A, G), location(A, H) )
%   | then if ( complex(A, I) )
%   | | then return 0.34746443332370264;  // std dev = 1.138, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( enzyme(J, G), interaction(A, J) )
%   | | | then return -0.11481169542859426;  // std dev = 1.260, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.1164997726779176;  // std dev = 2.448, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( interaction(A, L) )
%   | | | then return 0.26758039629554337;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.0512483512533379;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -2.9702019605260465E-4;  // std dev = 2.661, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.05701768020032208;  // std dev = 4.025, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.124955774890496;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), interaction(A, A) )
%   | then return 0.3984541774629713;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(E, A), interaction(A, F) )
%   | | then if ( phenotype(F, G), complex(F, H) )
%   | | | then return -0.08606879188148218;  // std dev = 3.509, 67.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=16 */
%   | | | else return 0.046333412698489965;  // std dev = 2.680, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return 0.0019725338756198456;  // std dev = 5.236, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
%   | | | else return 0.07988850324517573;  // std dev = 3.752, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11086719804404019;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), complex(A, G) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.24778603834161153;  // std dev = 1.190, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.00861711067850221;  // std dev = 1.640, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( phenotype(A, H), phenotype(D, H) )
%   | | | then return -0.22687700180492498;  // std dev = 1.560, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.05828417728490942;  // std dev = 2.048, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.28739176013407663;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.0019517742725768542;  // std dev = 4.358, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
%   | | else if ( location(A, L) )
%   | | | then return 0.1191355860828769;  // std dev = 4.900, 98.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=42 */
%   | | | else return -0.07961247155716088;  // std dev = 1.480, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.881', 'seconds']
Refined model CLL: -0.413206


******************************************
Best model found
******************************************
Results 

CLL : -0.376331 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.624 

Total Inference Time : 3.0590977668762207 

Total revision time: 14.641085317611694
Best scored revision CLL: -0.376211


Results 

CLL : -0.376331 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 14.671770027160644 

Total Inference Time : 3.0590977668762207 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.421
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16529179224236992;  // std dev = 7.719, 280.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14616611360395051;  // std dev = 7.707, 278.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12972796118845123;  // std dev = 7.682, 274.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16786126794678596;  // std dev = 7.347, 231.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08900881833937081;  // std dev = 7.635, 267.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07762038186065678;  // std dev = 7.608, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.045166458879722815;  // std dev = 7.707, 278.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), function(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.057710186342022844;  // std dev = 7.586, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03503945637993045;  // std dev = 7.649, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03639253858400245;  // std dev = 7.601, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.182', 'seconds']
Parameter learned model CLL:-0.360578 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.719, 194, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.707, 192, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.682, 188, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.347, 145, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.635, 181, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.608, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.707, 192, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), function(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.586, 174, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.649, 183, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.601, 176, 86]}]
{'': [0.0, 0.21280612244898023], 'false': [nan, 0.21280612244898023], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21365353760157507], 'false': [nan, 0.21365353760157532]}
{'': [nan, 0.21535510682508355], 'false': [nan, 0.21535510682508355]}
{'': [0.0, 0.23369127265231102], 'false': [nan, 0.2336912726523109], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.21835065718413754], 'false': [nan, 0.21835065718413807], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [nan, 0.22006968439618926], 'false': [nan, 0.22006968439618926]}
{'': [-1.1564823173178713e-18, 0.21365353760157227], 'false': [nan, 0.21365353760157227], 'true': [nan, -1.1564823173178713e-18], 'true,false': [nan, -1.1564823173178713e-18], 'true,false,false': [nan, -1.1564823173178713e-18]}
{'': [nan, 0.2213609467455626], 'false': [nan, 0.22136094674556306]}
{'': [0.0, 0.21749284835753988], 'false': [nan, 0.21749284835753935], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.220499970864168], 'false': [nan, 0.220499970864168]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 8.07
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( complex(F, H) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.524815601766179;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.3196873966379738;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( interaction(A, A), complex(A, K) )
%   | | then if ( complex(L, K), phenotype(L, M) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( location(A, N), interaction(A, P) )
%   | | | then return 0.178903652080643;  // std dev = 4.806, 106.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
%   | | | else return 0.2448156017661778;  // std dev = 4.217, 75.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=29 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( complex(A, E), enzyme(D, F) )
%   | then return 0.25337536167844754;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.08820073275002983;  // std dev = 0.446, 143.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=39 */
%   else if ( interaction(A, G) )
%   | then if ( phenotype(G, H), interaction(G, G) )
%   | | then return 0.5016129407597181;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(G, A), phenotype(G, I) )
%   | | | then return 0.0016129407597181105;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.18227131382815637;  // std dev = 3.939, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), interaction(K, L) )
%   | | | then return 0.075661259133177;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2802067136786315;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.49232792579984364;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.32566125913317695;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then return 0.05476803104110076;  // std dev = 0.442, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   else if ( complex(A, E) )
%   | then if ( enzyme(A, F), location(A, G) )
%   | | then if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.26081807454888917;  // std dev = 1.014, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.018406345432008885;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.17413920367638525;  // std dev = 2.727, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.31050202532989984;  // std dev = 1.930, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else if ( location(A, K), interaction(L, A) )
%   | | then if ( enzyme(L, M) )
%   | | | then return 0.18808998774305363;  // std dev = 1.941, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.09183412526033918;  // std dev = 4.611, 106.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=30 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return 0.11596494298362557;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.3683444489664426;  // std dev = 1.310, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.21295129415903655;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D), enzyme(A, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), interaction(G, G) )
%   | | | then return 0.01504067307019217;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.10283802380701738;  // std dev = 1.149, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.035715062006292375;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.030379580545340328;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.09681848233178351;  // std dev = 3.187, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return 0.1840517663829636;  // std dev = 4.460, 83.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=33 */
%   | | else if ( location(A, L), interaction(A, M) )
%   | | | then return 0.1241166826089724;  // std dev = 3.413, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.04851325401256998;  // std dev = 2.760, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( phenotype(D, F), location(A, G) )
%   | | then if ( interaction(D, H), interaction(H, D) )
%   | | | then return -0.0037175104622082012;  // std dev = 2.956, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0.14278311551465128;  // std dev = 1.552, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.32618974731266004;  // std dev = 1.060, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(I, A), location(A, J) )
%   | | then if ( interaction(A, K), complex(I, L) )
%   | | | then return 0.12476309648267529;  // std dev = 2.657, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.06759361332424887;  // std dev = 5.625, 148.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=46 */
%   | | else if ( location(A, M) )
%   | | | then return 0.22468668060055547;  // std dev = 2.056, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.04577995523387846;  // std dev = 1.147, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( complex(C, E), enzyme(A, F) )
%   | then if ( interaction(G, C), interaction(G, G) )
%   | | then return 0.010750113847037585;  // std dev = 0.451, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.1641886827802974;  // std dev = 1.861, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.491360029657966;  // std dev = 0.884, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.03586651122375655;  // std dev = 0.457, 148.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=44 */
%   else if ( enzyme(A, I) )
%   | then if ( interaction(A, J), phenotype(J, K) )
%   | | then return 0.11778828033665184;  // std dev = 0.479, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return -0.01315202425618385;  // std dev = 0.433, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( complex(A, L), interaction(A, A) )
%   | | then return 0.04494444889955107;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( location(A, M) )
%   | | | then return 0.21005978010582957;  // std dev = 3.115, 39.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=19 */
%   | | | else return 0.0463898534971624;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15254929967287448;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( phenotype(D, F) )
%   | | then if ( complex(D, G) )
%   | | | then return -0.0034826777183943267;  // std dev = 2.914, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0.10656567900485066;  // std dev = 1.712, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.19921897641364356;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.20050155139502024;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.0903007836866884;  // std dev = 2.286, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.2590906790986879;  // std dev = 1.467, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.04086740342102764;  // std dev = 2.138, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.06997615410697204;  // std dev = 5.593, 135.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=48 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(A, E), phenotype(E, F) )
%   | then if ( interaction(D, E), enzyme(A, G) )
%   | | then if ( enzyme(D, G) )
%   | | | then return 0.07973410021258139;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.43756513074613773;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.024506985244949687;  // std dev = 0.466, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | else if ( complex(D, H), phenotype(A, I) )
%   | | then if ( interaction(J, D) )
%   | | | then return 0.18943050274964163;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.05149405498258127;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.505362755325691;  // std dev = 0.828, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(K, A), enzyme(A, L) )
%   | then return -0.013346155887142804;  // std dev = 0.452, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | else if ( phenotype(A, M), interaction(N, A) )
%   | | then return 0.08991311842668955;  // std dev = 0.479, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | else return 0.00870860923489318;  // std dev = 0.474, 81.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=27 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.19228640937743927;  // std dev = 0.049, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(F, D), phenotype(F, G) )
%   | | then if ( interaction(H, F), phenotype(H, G) )
%   | | | then return 0.059372485756654124;  // std dev = 4.281, 79.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=29 */
%   | | | else return -0.05699126825823644;  // std dev = 3.873, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | else if ( phenotype(A, I), location(D, E) )
%   | | | then return 0.2337046675315649;  // std dev = 2.303, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.03285462846145056;  // std dev = 2.387, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then return 0.17755212035427825;  // std dev = 1.256, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return -0.09505202796285289;  // std dev = 2.731, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return -0.19785953830662315;  // std dev = 1.851, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( enzyme(C, D), interaction(E, A) )
%   | then if ( enzyme(E, F) )
%   | | then return 0.3349308582644861;  // std dev = 0.881, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.07031261326525846;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.17971205234719678;  // std dev = 1.228, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.07720639959766484;  // std dev = 0.458, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then return -0.005115248233101044;  // std dev = 0.463, 135.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=42 */
%   | else if ( interaction(J, A), enzyme(A, K) )
%   | | then if ( interaction(J, L), interaction(L, L) )
%   | | | then return -0.09295237374464638;  // std dev = 1.498, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.35845981071508576;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.2399241861523758;  // std dev = 1.771, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.11968429841754381;  // std dev = 2.374, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.868', 'seconds']
Refined model CLL: -0.4126


******************************************
Best model found
******************************************
Results 

CLL : -0.359877 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.07 

Total Inference Time : 3.292013645172119 

Total revision time: 14.903777185440063
Best scored revision CLL: -0.360578


Results 

CLL : -0.359877 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 14.934461894989013 

Total Inference Time : 3.292013645172119 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.594
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1940562710068482;  // std dev = 7.601, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16239291921269397;  // std dev = 7.637, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1598103641221339;  // std dev = 7.515, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14111050168128206;  // std dev = 7.473, 243.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09149550593378991;  // std dev = 7.616, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08083643291470757;  // std dev = 7.578, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06108622845543665;  // std dev = 7.601, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03387205113516762;  // std dev = 7.686, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06095760858603056;  // std dev = 7.490, 245.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.003756805626888498;  // std dev = 7.744, 280.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.432', 'seconds']
Parameter learned model CLL:-0.371993 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.601, 172, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.637, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.515, 161, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.473, 156, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.616, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.578, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.601, 172, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.686, 184, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.49, 158, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.744, 193, 87]}]
{'': [nan, 0.22307359759097298], 'false': [nan, 0.22307359759097298]}
{'': [0.0, 0.22094524793388376], 'false': [nan, 0.22094524793388443], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22774128511966624], 'false': [nan, 0.22774128511966624], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22984301173601498], 'false': [nan, 0.22984301173601496], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22222222222222213], 'false': [nan, 0.22222222222222235]}
{'': [0.0, 0.22434997558593717], 'false': [nan, 0.22434997558593717], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22307359759097264], 'false': [nan, 0.22307359759097264], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21797088819596597], 'false': [nan, 0.21797088819596588], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22900458142440672], 'false': [nan, 0.2290045814244065], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2141709183673475], 'false': [nan, 0.2141709183673475]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 11.475
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( interaction(D, A), complex(A, E) )
%   | then if ( interaction(F, D), interaction(D, F) )
%   | | then return 0.14386322081379807;  // std dev = 0.452, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( complex(D, E) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( enzyme(G, C), complex(G, H) )
%   | | then if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.32873717039362993;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.17393840878372288;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.2699136409818652;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   else if ( interaction(L, A), location(L, M) )
%   | then return 0.18494632072042794;  // std dev = 0.469, 153.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=50 */
%   | else return 0.04564893509951219;  // std dev = 0.390, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1602812702651022;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( complex(A, F), enzyme(A, G) )
%   | | then if ( interaction(H, D), phenotype(H, E) )
%   | | | then return 0.33646211048322305;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.8293928650851435;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.5848706216482341;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.22426939817653962;  // std dev = 4.343, 79.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=31 */
%   | else if ( enzyme(A, I), interaction(A, A) )
%   | | then if ( location(A, J) )
%   | | | then return -0.032928037763278295;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.0170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.1468590107255605;  // std dev = 2.862, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | | else return 0.09539328145404172;  // std dev = 5.001, 129.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14488012969355712;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(A, E), location(E, F) )
%   | | then if ( enzyme(D, G), interaction(E, E) )
%   | | | then return 0.189529984260715;  // std dev = 1.702, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.09303353295641906;  // std dev = 3.046, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | else if ( enzyme(A, H), location(A, I) )
%   | | | then return 0.14296973689729137;  // std dev = 2.224, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.2700832656406776;  // std dev = 2.625, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | else if ( enzyme(A, J), complex(A, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.005229122389929555;  // std dev = 2.145, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.08394558009465883;  // std dev = 1.912, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.20198406044187953;  // std dev = 2.311, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.11970347848438732;  // std dev = 4.414, 92.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=28 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, F) )
%   | | | then return -0.1419109343942409;  // std dev = 1.272, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.03940181052871556;  // std dev = 1.199, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.11222207823491628;  // std dev = 2.426, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.0257968817766427;  // std dev = 1.543, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( interaction(J, A), location(A, K) )
%   | | then if ( interaction(A, J), enzyme(J, L) )
%   | | | then return 0.34953109020467726;  // std dev = 1.293, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.14020121943537905;  // std dev = 6.277, 171.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=61 */
%   | | else if ( interaction(M, A), interaction(A, M) )
%   | | | then return 0.1685905355946627;  // std dev = 1.083, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.0025268792053828168;  // std dev = 1.778, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( complex(D, F), complex(A, F) )
%   | | then return -0.13842112480603183;  // std dev = 0.385, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( location(C, E), complex(A, G) )
%   | | | then return 0.2517392617852254;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.006318737560825664;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else return 0.22684960047203778;  // std dev = 0.967, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( enzyme(A, H), complex(A, I) )
%   | then return 0.032566804010164256;  // std dev = 0.433, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( enzyme(J, K) )
%   | | | then return 0.1704762189463789;  // std dev = 1.073, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.04298272800831491;  // std dev = 2.657, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.28006231485093896;  // std dev = 1.929, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.1293331654777455;  // std dev = 4.919, 105.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=38 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( interaction(D, D) )
%   | | then if ( interaction(F, D), complex(F, E) )
%   | | | then return 0.017888925028698884;  // std dev = 2.038, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.21281518770515273;  // std dev = 1.231, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, G), phenotype(D, G) )
%   | | | then return -0.1079157902323424;  // std dev = 1.546, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.015635553009560137;  // std dev = 3.778, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( interaction(H, H), complex(H, J) )
%   | | | then return -0.007350008072744243;  // std dev = 2.451, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.0943747472234333;  // std dev = 5.129, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
%   | | else if ( phenotype(A, K), interaction(A, L) )
%   | | | then return 0.06696303421077511;  // std dev = 1.433, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.27939868865231976;  // std dev = 1.406, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.21922937366526124;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), interaction(A, G) )
%   | | then if ( enzyme(A, H), location(E, I) )
%   | | | then return -9.462684109314321E-4;  // std dev = 1.672, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.24865189149712086;  // std dev = 1.667, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(J, E), interaction(E, J) )
%   | | | then return -0.03295955357048967;  // std dev = 3.944, 81.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=21 */
%   | | | else return 0.06717367282243247;  // std dev = 2.252, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.13116317760877422;  // std dev = 1.282, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.09640953371037497;  // std dev = 2.266, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( interaction(A, N), enzyme(A, P) )
%   | | | then return 0.20920818840454147;  // std dev = 2.279, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.12583570830574178;  // std dev = 4.143, 73.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.0929727901903803;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, D) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.00810394813221783;  // std dev = 1.863, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.1036685123806492;  // std dev = 2.042, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.38686522920189326;  // std dev = 1.187, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.2202224636435213;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, J), interaction(A, J) )
%   | | | then return 0.3479545801080375;  // std dev = 1.137, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.05466309259006877;  // std dev = 3.462, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.02614660950139954;  // std dev = 3.747, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0.09674959415902765;  // std dev = 4.174, 74.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=28 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, D), phenotype(A, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.14613365259052585;  // std dev = 1.801, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.06272810022029628;  // std dev = 1.616, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( location(D, H), interaction(A, D) )
%   | | | then return 0.21513350638150006;  // std dev = 1.177, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.006653191905254184;  // std dev = 3.154, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( complex(I, J), phenotype(A, K) )
%   | | | then return -0.08968038077351229;  // std dev = 1.711, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.06290674431511403;  // std dev = 2.312, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.10349754004397409;  // std dev = 2.841, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return 0.038823169808987236;  // std dev = 4.781, 101.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, A), complex(A, D) )
%   | then if ( location(E, C), enzyme(E, F) )
%   | | then return -0.1295188858154206;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.09325901540149491;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( phenotype(G, H) )
%   | | | then return 0.09068828072054444;  // std dev = 3.158, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return 0.012837513024638085;  // std dev = 1.765, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.048393362863413905;  // std dev = 3.063, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return 0.032925610954286796;  // std dev = 5.498, 133.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=46 */
%   else if ( interaction(A, K), enzyme(K, L) )
%   | then return 0.07299294792619329;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, M), interaction(M, A) )
%   | | then return -0.08554600831932191;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.17417284250181614;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.288', 'seconds']
Refined model CLL: -0.402092


******************************************
Best model found
******************************************
Results 

CLL : -0.371394 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 11.475 

Total Inference Time : 6.196490287780762 

Total revision time: 21.51736378097534
Best scored revision CLL: -0.371993


Results 

CLL : -0.371394 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 21.624049896240233 

Total Inference Time : 6.196490287780762 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 2.989
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19363280606725475;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15192481290685558;  // std dev = 8.416, 326.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14401451271834934;  // std dev = 8.327, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12524708258233389;  // std dev = 8.300, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0888594103209101;  // std dev = 8.391, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07972893795557326;  // std dev = 8.346, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04850771212212684;  // std dev = 8.445, 331.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0784790749659976;  // std dev = 8.198, 294.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04214211927397563;  // std dev = 8.327, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.045549739860185325;  // std dev = 8.250, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.077', 'seconds']
Parameter learned model CLL:-0.373566 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.313, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.416, 222, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.327, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.3, 204, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.391, 218, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.346, 211, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.445, 227, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.198, 190, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.327, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.25, 197, 104]}]
{'': [0.0, 0.22293444328824202], 'false': [nan, 0.22293444328824202], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21724566223794503], 'false': [nan, 0.21724566223794559], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2222222222222215], 'false': [nan, 0.2222222222222215], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2236464833867434], 'false': [nan, 0.22364648338674353]}
{'': [0.0, 0.21866440337950022], 'false': [nan, 0.2186644033794985], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22115394305870553], 'false': [nan, 0.22115394305870553], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21547813546791353], 'false': [nan, 0.21547813546791353]}
{'': [nan, 0.228608450182794], 'false': [nan, 0.22860845018279374]}
{'': [nan, 0.22222222222222313], 'false': [nan, 0.22222222222222415]}
{'': [0.0, 0.22613436937782172], 'false': [nan, 0.22613436937782172], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 39.153
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2059750220560341;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( complex(A, H), complex(D, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2956489350995123;  // std dev = 2.806, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), interaction(K, K) )
%   | | | then return 0.23745927992709853;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.09543707069273269;  // std dev = 3.268, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | | else if ( location(A, L) )
%   | | | then return 0.21109011157010105;  // std dev = 5.573, 136.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=48 */
%   | | | else return 0.10814893509951236;  // std dev = 2.121, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( interaction(F, A), phenotype(A, H) )
%   | | | then return 0.11622458583846586;  // std dev = 2.798, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.049787068957299375;  // std dev = 2.642, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | else if ( interaction(I, D), interaction(I, I) )
%   | | | then return 0.23788447429955364;  // std dev = 2.302, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.11023833104303887;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( interaction(A, J), enzyme(A, K) )
%   | | then if ( interaction(J, J) )
%   | | | then return 0.030462676726187004;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.3707583712850656;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.17058060220029891;  // std dev = 5.206, 121.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=41 */
%   | | | else return 0.11065876434429217;  // std dev = 3.173, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( complex(A, F), enzyme(D, G) )
%   | | then if ( interaction(A, H), enzyme(H, G) )
%   | | | then return 0.1453246283664206;  // std dev = 1.413, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.36360667760259685;  // std dev = 1.921, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( enzyme(D, I), interaction(A, E) )
%   | | | then return 0.04130866762559451;  // std dev = 2.315, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.15700618681409925;  // std dev = 7.011, 216.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=76 */
%   | else if ( complex(A, J), enzyme(A, K) )
%   | | then return -0.028261912804140067;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.13739226341199512;  // std dev = 1.416, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.04294891754868346;  // std dev = 2.165, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(A, D) )
%   then if ( complex(E, D), phenotype(E, F) )
%   | then if ( phenotype(A, F), interaction(E, G) )
%   | | then if ( enzyme(G, H) )
%   | | | then return 0.2597731738990463;  // std dev = 3.062, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | | | else return 0.050878610141444035;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.16712656378757554;  // std dev = 2.575, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.06395474475080513;  // std dev = 1.916, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else return 0.01172750394384787;  // std dev = 0.432, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   else if ( interaction(K, A) )
%   | then if ( complex(K, L), phenotype(K, M) )
%   | | then return 0.06555676182382057;  // std dev = 0.454, 160.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=46 */
%   | | else if ( enzyme(A, N), phenotype(K, P) )
%   | | | then return -0.054079545445241906;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.21270251391416994;  // std dev = 2.956, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | else return -0.03570252955963446;  // std dev = 0.407, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( location(F, E), interaction(F, A) )
%   | | then if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.40340568224067946;  // std dev = 0.818, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.07049630376152477;  // std dev = 3.816, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | | else if ( interaction(A, H), interaction(I, A) )
%   | | | then return -0.12695250215862128;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.0070828030765755405;  // std dev = 2.305, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(J, J), enzyme(K, L) )
%   | | | then return 0.033921941887573616;  // std dev = 3.142, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.09933529927092005;  // std dev = 5.922, 157.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=53 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.13128568249359912;  // std dev = 1.391, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.28722995568459225;  // std dev = 1.218, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( interaction(A, E), complex(A, F) )
%   | | then if ( enzyme(E, G), interaction(E, E) )
%   | | | then return 0.23879091977650105;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0188081741126209;  // std dev = 4.281, 88.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=26 */
%   | | else if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.18824901219685017;  // std dev = 1.988, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.08981524246123164;  // std dev = 6.397, 182.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=62 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then return 0.26841308517450263;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.4126533220606568;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, C), complex(A, E) )
%   | then if ( interaction(A, A) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.10891810496862915;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.03548993428777025;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(C, H), enzyme(H, I) )
%   | | | then return -0.07994085744384419;  // std dev = 2.645, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.08226393778612598;  // std dev = 1.389, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( location(A, J) )
%   | | then if ( phenotype(A, K), interaction(L, C) )
%   | | | then return 0.01693614857908099;  // std dev = 5.334, 138.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=40 */
%   | | | else return 0.10039142656395152;  // std dev = 3.902, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
%   | | else if ( interaction(M, C), interaction(M, A) )
%   | | | then return -0.16516431572537174;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.026842456116407138;  // std dev = 1.893, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   else return -0.04671783368061851;  // std dev = 0.419, 80.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(A, E), complex(A, F) )
%   | then return -0.056689189983095065;  // std dev = 0.418, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | else if ( interaction(G, A), complex(C, H) )
%   | | then return 0.15727926352085075;  // std dev = 0.491, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else return 0.04536282154579718;  // std dev = 0.462, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   else if ( interaction(A, I), interaction(I, I) )
%   | then if ( complex(A, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return 0.23273592113450225;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.13112979430030175;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.3450759311703398;  // std dev = 1.120, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( location(A, L) )
%   | | then if ( enzyme(A, M), complex(A, N) )
%   | | | then return 0.18969656946333477;  // std dev = 2.048, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.07039946756179473;  // std dev = 6.023, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
%   | | else return -0.03868284096393475;  // std dev = 0.438, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( enzyme(D, C) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.23144523967375663;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, A) )
%   | | | then return 0.091601726710495;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.18711857625877115;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( complex(D, F), phenotype(A, G) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.012063309857506957;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.0739572814732513;  // std dev = 1.634, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( phenotype(A, H), phenotype(D, H) )
%   | | | then return 0.10356979478172275;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1747040125553502;  // std dev = 1.231, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(I, A), complex(I, J) )
%   | then return 0.0034785432153167095;  // std dev = 0.461, 234.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=71 */
%   | else return 0.09625281382032631;  // std dev = 0.489, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), location(A, E) )
%   | then if ( interaction(F, A), interaction(A, G) )
%   | | then if ( phenotype(G, H), location(F, E) )
%   | | | then return 0.046252338197225504;  // std dev = 4.289, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
%   | | | else return 0.47029509114422996;  // std dev = 0.882, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.06250746447164714;  // std dev = 2.581, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.03825804544081864;  // std dev = 3.908, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   | else if ( interaction(J, A), interaction(A, J) )
%   | | then if ( complex(J, K) )
%   | | | then return -0.006775638948707283;  // std dev = 1.417, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.14938960706973398;  // std dev = 1.817, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( interaction(A, L), location(L, M) )
%   | | | then return 0.03321443785070062;  // std dev = 2.432, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return -0.04448985899567737;  // std dev = 4.293, 96.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=25 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.490', 'seconds']
Refined model CLL: -0.373203


******************************************
Best model found
******************************************
Results 

CLL : -0.383766 

AUC ROC : 0.503957 

AUC PR : 0.007545 

Precision : 0.007353 

Recall : 0.007547 

F1 : 0.007449 

Total Learning Time : 39.153 

Total Inference Time : 8.253390312194824 

Total revision time: 54.96274737548828
Best scored revision CLL: -0.373203


Results 

CLL : -0.383766 

AUC ROC : 0.503957 

AUC PR : 0.007545 

Precision : 0.007353 

Recall : 0.007547 

F1 : 0.007449 

Total Learning Time : 55.06943349075317 

Total Inference Time : 8.253390312194824 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.582
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2217852987358762;  // std dev = 7.652, 253.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15988677931758113;  // std dev = 7.846, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1470835884283465;  // std dev = 7.780, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12944053136193606;  // std dev = 7.742, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09255611984438152;  // std dev = 7.824, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07639683072782227;  // std dev = 7.817, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07953352199439055;  // std dev = 7.710, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07177900266712506;  // std dev = 7.660, 254.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.044372672541459296;  // std dev = 7.734, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.018402259649907268;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.653', 'seconds']
Parameter learned model CLL:-0.387151 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.652, 161, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.846, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.78, 177, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.742, 172, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.824, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.817, 182, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.71, 168, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.66, 162, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.734, 171, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.832, 184, 92]}]
{'': [0.0, 0.23140495867768673], 'false': [nan, 0.23140495867768673], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22141711091558364], 'false': [nan, 0.2214171109155836], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22503834938710038], 'false': [nan, 0.22503834938710038], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22704315886134088], 'false': [nan, 0.22704315886134127], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22262479338842983], 'false': [nan, 0.22262479338842864]}
{'': [0.0, 0.22302733230326582], 'false': [nan, 0.22302733230326582], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22863905325443917], 'false': [nan, 0.22863905325443917], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23101246202492282], 'false': [nan, 0.23101246202492517], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22744292963610924], 'false': [nan, 0.2274429296361091]}
{'': [0.0, 0.2222222222222229], 'false': [nan, 0.2222222222222229], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 8.567
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( complex(D, F) )
%   | | | then return 0.024815601766178853;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( complex(I, K) )
%   | | | then return 0.2081489350995119;  // std dev = 3.695, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
%   | | | else return 0.35814893509951234;  // std dev = 2.449, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.2265699877310913;  // std dev = 2.974, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.1789036520806437;  // std dev = 4.806, 106.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.39492942629309447;  // std dev = 1.978, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.2022963007967155;  // std dev = 2.104, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( enzyme(I, D), interaction(I, I) )
%   | | | then return 0.25305145340173957;  // std dev = 2.146, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.12810613518788871;  // std dev = 2.911, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( interaction(J, A), interaction(A, J) )
%   | | then if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.05551617953003772;  // std dev = 1.532, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -9.944539510503205E-4;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.1728479520054448;  // std dev = 4.373, 85.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else return 0.12589222177300474;  // std dev = 3.911, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( complex(A, G), phenotype(F, D) )
%   | | | then return 0.6491591553430566;  // std dev = 0.879, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.37064520398707346;  // std dev = 1.321, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( phenotype(H, D), interaction(H, H) )
%   | | | then return 0.200961977646229;  // std dev = 2.156, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.10173006442717172;  // std dev = 2.024, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.22094449728716187;  // std dev = 2.159, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.06577389609713429;  // std dev = 3.433, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.08017462064702675;  // std dev = 3.417, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | | else return 0.21290264092924838;  // std dev = 4.160, 72.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(D, E), complex(A, F) )
%   | | then if ( complex(D, F) )
%   | | | then return 0.20986970473057276;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.0029312352891966652;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, G), location(D, H) )
%   | | | then return 0.09743164471843048;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.393090403021915;  // std dev = 1.751, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else if ( enzyme(A, I), complex(A, J) )
%   | | then if ( enzyme(K, I), interaction(K, L) )
%   | | | then return 0.05434773079360894;  // std dev = 3.474, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | | else return -0.01383835262437083;  // std dev = 1.949, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.06151016395855943;  // std dev = 4.536, 100.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=29 */
%   | | | else return 0.15799634121143427;  // std dev = 4.189, 75.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, A), phenotype(A, C) )
%   then return -0.10079981366011986;  // std dev = 0.415, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then if ( complex(A, H), interaction(D, I) )
%   | | | then return 0.1411540107502575;  // std dev = 1.269, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.07039041148599635;  // std dev = 1.813, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( phenotype(A, J), complex(A, E) )
%   | | | then return -0.046587326438952414;  // std dev = 1.196, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.13057270741689228;  // std dev = 3.906, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   | else if ( interaction(A, K) )
%   | | then if ( phenotype(K, L), phenotype(A, M) )
%   | | | then return 0.5392749304074723;  // std dev = 0.899, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.24436930725425915;  // std dev = 2.244, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.08669171710704034;  // std dev = 3.182, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return 0.15284988520583917;  // std dev = 3.950, 65.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=26 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12617141898512044;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( complex(E, F) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.03345531543992167;  // std dev = 2.531, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.12608448877086179;  // std dev = 2.127, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( phenotype(E, D) )
%   | | | then return -0.17136186462474137;  // std dev = 1.242, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.060331115496639526;  // std dev = 2.084, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( interaction(J, H), interaction(H, J) )
%   | | | then return 0.03051176869032695;  // std dev = 3.611, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.10905722539753429;  // std dev = 4.750, 97.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=36 */
%   | | else if ( complex(A, K), interaction(A, L) )
%   | | | then return 0.08936946739472486;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return -0.01946069964129908;  // std dev = 2.456, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09936564901051065;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), phenotype(F, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.15652414436983117;  // std dev = 2.230, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.01161178593844446;  // std dev = 2.260, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return -0.09772622447353173;  // std dev = 1.763, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return -4.040000902548454E-4;  // std dev = 2.697, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | else if ( interaction(A, K), interaction(K, A) )
%   | | then if ( complex(K, L), phenotype(A, M) )
%   | | | then return 0.06338692395217838;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.393824167840176;  // std dev = 1.181, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( complex(A, N), interaction(P, A) )
%   | | | then return 0.0018976341611932426;  // std dev = 3.015, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return 0.0991643386174074;  // std dev = 5.196, 114.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=44 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( location(F, D), complex(A, H) )
%   | | | then return -0.14278272174551532;  // std dev = 1.547, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.08683631744418627;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( enzyme(A, I), interaction(A, J) )
%   | | | then return -0.017947871604088683;  // std dev = 2.512, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.04610734030105429;  // std dev = 3.934, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( location(A, M), location(K, M) )
%   | | | then return 0.09921766577620057;  // std dev = 3.119, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | | else return 0.31749885822967633;  // std dev = 1.526, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(A, N), enzyme(A, P) )
%   | | | then return -0.08412470681934787;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.0559149104181075;  // std dev = 4.477, 88.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then return -0.17219861057441105;  // std dev = 0.389, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | else if ( interaction(C, F), enzyme(F, G) )
%   | | then if ( interaction(H, A), enzyme(A, I) )
%   | | | then return -0.02094182921223467;  // std dev = 1.685, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.2546106006937691;  // std dev = 1.255, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.03924333859840709;  // std dev = 0.449, 74.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
%   else if ( interaction(A, J), interaction(J, J) )
%   | then return 0.16713349692980542;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( phenotype(A, K), interaction(L, A) )
%   | | then if ( interaction(M, L), location(L, N) )
%   | | | then return -0.043309037099584786;  // std dev = 3.069, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.1597529737073394;  // std dev = 1.474, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(P, A), interaction(A, Q) )
%   | | | then return 0.1701705011615885;  // std dev = 1.484, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.027958061562629987;  // std dev = 4.756, 102.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09237818187729321;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), phenotype(A, G) )
%   | | then if ( complex(E, H), interaction(I, E) )
%   | | | then return 0.19468407916921113;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.09291104568687446;  // std dev = 1.994, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( interaction(J, E), phenotype(A, K) )
%   | | | then return 0.4878010809198184;  // std dev = 0.862, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.10345921777627369;  // std dev = 3.305, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | else if ( interaction(A, L), interaction(L, L) )
%   | | then if ( enzyme(A, M), enzyme(L, M) )
%   | | | then return -0.20506935114969313;  // std dev = 1.320, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.02497523044951579;  // std dev = 2.878, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else if ( interaction(N, A) )
%   | | | then return -0.01803763889027059;  // std dev = 4.995, 117.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=36 */
%   | | | else return 0.09884519129405844;  // std dev = 2.613, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.629', 'seconds']
Refined model CLL: -0.405225


******************************************
Best model found
******************************************
Results 

CLL : -0.387292 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.567 

Total Inference Time : 3.3988239765167236 

Total revision time: 15.942225049972535
Best scored revision CLL: -0.387151


Results 

CLL : -0.387292 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 16.048911165237428 

Total Inference Time : 3.3988239765167236 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.669
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2164822684328461;  // std dev = 7.429, 240.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1807225459285939;  // std dev = 7.471, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16549626599309777;  // std dev = 7.402, 237.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11909350221209485;  // std dev = 7.511, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10611470449702068;  // std dev = 7.462, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08444951390624063;  // std dev = 7.471, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06059649097527742;  // std dev = 7.511, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.038760741547478786;  // std dev = 7.565, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02549387706057944;  // std dev = 7.594, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.004464469243385518;  // std dev = 7.731, 282.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.026', 'seconds']
Parameter learned model CLL:-0.372992 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.429, 154, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.471, 159, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.402, 151, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.511, 164, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.462, 158, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.471, 159, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.511, 164, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.565, 171, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.594, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.731, 196, 86]}]
{'': [0.0, 0.2299305555555561], 'false': [nan, 0.2299305555555561], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22780508121615914], 'false': [nan, 0.2278050812161593], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23119514322847168], 'false': [nan, 0.23119514322847168], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22566399999999948], 'false': [nan, 0.2256639999999992], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22823165815641028], 'false': [nan, 0.2282316581564106], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22780508121616078], 'false': [nan, 0.22780508121616078], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22566399999999964], 'false': [nan, 0.22566399999999964], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2226528789232229], 'false': [nan, 0.22265287892322222], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22093040325303545], 'false': [nan, 0.2209304032530357], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2119611689552849], 'false': [nan, 0.2119611689552849]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 9.043
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(D, F) )
%   | | then if ( phenotype(A, G), interaction(D, H) )
%   | | | then return 0.21712329407387132;  // std dev = 2.996, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.38756069980539465;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.07554023944733843;  // std dev = 1.978, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.20814893509951235;  // std dev = 3.017, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | else if ( interaction(J, A), interaction(A, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.058148935099512175;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return 0.13314893509951187;  // std dev = 3.994, 80.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=22 */
%   | | | else return 0.18467954734441028;  // std dev = 3.283, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, A), phenotype(D, F) )
%   | | then if ( interaction(G, D), enzyme(G, H) )
%   | | | then return 0.00415040024628992;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.13600469051342234;  // std dev = 1.451, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( phenotype(D, I), phenotype(A, I) )
%   | | | then return 0.3845854833340285;  // std dev = 1.643, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.24827720195282343;  // std dev = 3.906, 63.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=26 */
%   | else if ( complex(A, J) )
%   | | then if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.03165217701709759;  // std dev = 1.993, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.15111529410342964;  // std dev = 2.029, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.20823235244416755;  // std dev = 2.480, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.12001965154827474;  // std dev = 4.557, 102.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=29 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F) )
%   | | then if ( complex(F, G), interaction(D, A) )
%   | | | then return 0.0496991055499731;  // std dev = 2.446, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.14848582237416674;  // std dev = 3.954, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | else if ( enzyme(D, H) )
%   | | | then return 0.10210155408157076;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.01989713384655516;  // std dev = 2.161, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( phenotype(K, J), interaction(K, K) )
%   | | | then return 0.11741907690532713;  // std dev = 1.441, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.3807704448687943;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( complex(A, L), enzyme(A, M) )
%   | | | then return 0.006065810711827269;  // std dev = 1.263, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.14114638377231653;  // std dev = 4.854, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(F, A), interaction(E, D) )
%   | | then if ( phenotype(D, G), interaction(F, E) )
%   | | | then return 0.18706906205924773;  // std dev = 2.891, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.060294789081766824;  // std dev = 2.945, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | else if ( interaction(E, H), complex(H, I) )
%   | | | then return 0.3604594641965368;  // std dev = 2.329, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.14512537926389346;  // std dev = 2.276, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( complex(A, J), enzyme(A, K) )
%   | | then return 0.5210045857344111;  // std dev = 0.905, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.023214266647466484;  // std dev = 2.287, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.08681927282634748;  // std dev = 4.521, 99.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=29 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( phenotype(A, E), phenotype(D, E) )
%   | | then if ( interaction(D, D), complex(A, F) )
%   | | | then return 0.7599747314538914;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10666535888344858;  // std dev = 2.910, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | else if ( phenotype(D, G), interaction(H, A) )
%   | | | then return -0.004220027841676684;  // std dev = 3.670, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | | | else return 0.05482944521838135;  // std dev = 3.541, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | else if ( enzyme(A, I), complex(A, J) )
%   | | then if ( enzyme(K, I), phenotype(K, L) )
%   | | | then return 0.06324756507632259;  // std dev = 1.117, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.10154050123558914;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.3009375393819061;  // std dev = 1.676, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.13423320625750795;  // std dev = 4.008, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( complex(A, F), interaction(D, D) )
%   | | then if ( interaction(D, G), enzyme(G, H) )
%   | | | then return 0.0065297917186703126;  // std dev = 1.234, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.4769968502864687;  // std dev = 0.962, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(D, I), phenotype(I, J) )
%   | | | then return -0.010342980343417104;  // std dev = 3.536, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return 0.1605674161359381;  // std dev = 1.848, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( complex(A, K) )
%   | | then if ( complex(L, K), interaction(L, L) )
%   | | | then return 0.3747446016270109;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.00536060592676847;  // std dev = 2.836, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else if ( interaction(M, A), location(A, N) )
%   | | | then return 0.15527145412813015;  // std dev = 4.817, 97.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=39 */
%   | | | else return 0.3420458018424071;  // std dev = 1.305, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), interaction(A, A) )
%   | then if ( complex(A, E) )
%   | | then if ( phenotype(F, D), enzyme(F, G) )
%   | | | then return -0.256716529447784;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.256716529447784;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.025313146549640078;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, I), phenotype(A, J) )
%   | | | then return 0.47241622135052325;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08408636649382834;  // std dev = 4.476, 87.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=31 */
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0.19393702706423135;  // std dev = 1.214, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.0076369521051503865;  // std dev = 5.758, 159.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=46 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( interaction(F, D), interaction(D, F) )
%   | | then if ( phenotype(D, G), phenotype(A, G) )
%   | | | then return -0.13588412875578154;  // std dev = 1.727, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.02457629510972166;  // std dev = 2.820, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | else if ( phenotype(D, H), complex(D, I) )
%   | | | then return 0.44136514292694295;  // std dev = 0.919, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.022636884791866593;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( enzyme(A, J), interaction(A, K) )
%   | | then if ( interaction(K, K), phenotype(A, L) )
%   | | | then return 0.2605850901739878;  // std dev = 1.110, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.12475276598702116;  // std dev = 1.978, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( location(A, M), interaction(N, A) )
%   | | | then return 0.030940366020163614;  // std dev = 5.311, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
%   | | | else return 0.09299865943657637;  // std dev = 2.801, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( enzyme(E, F), complex(A, G) )
%   | | then if ( enzyme(D, F), interaction(H, A) )
%   | | | then return 0.007282567781017925;  // std dev = 1.889, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.2651562279126438;  // std dev = 1.479, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return -0.17379336567822576;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.027629997707976812;  // std dev = 4.816, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   | else if ( interaction(K, A) )
%   | | then if ( enzyme(K, L), location(A, M) )
%   | | | then return 0.1559317430919672;  // std dev = 1.949, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.026443255520993372;  // std dev = 4.446, 90.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
%   | | else return 0.24936458791222618;  // std dev = 1.194, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(C, D), interaction(A, C) )
%   | then return -0.060522151078288206;  // std dev = 0.436, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( interaction(E, C), interaction(E, A) )
%   | | then if ( interaction(F, E), phenotype(F, G) )
%   | | | then return 0.08235852169952818;  // std dev = 2.985, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return 0.18469327703104818;  // std dev = 2.049, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.02074180413803917;  // std dev = 2.235, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.046836443875075996;  // std dev = 4.959, 106.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=38 */
%   else if ( interaction(A, I), interaction(I, I) )
%   | then return -0.0879137309469153;  // std dev = 0.455, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, L), phenotype(L, K) )
%   | | | then return 0.0742870319950112;  // std dev = 1.310, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.02111042123080379;  // std dev = 1.675, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return -0.048465920115565234;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.183', 'seconds']
Refined model CLL: -0.404428


******************************************
Best model found
******************************************
Results 

CLL : -0.372324 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.043 

Total Inference Time : 3.5759549140930176 

Total revision time: 16.60001598548889
Best scored revision CLL: -0.372992


Results 

CLL : -0.372324 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 16.706702100753784 

Total Inference Time : 3.5759549140930176 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.594
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2006686201388824;  // std dev = 7.563, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1541471377239394;  // std dev = 7.679, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15865376787188717;  // std dev = 7.523, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10940205365200313;  // std dev = 7.658, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07625905036937136;  // std dev = 7.738, 279.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08763226627544751;  // std dev = 7.594, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08445962925756062;  // std dev = 7.515, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0275414815227776;  // std dev = 7.744, 280.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.051047183364802254;  // std dev = 7.578, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04584484338146072;  // std dev = 7.547, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.284', 'seconds']
Parameter learned model CLL:-0.37391 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.563, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.679, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.523, 162, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.658, 180, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.738, 192, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.594, 171, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.515, 161, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.744, 193, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.578, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.547, 165, 87]}]
{'': [0.0, 0.22519995039990162], 'false': [nan, 0.22519995039990162], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2183950617283955], 'false': [nan, 0.21839506172839596]}
{'': [0.0, 0.22731891421105999], 'false': [nan, 0.22731891421105999], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21966923368261637], 'false': [nan, 0.21966923368261665], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2145912822291597], 'false': [nan, 0.21459128222915919], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22349918875067548], 'false': [nan, 0.22349918875067548], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22774128511966737], 'false': [nan, 0.22774128511966737]}
{'': [0.0, 0.2141709183673469], 'false': [nan, 0.21417091836734573], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2243499755859378], 'false': [nan, 0.22434997558593817]}
{'': [nan, 0.22604875283446807], 'false': [nan, 0.22604875283446807]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 17.028
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( location(A, D) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( interaction(A, G), complex(A, H) )
%   | | | then return 0.2528857772047755;  // std dev = 3.013, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return 0.1756092525598291;  // std dev = 5.225, 126.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=40 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.05814893509951233;  // std dev = 2.000, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.18672036367094091;  // std dev = 3.930, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
%   | else if ( interaction(A, K), interaction(K, A) )
%   | | then return 0.10814893509951218;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(A, D) )
%   then if ( interaction(A, E), phenotype(E, F) )
%   | then return 0.13103386683691387;  // std dev = 0.454, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( phenotype(A, G), interaction(A, H) )
%   | | then return 0.8348885928364164;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.1977145374144276;  // std dev = 2.765, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.3338662230360843;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( interaction(K, A), enzyme(K, L) )
%   | then if ( interaction(M, K), phenotype(A, N) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.1578298784121402;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.43539977773658245;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, P) )
%   | | | then return 0.3281309559647321;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.12370482347920336;  // std dev = 2.072, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | else return 0.14716869602400165;  // std dev = 0.464, 131.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1446638347297048;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(G, E), complex(A, H) )
%   | | | then return 0.2080283689559641;  // std dev = 3.187, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return 0.08031032424313246;  // std dev = 2.679, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( phenotype(I, D), interaction(I, I) )
%   | | | then return 0.05450773150302542;  // std dev = 2.852, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.17139319265889072;  // std dev = 1.591, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( complex(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), phenotype(L, M) )
%   | | | then return 0.057004685981053724;  // std dev = 1.938, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return -0.005968533223871431;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.18896235706662934;  // std dev = 4.725, 95.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=36 */
%   | | | else return 0.8250044228354279;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13493814873468477;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, D) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(E, F), enzyme(F, G) )
%   | | | then return 0.06682499065948937;  // std dev = 2.213, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.1670837710190157;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.42844822535903077;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2113602567872901;  // std dev = 3.704, 56.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=24 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( complex(I, K) )
%   | | | then return 0.10999735178844333;  // std dev = 2.570, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.2963693133795565;  // std dev = 1.586, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( location(A, L) )
%   | | | then return 0.09201978161959341;  // std dev = 4.895, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | | | else return 0.27000772810808094;  // std dev = 0.946, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11673297386602752;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(D, F) )
%   | | then if ( interaction(G, D), phenotype(G, E) )
%   | | | then return 0.050894613497966736;  // std dev = 4.450, 92.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=28 */
%   | | | else return 0.16081354635876116;  // std dev = 3.052, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | else if ( phenotype(A, H), location(D, I) )
%   | | | then return -0.06433970261304472;  // std dev = 2.179, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | | else return 0.06948220652368231;  // std dev = 2.027, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( phenotype(A, J) )
%   | | then if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.16100213211680148;  // std dev = 1.364, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.03810542527728973;  // std dev = 2.077, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.42569097180169874;  // std dev = 1.131, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1783338879742281;  // std dev = 3.177, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09911005926637155;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(D, E), interaction(F, D) )
%   | | then if ( complex(A, G), complex(D, H) )
%   | | | then return 0.037448405931806636;  // std dev = 3.878, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | | else return 0.17200234855911367;  // std dev = 4.299, 74.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=32 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.09636489811327209;  // std dev = 1.998, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.02096730853161264;  // std dev = 3.989, 79.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=22 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.5350958646694716;  // std dev = 0.870, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.04860083728722009;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then return 0.3343805247289866;  // std dev = 0.830, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.018898870092045203;  // std dev = 0.458, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( location(A, H), location(F, H) )
%   | | then if ( phenotype(A, I), complex(F, J) )
%   | | | then return 0.0932102935073826;  // std dev = 3.179, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | | else return 0.011940531092629717;  // std dev = 3.526, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | else if ( enzyme(A, K), interaction(L, F) )
%   | | | then return 0.08105083677979755;  // std dev = 1.789, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.24767208177500782;  // std dev = 1.939, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else if ( complex(A, M) )
%   | | then return 0.3799912201859807;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.46691272028532715;  // std dev = 0.940, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.0925480570160245;  // std dev = 3.531, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10396848737376738;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then if ( interaction(D, D), phenotype(D, G) )
%   | | | then return -0.09559360754776743;  // std dev = 2.216, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return -0.018361004010922995;  // std dev = 4.011, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
%   | | else if ( location(D, H), location(A, H) )
%   | | | then return 0.08094413815217097;  // std dev = 5.106, 110.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=42 */
%   | | | else return -0.01994753453219401;  // std dev = 2.733, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | else if ( enzyme(A, I) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.08869053802441729;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.008532926182629151;  // std dev = 1.354, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.3413893672059495;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( enzyme(A, E), phenotype(C, F) )
%   | then if ( interaction(G, C), enzyme(G, H) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.39229746634928625;  // std dev = 1.417, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.07652773964370117;  // std dev = 1.974, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( interaction(J, C), location(J, D) )
%   | | | then return 0.16068327784525904;  // std dev = 1.654, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.058083943281525614;  // std dev = 1.920, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( interaction(C, C), phenotype(A, K) )
%   | | then if ( interaction(A, L) )
%   | | | then return 0.10157044946767692;  // std dev = 2.027, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.016956537669742866;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(C, M), complex(M, N) )
%   | | | then return -0.026223942339476763;  // std dev = 5.567, 150.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=44 */
%   | | | else return 0.3179242039001228;  // std dev = 1.078, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.10059024847800016;  // std dev = 0.454, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(C, C), complex(A, E) )
%   | then return -0.06999618555848248;  // std dev = 0.428, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | else if ( interaction(F, C), complex(F, G) )
%   | | then if ( interaction(F, F), enzyme(C, H) )
%   | | | then return 0.3190665669427201;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.018665174720847055;  // std dev = 5.191, 119.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=41 */
%   | | else return -0.05923418331214307;  // std dev = 0.423, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   else if ( enzyme(A, I), location(A, J) )
%   | then return -0.07822247319563198;  // std dev = 0.438, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( location(A, M), interaction(N, L) )
%   | | | then return 0.006396223096039706;  // std dev = 2.865, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0.09930335834452025;  // std dev = 1.531, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( location(A, P) )
%   | | | then return -0.0670545254016113;  // std dev = 1.484, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.15847013626753353;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.493', 'seconds']
Refined model CLL: -0.402849


******************************************
Best model found
******************************************
Results 

CLL : -0.373316 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 17.028 

Total Inference Time : 6.361456394195557 

Total revision time: 27.476575157165527
Best scored revision CLL: -0.37391


Results 

CLL : -0.373316 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 27.548912546157837 

Total Inference Time : 6.361456394195557 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.664
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17425835759191413;  // std dev = 8.434, 329.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15460385598923215;  // std dev = 8.416, 326.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1497998416539368;  // std dev = 8.306, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13263854297194408;  // std dev = 8.265, 303.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10861363573826531;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09433630038067362;  // std dev = 8.236, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08686823484009559;  // std dev = 8.167, 290.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), function(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05170314752706959;  // std dev = 8.279, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06617202930918079;  // std dev = 8.119, 284.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04575849278911247;  // std dev = 8.159, 289.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.043', 'seconds']
Parameter learned model CLL:-0.394165 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.434, 225, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.416, 222, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.306, 205, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.265, 199, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.272, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.236, 195, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.167, 186, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), function(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.279, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.119, 180, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.159, 185, 104]}]
{'': [nan, 0.21618425550392242], 'false': [nan, 0.21618425550392242]}
{'': [0.0, 0.2172456622379471], 'false': [nan, 0.2172456622379439], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22329049758590613], 'false': [nan, 0.22329049758590613], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22542452265028465], 'false': [nan, 0.2254245226502839]}
{'': [0.0, 0.22506925207756345], 'false': [nan, 0.2250692520775612], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2268431001890352], 'false': [nan, 0.2268431001890352]}
{'': [-1.1564823173178713e-18, 0.23001189060642183], 'false': [nan, 0.23001189060642183], 'true': [nan, -1.1564823173178713e-18], 'true,false': [nan, -1.1564823173178713e-18], 'true,false,false': [nan, -1.1564823173178713e-18]}
{'': [nan, 0.2247137866164999], 'false': [nan, 0.2247137866164996]}
{'': [2.3129646346357427e-18, 0.23209680618924727], 'false': [nan, 0.23209680618924652], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [nan, 0.23036122651788152], 'false': [nan, 0.23036122651788152]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 20.456
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(A, E), interaction(D, E) )
%   | then if ( interaction(E, E), enzyme(E, F) )
%   | | then return 0.06867525088898598;  // std dev = 0.408, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( phenotype(A, G), enzyme(E, H) )
%   | | | then return 0.33183314562582816;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.2059750220560341;  // std dev = 3.956, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | else if ( interaction(I, D), enzyme(D, J) )
%   | | then return 0.19814893509951237;  // std dev = 0.474, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | else return 0.1417310246517498;  // std dev = 0.451, 134.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=38 */
%   else if ( complex(A, K), location(A, L) )
%   | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(M, A), interaction(N, M) )
%   | | then if ( phenotype(N, P) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.1438632208137979;  // std dev = 0.452, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.16440643367935753;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(E, A), complex(E, H) )
%   | | | then return 0.11601903729710998;  // std dev = 2.073, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.49802989191435926;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( enzyme(E, I), complex(E, J) )
%   | | | then return 0.20965094819634847;  // std dev = 1.757, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.06155949586775192;  // std dev = 3.267, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | else if ( enzyme(A, K), interaction(L, A) )
%   | | then if ( interaction(M, L), enzyme(M, N) )
%   | | | then return 0.22550436140330815;  // std dev = 3.122, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | | else return 0.07873861052751857;  // std dev = 2.746, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( interaction(P, A), enzyme(P, Q) )
%   | | | then return 0.15377762879170198;  // std dev = 3.768, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   | | | else return 0.2556537216185774;  // std dev = 4.041, 67.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=28 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13059238355896394;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( enzyme(D, F), interaction(D, G) )
%   | | then if ( interaction(G, A), interaction(D, A) )
%   | | | then return 0.18813923197444501;  // std dev = 1.350, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.06500415244964715;  // std dev = 1.475, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( complex(D, H), interaction(D, A) )
%   | | | then return 0.46380769842597974;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2595161515108381;  // std dev = 1.787, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(J, J), enzyme(I, K) )
%   | | | then return 0.0426610799148131;  // std dev = 3.143, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | | else return 0.11695296148879067;  // std dev = 6.950, 226.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=70 */
%   | | else if ( location(A, L), interaction(M, A) )
%   | | | then return 0.41321433548886866;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.13649829332085442;  // std dev = 1.627, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), interaction(F, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.11819470330964053;  // std dev = 5.235, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.3140623123669597;  // std dev = 2.165, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( interaction(H, D), phenotype(H, I) )
%   | | | then return 0.08091736648366156;  // std dev = 4.197, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
%   | | | else return -0.01643177071952133;  // std dev = 1.765, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | else if ( interaction(J, A), interaction(A, K) )
%   | | then return 0.2643278820200684;  // std dev = 1.013, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.03225240014523606;  // std dev = 0.438, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   else if ( interaction(L, A), interaction(M, L) )
%   | then if ( enzyme(A, N) )
%   | | then return 0.2861234813879038;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5210314723922633;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.08242487526333354;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13992265499229165;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(A, F), complex(D, G) )
%   | | then if ( interaction(D, H), phenotype(H, E) )
%   | | | then return 0.0493978622353685;  // std dev = 3.829, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | | | else return 0.44677976791037227;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.16341991705876177;  // std dev = 4.819, 97.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=38 */
%   | | | else return 0.08046419469363401;  // std dev = 4.114, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
%   | else if ( phenotype(A, J), interaction(K, A) )
%   | | then if ( complex(A, L) )
%   | | | then return -0.08886059016702247;  // std dev = 1.270, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.005655961036734315;  // std dev = 1.743, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(M, A), complex(A, N) )
%   | | | then return 0.26973216283073426;  // std dev = 1.411, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.041498156840690796;  // std dev = 2.400, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), phenotype(A, G) )
%   | | then if ( interaction(A, F), enzyme(F, H) )
%   | | | then return 0.08262365802160596;  // std dev = 1.639, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.24437751780834227;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.04001456481492406;  // std dev = 0.434, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( complex(A, K), interaction(J, J) )
%   | | | then return 0.2991181375987822;  // std dev = 1.492, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.10025662085913128;  // std dev = 2.775, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.0538497933525521;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5040805906942782;  // std dev = 0.878, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, M), enzyme(M, N) )
%   | then return -0.00968912203538849;  // std dev = 0.447, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | else return 0.060956149165607286;  // std dev = 0.464, 172.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=54 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14037744820195225;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), phenotype(F, G) )
%   | | then if ( complex(F, H), interaction(I, F) )
%   | | | then return 0.007315315112157627;  // std dev = 3.643, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.24941281879770336;  // std dev = 1.658, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.18899288842970796;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.028109732430448443;  // std dev = 1.979, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( interaction(M, K), complex(M, N) )
%   | | | then return 0.086605280059126;  // std dev = 3.597, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | | else return -0.0057108955833349555;  // std dev = 2.573, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( phenotype(A, P) )
%   | | | then return 0.15848204522361964;  // std dev = 4.088, 69.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=29 */
%   | | | else return 0.07493069882414391;  // std dev = 3.111, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(C, E), complex(A, E) )
%   | then return -0.19510373977362822;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( enzyme(A, D), interaction(C, A) )
%   | | then return 0.47045839747127904;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(C, F), complex(A, G) )
%   | | | then return 0.14963048378737523;  // std dev = 2.391, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.008011691072188404;  // std dev = 2.834, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then return -0.048766689620364796;  // std dev = 0.424, 68.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.2004966806239267;  // std dev = 1.229, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.04323245673949674;  // std dev = 3.415, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | | else if ( complex(A, M), interaction(N, A) )
%   | | | then return 0.05288603809585815;  // std dev = 2.811, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return -0.0065566566436672915;  // std dev = 4.620, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1151814344712585;  // std dev = 9.47e-06, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(A, D), phenotype(A, F) )
%   | | then if ( phenotype(D, G), interaction(D, D) )
%   | | | then return 0.004648835667368219;  // std dev = 2.015, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.2092601573605128;  // std dev = 2.734, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | else if ( interaction(A, D), complex(D, H) )
%   | | | then return -0.12813439359892426;  // std dev = 1.565, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.04342602418269429;  // std dev = 6.729, 202.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=68 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.03540053600239912;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.33926524679886433;  // std dev = 1.210, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.16218871531821907;  // std dev = 1.260, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.026661168065969187;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( complex(A, D), enzyme(A, E) )
%   | then return -0.157170923432832;  // std dev = 0.405, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else return 0.010212762760110202;  // std dev = 0.472, 138.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=47 */
%   else if ( location(A, F), phenotype(A, G) )
%   | then if ( interaction(H, A), phenotype(H, G) )
%   | | then if ( enzyme(H, I) )
%   | | | then return 0.4588030429237815;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10708453757956626;  // std dev = 2.042, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else return -0.009515619408626542;  // std dev = 0.457, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(J, L), interaction(L, J) )
%   | | | then return 0.17202744955457136;  // std dev = 2.677, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.33686875185861387;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, M) )
%   | | | then return -9.535748125634111E-4;  // std dev = 1.882, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.1548488922807745;  // std dev = 1.286, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.107', 'seconds']
Refined model CLL: -0.404599


******************************************
Best model found
******************************************
Results 

CLL : -0.394984 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 20.456 

Total Inference Time : 9.065969467163086 

Total revision time: 34.064182395935056
Best scored revision CLL: -0.394165


Results 

CLL : -0.394984 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 34.136519784927366 

Total Inference Time : 9.065969467163086 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.741
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19514527209584942;  // std dev = 7.810, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.186541960921691;  // std dev = 7.710, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11799894529474396;  // std dev = 7.951, 294.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11328992921238658;  // std dev = 7.866, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09129670649906423;  // std dev = 7.880, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06132305994013936;  // std dev = 7.957, 295.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07231429073057692;  // std dev = 7.824, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06940469145822596;  // std dev = 7.758, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.046440318028728944;  // std dev = 7.810, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03677515317452542;  // std dev = 7.810, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.860', 'seconds']
Parameter learned model CLL:-0.371682 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.81, 181, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.71, 168, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.951, 202, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.866, 189, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.88, 191, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.957, 203, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.824, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.758, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.81, 181, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.32e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.81, 181, 92]}]
{'': [0.0, 0.22342980584738914], 'false': [nan, 0.22342980584738914], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2286390532544379], 'false': [nan, 0.2286390532544372], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2150030080059244], 'false': [nan, 0.2150030080059244], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22020997707729192], 'false': [nan, 0.22020997707729031], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21940591092409786], 'false': [nan, 0.2194059109240981], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2146049985636314], 'false': [nan, 0.2146049985636314], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2226247933884295], 'false': [nan, 0.2226247933884295], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22624229747300498], 'false': [nan, 0.2262422974730055], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2234298058473895], 'false': [nan, 0.223429805847389], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [5.782411586589357e-19, 0.22342980584738759], 'false': [nan, 0.22342980584738759], 'true': [nan, 5.782411586589357e-19], 'true,false': [nan, 5.782411586589357e-19], 'true,false,false': [nan, 5.782411586589357e-19]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 8.925
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( location(D, F) )
%   | | then if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.2059750220560341;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.11529179224236935;  // std dev = 4.479, 105.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=27 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( phenotype(A, K), interaction(A, L) )
%   | | | then return 0.10814893509951237;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.2520883290389062;  // std dev = 2.807, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.31467067422994655;  // std dev = 3.378, 46.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | | | else return 0.20950028645086372;  // std dev = 2.904, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( interaction(H, D) )
%   | | | then return 0.06278255438490708;  // std dev = 2.317, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.13488523595944626;  // std dev = 1.450, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.26729374296484487;  // std dev = 2.261, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.11478700642437112;  // std dev = 3.700, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return 0.2076921607159084;  // std dev = 3.155, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return 0.07872869929793333;  // std dev = 2.435, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.06891658577060406;  // std dev = 1.950, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.3403514694474664;  // std dev = 3.501, 49.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(D, F), phenotype(D, G) )
%   | | then if ( enzyme(A, E), complex(A, H) )
%   | | | then return 0.2059594130076278;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.1043227903737462;  // std dev = 2.232, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.0015358096333597249;  // std dev = 1.802, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return -0.10684158766597944;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(L, J), interaction(A, M) )
%   | | | then return 0.11005905955747933;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.20665438100614444;  // std dev = 3.657, 56.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=22 */
%   | | else if ( interaction(N, A) )
%   | | | then return 0.07209048188907631;  // std dev = 4.571, 103.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=29 */
%   | | | else return 0.1913302936170171;  // std dev = 3.076, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(D, E), interaction(A, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.009940681007657381;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.30515644829940847;  // std dev = 1.412, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( complex(D, H), complex(A, I) )
%   | | | then return 0.11391483959041056;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0349653058901335;  // std dev = 2.375, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | else if ( enzyme(A, J), interaction(A, K) )
%   | | then if ( enzyme(K, J), interaction(K, K) )
%   | | | then return 0.04474802793729609;  // std dev = 1.476, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.2805664822817849;  // std dev = 2.959, 35.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.08348483129325629;  // std dev = 5.533, 146.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=44 */
%   | | | else return 0.2356389124677881;  // std dev = 2.791, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( complex(E, F), phenotype(E, G) )
%   | | then if ( enzyme(A, H), interaction(E, E) )
%   | | | then return 0.20511296471647986;  // std dev = 1.661, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.04842332336839668;  // std dev = 3.992, 79.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=22 */
%   | | else if ( enzyme(D, I) )
%   | | | then return 0.4528539037798862;  // std dev = 1.475, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.14025365367850634;  // std dev = 3.778, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then if ( phenotype(J, L), interaction(J, J) )
%   | | | then return 0.1283534045648602;  // std dev = 1.360, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.022839137338299263;  // std dev = 2.426, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.04814380279231928;  // std dev = 2.938, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return 0.1351735042258786;  // std dev = 2.641, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( complex(E, F), phenotype(E, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.005859332762503271;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.6261214873265151;  // std dev = 0.914, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(A, H), enzyme(H, D) )
%   | | | then return 0.4265903360287905;  // std dev = 1.201, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.11066233570291403;  // std dev = 3.177, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( enzyme(I, K) )
%   | | | then return -0.00795887021721396;  // std dev = 1.745, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.12452008262647525;  // std dev = 3.370, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return 0.24830349646208938;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0029325760419092787;  // std dev = 5.051, 125.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=36 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( enzyme(D, F), interaction(D, G) )
%   | | then if ( enzyme(G, H), phenotype(G, I) )
%   | | | then return -0.04293118407629852;  // std dev = 2.287, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.1792542077379208;  // std dev = 1.429, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( location(A, J), phenotype(D, K) )
%   | | | then return 0.08069490386289667;  // std dev = 3.047, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return 0.22094793145638944;  // std dev = 2.279, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | else if ( interaction(L, A), interaction(M, L) )
%   | | then if ( interaction(N, M), enzyme(A, P) )
%   | | | then return -0.07155932198688585;  // std dev = 2.736, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.08765460454991084;  // std dev = 4.183, 75.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=27 */
%   | | else if ( interaction(Q, A), complex(Q, R) )
%   | | | then return -0.12009429832432122;  // std dev = 1.502, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.001370354873775624;  // std dev = 3.266, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( complex(F, H), complex(D, H) )
%   | | | then return 0.020005401264584832;  // std dev = 1.170, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.10465091263642477;  // std dev = 2.161, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( enzyme(D, I) )
%   | | | then return 0.15904993854427613;  // std dev = 1.918, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.01733578376195929;  // std dev = 3.613, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( interaction(L, A), complex(A, M) )
%   | | | then return 0.07427468896528279;  // std dev = 2.689, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return -0.045022288913679376;  // std dev = 2.704, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.042524781366936396;  // std dev = 2.706, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0.16481870502491114;  // std dev = 3.659, 54.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=25 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( enzyme(A, F), enzyme(D, G) )
%   | | then if ( interaction(A, H), complex(A, I) )
%   | | | then return -0.04215351825750221;  // std dev = 1.992, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.19838663557595274;  // std dev = 1.283, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( phenotype(D, J) )
%   | | | then return -0.013765816920029093;  // std dev = 4.763, 109.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=32 */
%   | | | else return 0.0581085027729511;  // std dev = 4.176, 75.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=27 */
%   | else if ( phenotype(A, K), enzyme(A, L) )
%   | | then if ( interaction(A, M), interaction(M, M) )
%   | | | then return -0.09684958976239338;  // std dev = 1.552, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.13416533795734;  // std dev = 1.247, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return -0.06126839110528438;  // std dev = 2.563, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return -0.11303679087428381;  // std dev = 2.715, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, A) )
%   | then if ( location(A, D), phenotype(A, E) )
%   | | then if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.0999546715513155;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1803416027875795;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.35419586849631357;  // std dev = 0.825, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, H) )
%   | | then if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.11862440195824067;  // std dev = 3.322, 44.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=20 */
%   | | | else return 0.014211680755034525;  // std dev = 3.805, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.020891568717265625;  // std dev = 4.586, 94.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=31 */
%   | | | else return -0.048753749480399886;  // std dev = 3.264, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.675', 'seconds']
Refined model CLL: -0.406059


******************************************
Best model found
******************************************
Results 

CLL : -0.371807 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.925 

Total Inference Time : 3.551266670227051 

Total revision time: 17.01631509399414
Best scored revision CLL: -0.371682


Results 

CLL : -0.371807 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 17.08865248298645 

Total Inference Time : 3.551266670227051 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.645
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19941877636935415;  // std dev = 7.527, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17336944474679375;  // std dev = 7.527, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10404436150581979;  // std dev = 7.772, 289.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13097804081656358;  // std dev = 7.527, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09917873583427829;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06746673935571752;  // std dev = 7.656, 270.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.054569595109707485;  // std dev = 7.656, 270.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05735998713991695;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06191733214122211;  // std dev = 7.487, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06532978267569425;  // std dev = 7.393, 236.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.684', 'seconds']
Parameter learned model CLL:-0.379306 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.527, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.527, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.772, 203, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.527, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.579, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.656, 184, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.656, 184, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.579, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.487, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.393, 150, 86]}]
{'': [nan, 0.22480473670949916], 'false': [nan, 0.22480473670949916]}
{'': [nan, 0.22480473670949822], 'false': [nan, 0.22480473670949835]}
{'': [0.0, 0.20902527508051785], 'false': [nan, 0.20902527508051785], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2248047367094983], 'false': [nan, 0.22480473670949774], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22179156542090864], 'false': [nan, 0.2217915654209081], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21706447187928607], 'false': [nan, 0.21706447187928607], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2170644718792861], 'false': [nan, 0.2170644718792861], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22179156542091036], 'false': [nan, 0.22179156542091077], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22695012211313073], 'false': [nan, 0.22695012211313023], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23161447859810366], 'false': [nan, 0.23161447859810366], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 9.429
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, A), phenotype(A, C) )
%   then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( location(A, D) )
%   | then if ( interaction(E, A), phenotype(A, F) )
%   | | then if ( interaction(G, E), complex(G, H) )
%   | | | then return 0.20189893509951173;  // std dev = 3.800, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   | | | else return 0.13592671287729013;  // std dev = 3.801, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.2087982857488617;  // std dev = 4.187, 77.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=27 */
%   | | | else return 0.3364098046647297;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(J, K) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( phenotype(A, G), complex(C, H) )
%   | | then if ( enzyme(E, I) )
%   | | | then return 0.1650861487401539;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2371715476972212;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(C, J) )
%   | | | then return 0.511198960144643;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3312689620397511;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( complex(A, K) )
%   | | then return 0.3307851086726816;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5494943212996186;  // std dev = 0.451, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( phenotype(A, L), complex(A, M) )
%   | then return 0.10802840336285884;  // std dev = 0.450, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | else if ( interaction(N, A), complex(N, P) )
%   | | then return 0.12504277338368908;  // std dev = 0.458, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | else return 0.19408696169406955;  // std dev = 0.479, 105.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=38 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.18391082157096073;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, A), phenotype(A, D) )
%   | then if ( phenotype(E, D), enzyme(E, F) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.08611662866228283;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.06938125240476292;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.0027832953289494977;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( enzyme(A, J), complex(H, K) )
%   | | | then return 0.20155915077164596;  // std dev = 1.713, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.08373698832784389;  // std dev = 3.698, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | else if ( complex(A, L), location(A, M) )
%   | | | then return 0.11278942215310629;  // std dev = 3.117, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.18697862038761967;  // std dev = 5.259, 116.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=45 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15881332699128475;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D), interaction(A, A) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.1569772501916295;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.46447978229774023;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(H, A), enzyme(A, I) )
%   | | | then return -0.011718817890411279;  // std dev = 2.451, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.10547333683454958;  // std dev = 3.478, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.0203658735369368;  // std dev = 2.442, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.15201624333511274;  // std dev = 5.489, 130.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=48 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15648272082839537;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( enzyme(E, H), phenotype(E, I) )
%   | | | then return 0.20785696905010845;  // std dev = 1.310, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.062152581594616556;  // std dev = 2.486, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( interaction(J, E), interaction(J, J) )
%   | | | then return 0.7462195332123649;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3509702688105983;  // std dev = 1.704, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( complex(A, K), phenotype(A, L) )
%   | | then if ( interaction(A, M), phenotype(M, L) )
%   | | | then return 0.281556947136549;  // std dev = 0.994, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.09047694075043954;  // std dev = 1.295, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( enzyme(A, N), interaction(A, P) )
%   | | | then return 0.22596889531227873;  // std dev = 2.089, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.0986673764663763;  // std dev = 5.792, 149.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=51 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14570281356715595;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( phenotype(D, F), complex(E, G) )
%   | | then if ( interaction(E, A), phenotype(A, H) )
%   | | | then return 0.1406214150113951;  // std dev = 2.051, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return -0.021080397980710524;  // std dev = 3.936, 78.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=21 */
%   | | else if ( phenotype(E, I), location(D, J) )
%   | | | then return 0.13948148790324857;  // std dev = 3.520, 50.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=21 */
%   | | | else return -0.021199221556163942;  // std dev = 2.076, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | else if ( enzyme(A, K) )
%   | | then if ( interaction(L, A), interaction(A, M) )
%   | | | then return 0.21984237975843743;  // std dev = 0.969, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.031531175505488424;  // std dev = 2.263, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.09236845054160846;  // std dev = 2.814, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.2160650267667301;  // std dev = 2.284, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11144320343862507;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( interaction(D, A) )
%   | | then return 0.18411725327021658;  // std dev = 1.228, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(D, F), interaction(G, A) )
%   | | | then return 0.004729041162154463;  // std dev = 2.358, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.12575426382008476;  // std dev = 1.796, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), phenotype(J, K) )
%   | | | then return 0.3601225766685156;  // std dev = 1.358, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.09832753713973295;  // std dev = 2.765, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return -0.028310744789488584;  // std dev = 3.150, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.07298388541288339;  // std dev = 5.069, 112.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(A, E) )
%   | | then if ( phenotype(D, F) )
%   | | | then return 0.03897682721926494;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.15592422788774038;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.006030776656506522;  // std dev = 2.666, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.05630984455564847;  // std dev = 2.254, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | else if ( enzyme(A, I), interaction(A, J) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.06323532221460404;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.09846727659942774;  // std dev = 1.758, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.16239597134839412;  // std dev = 3.522, 50.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=23 */
%   | | | else return 0.07340251204467854;  // std dev = 4.387, 82.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09774705586264532;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( complex(E, G) )
%   | | | then return -0.042153019420148465;  // std dev = 1.912, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.12101041568714853;  // std dev = 1.846, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( enzyme(D, H), complex(A, I) )
%   | | | then return 0.1252599236062559;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.11236543817906366;  // std dev = 2.541, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | else if ( interaction(J, A), phenotype(A, K) )
%   | | then if ( complex(A, L), enzyme(A, M) )
%   | | | then return -0.10934753067281233;  // std dev = 1.811, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.021735505139925792;  // std dev = 4.643, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
%   | | else if ( enzyme(A, N), location(A, P) )
%   | | | then return 0.1360033482250851;  // std dev = 2.083, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.025437700401258968;  // std dev = 3.524, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.0875300808798936;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( location(E, D) )
%   | | then if ( interaction(F, E), interaction(E, F) )
%   | | | then return 9.155760308267725E-4;  // std dev = 4.436, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
%   | | | else return -0.06216372099032269;  // std dev = 4.804, 116.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=31 */
%   | | else if ( complex(E, G) )
%   | | | then return -0.17634592118961617;  // std dev = 1.273, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.09842388808908316;  // std dev = 2.300, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( enzyme(A, H) )
%   | | then if ( interaction(A, I), enzyme(I, H) )
%   | | | then return -0.03801187096801876;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.43499391073633487;  // std dev = 0.833, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.08588534395562139;  // std dev = 2.201, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.004650583476508089;  // std dev = 1.825, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.767', 'seconds']
Refined model CLL: -0.39874


******************************************
Best model found
******************************************
Results 

CLL : -0.378655 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.429 

Total Inference Time : 3.2514874935150146 

Total revision time: 16.532908796310423
Best scored revision CLL: -0.379306


Results 

CLL : -0.378655 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 16.605246185302732 

Total Inference Time : 3.2514874935150146 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.552
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21914478572191903;  // std dev = 7.456, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14917854425283975;  // std dev = 7.692, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12352606231895974;  // std dev = 7.712, 275.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1257249218521146;  // std dev = 7.586, 257.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09744473690293132;  // std dev = 7.623, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08464472618745848;  // std dev = 7.594, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05334690112404818;  // std dev = 7.679, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07273602405484939;  // std dev = 7.507, 247.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.01970937175758235;  // std dev = 7.725, 277.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.019037713240596565;  // std dev = 7.706, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.620', 'seconds']
Parameter learned model CLL:-0.364675 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.456, 154, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.692, 185, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.712, 188, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.586, 170, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.623, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.594, 171, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.679, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.507, 160, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.725, 190, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.706, 187, 87]}]
{'': [0.0, 0.2306778464558125], 'false': [nan, 0.2306778464558125], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21754703719723226], 'false': [nan, 0.2175470371972315]}
{'': [0.0, 0.21627768595041447], 'false': [nan, 0.21627768595041447], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22392466199336958], 'false': [nan, 0.22392466199336905]}
{'': [0.0, 0.22179651535458214], 'false': [nan, 0.22179651535458234], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22349918875067593], 'false': [nan, 0.22349918875067593], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2183950617283955], 'false': [nan, 0.2183950617283955], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2281630579094887], 'false': [nan, 0.22816305790948985], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21543353881843855], 'false': [nan, 0.21543353881843882]}
{'': [nan, 0.21670041025094577], 'false': [nan, 0.21670041025094577]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 13.986
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(E, E) )
%   | | then if ( enzyme(E, F), location(E, G) )
%   | | | then return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.14981560176617895;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( phenotype(A, H), enzyme(E, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.22549587387502257;  // std dev = 3.375, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(J, K), phenotype(K, L) )
%   | | | then return 0.12044401706672549;  // std dev = 3.436, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | | else return 0.2956489350995123;  // std dev = 2.806, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.14223984419042057;  // std dev = 4.231, 88.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=25 */
%   | | | else return 0.039967116917694;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, A) )
%   then return 0.022490016101057622;  // std dev = 0.390, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(A, F), enzyme(D, G) )
%   | | then if ( interaction(H, A), interaction(A, H) )
%   | | | then return 0.5928457269840992;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10492458998930564;  // std dev = 1.473, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( enzyme(D, I), phenotype(A, E) )
%   | | | then return -0.032154273015900806;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.14905443297271737;  // std dev = 4.048, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(A, L), location(J, M) )
%   | | | then return 0.3254324452854552;  // std dev = 1.207, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.1225878953954066;  // std dev = 2.525, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( enzyme(A, N), complex(A, P) )
%   | | | then return 0.37202435324570887;  // std dev = 1.652, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.24325456045684543;  // std dev = 4.554, 86.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=35 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.17224109676074342;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( enzyme(A, F), complex(D, G) )
%   | | then if ( phenotype(A, H), phenotype(D, I) )
%   | | | then return 0.1523842797993836;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.07370550964886573;  // std dev = 1.474, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(D, A), complex(D, J) )
%   | | | then return 0.2973070351756751;  // std dev = 1.736, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.19744353761638017;  // std dev = 2.186, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( location(K, M), phenotype(A, N) )
%   | | | then return 0.10212920066471891;  // std dev = 2.367, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.22734805293506263;  // std dev = 2.554, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | else if ( interaction(P, A), interaction(P, P) )
%   | | | then return 0.03833740331206575;  // std dev = 2.301, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.1097168244745278;  // std dev = 5.313, 131.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=41 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( enzyme(A, D), complex(C, E) )
%   | then return 0.18403059826797138;  // std dev = 0.490, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | else return 0.06363731139571104;  // std dev = 0.460, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), interaction(G, G) )
%   | | then if ( location(A, H), location(G, H) )
%   | | | then return 0.3157300887789104;  // std dev = 1.659, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.13829309814157634;  // std dev = 1.973, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.39330471368672726;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.45636098363495275;  // std dev = 0.806, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then return 0.06904356990621337;  // std dev = 0.453, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.3717481584142529;  // std dev = 1.103, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.16868512595485027;  // std dev = 2.487, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.16024283137245268;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.19302383190569475;  // std dev = 1.703, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.43950285795033395;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(D, H), phenotype(A, H) )
%   | | | then return 0.018130323612965196;  // std dev = 2.282, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.08545725308048895;  // std dev = 3.188, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( phenotype(J, I), complex(A, K) )
%   | | | then return 0.11391042390698206;  // std dev = 1.789, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.034623901574577856;  // std dev = 3.813, 80.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=19 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.06745918161146304;  // std dev = 1.574, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.06335711855323145;  // std dev = 4.622, 102.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=31 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( phenotype(E, D), complex(A, F) )
%   | | then if ( location(A, G), location(E, G) )
%   | | | then return 0.06725059664763697;  // std dev = 2.292, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.12191563980046004;  // std dev = 1.308, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( enzyme(A, H), enzyme(E, H) )
%   | | | then return -0.01039731983945321;  // std dev = 1.213, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.1708015243797651;  // std dev = 3.910, 63.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=27 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( interaction(I, K), complex(A, L) )
%   | | | then return -0.06549581567524419;  // std dev = 1.800, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.33159499420176797;  // std dev = 2.425, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else if ( enzyme(A, M) )
%   | | | then return -0.027198845776598785;  // std dev = 2.762, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | | else return 0.01557475863759648;  // std dev = 3.826, 76.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( phenotype(D, F), location(A, G) )
%   | | then if ( complex(A, H), interaction(D, D) )
%   | | | then return 0.21365993535772765;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.06391500485394598;  // std dev = 2.768, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( complex(D, I) )
%   | | | then return 0.39871652039504424;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06935162347643006;  // std dev = 1.559, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( complex(A, J), enzyme(A, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return -0.08738291595945635;  // std dev = 1.506, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.031296207774388886;  // std dev = 1.657, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.16101935302713052;  // std dev = 3.457, 48.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=21 */
%   | | | else return 0.07609944836627959;  // std dev = 5.186, 120.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=41 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(E, E) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.008295695539336253;  // std dev = 2.009, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.20277039159214516;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(H, E), enzyme(H, I) )
%   | | | then return -0.06763941820437028;  // std dev = 3.141, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return 0.0584362343448361;  // std dev = 2.391, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else if ( interaction(J, A), enzyme(A, K) )
%   | | then if ( interaction(J, J), phenotype(A, L) )
%   | | | then return -0.014814687636423731;  // std dev = 1.906, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.16967536388789098;  // std dev = 2.828, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.1128502766063258;  // std dev = 2.770, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return -0.02078670656596174;  // std dev = 4.139, 89.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=23 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( enzyme(A, E), interaction(A, F) )
%   | then if ( enzyme(F, G), phenotype(F, D) )
%   | | then return 0.12187021472592748;  // std dev = 1.080, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.061513131048727576;  // std dev = 0.447, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else if ( phenotype(A, H), location(C, I) )
%   | | then if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.18954888704750858;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.025091496965166805;  // std dev = 3.907, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   | | else if ( interaction(L, C), interaction(L, A) )
%   | | | then return 0.27134992761240595;  // std dev = 1.993, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.11235242352484913;  // std dev = 2.477, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   else if ( enzyme(A, M), location(A, N) )
%   | then if ( interaction(A, P), interaction(P, P) )
%   | | then return -0.08142633131461152;  // std dev = 0.432, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.14727887237685824;  // std dev = 0.500, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else return -0.04050672787618169;  // std dev = 0.430, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(A, E), interaction(D, A) )
%   | then if ( enzyme(C, F), location(C, G) )
%   | | then if ( phenotype(D, E), interaction(A, H) )
%   | | | then return 0.21181705610684606;  // std dev = 1.237, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.43279489079010924;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.12263866160912708;  // std dev = 1.515, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.07097558883118037;  // std dev = 3.127, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | else return -0.04218300008469235;  // std dev = 0.453, 189.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=53 */
%   else if ( enzyme(A, K) )
%   | then if ( interaction(A, L), interaction(L, M) )
%   | | then return 0.36806135381779487;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, N), enzyme(N, K) )
%   | | | then return -0.05683085874319638;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.026770484666052564;  // std dev = 1.080, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.3844841802136653;  // std dev = 1.146, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.614', 'seconds']
Refined model CLL: -0.401245


******************************************
Best model found
******************************************
Results 

CLL : -0.364075 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.986 

Total Inference Time : 7.834800720214844 

Total revision time: 25.557007444381714
Best scored revision CLL: -0.364675


Results 

CLL : -0.364075 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 25.589554918289185 

Total Inference Time : 7.834800720214844 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.865
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2282556966653491;  // std dev = 8.094, 281.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16569446800302667;  // std dev = 8.300, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13971173056311526;  // std dev = 8.306, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11559911840174857;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09085606102305581;  // std dev = 8.340, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09761697700883373;  // std dev = 8.191, 293.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05798040097545769;  // std dev = 8.320, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04516272046558716;  // std dev = 8.327, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03474572577775704;  // std dev = 8.333, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02743305703708304;  // std dev = 8.333, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.528', 'seconds']
Parameter learned model CLL:-0.374955 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.094, 177, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.3, 204, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.306, 205, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.313, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.34, 210, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.191, 189, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.32, 207, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.327, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.333, 209, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.333, 209, 104]}]
{'': [0.0, 0.23312774660908603], 'false': [nan, 0.23312774660908603], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22364648338674253], 'false': [nan, 0.22364648338674636], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22329049758590755], 'false': [nan, 0.22329049758590755], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22293444328824238], 'false': [nan, 0.22293444328823944], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22151000040569715], 'false': [nan, 0.22151000040569535], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2289601509627362], 'false': [nan, 0.2289601509627362], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2225783438963603], 'false': [nan, 0.2225783438963603]}
{'': [0.0, 0.22222222222222293], 'false': [nan, 0.22222222222222257], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2218661005011791], 'false': [nan, 0.22186610050117894], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22186610050118008], 'false': [nan, 0.22186610050118008], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 17.758
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( location(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), phenotype(F, E) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.19148226843284544;  // std dev = 3.651, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | | else return 0.34201990284144784;  // std dev = 2.782, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.09344305274657114;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.1824732594238367;  // std dev = 4.027, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( complex(J, K) )
%   | | | then return 0.039967116917694;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( enzyme(A, L), interaction(A, M) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.1487472256978024;  // std dev = 4.911, 117.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A) )
%   | | then if ( interaction(G, F), interaction(G, A) )
%   | | | then return 0.23189919600841094;  // std dev = 2.775, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.12346540712604992;  // std dev = 2.915, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | else return 0.5090773655330176;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( phenotype(H, J) )
%   | | | then return 0.08944340528101397;  // std dev = 3.233, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | | else return 0.008815149888110264;  // std dev = 1.278, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(A, K), phenotype(A, L) )
%   | | | then return 0.3342041019361736;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.14030163402551787;  // std dev = 6.236, 183.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=56 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(D, F) )
%   | | then if ( complex(A, G), interaction(H, D) )
%   | | | then return 0.19940523183606254;  // std dev = 2.216, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.10324696842963507;  // std dev = 4.451, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
%   | | else if ( complex(D, I), enzyme(A, J) )
%   | | | then return 0.2799361244671349;  // std dev = 2.496, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.17092322361693674;  // std dev = 4.936, 106.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=38 */
%   | else if ( complex(A, K), enzyme(A, L) )
%   | | then return 0.5564206201777189;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, M) )
%   | | | then return 0.057165535848703486;  // std dev = 3.245, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | | else return -0.030530024779844737;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( location(A, G), location(F, G) )
%   | | | then return 0.4669092289598337;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.07893567767159307;  // std dev = 1.865, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( interaction(H, A), location(A, I) )
%   | | | then return 0.03636811722293513;  // std dev = 2.686, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return -0.04815748208768815;  // std dev = 1.820, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | else if ( location(A, J), complex(A, K) )
%   | | then if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.13602639468571584;  // std dev = 2.786, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.04555025923347275;  // std dev = 3.824, 75.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   | | else if ( interaction(A, M), phenotype(A, N) )
%   | | | then return 0.36686612155758497;  // std dev = 1.735, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.14193180193616034;  // std dev = 5.356, 126.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=44 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( interaction(G, G), complex(G, H) )
%   | | | then return 0.05152002042988294;  // std dev = 3.346, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.019149632276558727;  // std dev = 2.910, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | else if ( location(I, E), interaction(A, I) )
%   | | | then return 0.04713865186732608;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.18401754290568448;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( location(A, J), interaction(K, A) )
%   | | then if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.21831307394982646;  // std dev = 2.436, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.0881774658013148;  // std dev = 6.000, 163.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=53 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return 0.46574703674158635;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13857561307959107;  // std dev = 2.112, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.4186803914102504;  // std dev = 0.827, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11074401639561447;  // std dev = 1.772, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(A, G), complex(A, H) )
%   | | | then return -0.09482954461076429;  // std dev = 1.585, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.011643639244766593;  // std dev = 4.111, 90.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=23 */
%   | else if ( interaction(A, I), phenotype(A, J) )
%   | | then if ( enzyme(I, K), interaction(I, L) )
%   | | | then return -0.011007909747987925;  // std dev = 2.441, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.09825626776816332;  // std dev = 3.171, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | else if ( interaction(A, M), location(A, N) )
%   | | | then return 0.2566650002040664;  // std dev = 2.460, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.12362580680304489;  // std dev = 4.684, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(A, E), phenotype(C, F) )
%   | then if ( interaction(C, G), phenotype(A, H) )
%   | | then if ( complex(G, E), phenotype(G, H) )
%   | | | then return 0.19431788136194456;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0468731823916535;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.00246902316471328;  // std dev = 0.448, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( interaction(C, A), complex(C, I) )
%   | | then return 0.024029026850550337;  // std dev = 0.457, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.23733508898704245;  // std dev = 1.873, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.15557915022963217;  // std dev = 1.874, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   else if ( interaction(A, L), interaction(M, A) )
%   | then return -0.04097688088358839;  // std dev = 0.442, 87.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=23 */
%   | else if ( interaction(N, A), enzyme(N, P) )
%   | | then return 0.10927431036387043;  // std dev = 0.481, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | else return 0.03856796593213786;  // std dev = 0.460, 119.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=36 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(D, D), interaction(A, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.1786747435508;  // std dev = 1.583, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.48080156117670114;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.04876906112573004;  // std dev = 3.564, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | | else return 0.07213378043073619;  // std dev = 6.258, 172.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=61 */
%   | else if ( interaction(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.4299696077595673;  // std dev = 1.183, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.08487247037360697;  // std dev = 1.392, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.341052206258889;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.048905140532500745;  // std dev = 2.210, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08224625424595888;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( location(A, F), interaction(D, G) )
%   | | then if ( location(G, F) )
%   | | | then return -6.857692726357924E-4;  // std dev = 5.207, 123.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=39 */
%   | | | else return -0.20959153531631744;  // std dev = 1.350, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else return 0.36994483007890855;  // std dev = 0.883, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.39489085081170616;  // std dev = 1.229, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.1228235096340457;  // std dev = 1.500, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.019784104962384585;  // std dev = 4.047, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   | | | else return 0.11495760704522123;  // std dev = 4.018, 67.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=27 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07737176573023528;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), enzyme(F, G) )
%   | | then if ( complex(F, H), interaction(A, I) )
%   | | | then return 0.02736949534528953;  // std dev = 3.067, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return 0.2744920660274722;  // std dev = 2.045, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( enzyme(A, J), phenotype(E, K) )
%   | | | then return -0.11606038778432631;  // std dev = 1.569, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.023986164403634352;  // std dev = 2.658, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | else if ( enzyme(A, L), interaction(M, A) )
%   | | then if ( enzyme(M, N) )
%   | | | then return -0.04107106548663939;  // std dev = 2.516, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.11351145706105437;  // std dev = 2.445, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else if ( interaction(P, A), enzyme(P, Q) )
%   | | | then return -0.014467153541160958;  // std dev = 3.589, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return -0.07785689742902163;  // std dev = 4.600, 114.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.212', 'seconds']
Refined model CLL: -0.396499


******************************************
Best model found
******************************************
Results 

CLL : -0.375845 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 17.758 

Total Inference Time : 5.436720609664917 

Total revision time: 27.955580804824827
Best scored revision CLL: -0.374955


Results 

CLL : -0.375845 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 27.988128278732297 

Total Inference Time : 5.436720609664917 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.611
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1963842292171595;  // std dev = 7.803, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18501355392494517;  // std dev = 7.718, 261.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15098385623638452;  // std dev = 7.758, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09432795199910109;  // std dev = 7.944, 293.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08998039224122106;  // std dev = 7.873, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07569129055435275;  // std dev = 7.859, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07329461227983981;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.035193109649303674;  // std dev = 7.926, 290.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06461704477421541;  // std dev = 7.710, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.010233705975380819;  // std dev = 7.951, 294.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.733', 'seconds']
Parameter learned model CLL:-0.367317 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.803, 180, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.718, 169, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.758, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.944, 201, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.873, 190, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.859, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.788, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.926, 198, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.71, 168, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.951, 202, 92]}]
{'': [0.0, 0.2238321799307967], 'false': [nan, 0.2238321799307967], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22824092423775452], 'false': [nan, 0.22824092423775533], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22624229747300612], 'false': [nan, 0.22624229747300612], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21540146070426014], 'false': [nan, 0.21540146070426106], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21980785674764813], 'false': [nan, 0.21980785674764972], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22061224489795997], 'false': [nan, 0.22061224489795997], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22463648834019126], 'false': [nan, 0.22463648834019126], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21659928656361355], 'false': [nan, 0.21659928656361416], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22863905325443803], 'false': [nan, 0.22863905325443845]}
{'': [0.0, 0.21500300800592395], 'false': [nan, 0.21500300800592395], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 8.949
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( location(E, G), complex(F, H) )
%   | | | then return 0.07554023944733843;  // std dev = 1.978, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(I, E), interaction(I, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.22021790061675373;  // std dev = 3.660, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | else if ( location(A, J), phenotype(A, K) )
%   | | then if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.35814893509951234;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.15125238337537444;  // std dev = 3.467, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.07243464938522651;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.13814893509951195;  // std dev = 5.020, 125.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=35 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( location(D, E) )
%   | | then if ( complex(D, F), interaction(G, A) )
%   | | | then return 0.19365644622881087;  // std dev = 3.590, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | | else return 0.12078332869224864;  // std dev = 3.967, 77.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=22 */
%   | | else if ( enzyme(D, H) )
%   | | | then return 0.16323793194589678;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.42143921348179214;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( phenotype(A, I), location(A, J) )
%   | | then if ( phenotype(K, I), complex(K, L) )
%   | | | then return 0.19811782540718637;  // std dev = 2.983, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.038721715386196995;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.33685011328575776;  // std dev = 2.644, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.20824385716645719;  // std dev = 3.069, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( complex(A, F), phenotype(A, G) )
%   | | then if ( interaction(H, A), interaction(A, H) )
%   | | | then return 0.02664775520854418;  // std dev = 1.531, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.15583797189460213;  // std dev = 1.966, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return 0.18662654850100477;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.31422726129463135;  // std dev = 3.070, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else if ( phenotype(A, K), interaction(L, A) )
%   | | then if ( location(L, M), location(A, M) )
%   | | | then return 0.2635002730083105;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.13905028693393762;  // std dev = 2.316, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( interaction(A, N) )
%   | | | then return 0.08340988027899117;  // std dev = 2.694, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.1444701555707233;  // std dev = 4.111, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, D), location(A, F) )
%   | | then if ( complex(A, G), enzyme(E, H) )
%   | | | then return 0.14694341008888712;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.03099440675799708;  // std dev = 3.944, 78.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=21 */
%   | | else if ( complex(E, I), complex(D, J) )
%   | | | then return 0.26681240860617783;  // std dev = 1.401, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.11051264234986286;  // std dev = 2.731, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | else if ( enzyme(A, K), interaction(L, A) )
%   | | then if ( interaction(M, L), interaction(M, M) )
%   | | | then return 0.19132362513191342;  // std dev = 1.507, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.04064753016415835;  // std dev = 3.304, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.11918470863278467;  // std dev = 3.028, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.18213795097841406;  // std dev = 3.005, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( enzyme(D, F), complex(D, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.19642582523750696;  // std dev = 2.123, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.5040130754114238;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.013341686843587915;  // std dev = 1.748, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.14650272894036281;  // std dev = 3.436, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( location(A, L), location(K, L) )
%   | | | then return -0.11138199791070726;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.15558680888078963;  // std dev = 1.287, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.035273218347890226;  // std dev = 3.473, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | | else return 0.13287018122965663;  // std dev = 4.713, 94.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=36 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), enzyme(F, G) )
%   | | then if ( phenotype(A, H), enzyme(A, G) )
%   | | | then return 0.33152221771905566;  // std dev = 1.113, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.11054857777016257;  // std dev = 2.715, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | else if ( phenotype(D, I) )
%   | | | then return -0.04371111773145116;  // std dev = 3.158, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return 0.05895809594813447;  // std dev = 2.454, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( location(J, K), complex(A, L) )
%   | | | then return 0.13037819540068146;  // std dev = 1.112, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.7091529349159864;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.05339951327485523;  // std dev = 5.403, 133.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=43 */
%   | | | else return 0.223678714812591;  // std dev = 1.922, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( phenotype(D, F), complex(D, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.032330779592605684;  // std dev = 2.509, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.21742504437569415;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(D, I), interaction(J, D) )
%   | | | then return -0.11526224068335354;  // std dev = 2.216, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return -0.01917461160444039;  // std dev = 3.861, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | else if ( interaction(A, K), interaction(L, A) )
%   | | then if ( interaction(K, M), location(L, N) )
%   | | | then return 0.10563588856166432;  // std dev = 2.072, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.3410076400228424;  // std dev = 1.047, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, P), interaction(P, P) )
%   | | | then return -0.006919821006203041;  // std dev = 2.638, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.04801970149429202;  // std dev = 4.807, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( phenotype(E, F), location(E, G) )
%   | | then if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.26860229240858485;  // std dev = 1.338, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.11653852647435681;  // std dev = 2.546, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | else if ( interaction(J, E), interaction(A, K) )
%   | | | then return 0.12036097565191817;  // std dev = 2.064, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.02608239030571952;  // std dev = 2.376, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | else if ( interaction(A, A) )
%   | | then if ( location(A, L) )
%   | | | then return -0.10226459332216105;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.26358898494725946;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return -0.11487542950851246;  // std dev = 2.152, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.056181965939283575;  // std dev = 5.900, 153.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=53 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.07610018410644459;  // std dev = 0.474, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else return -0.12001261317522023;  // std dev = 0.427, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   else if ( enzyme(A, E), complex(A, F) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then return -0.021623262342646915;  // std dev = 0.442, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return 0.24397869205159367;  // std dev = 2.235, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.0018776725927932161;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( phenotype(A, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return -0.05964726421619398;  // std dev = 1.712, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.04317653080237283;  // std dev = 3.438, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return -0.06621881011316283;  // std dev = 2.794, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return -0.016213989411887675;  // std dev = 4.237, 87.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=25 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10622249209565106;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D), enzyme(A, E) )
%   | then if ( interaction(F, A), enzyme(F, E) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.43311619568579207;  // std dev = 0.865, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.053538751854488024;  // std dev = 1.372, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(G, A), location(G, D) )
%   | | | then return -0.052342063369437905;  // std dev = 3.516, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | | | else return 0.056368297682309255;  // std dev = 2.755, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(I, I), location(H, J) )
%   | | | then return 0.12463867668008621;  // std dev = 2.653, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.012284336226375397;  // std dev = 3.881, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | else if ( phenotype(A, K), interaction(A, L) )
%   | | | then return 0.02879763873967795;  // std dev = 2.117, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.16926355844832372;  // std dev = 2.853, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.838', 'seconds']
Refined model CLL: -0.400705


******************************************
Best model found
******************************************
Results 

CLL : -0.367432 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.949 

Total Inference Time : 3.4576830863952637 

Total revision time: 16.85554224014282
Best scored revision CLL: -0.367317


Results 

CLL : -0.367432 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 16.88808971405029 

Total Inference Time : 3.4576830863952637 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.591
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19673161226486705;  // std dev = 7.542, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16972959378391156;  // std dev = 7.550, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1382213328591988;  // std dev = 7.586, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10594138705966187;  // std dev = 7.642, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11201098309908304;  // std dev = 7.503, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09276922102941886;  // std dev = 7.495, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05377676070859183;  // std dev = 7.615, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03933881371576982;  // std dev = 7.635, 267.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06021596726463281;  // std dev = 7.471, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04764260715263996;  // std dev = 7.471, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.900', 'seconds']
Parameter learned model CLL:-0.380107 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.542, 168, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.55, 169, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.586, 174, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.642, 182, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.503, 163, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.495, 162, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.615, 178, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.635, 181, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.471, 159, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.471, 159, 86]}]
{'': [0.0, 0.2239444478888964], 'false': [nan, 0.2239444478888964], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22351403306420464], 'false': [nan, 0.2235140330642049], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22136094674556123], 'false': [nan, 0.22136094674556123], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2179215860993532], 'false': [nan, 0.21792158609935314], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22609312753020044], 'false': [nan, 0.22609312753020033], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2265218522372526], 'false': [nan, 0.2265218522372526], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21963957759412406], 'false': [nan, 0.21963957759412406]}
{'': [0.0, 0.21835065718413696], 'false': [nan, 0.218350657184137], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22780508121616055], 'false': [nan, 0.22780508121616047], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22780508121615975], 'false': [nan, 0.22780508121615975], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 9.084
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(F, D), enzyme(F, G) )
%   | | then if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.17393840878372288;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.058148935099512286;  // std dev = 2.366, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else if ( interaction(J, D), interaction(J, A) )
%   | | | then return 0.0803711573217346;  // std dev = 2.160, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.20481560176617902;  // std dev = 4.121, 75.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
%   | else if ( location(A, K) )
%   | | then if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.3581489350995123;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.1914822684328457;  // std dev = 4.320, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.024815601766178853;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( phenotype(F, G), interaction(A, A) )
%   | | | then return 0.1466948949963774;  // std dev = 1.663, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.3737507837223717;  // std dev = 1.646, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( enzyme(A, H), interaction(I, A) )
%   | | | then return 0.03316364370654723;  // std dev = 2.191, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.11865388703261387;  // std dev = 3.162, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( complex(J, K) )
%   | | | then return 0.3152977836146293;  // std dev = 1.241, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.03601386305836236;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return 0.14704760761404495;  // std dev = 2.628, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.2285413416113172;  // std dev = 4.807, 97.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=38 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(E, A), location(A, F) )
%   | | then if ( complex(A, G), interaction(D, E) )
%   | | | then return 0.04311485335045646;  // std dev = 2.288, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.1514732858223168;  // std dev = 3.316, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | else if ( enzyme(D, H), phenotype(D, I) )
%   | | | then return 0.34681227327547204;  // std dev = 1.803, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.16593228421021636;  // std dev = 3.923, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( enzyme(J, K) )
%   | | | then return 0.26439578926924234;  // std dev = 1.650, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.12537864957082123;  // std dev = 1.667, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(A, L), enzyme(A, M) )
%   | | | then return 0.24765363305066326;  // std dev = 1.311, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.047830500771716127;  // std dev = 3.795, 79.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=19 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), phenotype(D, G) )
%   | | then if ( enzyme(A, E) )
%   | | | then return -0.09839369653004275;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.01719199129021895;  // std dev = 2.736, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( enzyme(A, E) )
%   | | | then return 0.07998220680826017;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.23942928468270683;  // std dev = 1.484, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(H, A), location(A, I) )
%   | | then if ( phenotype(H, J), interaction(A, K) )
%   | | | then return 0.10201026888663216;  // std dev = 3.589, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return 0.1448268853412863;  // std dev = 4.649, 93.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=34 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.39960120257889525;  // std dev = 1.743, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.10500820465094177;  // std dev = 2.352, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.5240686226189231;  // std dev = 0.844, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07868218291564544;  // std dev = 2.340, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( phenotype(E, D), enzyme(E, H) )
%   | | | then return -0.10175625313495114;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.07493739395265703;  // std dev = 4.776, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.017977918695923512;  // std dev = 1.246, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.1370674333290345;  // std dev = 2.558, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.394741886950249;  // std dev = 1.177, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.14516063144661487;  // std dev = 3.834, 61.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=24 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), interaction(G, A) )
%   | | then if ( enzyme(D, H), interaction(G, D) )
%   | | | then return -0.1386971060179169;  // std dev = 1.278, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.00444450139249378;  // std dev = 4.019, 85.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=22 */
%   | | else if ( enzyme(D, I) )
%   | | | then return 0.025733625790922393;  // std dev = 2.621, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.2284690576027246;  // std dev = 2.011, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( phenotype(A, J), interaction(A, K) )
%   | | then return 0.35401103925671357;  // std dev = 1.161, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.15647503833306053;  // std dev = 3.115, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | | else return 0.05879551942499516;  // std dev = 3.963, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( location(A, E), location(C, E) )
%   | then if ( interaction(F, C), interaction(C, F) )
%   | | then if ( interaction(A, G), interaction(F, G) )
%   | | | then return 0.10507292024985865;  // std dev = 1.374, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.33326037273573206;  // std dev = 1.552, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return -0.03761197707768321;  // std dev = 0.422, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.4258534196456856;  // std dev = 0.455, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(H, A) )
%   | then return 0.00931115376271926;  // std dev = 0.457, 185.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=54 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.14632235787783796;  // std dev = 1.412, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.07997639603264807;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.14696549024570013;  // std dev = 1.712, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.24570572267630256;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.12623689305742153;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.11744966388974865;  // std dev = 1.669, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( complex(H, E), enzyme(H, I) )
%   | | | then return 0.5188172311573116;  // std dev = 0.874, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.20713535270860425;  // std dev = 1.865, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.03471757606444596;  // std dev = 1.450, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.12372245553410617;  // std dev = 1.533, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( enzyme(A, L), interaction(A, M) )
%   | | | then return -0.01903983321645877;  // std dev = 2.685, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.05930991134829296;  // std dev = 5.854, 148.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=53 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( complex(E, F), interaction(G, A) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.06842385748712002;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3469795234464976;  // std dev = 1.519, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( phenotype(E, H), complex(E, I) )
%   | | | then return 0.26008936150490336;  // std dev = 0.767, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.06801408106051901;  // std dev = 1.935, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( phenotype(A, J), interaction(A, A) )
%   | | then if ( phenotype(K, J), enzyme(K, L) )
%   | | | then return 0.2591080283299996;  // std dev = 1.006, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08953752739033034;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return -0.05918092641209097;  // std dev = 4.361, 94.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=26 */
%   | | | else return 0.013564746929659864;  // std dev = 5.337, 129.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=42 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11500164897706226;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( enzyme(A, H), enzyme(E, I) )
%   | | | then return 0.13199724178927524;  // std dev = 1.006, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.06265806756302279;  // std dev = 1.696, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.31530981296595983;  // std dev = 1.529, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.10626387788644961;  // std dev = 2.405, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else if ( complex(A, L) )
%   | | then if ( complex(M, L), interaction(M, M) )
%   | | | then return 0.021955203039886205;  // std dev = 1.376, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.2719174629455762;  // std dev = 1.550, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(A, N), location(A, P) )
%   | | | then return 0.05703197260792415;  // std dev = 4.472, 86.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=32 */
%   | | | else return -0.03398778531467061;  // std dev = 4.375, 94.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=26 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21.404', 'seconds']
Refined model CLL: -0.410265


******************************************
Best model found
******************************************
Results 

CLL : -0.379458 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.084 

Total Inference Time : 3.5303423404693604 

Total revision time: 16.517692852020264
Best scored revision CLL: -0.380107


Results 

CLL : -0.379458 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 16.550240325927735 

Total Inference Time : 3.5303423404693604 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.563
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17451257146314855;  // std dev = 7.712, 275.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20263913118367755;  // std dev = 7.420, 237.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1510226465091881;  // std dev = 7.547, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10568197471857338;  // std dev = 7.665, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11900463690959676;  // std dev = 7.482, 244.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06606783448661883;  // std dev = 7.658, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07532071505699088;  // std dev = 7.532, 250.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.036756660670216455;  // std dev = 7.665, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04840980940720838;  // std dev = 7.555, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0073099374808842064;  // std dev = 7.731, 278.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.312', 'seconds']
Parameter learned model CLL:-0.371242 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.712, 188, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.42, 150, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.547, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.665, 181, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.482, 157, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.658, 180, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.532, 163, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.665, 181, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.555, 166, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.731, 191, 87]}]
{'': [0.0, 0.21627768595041413], 'false': [nan, 0.21627768595041413], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.23233456176894682], 'false': [nan, 0.23233456176894673]}
{'': [nan, 0.22604875283446688], 'false': [nan, 0.22604875283446688]}
{'': [0.0, 0.21924426375584755], 'false': [nan, 0.21924426375584774], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22942421392098944], 'false': [nan, 0.22942421392098908], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21966923368261695], 'false': [nan, 0.21966923368261695], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22689599999999965], 'false': [nan, 0.22689599999999965], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21924426375584805], 'false': [nan, 0.21924426375584946]}
{'': [0.0, 0.22562452155165622], 'false': [nan, 0.2256245215516561], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2150121629315265], 'false': [nan, 0.2150121629315265]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 18.895
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), interaction(F, G) )
%   | | then if ( interaction(G, G), enzyme(G, H) )
%   | | | then return 0.30814893509951236;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.09148226843284563;  // std dev = 2.317, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( phenotype(A, I), phenotype(D, I) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.40814893509951233;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | else if ( location(A, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.11657590139164661;  // std dev = 4.130, 89.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=23 */
%   | | | else return 0.2022349566048873;  // std dev = 4.581, 93.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=32 */
%   | | else if ( interaction(A, L), interaction(L, A) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.011995088945666036;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( interaction(C, C), interaction(E, A) )
%   | then if ( complex(E, D) )
%   | | then return 0.038578166970710814;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.13422092403081307;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3786421633281334;  // std dev = 1.509, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return 0.06732866655888514;  // std dev = 0.430, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   else if ( interaction(A, A), location(A, G) )
%   | then return 0.3414154695716569;  // std dev = 1.220, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( phenotype(H, J), phenotype(I, J) )
%   | | | then return 0.3272220327487758;  // std dev = 2.002, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.14088772939271502;  // std dev = 1.662, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(A, K), location(K, L) )
%   | | | then return 0.1012511435806262;  // std dev = 2.269, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.18772867258918943;  // std dev = 5.400, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( interaction(A, E) )
%   | then if ( enzyme(E, F) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.348126602142842;  // std dev = 1.497, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.0830599181611028;  // std dev = 1.197, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( complex(E, D) )
%   | | | then return 0.6035995378452785;  // std dev = 0.911, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.360942873376923;  // std dev = 1.477, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( complex(I, D), interaction(I, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.325816690323355;  // std dev = 0.983, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16740804383808686;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0.10584308775770752;  // std dev = 0.446, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( complex(A, L) )
%   | then return 0.06221002186431134;  // std dev = 0.436, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | else return 0.16667385945632712;  // std dev = 0.482, 143.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1933628127664737;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( location(A, H) )
%   | | | then return 0.013871975658095255;  // std dev = 3.212, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return 0.1912520955883315;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(D, E), location(A, I) )
%   | | | then return 0.11660272305163974;  // std dev = 5.819, 152.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=52 */
%   | | | else return 0.0440210917226361;  // std dev = 2.725, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then return -0.01161536398324832;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.5265736011101155;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.20333403726369462;  // std dev = 1.724, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1317841292650328;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.043928905350451096;  // std dev = 2.280, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.10988963149249471;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(H, E), phenotype(H, I) )
%   | | | then return 0.10485553073626312;  // std dev = 6.367, 178.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=62 */
%   | | | else return 0.2649763234838013;  // std dev = 1.997, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.3962827789861252;  // std dev = 1.180, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.33239234710192106;  // std dev = 0.804, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1068034740431853;  // std dev = 1.416, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11742340677020707;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( interaction(H, A), phenotype(H, D) )
%   | | | then return 0.20249902665330233;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.026071777896085276;  // std dev = 1.807, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.12260254673878217;  // std dev = 2.098, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.39729922594239625;  // std dev = 0.830, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, A), location(A, K) )
%   | | then return 0.38834636603618744;  // std dev = 1.159, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.04102172090526421;  // std dev = 6.709, 210.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=65 */
%   | | | else return -0.1340149935583375;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( enzyme(D, E), interaction(A, A) )
%   | | then if ( complex(D, F) )
%   | | | then return -0.01941028299696556;  // std dev = 1.187, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.16344247719486776;  // std dev = 1.267, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( location(A, G), location(D, H) )
%   | | | then return 0.07989268315118786;  // std dev = 6.852, 201.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=73 */
%   | | | else return 0.29462139159992207;  // std dev = 1.487, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( interaction(J, J) )
%   | | | then return -0.14822505753683438;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.15310736338871123;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.11880159599205813;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.019539846647640236;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( phenotype(C, E), enzyme(C, F) )
%   | then if ( location(A, G), interaction(H, A) )
%   | | then if ( phenotype(A, E) )
%   | | | then return -0.032639324674566296;  // std dev = 1.499, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.11702736886000029;  // std dev = 2.030, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else return 0.41665067621207474;  // std dev = 0.886, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then return -0.056842686451658055;  // std dev = 0.445, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | | else return 0.020037372752456574;  // std dev = 0.475, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   else if ( complex(A, K), enzyme(A, L) )
%   | then return -0.019506850681280555;  // std dev = 0.438, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | else if ( enzyme(A, M), phenotype(A, N) )
%   | | then return 0.27272170912354504;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(P, A), interaction(Q, P) )
%   | | | then return 0.08295184003379646;  // std dev = 4.482, 86.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=32 */
%   | | | else return -0.05634342659228507;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( complex(E, F), interaction(E, E) )
%   | | then if ( interaction(A, E), location(E, D) )
%   | | | then return -0.08021243991562436;  // std dev = 1.917, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.05063792249153988;  // std dev = 2.757, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( phenotype(E, G), phenotype(A, G) )
%   | | | then return 0.2328340810230472;  // std dev = 1.838, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.05020233690644429;  // std dev = 5.902, 153.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=54 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(H, A) )
%   | | | then return -0.05566431677403776;  // std dev = 1.164, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.16732092582462138;  // std dev = 0.975, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.21801335420439158;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.12737182307321235;  // std dev = 1.735, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( location(C, E) )
%   | then return -0.03548592480623371;  // std dev = 0.446, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   | else return 0.28504434630881853;  // std dev = 0.890, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, F), phenotype(A, G) )
%   | then if ( phenotype(F, H) )
%   | | then if ( interaction(I, A), interaction(F, I) )
%   | | | then return -0.08096639921739596;  // std dev = 1.897, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.1414888434903588;  // std dev = 1.900, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return -0.1395507904104573;  // std dev = 0.400, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(J, A), location(A, K) )
%   | | then if ( location(J, K), interaction(L, J) )
%   | | | then return 0.023241323931350658;  // std dev = 4.455, 89.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=30 */
%   | | | else return 0.22334347486604225;  // std dev = 2.495, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return -0.0679348169517998;  // std dev = 1.438, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.060765598009520194;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.794', 'seconds']
Refined model CLL: -0.414881


******************************************
Best model found
******************************************
Results 

CLL : -0.370647 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 18.895 

Total Inference Time : 5.579493761062622 

Total revision time: 28.317896183013914
Best scored revision CLL: -0.371242


Results 

CLL : -0.370647 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 28.425894077301024 

Total Inference Time : 5.579493761062622 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.712
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20251979602666512;  // std dev = 8.257, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16182464434781757;  // std dev = 8.346, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1454433259324906;  // std dev = 8.300, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12855397069273453;  // std dev = 8.257, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10039611426708095;  // std dev = 8.293, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06691920861503005;  // std dev = 8.385, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06981416143743394;  // std dev = 8.286, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04823234681495922;  // std dev = 8.333, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04153803431234539;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.01637853178533899;  // std dev = 8.416, 326.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.956', 'seconds']
Parameter learned model CLL:-0.368636 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.257, 198, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.346, 211, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.3, 204, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.257, 198, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.293, 203, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.385, 217, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.286, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.333, 209, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.313, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.416, 222, 104]}]
{'': [0.0, 0.22577957107144483], 'false': [nan, 0.22577957107144483], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22115394305870606], 'false': [nan, 0.22115394305870256]}
{'': [0.0, 0.2236464833867434], 'false': [nan, 0.2236464833867434], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2257795710714436], 'false': [nan, 0.2257795710714475]}
{'': [nan, 0.224002376683041], 'false': [nan, 0.22400237668304335]}
{'': [0.0, 0.21901961355188806], 'false': [nan, 0.21901961355188806], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [-1.1564823173178713e-18, 0.22435815284719435], 'false': [nan, 0.22435815284719435], 'true': [nan, -1.1564823173178713e-18], 'true,false': [nan, -1.1564823173178713e-18], 'true,false,false': [nan, -1.1564823173178713e-18]}
{'': [0.0, 0.22186610050117886], 'false': [nan, 0.22186610050117925], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22293444328824136], 'false': [nan, 0.22293444328824127], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21724566223794772], 'false': [nan, 0.21724566223794772]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 15.483
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( enzyme(E, F), phenotype(E, G) )
%   | | then if ( location(A, H), location(E, H) )
%   | | | then return 0.0803711573217346;  // std dev = 2.160, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.1706489350995123;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.1642713840791042;  // std dev = 3.226, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return 0.3581489350995122;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(L, L), complex(L, M) )
%   | | | then return 0.17773656396549034;  // std dev = 4.593, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   | | | else return 0.29862512557570187;  // std dev = 4.550, 84.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=37 */
%   | | else if ( interaction(A, N) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.08542166237223962;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( location(A, E), interaction(F, C) )
%   | then if ( location(C, E), complex(F, G) )
%   | | then if ( interaction(C, F) )
%   | | | then return 0.19473049196906903;  // std dev = 5.966, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   | | | else return 0.0776259493147821;  // std dev = 2.596, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( interaction(A, H), complex(F, D) )
%   | | | then return 0.5039360444588398;  // std dev = 1.159, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.2731623098967749;  // std dev = 2.228, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else return 0.4873340450577596;  // std dev = 1.160, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(I, A), complex(A, J) )
%   | then return 0.038100529219305804;  // std dev = 0.405, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else if ( interaction(K, A), enzyme(A, L) )
%   | | then return 0.06280577073029897;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.09569289646382731;  // std dev = 1.897, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.19481741592756982;  // std dev = 2.532, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1484107461134252;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( interaction(A, F), enzyme(D, G) )
%   | | then if ( interaction(H, D), interaction(H, A) )
%   | | | then return 0.8171633156783626;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.21809409138601585;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( enzyme(A, I), complex(D, J) )
%   | | | then return 0.09155687070031514;  // std dev = 2.074, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.18236228437115523;  // std dev = 3.714, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( interaction(M, K) )
%   | | | then return 0.10356572599611247;  // std dev = 3.808, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | | | else return 0.23748166497722162;  // std dev = 1.989, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( location(A, N) )
%   | | | then return 0.09239716878412237;  // std dev = 4.962, 118.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=35 */
%   | | | else return -0.05190408464606645;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( interaction(E, A), complex(E, C) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), complex(F, C) )
%   | | | then return 0.11184935689572507;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.33029706576707313;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.48144273049895947;  // std dev = 0.449, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then return 0.27549925211243353;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.16200859988426675;  // std dev = 1.940, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.1125810871409104;  // std dev = 2.156, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   else if ( interaction(I, A), complex(I, J) )
%   | then if ( interaction(A, K), interaction(L, I) )
%   | | then return 0.05531245172750964;  // std dev = 0.455, 86.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=25 */
%   | | else return 0.13618565803381424;  // std dev = 0.481, 96.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=35 */
%   | else return 0.03014061985694265;  // std dev = 0.430, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then return 0.029181999482221596;  // std dev = 0.463, 89.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=27 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( phenotype(A, G), interaction(F, E) )
%   | | then if ( phenotype(F, G), interaction(E, A) )
%   | | | then return 0.18224314081636503;  // std dev = 1.707, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.7659652352262106;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(E, H), location(A, I) )
%   | | | then return 0.06072256261244461;  // std dev = 2.755, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.2690950050932346;  // std dev = 1.946, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(J, J) )
%   | | | then return -0.03973930443182494;  // std dev = 1.278, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.08313896144214496;  // std dev = 4.767, 103.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.11293099057221753;  // std dev = 1.817, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.3162215135517117;  // std dev = 1.798, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15600896422001304;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, D), phenotype(D, F) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.08732395983200646;  // std dev = 1.778, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.3304107080827719;  // std dev = 1.349, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return -0.0174981331763202;  // std dev = 4.089, 85.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=23 */
%   | | | else return 0.051066723448295395;  // std dev = 2.569, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | else if ( interaction(A, A) )
%   | | then return -0.06977277104777357;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.0954870679985098;  // std dev = 4.392, 85.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=30 */
%   | | | else return 0.146229754821295;  // std dev = 4.179, 73.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=30 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14296919640601435;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( interaction(F, A), phenotype(E, G) )
%   | | then if ( interaction(E, A), interaction(E, F) )
%   | | | then return 0.013076092656460668;  // std dev = 1.887, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return -0.1627113315605625;  // std dev = 2.041, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.4154959531680074;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05397102813492267;  // std dev = 1.194, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.06844280466111148;  // std dev = 3.634, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   | | | else return 0.33716236663502713;  // std dev = 1.086, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return -0.017519699151950768;  // std dev = 3.082, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return 0.058296843078032186;  // std dev = 5.899, 155.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=53 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13178187644792175;  // std dev = 0.014, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, D) )
%   | then if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( enzyme(E, G), phenotype(A, H) )
%   | | | then return -0.04361881220748546;  // std dev = 2.260, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.08820306189109381;  // std dev = 3.317, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | | else if ( interaction(I, A), complex(I, D) )
%   | | | then return -0.1407989614008663;  // std dev = 1.770, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.008431682261812809;  // std dev = 2.873, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | else if ( phenotype(A, J), location(A, K) )
%   | | then if ( interaction(A, L), interaction(M, A) )
%   | | | then return -0.0016453460093457696;  // std dev = 2.996, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return 0.14269491832355408;  // std dev = 3.634, 54.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=23 */
%   | | else if ( location(A, N), enzyme(A, P) )
%   | | | then return 0.11178091235215944;  // std dev = 2.035, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.008120908248168652;  // std dev = 3.731, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10886892636150924;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, F), interaction(A, G) )
%   | | then if ( phenotype(A, H), phenotype(G, H) )
%   | | | then return 0.05090351048435999;  // std dev = 3.190, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | | else return 0.2456989474362192;  // std dev = 1.911, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( phenotype(A, I), location(A, J) )
%   | | | then return -0.016234390684931817;  // std dev = 4.884, 112.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=34 */
%   | | | else return 0.06022172894164848;  // std dev = 3.785, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   | else if ( complex(A, K) )
%   | | then if ( interaction(A, L), phenotype(L, M) )
%   | | | then return -0.034453589934292365;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.06562417070198008;  // std dev = 1.777, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(A, N), interaction(N, P) )
%   | | | then return 0.3511743999933981;  // std dev = 1.084, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.17122635213506024;  // std dev = 2.429, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(C, C), enzyme(A, E) )
%   | then return 0.2971438785899796;  // std dev = 1.089, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.038204736778060064;  // std dev = 0.462, 125.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=38 */
%   else if ( interaction(A, F), phenotype(A, G) )
%   | then if ( complex(A, H), complex(F, H) )
%   | | then if ( interaction(A, I), interaction(I, F) )
%   | | | then return 0.03597832330830369;  // std dev = 1.986, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.18226929001373063;  // std dev = 1.230, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return -0.07702511747783453;  // std dev = 0.452, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), interaction(L, M) )
%   | | | then return 0.07399548225096787;  // std dev = 1.587, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.311573085674777;  // std dev = 1.112, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.1375496333724284;  // std dev = 1.976, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 9.127465940541121E-4;  // std dev = 4.330, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.557', 'seconds']
Refined model CLL: -0.411097


******************************************
Best model found
******************************************
Results 

CLL : -0.369553 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 15.483 

Total Inference Time : 5.981500148773193 

Total revision time: 25.971081800460816
Best scored revision CLL: -0.368636


Results 

CLL : -0.369553 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 26.079079694747925 

Total Inference Time : 5.981500148773193 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.582
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2014325171890647;  // std dev = 7.773, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19981807586231984;  // std dev = 7.625, 250.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11597853739123645;  // std dev = 7.944, 293.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1437053842982494;  // std dev = 7.669, 255.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09450435665441781;  // std dev = 7.810, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08821396815735907;  // std dev = 7.742, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03963122934958714;  // std dev = 7.926, 290.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.047705815063756506;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07700931762536022;  // std dev = 7.598, 247.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.006599879609682107;  // std dev = 7.919, 289.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.353', 'seconds']
Parameter learned model CLL:-0.379131 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.773, 176, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.625, 158, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.944, 201, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.669, 163, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.81, 181, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.742, 172, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.926, 198, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.832, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.598, 155, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.919, 197, 92]}]
{'': [0.0, 0.22543996435731875], 'false': [nan, 0.22543996435731875], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.23257600000000112], 'false': [nan, 0.23257600000000095]}
{'': [nan, 0.21540146070426094], 'false': [nan, 0.21540146070426094]}
{'': [0.0, 0.23061899269511804], 'false': [nan, 0.2306189926951177], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22342980584738728], 'false': [nan, 0.22342980584738698]}
{'': [0.0, 0.2270431588613403], 'false': [nan, 0.2270431588613403], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2165992865636142], 'false': [nan, 0.2165992865636142], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22222222222222177], 'false': [nan, 0.2222222222222234]}
{'': [0.0, 0.23373600616302573], 'false': [nan, 0.23373600616302534], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21699931753690568], 'false': [nan, 0.21699931753690568]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 9.943
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( complex(A, H), interaction(G, G) )
%   | | | then return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.16323368086222423;  // std dev = 3.537, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | else if ( interaction(I, A), interaction(A, J) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.07814893509951236;  // std dev = 2.929, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( interaction(M, K) )
%   | | | then return 0.124815601766179;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( location(A, N), phenotype(A, P) )
%   | | | then return 0.27675358626230306;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return 0.2018989350995111;  // std dev = 4.654, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(A, E), complex(D, C) )
%   | then if ( enzyme(D, F), interaction(E, E) )
%   | | then return 0.006024761463024744;  // std dev = 0.385, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else return 0.28750254806842945;  // std dev = 0.496, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else return 0.09051581464205381;  // std dev = 0.439, 96.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=25 */
%   else if ( interaction(G, A), interaction(G, G) )
%   | then if ( interaction(G, H), enzyme(H, I) )
%   | | then return 0.507208691569906;  // std dev = 1.152, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.33175281540682056;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(J, A), phenotype(A, K) )
%   | | then if ( interaction(L, J), complex(L, M) )
%   | | | then return 0.11591798579575577;  // std dev = 1.193, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.6242317172282301;  // std dev = 0.898, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, N), interaction(P, A) )
%   | | | then return 0.0708569936682229;  // std dev = 1.752, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.1647917381840585;  // std dev = 5.110, 118.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), complex(A, F) )
%   | then return 0.06559602858048369;  // std dev = 0.433, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | else return 0.14709236361952518;  // std dev = 0.480, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
%   else if ( interaction(A, G), enzyme(G, H) )
%   | then if ( phenotype(G, I), complex(A, J) )
%   | | then if ( interaction(A, K), complex(K, J) )
%   | | | then return 0.5585483800335416;  // std dev = 0.883, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.22593098046560037;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.04400923771426702;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.17366454165680176;  // std dev = 1.593, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( interaction(A, L), complex(L, M) )
%   | | then return 0.08951562872619377;  // std dev = 0.455, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else if ( complex(A, N), enzyme(A, P) )
%   | | | then return -0.020647626736789652;  // std dev = 1.288, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.21836011144400091;  // std dev = 3.833, 61.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=25 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), phenotype(A, E) )
%   | then if ( complex(A, F) )
%   | | then if ( complex(G, F), interaction(A, G) )
%   | | | then return 0.02871631954304764;  // std dev = 2.118, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.09895644040712516;  // std dev = 3.436, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.037430444538678616;  // std dev = 2.092, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return -0.03076749224371128;  // std dev = 2.634, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( phenotype(J, L), interaction(M, J) )
%   | | | then return 0.029573012765567896;  // std dev = 2.445, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.11564100880749749;  // std dev = 3.153, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else if ( interaction(A, N), interaction(P, A) )
%   | | | then return 0.2685673925865383;  // std dev = 1.606, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.128363709086839;  // std dev = 4.130, 76.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=26 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( enzyme(C, E), enzyme(A, E) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( interaction(C, G), phenotype(G, H) )
%   | | | then return 0.44202755771431396;  // std dev = 0.827, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.047549491432158454;  // std dev = 1.162, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.43185231773439875;  // std dev = 0.845, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, C), location(C, I) )
%   | | then if ( interaction(C, J), phenotype(J, K) )
%   | | | then return 0.26460029619858827;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.42337277706062126;  // std dev = 0.813, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(L, C), interaction(L, L) )
%   | | | then return 0.02724114988834298;  // std dev = 2.566, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.14221540816294972;  // std dev = 3.391, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   else if ( interaction(A, M), enzyme(M, N) )
%   | then return 0.16952558974587706;  // std dev = 0.484, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else return 0.059369183253662555;  // std dev = 0.461, 152.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=46 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.21645853796038522;  // std dev = 0.061, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( phenotype(F, H), phenotype(G, H) )
%   | | | then return 0.10508547652294777;  // std dev = 1.959, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.29812912694927374;  // std dev = 2.431, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.12193037208105388;  // std dev = 1.087, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.042083697703080326;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.03681078955896143;  // std dev = 2.177, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.12096007583095551;  // std dev = 1.281, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( location(A, N) )
%   | | | then return 0.08073797416973091;  // std dev = 6.145, 170.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=57 */
%   | | | else return 0.236448984616534;  // std dev = 1.228, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( location(D, E), location(A, E) )
%   | | then if ( complex(D, F), complex(A, F) )
%   | | | then return 0.12052181582326416;  // std dev = 1.311, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.00826873116345904;  // std dev = 1.876, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( phenotype(D, G), location(A, H) )
%   | | | then return 0.10286105464793747;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.13586132329068162;  // std dev = 1.794, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( enzyme(I, K) )
%   | | | then return 0.003851622079886923;  // std dev = 2.347, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.20202291994609828;  // std dev = 3.025, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.08007339296443655;  // std dev = 4.548, 91.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=32 */
%   | | | else return 0.025776098158395072;  // std dev = 3.890, 74.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E) )
%   | then if ( enzyme(E, F), enzyme(A, F) )
%   | | then if ( interaction(C, C) )
%   | | | then return -0.033692440672671076;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.1451458401690095;  // std dev = 1.005, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(C, G), complex(A, D) )
%   | | | then return 0.3751640364439404;  // std dev = 1.070, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.12547556916222263;  // std dev = 3.394, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | else return -0.06478993876057534;  // std dev = 0.432, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   else if ( interaction(A, H), phenotype(A, I) )
%   | then return -0.05699107902002532;  // std dev = 0.439, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | else if ( phenotype(A, J), complex(A, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.031000572472401837;  // std dev = 1.896, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.20552013271091576;  // std dev = 1.723, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.01507436950462019;  // std dev = 0.457, 122.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=36 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15890895379830505;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( location(A, D) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( interaction(G, F), location(G, H) )
%   | | | then return -0.00628502827583124;  // std dev = 5.560, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
%   | | | else return 0.11321620498993173;  // std dev = 2.556, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | else if ( interaction(A, I), location(I, D) )
%   | | | then return 0.020869815145648302;  // std dev = 3.497, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | | else return 0.14866237594564902;  // std dev = 2.950, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | else if ( interaction(A, A) )
%   | | then return -0.19566551206875304;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.13501576283584402;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, E), interaction(E, F) )
%   | then return -0.12807265645757027;  // std dev = 0.423, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | else return -0.01889604894149538;  // std dev = 0.447, 90.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=25 */
%   else if ( phenotype(A, G), interaction(A, H) )
%   | then if ( phenotype(H, G) )
%   | | then return 0.5091220170975865;  // std dev = 0.339, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( phenotype(H, I) )
%   | | | then return -0.002985628470449221;  // std dev = 2.023, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.29668480424824023;  // std dev = 1.306, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(L, K), location(J, M) )
%   | | | then return 0.12082854310119352;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return -0.02114318249717687;  // std dev = 2.063, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.08075013402288202;  // std dev = 2.231, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return -0.0562998110538453;  // std dev = 3.100, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.468', 'seconds']
Refined model CLL: -0.39756


******************************************
Best model found
******************************************
Results 

CLL : -0.379244 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.943 

Total Inference Time : 3.3215720653533936 

Total revision time: 17.22522177696228
Best scored revision CLL: -0.379131


Results 

CLL : -0.379244 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 17.33321967124939 

Total Inference Time : 3.3215720653533936 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.666
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2149954081285585;  // std dev = 7.437, 241.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13596194500906067;  // std dev = 7.725, 281.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15523257878343766;  // std dev = 7.503, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12606122580054116;  // std dev = 7.527, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0766064805103695;  // std dev = 7.682, 274.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06829937696414635;  // std dev = 7.649, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03207773251724098;  // std dev = 7.778, 290.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06782172466859615;  // std dev = 7.542, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07248796293887372;  // std dev = 7.437, 241.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.035293049023826274;  // std dev = 7.565, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.715', 'seconds']
Parameter learned model CLL:-0.370669 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.437, 155, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.725, 195, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.503, 163, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.527, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.682, 188, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.649, 183, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.778, 204, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.542, 168, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.437, 155, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.565, 171, 86]}]
{'': [nan, 0.22950706771577675], 'false': [nan, 0.22950706771577675]}
{'': [0.0, 0.21238332847861513], 'false': [nan, 0.21238332847861457], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22609312753019967], 'false': [nan, 0.22609312753019967], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2248047367094998], 'false': [nan, 0.2248047367094994]}
{'': [0.0, 0.21535510682508457], 'false': [nan, 0.21535510682508532], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [-1.1564823173178713e-18, 0.21749284835753996], 'false': [nan, 0.21749284835753996], 'true': [nan, -1.1564823173178713e-18], 'true,false': [nan, -1.1564823173178713e-18], 'true,false,false': [nan, -1.1564823173178713e-18]}
{'': [0.0, 0.20860879904875113], 'false': [nan, 0.20860879904875113], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2239444478888946], 'false': [nan, 0.2239444478888947], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2295070677157758], 'false': [nan, 0.2295070677157757], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22265287892322436], 'false': [nan, 0.22265287892322436], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 9.1
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), interaction(E, A) )
%   | then if ( interaction(C, C), phenotype(E, F) )
%   | | then if ( phenotype(A, F), interaction(A, G) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2581489350995122;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.13939893509951232;  // std dev = 0.450, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(C, H) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1914822684328457;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( interaction(C, I), complex(I, D) )
%   | | | then return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(J, A), enzyme(J, K) )
%   | then return 0.274815601766179;  // std dev = 0.493, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else return 0.152266582158335;  // std dev = 0.456, 153.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=45 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.16320851624380162;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( complex(A, F), enzyme(D, G) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.1736520057009335;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.012240975267421345;  // std dev = 1.994, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( interaction(H, D), enzyme(A, I) )
%   | | | then return 0.33148161431457057;  // std dev = 2.126, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.14277607801101136;  // std dev = 4.533, 96.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=30 */
%   | else if ( interaction(A, J), complex(A, K) )
%   | | then if ( phenotype(J, L), interaction(M, A) )
%   | | | then return 0.24998243749224727;  // std dev = 1.714, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.10821544748369506;  // std dev = 2.261, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( interaction(A, N) )
%   | | | then return 0.36468706119192207;  // std dev = 2.823, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | | | else return 0.15887962032305014;  // std dev = 2.837, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13975085202284382;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), interaction(D, F) )
%   | | then if ( interaction(G, D), phenotype(D, H) )
%   | | | then return 0.08979014568727797;  // std dev = 2.388, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return -0.021933614279135278;  // std dev = 1.992, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( phenotype(A, I), complex(A, E) )
%   | | | then return 0.026185205888402254;  // std dev = 1.263, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.17894460992522584;  // std dev = 3.575, 53.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=21 */
%   | else if ( interaction(A, J), complex(A, K) )
%   | | then if ( interaction(J, J) )
%   | | | then return 0.1774563726810512;  // std dev = 1.790, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.5721241515660497;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return 0.09784751402836214;  // std dev = 2.651, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.16093100725844192;  // std dev = 4.544, 90.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=32 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( phenotype(E, C), interaction(E, E) )
%   | then if ( interaction(F, E), enzyme(F, D) )
%   | | then return 0.3580748381810964;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.0828160360907227;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.20616205229435394;  // std dev = 2.275, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then return -0.034118718392687944;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.11026740315354315;  // std dev = 0.463, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   else if ( interaction(A, I), enzyme(A, J) )
%   | then return -0.03121612614804041;  // std dev = 0.428, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( phenotype(A, K), interaction(A, A) )
%   | | then return 0.39730226417230113;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.06593378796250882;  // std dev = 4.701, 108.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=31 */
%   | | | else return 0.12458471686364844;  // std dev = 4.391, 86.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=30 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D) )
%   | then if ( interaction(E, A) )
%   | | then if ( phenotype(A, F), enzyme(E, G) )
%   | | | then return 0.2066503057765583;  // std dev = 1.836, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.08125552544744219;  // std dev = 3.291, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.32703203764609157;  // std dev = 1.469, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.04458278030853476;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.04231374789250603;  // std dev = 3.261, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return -0.05001341545139086;  // std dev = 2.820, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.20566829856072963;  // std dev = 2.384, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.05445351825990896;  // std dev = 3.968, 75.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=22 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15661481559905435;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(G, A), interaction(A, H) )
%   | | | then return 0.07980799694052695;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.13776031772035074;  // std dev = 1.282, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.19339012228276078;  // std dev = 1.196, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.040745248794429346;  // std dev = 2.780, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | else if ( phenotype(A, K) )
%   | | then if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.08340088095967668;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.24857277221805457;  // std dev = 3.319, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.11972859915668028;  // std dev = 3.043, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | | else return 0.04676611243949365;  // std dev = 3.494, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11427571092926614;  // std dev = 0.000921, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D) )
%   | then if ( phenotype(A, E), phenotype(D, F) )
%   | | then if ( interaction(D, G), interaction(A, G) )
%   | | | then return -0.044937954782838234;  // std dev = 2.699, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.1430122735672698;  // std dev = 3.141, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | else if ( interaction(H, A), complex(D, I) )
%   | | | then return 0.09142476428241113;  // std dev = 1.977, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.05378296523230062;  // std dev = 3.788, 77.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=19 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( complex(A, K) )
%   | | | then return -0.004393360551037159;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.426847410340506;  // std dev = 1.225, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.0030852397179960715;  // std dev = 2.838, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.08121322504379813;  // std dev = 3.281, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11469660941076909;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( phenotype(D, E), enzyme(A, F) )
%   | | then if ( interaction(A, D) )
%   | | | then return -0.15086709726288527;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.011940705613087747;  // std dev = 2.041, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( complex(D, G), interaction(A, H) )
%   | | | then return 0.12255523767201865;  // std dev = 2.020, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.009778267710340047;  // std dev = 4.641, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return 0.056780317626638564;  // std dev = 2.120, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.36343266983487255;  // std dev = 1.421, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(A, L), complex(A, M) )
%   | | | then return -0.020961816696507412;  // std dev = 2.126, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.10336873561726465;  // std dev = 3.620, 54.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(A, E) )
%   | then if ( phenotype(D, F), interaction(D, D) )
%   | | then return -0.24452381769693365;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(A, G), interaction(D, G) )
%   | | | then return 0.2023711579111673;  // std dev = 1.679, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.06250730125961708;  // std dev = 3.611, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.01772536776001225;  // std dev = 3.277, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return 0.11672278624624698;  // std dev = 3.385, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.04792834895229641;  // std dev = 2.896, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return -0.08010385760369967;  // std dev = 3.001, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), complex(D, G) )
%   | | then if ( enzyme(F, E) )
%   | | | then return -0.10757366333492922;  // std dev = 1.963, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.13735843862679464;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(D, H), phenotype(A, I) )
%   | | | then return 0.26843689428131234;  // std dev = 1.566, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.09008177711891735;  // std dev = 2.487, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | else if ( interaction(J, A), complex(A, K) )
%   | | then if ( interaction(L, J), interaction(L, L) )
%   | | | then return 0.022722601210229006;  // std dev = 2.210, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.14108035931034582;  // std dev = 2.250, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( interaction(M, A), phenotype(A, N) )
%   | | | then return 0.013231406449553623;  // std dev = 4.214, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | | | else return -0.05222772632042926;  // std dev = 3.790, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.458', 'seconds']
Refined model CLL: -0.406951


******************************************
Best model found
******************************************
Results 

CLL : -0.369996 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.1 

Total Inference Time : 3.8509023189544678 

Total revision time: 16.882237878799437
Best scored revision CLL: -0.370669


Results 

CLL : -0.369996 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 16.990235773086546 

Total Inference Time : 3.8509023189544678 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.59
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2020224528860736;  // std dev = 7.555, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16894483193646379;  // std dev = 7.594, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12778376717738793;  // std dev = 7.686, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12456650468499159;  // std dev = 7.586, 257.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12685077401362713;  // std dev = 7.447, 240.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07028802830309319;  // std dev = 7.637, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.060350988688981706;  // std dev = 7.616, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04194524366114687;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.024932810664718544;  // std dev = 7.699, 273.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.01857070488325903;  // std dev = 7.706, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.814', 'seconds']
Parameter learned model CLL:-0.36512 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.555, 166, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.594, 171, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.686, 184, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.586, 170, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.447, 153, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.637, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.616, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.651, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.699, 186, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.706, 187, 87]}]
{'': [0.0, 0.22562452155165766], 'false': [nan, 0.22562452155165766], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22349918875067643], 'false': [nan, 0.22349918875067723], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2179708881959654], 'false': [nan, 0.2179708881959654]}
{'': [2.3129646346357427e-18, 0.2239246619933691], 'false': [nan, 0.22392466199336952], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [0.0, 0.2310937499999998], 'false': [nan, 0.23109374999999802], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2209452479338836], 'false': [nan, 0.2209452479338836], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22222222222222246], 'false': [nan, 0.22222222222222246], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22009440895471713], 'false': [nan, 0.2200944089547174], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21712353580485405], 'false': [nan, 0.21712353580485294]}
{'': [0.0, 0.21670041025094638], 'false': [nan, 0.21670041025094638], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 12.444
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0.4945125714631487;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.2781489350995118;  // std dev = 3.490, 50.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=21 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( complex(H, I), interaction(A, H) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2528857772047755;  // std dev = 3.013, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else if ( interaction(A, J), location(J, K) )
%   | | | then return 0.1914822684328457;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return 0.12188519883577564;  // std dev = 4.204, 91.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(A, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.11135747381073201;  // std dev = 2.538, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.20316458675687377;  // std dev = 3.395, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.19620408323283262;  // std dev = 2.105, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.08235089237038662;  // std dev = 3.974, 85.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=21 */
%   | else if ( enzyme(A, J) )
%   | | then if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.2543121088149128;  // std dev = 1.313, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.12690081140280213;  // std dev = 2.526, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( phenotype(A, M), interaction(A, N) )
%   | | | then return 0.13391720202545;  // std dev = 1.453, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.2939813462062597;  // std dev = 2.950, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( location(C, E), location(A, E) )
%   | then return 0.07745177237149106;  // std dev = 0.447, 140.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=39 */
%   | else if ( enzyme(A, F) )
%   | | then if ( interaction(A, G), interaction(G, C) )
%   | | | then return 0.16259576180263371;  // std dev = 1.151, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3513366439065067;  // std dev = 1.929, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else return 0.07042337072841325;  // std dev = 0.440, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then if ( location(A, J) )
%   | | then return 0.8047514879533834;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.18681119968864301;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(K, A) )
%   | | then if ( location(A, L), location(K, M) )
%   | | | then return 0.20979922677664237;  // std dev = 3.526, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
%   | | | else return 0.4587321884329034;  // std dev = 0.821, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.05596821089286502;  // std dev = 0.433, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1341911021522965;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( phenotype(A, E), complex(D, F) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.30459192458379364;  // std dev = 1.196, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.17587991566717884;  // std dev = 1.859, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( enzyme(D, I), complex(A, J) )
%   | | | then return -0.06049134538355187;  // std dev = 1.810, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.0857005725469204;  // std dev = 3.709, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then return 0.39221435839598334;  // std dev = 0.760, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, M), complex(A, N) )
%   | | | then return 0.30796607347875005;  // std dev = 2.062, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.13075747849825745;  // std dev = 5.278, 123.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.08923625539694731;  // std dev = 1.146, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.22605925411625166;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(A, H), interaction(A, D) )
%   | | | then return -0.013670113404184767;  // std dev = 1.886, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.11242407339207582;  // std dev = 3.305, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I) )
%   | | | then return 0.17341697076424956;  // std dev = 4.474, 83.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=34 */
%   | | | else return -0.03106909436801316;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.1928747160983851;  // std dev = 1.841, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.06494107499945759;  // std dev = 3.741, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), location(F, D) )
%   | | then if ( interaction(G, F), enzyme(G, H) )
%   | | | then return 0.051937997457900724;  // std dev = 6.256, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
%   | | | else return 0.2790636694794278;  // std dev = 1.632, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( location(E, I) )
%   | | | then return 0.0026997863545852735;  // std dev = 3.073, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return -0.18240282553028891;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), interaction(L, K) )
%   | | | then return 0.1893446926262884;  // std dev = 1.444, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.0920323268411648;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.05986247675048906;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4575082574827397;  // std dev = 0.925, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11935100099889663;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( location(A, G), location(D, G) )
%   | | | then return 0.3377606671560055;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.009151062438209234;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( location(A, H), interaction(A, A) )
%   | | | then return -0.13443893899437295;  // std dev = 1.778, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return -0.06580056903493121;  // std dev = 2.665, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( enzyme(I, K), phenotype(I, L) )
%   | | | then return 0.22058109984129332;  // std dev = 1.376, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.011058372983264562;  // std dev = 3.059, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | else if ( location(A, M), interaction(N, A) )
%   | | | then return 0.07643785079559325;  // std dev = 5.582, 136.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=49 */
%   | | | else return 0.3526032183465048;  // std dev = 1.121, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10669347252783438;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( location(A, G), location(F, G) )
%   | | | then return -0.1004840630559045;  // std dev = 1.518, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.04097477544821066;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(A, H), interaction(I, A) )
%   | | | then return 0.09710315176581202;  // std dev = 1.373, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.033726199376490996;  // std dev = 2.521, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | else if ( interaction(A, J), complex(A, K) )
%   | | then if ( interaction(J, L), enzyme(L, M) )
%   | | | then return 0.022689620377510558;  // std dev = 2.340, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.20025857501109276;  // std dev = 1.831, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return -0.03708541653617269;  // std dev = 3.125, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | | else return 0.04710964942852989;  // std dev = 5.272, 123.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then if ( phenotype(D, F) )
%   | | then return 0.463613738493967;  // std dev = 0.893, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.1328057896763425;  // std dev = 1.004, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(D, D), location(D, C) )
%   | | then if ( complex(D, G), interaction(A, D) )
%   | | | then return 0.20583014130267366;  // std dev = 1.592, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.0381432972189314;  // std dev = 2.451, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( location(D, C), phenotype(A, H) )
%   | | | then return -0.033469461209849616;  // std dev = 3.778, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | | else return 0.0320586573757151;  // std dev = 5.118, 118.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=39 */
%   else if ( interaction(A, I), interaction(I, J) )
%   | then return -0.16407506168442051;  // std dev = 0.395, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | else if ( location(A, K) )
%   | | then return 0.06475761964367714;  // std dev = 0.492, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return -0.15188231908967822;  // std dev = 0.453, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11724264123664883;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( complex(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return -0.11192198467415003;  // std dev = 2.147, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return -0.19561156922463155;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( phenotype(A, G), phenotype(D, H) )
%   | | | then return 0.27299674366644755;  // std dev = 1.134, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.07276887780993437;  // std dev = 2.628, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( complex(J, K), complex(I, K) )
%   | | | then return 5.09656807083408E-4;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.1954936296666181;  // std dev = 2.841, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.20046483963493378;  // std dev = 1.265, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.01600407058133807;  // std dev = 5.702, 154.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=46 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.180', 'seconds']
Refined model CLL: -0.39707


******************************************
Best model found
******************************************
Results 

CLL : -0.364511 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.444 

Total Inference Time : 4.788438081741333 

Total revision time: 21.10586436653137
Best scored revision CLL: -0.36512


Results 

CLL : -0.364511 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 21.16930373573303 

Total Inference Time : 4.788438081741333 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.641
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21431331866115677;  // std dev = 8.183, 292.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14805119711441095;  // std dev = 8.422, 327.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12613103900188605;  // std dev = 8.422, 327.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1298700582662784;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09964668831985148;  // std dev = 8.320, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08235382348685502;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06325495863304867;  // std dev = 8.333, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06736092404677951;  // std dev = 8.228, 298.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03575151266456579;  // std dev = 8.340, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.048396517829103584;  // std dev = 8.213, 296.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.176', 'seconds']
Parameter learned model CLL:-0.378729 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.183, 188, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.422, 223, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.422, 223, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.272, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.32, 207, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.313, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.333, 209, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.228, 194, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.34, 210, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.213, 192, 104]}]
{'': [nan, 0.22931131544379857], 'false': [nan, 0.22931131544379857]}
{'': [0.0, 0.21689158226486782], 'false': [nan, 0.2168915822648644], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21689158226486693], 'false': [nan, 0.21689158226486693], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2250692520775619], 'false': [nan, 0.22506925207756526], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2225783438963623], 'false': [nan, 0.2225783438963601]}
{'': [0.0, 0.2229344432882426], 'false': [nan, 0.2229344432882426], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22186610050117808], 'false': [nan, 0.22186610050117808]}
{'': [0.0, 0.22719697310932047], 'false': [nan, 0.22719697310932027], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22151000040569488], 'false': [nan, 0.22151000040569538], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2279035792549295], 'false': [nan, 0.2279035792549295]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 14.238
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(E, G), interaction(G, E) )
%   | | then if ( complex(G, F) )
%   | | | then return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(H, A), enzyme(H, I) )
%   | then if ( interaction(A, J), interaction(K, H) )
%   | | then if ( complex(J, L) )
%   | | | then return 0.2265699877310913;  // std dev = 2.974, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.039967116917694;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(M, H), interaction(M, A) )
%   | | | then return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.24451257146314873;  // std dev = 3.230, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | else return 0.15004082699140453;  // std dev = 0.455, 185.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=54 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.16907459137202124;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( location(A, D) )
%   | then if ( complex(A, E) )
%   | | then if ( phenotype(A, F), interaction(G, A) )
%   | | | then return 0.16194056136583365;  // std dev = 4.096, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
%   | | | else return 0.06661381201628826;  // std dev = 3.362, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | else if ( interaction(A, H), location(H, I) )
%   | | | then return 0.11592887777102892;  // std dev = 3.887, 75.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=21 */
%   | | | else return 0.2367772699632647;  // std dev = 4.628, 89.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=36 */
%   | else if ( interaction(A, J) )
%   | | then return 0.17221886579591503;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.6634317604529542;  // std dev = 0.918, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1395498539696394;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( location(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), complex(F, G) )
%   | | then if ( interaction(F, H), location(F, D) )
%   | | | then return 0.05833459469339477;  // std dev = 3.854, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | | else return 0.25559194131942026;  // std dev = 1.419, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.4115984887108219;  // std dev = 1.109, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.13377558712962007;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( enzyme(J, L), complex(J, M) )
%   | | | then return 0.265757843294845;  // std dev = 2.737, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.1719428946418762;  // std dev = 5.799, 145.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=53 */
%   | | else if ( location(A, N) )
%   | | | then return 0.1041613401525339;  // std dev = 1.694, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.06846356971563648;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12788674339577322;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( location(A, D) )
%   | then if ( phenotype(A, E), interaction(F, A) )
%   | | then if ( complex(F, G) )
%   | | | then return 0.14258947472819866;  // std dev = 5.754, 142.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=52 */
%   | | | else return 0.32189267700397356;  // std dev = 1.776, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.005062475819812825;  // std dev = 2.162, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.12658351733651713;  // std dev = 4.572, 93.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=32 */
%   | else if ( enzyme(A, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return -0.05691442408510121;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.14024775741843454;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.45347572787505447;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0654642095827367;  // std dev = 1.527, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( enzyme(E, C), interaction(E, F) )
%   | then if ( enzyme(F, C) )
%   | | then return -0.06772926354140259;  // std dev = 0.382, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else return 0.20924486340432072;  // std dev = 0.490, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return -0.14922891888829037;  // std dev = 0.423, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( interaction(G, A), complex(G, H) )
%   | then if ( phenotype(A, I), phenotype(G, I) )
%   | | then return 0.00833486589674259;  // std dev = 0.439, 105.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=27 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.19062107432238126;  // std dev = 2.148, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.054902111933712146;  // std dev = 5.192, 128.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=39 */
%   | else if ( interaction(J, A), location(A, K) )
%   | | then if ( interaction(L, J), interaction(J, L) )
%   | | | then return 0.12093874510787675;  // std dev = 1.547, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.252648027386363;  // std dev = 1.733, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.0371028688392303;  // std dev = 0.454, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1350472235727641;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), interaction(E, E) )
%   | | then if ( interaction(A, E), interaction(E, A) )
%   | | | then return -0.024489866090391128;  // std dev = 1.985, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.09106546808623991;  // std dev = 5.348, 125.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=44 */
%   | | else if ( interaction(F, A), phenotype(F, D) )
%   | | | then return -0.102962046131156;  // std dev = 1.269, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.021216266611462597;  // std dev = 3.028, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | else if ( location(A, G) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.2187828633900415;  // std dev = 3.765, 57.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=27 */
%   | | | else return 0.06873355372226642;  // std dev = 2.171, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.07330546831545103;  // std dev = 1.753, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.12886675895833796;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( phenotype(A, D), complex(C, E) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.05660083314644674;  // std dev = 0.461, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.06273232024464293;  // std dev = 2.005, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.3045006106456572;  // std dev = 1.729, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then return -0.07025374280148844;  // std dev = 0.416, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else return 0.024703644401287753;  // std dev = 0.467, 152.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=49 */
%   else if ( interaction(J, A), interaction(J, J) )
%   | then return 0.48560791221555244;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, K), complex(A, L) )
%   | | then return -0.010571659017607598;  // std dev = 0.430, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.4030015536757972;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09315275394581124;  // std dev = 2.214, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.133041672733825;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, D), interaction(A, A) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.3897051603198438;  // std dev = 0.838, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.15639955932052668;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( complex(A, G), location(A, H) )
%   | | then if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.017558472977969468;  // std dev = 4.614, 107.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=29 */
%   | | | else return 0.08349679703190706;  // std dev = 2.034, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.09073969303383166;  // std dev = 5.474, 126.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=49 */
%   | | | else return 0.02380666252640951;  // std dev = 3.163, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12228404788741143;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.23586616753911832;  // std dev = 1.583, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.07459204596765867;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return -0.006843972986314564;  // std dev = 3.878, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | | else return 0.21003390060514737;  // std dev = 1.399, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, I), phenotype(A, K) )
%   | | | then return 0.08643005659957663;  // std dev = 2.608, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return -0.013546608817548291;  // std dev = 5.685, 157.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=46 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.09863339264080229;  // std dev = 2.471, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.016072173166662374;  // std dev = 2.021, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( enzyme(D, E), phenotype(D, F) )
%   | then return -0.02639268353727901;  // std dev = 0.454, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
%   | else if ( phenotype(D, C), enzyme(A, G) )
%   | | then return 0.2710130261911301;  // std dev = 0.480, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.026239485472474334;  // std dev = 0.466, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
%   else if ( interaction(A, H), location(A, I) )
%   | then if ( enzyme(H, J), interaction(A, A) )
%   | | then return -0.17716424036008133;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.0724153862372931;  // std dev = 1.960, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.2305004233764469;  // std dev = 2.401, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | else if ( interaction(A, L) )
%   | | then return -0.04541597067270884;  // std dev = 0.434, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.018477220770845706;  // std dev = 2.406, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.06659195417173507;  // std dev = 2.910, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.684', 'seconds']
Refined model CLL: -0.397771


******************************************
Best model found
******************************************
Results 

CLL : -0.379606 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 14.238 

Total Inference Time : 4.983262538909912 

Total revision time: 23.4332995929718
Best scored revision CLL: -0.378729


Results 

CLL : -0.379606 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 23.49673896217346 

Total Inference Time : 4.983262538909912 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.504
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17214210916094574;  // std dev = 7.944, 293.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1766167206842178;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15093011852514024;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11682257966667091;  // std dev = 7.846, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11014374886492515;  // std dev = 7.765, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09504235506222611;  // std dev = 7.734, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03653554897748756;  // std dev = 7.969, 297.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07330256228467115;  // std dev = 7.710, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.055571079496400694;  // std dev = 7.726, 262.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.013283171226926313;  // std dev = 7.906, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.430', 'seconds']
Parameter learned model CLL:-0.3747 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.944, 201, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.788, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.788, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.846, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.765, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.734, 171, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.969, 205, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.71, 168, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.726, 170, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.906, 195, 92]}]
{'': [nan, 0.21540146070426075], 'false': [nan, 0.21540146070426075]}
{'': [0.0, 0.2246364883401915], 'false': [nan, 0.2246364883401914], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2246364883401931], 'false': [nan, 0.2246364883401931], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22141711091558347], 'false': [nan, 0.2214171109155839]}
{'': [0.0, 0.22584129388825736], 'false': [nan, 0.22584129388825877], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22744292963610802], 'false': [nan, 0.22744292963610802], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21381038216055095], 'false': [nan, 0.21381038216055095], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22863905325443826], 'false': [nan, 0.2286390532544384], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.227842200337975], 'false': [nan, 0.22784220033797742], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21780038606757307], 'false': [nan, 0.21780038606757307], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 7.909
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), enzyme(A, D) )
%   | then if ( interaction(A, C), phenotype(E, F) )
%   | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( complex(A, G) )
%   | | then if ( enzyme(A, D) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.15814893509951225;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else if ( complex(A, H), phenotype(A, I) )
%   | then if ( phenotype(J, I), interaction(J, A) )
%   | | then if ( interaction(K, J), phenotype(K, I) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.19905802600860326;  // std dev = 0.474, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | else return 0.16902976411505619;  // std dev = 0.463, 193.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=60 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(D, F), enzyme(D, G) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.1614556400493882;  // std dev = 1.831, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.013855245867063899;  // std dev = 2.215, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | else if ( interaction(D, H), complex(A, I) )
%   | | | then return 0.24946898317568714;  // std dev = 2.264, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.11333972384171469;  // std dev = 3.165, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.39352537383465247;  // std dev = 1.086, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.47540780245230163;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return 0.11395971838228161;  // std dev = 3.279, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.20885152762553583;  // std dev = 4.883, 102.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=38 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.21209345098882165;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), location(E, G) )
%   | | then if ( interaction(F, H), interaction(H, F) )
%   | | | then return 0.18556258134533946;  // std dev = 2.335, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.055738092564819326;  // std dev = 1.912, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( complex(E, I), phenotype(E, J) )
%   | | | then return 0.005670348162893339;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.07732378727766887;  // std dev = 2.952, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( phenotype(A, M), interaction(K, K) )
%   | | | then return 0.2822274556168997;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0953650654512167;  // std dev = 3.664, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | else if ( interaction(N, A), interaction(A, P) )
%   | | | then return 0.37018498436855957;  // std dev = 1.493, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.17427712166540932;  // std dev = 4.782, 99.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=36 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), complex(A, F) )
%   | then return 0.12479683608060917;  // std dev = 0.477, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | else return 0.05713564857461527;  // std dev = 0.444, 86.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=23 */
%   else if ( enzyme(A, G) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(I, H) )
%   | | | then return 0.09580609178120958;  // std dev = 2.826, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | | else return 0.29073845539666177;  // std dev = 0.995, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.03435849561753268;  // std dev = 0.432, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(L, A) )
%   | | | then return 0.7577321715060742;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2566825190726906;  // std dev = 1.928, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.22151493061693092;  // std dev = 2.711, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.06264029157845749;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.16629127680742017;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( complex(A, F), enzyme(D, G) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.04816813915594684;  // std dev = 1.957, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.13286519331598096;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( interaction(A, D), complex(A, H) )
%   | | | then return -0.10249380662030383;  // std dev = 1.797, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.07866081379802765;  // std dev = 6.091, 171.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=54 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( enzyme(J, K), interaction(J, L) )
%   | | | then return 0.03367108805683577;  // std dev = 2.433, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.20072297673557202;  // std dev = 2.885, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else return 0.44170184015763714;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13500696423682276;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), enzyme(F, G) )
%   | | then if ( phenotype(A, H), complex(A, I) )
%   | | | then return -0.003533039212924588;  // std dev = 1.906, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.10817295088813399;  // std dev = 1.995, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( complex(A, J), interaction(K, D) )
%   | | | then return 0.2613844671063189;  // std dev = 1.915, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.10275180315133033;  // std dev = 3.555, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | else if ( interaction(L, A) )
%   | | then if ( phenotype(A, M), complex(L, N) )
%   | | | then return 0.17491565678274035;  // std dev = 1.861, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.028661910473341577;  // std dev = 4.412, 100.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=26 */
%   | | else if ( complex(A, P) )
%   | | | then return 0.1673288818893351;  // std dev = 1.991, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.06670470099998368;  // std dev = 3.154, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(E, E), enzyme(E, F) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.3274731976782538;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.04419492247235372;  // std dev = 1.197, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, A), phenotype(A, G) )
%   | | | then return -0.20467458355622237;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.0010586167293160724;  // std dev = 3.716, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.24411058973617092;  // std dev = 1.792, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.10982134348852753;  // std dev = 3.314, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.09858981922560636;  // std dev = 3.512, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return 0.0161145008865121;  // std dev = 3.981, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), phenotype(A, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.04200349159923717;  // std dev = 1.850, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.4734359595353279;  // std dev = 0.829, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(I, A), complex(I, D) )
%   | | | then return -0.2092713321759667;  // std dev = 1.582, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return -0.025017567889548904;  // std dev = 2.876, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | else if ( interaction(A, A) )
%   | | then return 0.7164492890509463;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.025544393773778342;  // std dev = 2.737, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.09182664342876126;  // std dev = 5.834, 146.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=55 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12602002771078397;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D) )
%   | then if ( enzyme(D, E), phenotype(D, F) )
%   | | then if ( complex(D, G) )
%   | | | then return 0.08834601560841135;  // std dev = 2.621, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return -0.22902725344414154;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( location(A, H), enzyme(A, I) )
%   | | | then return -0.003837283091556046;  // std dev = 2.924, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return -0.07284362498198037;  // std dev = 4.429, 93.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=27 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J) )
%   | | | then return -0.0308533261947533;  // std dev = 3.313, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | | else return 0.08528793317350988;  // std dev = 2.129, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.06933726084282117;  // std dev = 3.284, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | | else return 0.2298261333190933;  // std dev = 0.987, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09656188977999204;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( enzyme(A, F) )
%   | | then if ( complex(E, G), interaction(E, E) )
%   | | | then return 0.1580118739526802;  // std dev = 1.936, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return -0.04707083657966059;  // std dev = 2.591, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( phenotype(A, H), complex(E, D) )
%   | | | then return -0.269190313652574;  // std dev = 1.568, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.07182123419676552;  // std dev = 2.249, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( location(I, J) )
%   | | | then return 0.052767778125240236;  // std dev = 2.075, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.1888883619096801;  // std dev = 1.278, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.11978756006477242;  // std dev = 3.073, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return 0.051934400516627885;  // std dev = 5.128, 116.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=41 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.301', 'seconds']
Refined model CLL: -0.396364


******************************************
Best model found
******************************************
Results 

CLL : -0.374822 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.909 

Total Inference Time : 3.4641551971435547 

Total revision time: 15.355877531051636
Best scored revision CLL: -0.3747


Results 

CLL : -0.374822 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 15.419316900253296 

Total Inference Time : 3.4641551971435547 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.557
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1901952671458448;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15548165266173877;  // std dev = 7.635, 267.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13397113942460526;  // std dev = 7.629, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12128658638169161;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09166674418939748;  // std dev = 7.629, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0678202845302805;  // std dev = 7.669, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06452621130052225;  // std dev = 7.615, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07714575339088778;  // std dev = 7.471, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.030221671447796018;  // std dev = 7.649, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04418465039080946;  // std dev = 7.534, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.557', 'seconds']
Parameter learned model CLL:-0.368238 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.579, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.635, 181, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.629, 180, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.579, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.629, 180, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.669, 186, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.615, 178, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.471, 159, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.649, 183, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.534, 167, 86]}]
{'': [0.0, 0.22179156542090964], 'false': [nan, 0.22179156542090964], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21835065718413726], 'false': [nan, 0.21835065718413785], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21878003278873792], 'false': [nan, 0.21878003278873792]}
{'': [0.0, 0.22179156542091044], 'false': [nan, 0.2217915654209108], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2187800327887402], 'false': [nan, 0.2187800327887409], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21620891003460052], 'false': [nan, 0.21620891003460052]}
{'': [nan, 0.2196395775941217], 'false': [nan, 0.2196395775941217]}
{'': [0.0, 0.2278050812161596], 'false': [nan, 0.22780508121615942], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21749284835753993], 'false': [nan, 0.21749284835753968], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2243746973081917], 'false': [nan, 0.2243746973081917], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 8.794
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(E, F), interaction(A, D) )
%   | | then if ( complex(E, G) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.04862512557570276;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.2929315437951645;  // std dev = 2.377, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.185880027536487;  // std dev = 5.120, 119.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=39 */
%   | else if ( location(A, J), interaction(K, A) )
%   | | then if ( location(K, J) )
%   | | | then return 0.3364098046647297;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.22400259363609773;  // std dev = 3.084, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), interaction(G, F) )
%   | | then if ( enzyme(D, H), interaction(F, A) )
%   | | | then return 0.5724654105751215;  // std dev = 0.871, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1742507923780261;  // std dev = 4.046, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   | | else if ( interaction(I, D), phenotype(D, J) )
%   | | | then return 0.8339826049528699;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.32447045001676605;  // std dev = 1.582, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(A, K) )
%   | | then if ( phenotype(A, L), phenotype(K, M) )
%   | | | then return 0.13429746382166433;  // std dev = 3.446, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | | else return 0.29326741036140286;  // std dev = 2.637, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.1179418896191177;  // std dev = 2.674, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.0334156716898315;  // std dev = 2.767, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( enzyme(A, E), interaction(C, C) )
%   | then return 0.39048755490143;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(C, C), complex(C, F) )
%   | | then return 0.02578776104673467;  // std dev = 0.415, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( complex(A, G), interaction(C, A) )
%   | | | then return 0.02398138107311712;  // std dev = 1.213, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.19713213193163462;  // std dev = 3.659, 56.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=22 */
%   else if ( interaction(H, A), complex(H, I) )
%   | then return 0.05492469096826075;  // std dev = 0.447, 92.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=25 */
%   | else if ( interaction(J, A) )
%   | | then if ( phenotype(J, K), interaction(L, J) )
%   | | | then return 0.09876372406687597;  // std dev = 2.393, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.22099142723662066;  // std dev = 2.931, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.1579141238001111;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.049580790466777755;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13159531969489058;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D) )
%   | then if ( phenotype(A, E), interaction(A, F) )
%   | | then if ( phenotype(F, E), enzyme(F, G) )
%   | | | then return 0.16741206245900825;  // std dev = 1.362, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.49000300454037427;  // std dev = 1.478, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( complex(H, D), interaction(H, H) )
%   | | | then return 0.27819115563091096;  // std dev = 1.868, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.10400797231220965;  // std dev = 2.587, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | else if ( interaction(I, A), enzyme(A, J) )
%   | | then if ( interaction(A, K) )
%   | | | then return 0.30384776225452953;  // std dev = 1.793, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.11446834081813656;  // std dev = 2.602, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( location(A, L) )
%   | | | then return 0.06677302559372895;  // std dev = 5.225, 129.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=39 */
%   | | | else return 0.2975110984521683;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11410645085996482;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.0032641285328396455;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.14430772105173678;  // std dev = 2.210, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( complex(D, H) )
%   | | | then return 0.17737998774797772;  // std dev = 1.545, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.3842715863095315;  // std dev = 1.089, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(A, K), enzyme(I, L) )
%   | | | then return -0.12395224689525106;  // std dev = 2.021, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.04487793053415255;  // std dev = 3.833, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
%   | | else if ( interaction(M, A), phenotype(A, N) )
%   | | | then return 0.14484182623404493;  // std dev = 3.728, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
%   | | | else return 0.047656986787950335;  // std dev = 3.789, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( complex(C, E) )
%   | then if ( complex(A, F), phenotype(C, G) )
%   | | then if ( interaction(H, A), complex(H, F) )
%   | | | then return 0.21626698285998605;  // std dev = 1.383, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.03609640725378813;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.513661462079122;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then return -0.03516595801813612;  // std dev = 0.435, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(C, K), complex(K, L) )
%   | | | then return 0.08070213757855745;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3534601289592693;  // std dev = 1.107, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, M), interaction(M, M) )
%   | then if ( interaction(N, A), phenotype(A, P) )
%   | | then return 0.15986595972436662;  // std dev = 0.483, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else return 0.07157389505953976;  // std dev = 0.468, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | else return 0.020487479829086216;  // std dev = 0.460, 165.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), interaction(E, E) )
%   | then if ( phenotype(E, D), interaction(F, A) )
%   | | then return 0.025475096697227327;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.19650476754135945;  // std dev = 1.273, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, G), phenotype(G, D) )
%   | | then return -0.11490191749777084;  // std dev = 0.423, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else return -0.02970318442140872;  // std dev = 0.456, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   else if ( interaction(H, A) )
%   | then if ( phenotype(H, I), location(A, J) )
%   | | then if ( phenotype(A, I), enzyme(H, K) )
%   | | | then return -0.12455953315418682;  // std dev = 1.533, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.06044507849812252;  // std dev = 5.255, 124.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=42 */
%   | | else if ( phenotype(A, L), interaction(M, H) )
%   | | | then return 0.3140977398071159;  // std dev = 1.299, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.1101512144819104;  // std dev = 2.329, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else return -0.00733455869878191;  // std dev = 0.442, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13264259909851406;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(D, E), complex(A, F) )
%   | | then return -0.09479712389502239;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( complex(A, G), location(A, H) )
%   | | | then return 0.6892151417472303;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12914943110080487;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(K, A), interaction(I, K) )
%   | | | then return -0.1759736626970141;  // std dev = 1.651, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return -0.014354261333285401;  // std dev = 3.672, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return 9.468293141107675E-4;  // std dev = 4.577, 99.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=30 */
%   | | | else return 0.09321377205701938;  // std dev = 3.358, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, A), phenotype(D, F) )
%   | | then if ( interaction(A, G), interaction(G, D) )
%   | | | then return 0.16513739482394;  // std dev = 1.477, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.09765323747815309;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, H), phenotype(D, H) )
%   | | | then return 0.033783878408717063;  // std dev = 1.964, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.040746518753386744;  // std dev = 3.605, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), interaction(K, L) )
%   | | | then return -0.05847372315991046;  // std dev = 2.075, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.14093901921782942;  // std dev = 1.089, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return 0.1255095230868285;  // std dev = 3.810, 58.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=25 */
%   | | | else return 0.04586787402003415;  // std dev = 3.856, 62.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=23 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10343279347070918;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( interaction(D, F), phenotype(D, G) )
%   | | then if ( complex(D, H), enzyme(A, I) )
%   | | | then return 0.021848843870174717;  // std dev = 2.174, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.06586299598754554;  // std dev = 3.335, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | else if ( interaction(D, D), enzyme(A, J) )
%   | | | then return 0.19247381895963953;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.019022790994428728;  // std dev = 2.131, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( interaction(A, A), complex(A, L) )
%   | | | then return -0.13365180337327057;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.20315785589848306;  // std dev = 1.936, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.05094339711134809;  // std dev = 3.732, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | | else return 0.00589193808179725;  // std dev = 3.962, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.777', 'seconds']
Refined model CLL: -0.409272


******************************************
Best model found
******************************************
Results 

CLL : -0.367558 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.794 

Total Inference Time : 3.625880241394043 

Total revision time: 16.60125200843811
Best scored revision CLL: -0.368238


Results 

CLL : -0.367558 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 16.66469137763977 

Total Inference Time : 3.625880241394043 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.579
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1815690094489546;  // std dev = 7.672, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16663969925177652;  // std dev = 7.623, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1514504329691894;  // std dev = 7.571, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1270688139404526;  // std dev = 7.571, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09964327970911344;  // std dev = 7.601, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04842228230498605;  // std dev = 7.786, 287.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0630531868179377;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06742624135559423;  // std dev = 7.555, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03208692873244686;  // std dev = 7.679, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.041733357702935785;  // std dev = 7.586, 257.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.424', 'seconds']
Parameter learned model CLL:-0.368937 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.672, 182, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.623, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.571, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.571, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.601, 172, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.786, 200, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.651, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.555, 166, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.679, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.586, 170, 87]}]
{'': [0.0, 0.21881952985724443], 'false': [nan, 0.21881952985724443], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22179651535458256], 'false': [nan, 0.2217965153545832]}
{'': [nan, 0.2247750865051896], 'false': [nan, 0.2247750865051896]}
{'': [nan, 0.2247750865051902], 'false': [nan, 0.22477508650519107]}
{'': [0.0, 0.22307359759097262], 'false': [nan, 0.22307359759097378], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21124452160400103], 'false': [nan, 0.21124452160400103], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2200944089547164], 'false': [nan, 0.2200944089547164], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22562452155165663], 'false': [nan, 0.22562452155165819], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21839506172839493], 'false': [nan, 0.2183950617283938], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22392466199336958], 'false': [nan, 0.22392466199336958], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 14.926
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then if ( phenotype(E, D), complex(A, F) )
%   | | | then return 0.2929315437951645;  // std dev = 2.377, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.16427138407910416;  // std dev = 3.226, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.24703782398840124;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.3581489350995123;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), phenotype(J, I) )
%   | | | then return 0.11621345122854462;  // std dev = 3.445, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | | else return 0.22656998773109124;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.19148226843284566;  // std dev = 3.464, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( complex(D, E), phenotype(C, F) )
%   | then return 0.11643808901692713;  // std dev = 0.452, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | else if ( enzyme(D, G), interaction(C, A) )
%   | | then if ( interaction(D, H), enzyme(H, I) )
%   | | | then return 0.574906555398073;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.17028622453668993;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(C, J), location(C, K) )
%   | | | then return 0.3319160626411213;  // std dev = 0.978, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09266307138345034;  // std dev = 1.478, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   else if ( interaction(L, A) )
%   | then if ( location(L, M) )
%   | | then if ( interaction(A, N), location(A, P) )
%   | | | then return 0.33139174579987;  // std dev = 2.240, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.1875268275075788;  // std dev = 5.246, 120.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=43 */
%   | | else return 0.028312620142365696;  // std dev = 0.396, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else return 0.5841423412245004;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.18939943430512113;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.6072370270376914;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(D, H), interaction(I, D) )
%   | | | then return 0.46242606403287145;  // std dev = 1.166, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.07688910951600986;  // std dev = 4.051, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.15376731664704654;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.5407247729111799;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3394541742796938;  // std dev = 1.495, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else if ( interaction(M, A), complex(M, N) )
%   | then return 0.1554313672105573;  // std dev = 0.475, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
%   | else return 0.05129529871974584;  // std dev = 0.443, 84.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=22 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( complex(D, E), interaction(D, F) )
%   | then if ( phenotype(A, G) )
%   | | then return 0.04262044092250887;  // std dev = 0.447, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | else if ( enzyme(F, H) )
%   | | | then return 0.10113129314079956;  // std dev = 1.190, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.6031880219566031;  // std dev = 0.877, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.010839989087994861;  // std dev = 0.438, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   else if ( location(A, I) )
%   | then if ( complex(A, J), enzyme(A, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.25978985517396797;  // std dev = 1.228, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.44837775166487;  // std dev = 1.148, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( location(M, I), interaction(M, A) )
%   | | | then return 0.09889864432215209;  // std dev = 4.211, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | | | else return 0.05926626137806386;  // std dev = 2.687, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | else return 0.43184778917277483;  // std dev = 1.143, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, D), enzyme(A, E) )
%   | | then if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.07937535863786191;  // std dev = 1.105, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.11001296308513045;  // std dev = 1.269, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( location(A, H), location(D, H) )
%   | | | then return 0.17217511338056132;  // std dev = 2.852, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.31939522252618485;  // std dev = 1.714, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.13548246386445148;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.47087703625040306;  // std dev = 1.217, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.05533172785658416;  // std dev = 2.506, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.07548347034674567;  // std dev = 5.696, 147.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=48 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.21127561675363474;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( complex(A, F), enzyme(A, G) )
%   | | then if ( location(E, D) )
%   | | | then return -0.08799578721511457;  // std dev = 2.340, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.002859587030084987;  // std dev = 1.437, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( enzyme(E, H), interaction(A, E) )
%   | | | then return -0.033677069774901286;  // std dev = 1.894, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.06530510657596987;  // std dev = 6.490, 194.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=63 */
%   | else if ( enzyme(A, I) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.33719816637455713;  // std dev = 1.027, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.32004689632101085;  // std dev = 0.791, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, L) )
%   | | | then return -0.037319861627550965;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2671127457355584;  // std dev = 1.040, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.20394941502268438;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D) )
%   | then if ( enzyme(A, E), interaction(F, A) )
%   | | then if ( interaction(A, G), location(F, D) )
%   | | | then return -0.04243811232114313;  // std dev = 2.592, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.034363670324924926;  // std dev = 3.700, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.09380685299729008;  // std dev = 3.558, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
%   | | | else return 0.04527185960637793;  // std dev = 4.768, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.12397912852752445;  // std dev = 0.961, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, L), interaction(L, A) )
%   | | | then return -0.21037076798248736;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.18876413601482722;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1728245151971245;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D) )
%   | then if ( interaction(A, E), enzyme(A, F) )
%   | | then if ( interaction(E, G), phenotype(A, H) )
%   | | | then return 0.013576997363927475;  // std dev = 2.165, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.27780253446600234;  // std dev = 1.946, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.022233743211632826;  // std dev = 3.426, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | | else return 0.0666596527225279;  // std dev = 5.697, 142.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=50 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then return -0.24122412629099055;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.07904461094203592;  // std dev = 1.134, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.01987828432115561;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14949534046834884;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( interaction(D, E), interaction(E, G) )
%   | | | then return 0.029059002246401077;  // std dev = 3.150, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return -0.09052590356725068;  // std dev = 3.182, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | else if ( phenotype(D, H), phenotype(A, H) )
%   | | | then return 0.24478813773170194;  // std dev = 1.615, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.052361262970364635;  // std dev = 5.551, 138.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=47 */
%   | else if ( enzyme(A, I) )
%   | | then if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.16695412239605115;  // std dev = 1.278, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.3133530774727761;  // std dev = 1.283, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else return 0.02015243470161972;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.16954427692742452;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D) )
%   | then if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( complex(E, G), enzyme(A, H) )
%   | | | then return 0.5074296387922287;  // std dev = 0.881, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.039503132172827006;  // std dev = 3.227, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.04343696526238348;  // std dev = 3.860, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | | | else return -0.3042537353045355;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( enzyme(A, J), interaction(A, K) )
%   | | then if ( phenotype(K, L), interaction(K, A) )
%   | | | then return 0.2666268074010503;  // std dev = 0.764, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.01862531418888752;  // std dev = 2.153, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( enzyme(A, M), complex(A, N) )
%   | | | then return 0.18555886156688634;  // std dev = 1.425, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.08915418249830105;  // std dev = 4.431, 83.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.377', 'seconds']
Refined model CLL: -0.413197


******************************************
Best model found
******************************************
Results 

CLL : -0.368336 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 14.926 

Total Inference Time : 6.342403173446655 

Total revision time: 25.04406512260437
Best scored revision CLL: -0.368937


Results 

CLL : -0.368336 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 25.07403553009033 

Total Inference Time : 6.342403173446655 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.637
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19691115008322616;  // std dev = 8.293, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18983796803156677;  // std dev = 8.175, 291.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1262596109017159;  // std dev = 8.397, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1235067762579519;  // std dev = 8.286, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09212401918500869;  // std dev = 8.346, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06485555454984411;  // std dev = 8.410, 325.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07670646076013594;  // std dev = 8.257, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), function(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.031233791424674816;  // std dev = 8.445, 331.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04941666732180497;  // std dev = 8.293, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03265675641287384;  // std dev = 8.333, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.771', 'seconds']
Parameter learned model CLL:-0.369248 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.293, 203, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.175, 187, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.397, 219, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.286, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.346, 211, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.41, 221, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.257, 198, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), function(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.445, 227, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.293, 203, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.333, 209, 104]}]
{'': [0.0, 0.22400237668304232], 'false': [nan, 0.22400237668304232], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2296619076298107], 'false': [nan, 0.22966190762980887]}
{'': [nan, 0.21830938665184316], 'false': [nan, 0.21830938665184316]}
{'': [nan, 0.22435815284719546], 'false': [nan, 0.2243581528471945]}
{'': [0.0, 0.22115394305870562], 'false': [nan, 0.22115394305870423], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21760000000000007], 'false': [nan, 0.21760000000000007]}
{'': [0.0, 0.2257795710714449], 'false': [nan, 0.2257795710714449], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21547813546791203], 'false': [nan, 0.21547813546791242]}
{'': [0.0, 0.22400237668304063], 'false': [nan, 0.2240023766830414], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22186610050117858], 'false': [nan, 0.22186610050117858], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 16.425
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), enzyme(F, E) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.15814893509951236;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( phenotype(D, H), complex(A, I) )
%   | | | then return 0.15226658215833588;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.04733812428870145;  // std dev = 2.382, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( enzyme(K, L), phenotype(A, M) )
%   | | | then return 0.26137474155112406;  // std dev = 3.863, 62.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=25 */
%   | | | else return 0.18903128804068783;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   | | else if ( complex(A, N), phenotype(A, P) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.09814893509951234;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, C), enzyme(A, E) )
%   | then return 0.03778665478297887;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( complex(C, F), interaction(C, G) )
%   | | then if ( enzyme(G, D) )
%   | | | then return 0.2516022195407692;  // std dev = 1.696, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.6439064141023974;  // std dev = 0.900, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(C, H), interaction(H, H) )
%   | | | then return 0.2869546904197103;  // std dev = 1.654, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.17912010216176147;  // std dev = 2.581, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   else if ( location(A, I), interaction(J, A) )
%   | then return 0.1498416784703872;  // std dev = 0.466, 219.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=70 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then return 0.09577634002911495;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.4936710482907571;  // std dev = 0.821, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.22380606857716215;  // std dev = 1.759, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), enzyme(E, F) )
%   | then return 0.12124892445610787;  // std dev = 0.466, 163.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=52 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( phenotype(A, D), enzyme(A, I) )
%   | | | then return 0.17004240810651827;  // std dev = 0.806, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.34337676226270547;  // std dev = 1.926, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( complex(C, J), interaction(K, C) )
%   | | | then return 0.14469113939066372;  // std dev = 3.640, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | | else return 0.26559759750299;  // std dev = 1.650, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else if ( interaction(L, A) )
%   | then if ( enzyme(A, M), complex(A, N) )
%   | | then return 0.47837165776645;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(P, L), phenotype(P, Q) )
%   | | | then return 0.25909761693874017;  // std dev = 1.653, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.1098260505876056;  // std dev = 2.052, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | else return 0.7904623220673473;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( interaction(E, A), complex(E, D) )
%   | then if ( phenotype(E, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.0710989062559115;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.1159532657666522;  // std dev = 1.969, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.17076341833544073;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.03032042950802106;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, K), complex(K, D) )
%   | | then return 0.43573772120089105;  // std dev = 0.461, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.1415494000180828;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.35446845133557614;  // std dev = 1.850, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   else if ( interaction(N, A), complex(N, P) )
%   | then return 0.0912573171212195;  // std dev = 0.464, 192.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=60 */
%   | else return 0.04615213981624609;  // std dev = 0.454, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.2209071400976344;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then if ( interaction(D, D), phenotype(D, G) )
%   | | | then return 0.39346798452902043;  // std dev = 1.380, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.13084427139252955;  // std dev = 2.800, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | else if ( interaction(H, D), phenotype(H, I) )
%   | | | then return 0.07719276259515817;  // std dev = 6.955, 222.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=71 */
%   | | | else return 0.1937324734702005;  // std dev = 2.406, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else if ( enzyme(A, J) )
%   | | then if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.016737459551802725;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.019700945079377363;  // std dev = 1.131, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.11132220677429276;  // std dev = 1.180, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( phenotype(C, D), complex(C, E) )
%   | then if ( interaction(C, A), phenotype(A, D) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.4635077758189576;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.11083041053446596;  // std dev = 1.102, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.0017888325529881878;  // std dev = 0.438, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else return 0.5244463927284966;  // std dev = 0.402, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else if ( complex(A, F) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then return -0.0341712900550797;  // std dev = 0.436, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | else return 0.05599693213570665;  // std dev = 0.473, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then return -0.019709819320455065;  // std dev = 0.458, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.2712423163823719;  // std dev = 1.821, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.10784493741037765;  // std dev = 5.189, 116.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=42 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.16307327022882387;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( enzyme(D, G), phenotype(A, H) )
%   | | | then return 0.018250945155328567;  // std dev = 2.018, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return -0.06853745848911152;  // std dev = 3.038, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | else if ( location(A, I) )
%   | | | then return 0.059960444007652165;  // std dev = 6.356, 181.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=61 */
%   | | | else return 0.2462125939476443;  // std dev = 1.661, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( interaction(K, A) )
%   | | | then return -0.1648816925575436;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.2431774358352147;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return 0.26600060813485854;  // std dev = 0.845, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.03144750124336708;  // std dev = 3.208, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then if ( enzyme(C, F), interaction(E, E) )
%   | | then if ( enzyme(E, G) )
%   | | | then return 0.01245427127147869;  // std dev = 1.447, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.312355222848387;  // std dev = 1.051, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.027204687401792316;  // std dev = 0.455, 86.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=25 */
%   | else if ( location(A, H), phenotype(C, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.2712454835433861;  // std dev = 2.504, 27.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   | | | else return 0.0397828518212374;  // std dev = 4.905, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
%   | | else if ( complex(A, K), location(A, L) )
%   | | | then return -0.07975632882243981;  // std dev = 1.756, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.03991634687728783;  // std dev = 2.943, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   else if ( phenotype(A, M), complex(A, N) )
%   | then return -0.22001334003249165;  // std dev = 0.441, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return -0.10253575988385918;  // std dev = 0.466, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.24022103319581029;  // std dev = 0.032, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, D), enzyme(A, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( complex(F, H) )
%   | | | then return 0.11319909999880742;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.0301991752878083;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( complex(I, D), interaction(I, J) )
%   | | | then return -0.11499263308492602;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.03993179524656917;  // std dev = 1.997, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( interaction(K, A), enzyme(A, L) )
%   | | then if ( complex(K, M), phenotype(K, N) )
%   | | | then return 0.08385784766048172;  // std dev = 3.116, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return 0.3232468435992459;  // std dev = 1.076, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, P), interaction(Q, A) )
%   | | | then return 0.0771897287262254;  // std dev = 5.113, 108.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=42 */
%   | | | else return 0.009039954793501835;  // std dev = 4.567, 94.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=31 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), complex(E, G) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.11129693305392066;  // std dev = 1.534, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.1707166976401331;  // std dev = 2.706, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( interaction(H, E), location(A, I) )
%   | | | then return -0.018857027001561916;  // std dev = 5.313, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
%   | | | else return -0.17039467161040753;  // std dev = 1.259, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( complex(A, J), enzyme(A, K) )
%   | | then if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.09331745212092703;  // std dev = 1.083, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4512929980083026;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return 0.2495289509821135;  // std dev = 1.391, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.04213189432832252;  // std dev = 4.665, 95.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.767', 'seconds']
Refined model CLL: -0.42319


******************************************
Best model found
******************************************
Results 

CLL : -0.370163 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 16.425 

Total Inference Time : 7.775307655334473 

Total revision time: 28.2841577167511
Best scored revision CLL: -0.369248


Results 

CLL : -0.370163 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 28.31412812423706 

Total Inference Time : 7.775307655334473 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.635
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17982725677783404;  // std dev = 7.900, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17058537519072026;  // std dev = 7.817, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15841976988561135;  // std dev = 7.742, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12508549245038925;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1176484631678928;  // std dev = 7.702, 259.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08504329052503685;  // std dev = 7.765, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0547353481265134;  // std dev = 7.846, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.054732291058368014;  // std dev = 7.780, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03232462484919185;  // std dev = 7.846, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.047065885944756365;  // std dev = 7.718, 261.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.791', 'seconds']
Parameter learned model CLL:-0.382267 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.9, 194, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.817, 182, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.742, 172, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.788, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.702, 167, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.765, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.846, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.78, 177, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.846, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.718, 169, 92]}]
{'': [0.0, 0.2182013790405408], 'false': [nan, 0.2182013790405408], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22302733230326646], 'false': [nan, 0.2230273323032663], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22704315886134094], 'false': [nan, 0.22704315886134094], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22463648834019107], 'false': [nan, 0.22463648834019154], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22903653791684725], 'false': [nan, 0.22903653791684578]}
{'': [0.0, 0.22584129388825697], 'false': [nan, 0.22584129388825697], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2214171109155847], 'false': [nan, 0.2214171109155847], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2250383493871013], 'false': [nan, 0.22503834938710152], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22141711091558403], 'false': [nan, 0.22141711091558217], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22824092423775252], 'false': [nan, 0.22824092423775252], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 8.175
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, E), enzyme(D, F) )
%   | | then if ( enzyme(A, F), interaction(A, G) )
%   | | | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.13265873902107989;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | else if ( interaction(A, A) )
%   | | then if ( location(A, H) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.2110901115701006;  // std dev = 3.413, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | | else return 0.2727830814409745;  // std dev = 4.461, 82.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(D, G), enzyme(G, H) )
%   | | | then return 0.2850555479169246;  // std dev = 1.484, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.1561201754841589;  // std dev = 2.001, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( interaction(D, I), complex(D, J) )
%   | | | then return 0.04210228254821677;  // std dev = 3.312, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | | | else return 0.17161353151610653;  // std dev = 2.564, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then if ( interaction(L, M), enzyme(M, N) )
%   | | | then return 0.823051278530694;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.26801295687571147;  // std dev = 2.105, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( phenotype(A, P) )
%   | | | then return 0.16339186976838715;  // std dev = 3.370, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | | else return 0.23031094864727766;  // std dev = 4.239, 75.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=30 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( complex(E, F), phenotype(D, G) )
%   | | | then return 0.10825793490200702;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.5990501651411524;  // std dev = 0.881, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(D, H), complex(A, H) )
%   | | | then return 0.04891565791944904;  // std dev = 1.520, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.17333211884787886;  // std dev = 2.643, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | else if ( enzyme(A, I) )
%   | | then if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.0038412129876860854;  // std dev = 2.507, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.09650176207000949;  // std dev = 3.769, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.08947917716787532;  // std dev = 4.635, 105.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=30 */
%   | | | else return 0.26155024797635007;  // std dev = 2.610, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, A) )
%   | then if ( complex(A, D), phenotype(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.0953780012354117;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.01449313008221062;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.18669951030031534;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.03774299179116608;  // std dev = 1.199, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.09452008141600649;  // std dev = 2.638, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.23570865726536558;  // std dev = 3.728, 56.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=25 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.024448218541006178;  // std dev = 1.769, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.11908963837775458;  // std dev = 5.579, 138.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=48 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then return 0.01464552953775419;  // std dev = 0.458, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.23074680338693754;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.006913738006760428;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.4288401197262924;  // std dev = 1.111, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(H, A), enzyme(H, I) )
%   | then return -0.02122074873773847;  // std dev = 0.435, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( interaction(K, A), complex(J, L) )
%   | | | then return 0.39061121022343354;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.0967923180251908;  // std dev = 2.699, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | else if ( enzyme(A, M), phenotype(A, N) )
%   | | | then return 0.1884771146667121;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.055903731229850845;  // std dev = 5.762, 154.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=48 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11378486972966438;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( complex(A, H), interaction(I, F) )
%   | | | then return 0.013812934766325738;  // std dev = 2.617, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.15206349542127864;  // std dev = 2.047, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.0981815657130459;  // std dev = 2.774, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.2410630422576673;  // std dev = 1.870, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( location(A, K), phenotype(A, L) )
%   | | then if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.054930380459305005;  // std dev = 2.497, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.18597616199593425;  // std dev = 2.450, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( interaction(P, A), phenotype(P, Q) )
%   | | | then return 0.1099812234682974;  // std dev = 2.868, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return 0.008903271744001004;  // std dev = 4.038, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14776483414781058;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), interaction(F, G) )
%   | | then if ( interaction(G, H) )
%   | | | then return 0.12955421961079636;  // std dev = 3.131, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | | else return -0.06539097294232184;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return 0.38607359629576027;  // std dev = 1.161, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.049040835697322725;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then if ( phenotype(A, M), interaction(L, K) )
%   | | | then return 0.09522486095982406;  // std dev = 2.576, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return -0.031163888722986813;  // std dev = 3.953, 81.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=21 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.11393657292061168;  // std dev = 2.589, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.050993047259649725;  // std dev = 4.097, 76.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( complex(D, F), complex(E, F) )
%   | | then if ( interaction(E, D) )
%   | | | then return -0.04163051030588499;  // std dev = 4.021, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   | | | else return -0.19241110390481886;  // std dev = 1.286, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( phenotype(D, G), complex(E, H) )
%   | | | then return 0.3830299085757611;  // std dev = 1.137, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.004577109593015472;  // std dev = 3.399, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | else if ( enzyme(A, I), complex(A, J) )
%   | | then if ( complex(K, J), interaction(K, L) )
%   | | | then return 0.22749524622430753;  // std dev = 1.790, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.048073359420081625;  // std dev = 1.731, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.033353114344857146;  // std dev = 3.471, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return 0.08803086931268335;  // std dev = 3.362, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10928176423174425;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D) )
%   | then if ( complex(E, D), interaction(A, E) )
%   | | then if ( phenotype(A, F), enzyme(A, G) )
%   | | | then return 0.07219322035590423;  // std dev = 1.381, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.05668506463476129;  // std dev = 3.104, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | else if ( complex(H, D), interaction(H, I) )
%   | | | then return 0.06349514854934932;  // std dev = 2.992, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | | else return -0.021018802628524572;  // std dev = 3.042, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(K, J), complex(K, L) )
%   | | | then return 0.025705783336436767;  // std dev = 3.325, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return 0.14462318739957894;  // std dev = 3.055, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.18612934133482917;  // std dev = 1.484, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.0634033208013448;  // std dev = 2.838, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08453833109254803;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(A, F) )
%   | | then if ( location(D, G), location(A, G) )
%   | | | then return -0.07611131664292445;  // std dev = 2.962, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return -0.013766794308350807;  // std dev = 1.637, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(H, D) )
%   | | | then return -0.006424065900248677;  // std dev = 3.612, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | | else return 0.14900530268392187;  // std dev = 1.402, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.2001925117093165;  // std dev = 2.142, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.03548869753517104;  // std dev = 3.757, 60.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.0638885751014089;  // std dev = 2.351, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.03953151529118282;  // std dev = 3.221, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.388', 'seconds']
Refined model CLL: -0.399246


******************************************
Best model found
******************************************
Results 

CLL : -0.382404 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.175 

Total Inference Time : 3.344327926635742 

Total revision time: 15.741889057159424
Best scored revision CLL: -0.382267


Results 

CLL : -0.382404 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 15.771859464645386 

Total Inference Time : 3.344327926635742 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.546
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23044330739388497;  // std dev = 7.347, 231.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13818971618830847;  // std dev = 7.701, 277.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14305171717450765;  // std dev = 7.557, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14369452880071049;  // std dev = 7.420, 239.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11389890106740536;  // std dev = 7.446, 242.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07563849074548121;  // std dev = 7.542, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0326056425887231;  // std dev = 7.701, 277.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.030564999263746895;  // std dev = 7.675, 273.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03381303016157358;  // std dev = 7.622, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.050441605044341566;  // std dev = 7.487, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.699', 'seconds']
Parameter learned model CLL:-0.372903 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.347, 145, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.701, 191, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.557, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.42, 153, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.446, 156, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.542, 168, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.701, 191, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.675, 187, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.622, 179, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.487, 161, 86]}]
{'': [0.0, 0.23369127265231215], 'false': [nan, 0.23369127265231215], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21407811909447344], 'false': [nan, 0.21407811909447358], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22308349609374944], 'false': [nan, 0.22308349609374944], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23035311006459847], 'false': [nan, 0.23035311006459816], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22908271292944457], 'false': [nan, 0.22908271292944404], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22394444788889498], 'false': [nan, 0.22394444788889498], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2140781190944758], 'false': [nan, 0.2140781190944758]}
{'': [0.0, 0.21578177622133568], 'false': [nan, 0.2157817762213353], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.219209683161267], 'false': [nan, 0.21920968316126613]}
{'': [0.0, 0.22695012211313073], 'false': [nan, 0.22695012211313073], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 8.704
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, F), enzyme(A, G) )
%   | | then if ( phenotype(A, H), phenotype(D, I) )
%   | | | then return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.23314893509951218;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(A, J), enzyme(D, K) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.26723984419042146;  // std dev = 3.994, 66.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=27 */
%   | else if ( interaction(A, L), enzyme(L, M) )
%   | | then if ( enzyme(A, M) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.3126943896449669;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return 0.23314893509951234;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.11740819435877149;  // std dev = 4.554, 108.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=28 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( interaction(A, F) )
%   | | then if ( phenotype(F, G), enzyme(F, H) )
%   | | | then return 0.3809318219969758;  // std dev = 1.476, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.12012391680362929;  // std dev = 2.225, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.6345546822058792;  // std dev = 0.908, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.44324742396579825;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( enzyme(A, K), complex(A, L) )
%   | | then return 0.5046096957165682;  // std dev = 1.146, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.12371125347889803;  // std dev = 5.991, 172.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=51 */
%   | | | else return 0.2083461510351282;  // std dev = 2.723, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( phenotype(D, E), enzyme(A, F) )
%   | | then if ( phenotype(A, E) )
%   | | | then return -0.029151918552436432;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.06874854553334413;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(A, A), complex(A, G) )
%   | | | then return 0.025838109444613823;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.14818809152196052;  // std dev = 3.223, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then if ( complex(J, I), interaction(J, J) )
%   | | | then return 0.05361588722239153;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.36797845254564343;  // std dev = 2.163, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.09195402437630347;  // std dev = 3.509, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | | else return 0.18478187949825473;  // std dev = 4.546, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( interaction(A, F), complex(A, G) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.22467202343380924;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.06300172536068867;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.012263558620584284;  // std dev = 1.922, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.06647945743768902;  // std dev = 2.638, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( location(K, M), location(A, M) )
%   | | | then return 0.08767560109463306;  // std dev = 5.114, 122.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=38 */
%   | | | else return 0.19149379270924652;  // std dev = 1.877, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( location(A, N), interaction(A, P) )
%   | | | then return 0.09151466113550408;  // std dev = 3.054, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return 0.2903825154262307;  // std dev = 2.123, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), phenotype(A, G) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.31550860305674133;  // std dev = 1.973, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.16427974174887877;  // std dev = 3.115, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.18215379046756244;  // std dev = 1.724, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.07156167451813066;  // std dev = 4.194, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( enzyme(A, K), enzyme(I, K) )
%   | | | then return -0.06941113821291459;  // std dev = 1.229, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.10283855669620719;  // std dev = 3.512, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.07654399809197131;  // std dev = 1.281, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.028760302992848086;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(D, E) )
%   | | then if ( interaction(A, F) )
%   | | | then return -0.00665330828430304;  // std dev = 1.478, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.08641805935981209;  // std dev = 1.407, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( enzyme(A, G), location(A, H) )
%   | | | then return 0.06081626863288788;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3277975839619402;  // std dev = 1.822, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( enzyme(A, J), complex(I, K) )
%   | | | then return 0.19539646821314283;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.020813714850568175;  // std dev = 3.698, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | else if ( location(A, L) )
%   | | | then return 0.06094223936213113;  // std dev = 5.623, 143.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=47 */
%   | | | else return 0.2272479932930796;  // std dev = 1.004, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( complex(A, E), phenotype(D, F) )
%   | then if ( phenotype(A, F), complex(D, E) )
%   | | then if ( interaction(D, D), interaction(G, A) )
%   | | | then return 0.014145926998220038;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2898457805511212;  // std dev = 1.064, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.09037947305361745;  // std dev = 0.427, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( phenotype(H, C), phenotype(D, I) )
%   | | | then return 0.39061261070501835;  // std dev = 1.078, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.08549280899184494;  // std dev = 2.770, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | else return 0.574638820242655;  // std dev = 0.902, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(J, A), interaction(K, J) )
%   | then if ( phenotype(K, L), interaction(M, K) )
%   | | then return 0.07624884709835346;  // std dev = 0.480, 71.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=26 */
%   | | else return -0.020746754700261362;  // std dev = 0.446, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | else return -0.024747800425377005;  // std dev = 0.438, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, H), interaction(H, H) )
%   | | | then return -0.14628486405350935;  // std dev = 1.559, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.007970750049110886;  // std dev = 1.797, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(A, I), phenotype(A, J) )
%   | | | then return 0.1203223139296959;  // std dev = 1.725, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.01863890121017334;  // std dev = 4.049, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
%   | else if ( interaction(A, K) )
%   | | then if ( phenotype(K, L), location(A, M) )
%   | | | then return 0.05018837608625509;  // std dev = 3.843, 64.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   | | | else return -0.06653354445588809;  // std dev = 2.279, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.07506580017216466;  // std dev = 3.178, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return 0.2347509610720789;  // std dev = 1.407, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( phenotype(C, E), interaction(F, C) )
%   | then return -0.08013931822267888;  // std dev = 0.444, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | else if ( phenotype(A, G) )
%   | | then return 0.21144774148655268;  // std dev = 0.510, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.014775802837540295;  // std dev = 0.455, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( interaction(H, A), interaction(A, I) )
%   | then if ( phenotype(I, J), interaction(A, A) )
%   | | then return 0.522672184162191;  // std dev = 0.866, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(K, H) )
%   | | | then return -0.004160195928880136;  // std dev = 3.448, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | | else return 0.19714502334765416;  // std dev = 1.574, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( phenotype(A, L), interaction(A, M) )
%   | | then return -0.0877032212600232;  // std dev = 0.445, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return -1.1359799084302291E-4;  // std dev = 3.547, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return 0.0907616288351919;  // std dev = 3.140, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14653489344124;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( enzyme(D, F) )
%   | | then if ( interaction(G, A), enzyme(G, F) )
%   | | | then return -0.1658976305669188;  // std dev = 1.222, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3233410157225941;  // std dev = 1.354, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(D, H), interaction(H, I) )
%   | | | then return 0.012185663050956638;  // std dev = 3.462, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return -0.12627075781373928;  // std dev = 1.560, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( enzyme(A, J), complex(A, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return -0.20224108756366976;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.0010431083699914535;  // std dev = 1.402, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(M, A), location(A, N) )
%   | | | then return 0.0958261599000171;  // std dev = 5.270, 116.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=46 */
%   | | | else return -0.013784202662832607;  // std dev = 2.056, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.618', 'seconds']
Refined model CLL: -0.422703


******************************************
Best model found
******************************************
Results 

CLL : -0.372236 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.704 

Total Inference Time : 3.543860673904419 

Total revision time: 16.05034637451172
Best scored revision CLL: -0.372903


Results 

CLL : -0.372236 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 16.08031678199768 

Total Inference Time : 3.543860673904419 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.63
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20614893509951235;  // std dev = 7.532, 250.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1921530818869181;  // std dev = 7.456, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12467541679480497;  // std dev = 7.679, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1474887435976045;  // std dev = 7.430, 238.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09559660745055854;  // std dev = 7.578, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.051757917171594926;  // std dev = 7.725, 277.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0687168932019068;  // std dev = 7.571, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0777248914234438;  // std dev = 7.438, 239.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02340942496220179;  // std dev = 7.658, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.042002974186620606;  // std dev = 7.523, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.819', 'seconds']
Parameter learned model CLL:-0.384125 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.532, 163, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.456, 154, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.679, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.43, 151, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.578, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.725, 190, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.571, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.438, 152, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.658, 180, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.523, 162, 87]}]
{'': [0.0, 0.22689600000000082], 'false': [nan, 0.22689600000000082], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23067784645581044], 'false': [nan, 0.23067784645580997], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.218395061728394], 'false': [nan, 0.218395061728394], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2319221806369621], 'false': [nan, 0.23192218063696207]}
{'': [0.0, 0.2243499755859382], 'false': [nan, 0.22434997558593767], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21543353881844], 'false': [nan, 0.21543353881844], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22477508650518982], 'false': [nan, 0.22477508650518982], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.231508552021148], 'false': [nan, 0.23150855202114615], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21966923368261498], 'false': [nan, 0.21966923368261534], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2273189142110619], 'false': [nan, 0.2273189142110619], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 13.646
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(E, F), complex(F, D) )
%   | | | then return 0.17814893509951235;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.3126943896449669;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( complex(H, I), complex(A, I) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.16997689208876043;  // std dev = 6.318, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.124815601766179;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( phenotype(D, F), location(A, E) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.21920464621738153;  // std dev = 2.568, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.0787889235844628;  // std dev = 4.584, 112.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=28 */
%   | | else if ( enzyme(A, H), location(A, E) )
%   | | | then return 0.3361728043042094;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.15582689463164812;  // std dev = 4.665, 100.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=32 */
%   | else if ( enzyme(A, I) )
%   | | then if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.22342421142951308;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.14900684831618788;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.4398286092763444;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), phenotype(E, G) )
%   | | then if ( complex(D, H) )
%   | | | then return 0.1419261722382849;  // std dev = 1.805, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.5669432965906803;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, I), interaction(D, J) )
%   | | | then return 0.13329922925566048;  // std dev = 2.707, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0.03966843322360162;  // std dev = 3.920, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | else if ( interaction(K, A), location(K, L) )
%   | | then if ( location(A, L), phenotype(K, M) )
%   | | | then return 0.11126128154115668;  // std dev = 3.566, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.2331358773583793;  // std dev = 3.644, 54.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=23 */
%   | | else if ( interaction(A, N) )
%   | | | then return 0.14661367002762501;  // std dev = 1.789, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.011001929427814404;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( interaction(C, A), phenotype(C, E) )
%   | | then if ( complex(C, F), interaction(A, A) )
%   | | | then return 0.04774861113721673;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3144611429144586;  // std dev = 1.807, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else return 0.07689036419912579;  // std dev = 0.454, 89.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=26 */
%   | else if ( enzyme(A, G) )
%   | | then if ( phenotype(C, H) )
%   | | | then return 0.3076058161775632;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4684157659219795;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(I, C), enzyme(I, J) )
%   | | | then return 0.26002175597657384;  // std dev = 1.005, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.14324574812878016;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   else if ( interaction(K, A), complex(K, L) )
%   | then return 0.0913923725819286;  // std dev = 0.460, 76.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
%   | else return 0.05645833286062193;  // std dev = 0.450, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, A), phenotype(D, F) )
%   | | then if ( interaction(G, D), interaction(G, G) )
%   | | | then return -0.24565356842054406;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.1113278896794458;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(H, A), complex(D, I) )
%   | | | then return 0.00796461939896208;  // std dev = 2.421, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.10192122516542691;  // std dev = 2.303, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | else if ( complex(A, J), enzyme(A, K) )
%   | | then if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.13890748989097368;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4168044573611251;  // std dev = 1.577, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.1270145952706436;  // std dev = 4.580, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
%   | | | else return 0.06046407606628716;  // std dev = 4.366, 92.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=27 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, D) )
%   | | then if ( interaction(A, A), enzyme(E, F) )
%   | | | then return 0.07338115991997779;  // std dev = 1.604, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.2832109675692331;  // std dev = 2.316, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | else if ( enzyme(E, G), enzyme(D, G) )
%   | | | then return -0.09049654478032464;  // std dev = 1.292, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.10916678753349757;  // std dev = 3.676, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( enzyme(J, H), interaction(J, K) )
%   | | | then return 0.08149198414018635;  // std dev = 2.263, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.25475545249434284;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.09379540585637833;  // std dev = 1.978, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.02257557908578572;  // std dev = 4.821, 115.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( phenotype(D, E), phenotype(A, E) )
%   | | then if ( interaction(D, F), enzyme(F, G) )
%   | | | then return 0.08046754798273877;  // std dev = 2.162, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.1858699426907327;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, H), location(A, I) )
%   | | | then return -0.12174782540745542;  // std dev = 1.579, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return -0.007767956602073369;  // std dev = 1.892, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), interaction(K, K) )
%   | | | then return 0.07849630434721525;  // std dev = 6.540, 189.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=65 */
%   | | | else return -0.051828480207770145;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.07619437422275088;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.0022172836542305174;  // std dev = 1.152, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, D), enzyme(A, F) )
%   | | then if ( phenotype(D, G) )
%   | | | then return 0.10785907647096267;  // std dev = 1.297, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.23380819542075798;  // std dev = 1.014, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, D) )
%   | | | then return -0.06140068758997411;  // std dev = 2.821, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.04853114159313484;  // std dev = 4.012, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | else if ( complex(A, H) )
%   | | then if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.07522677253432863;  // std dev = 1.250, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.094511311906135;  // std dev = 2.817, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.17860219256841542;  // std dev = 2.739, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.08543166734765109;  // std dev = 3.420, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15271995220484272;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(A, D) )
%   | | then if ( location(A, F) )
%   | | | then return -0.02311193075543242;  // std dev = 3.492, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | | else return -0.27602865883436667;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( complex(D, G), complex(A, H) )
%   | | | then return 0.09533690189964521;  // std dev = 3.378, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | | | else return 0.017643777852071052;  // std dev = 5.443, 137.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=43 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.019418066812605318;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.19841324547493086;  // std dev = 1.324, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.030183135339544382;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.06987978760929658;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14778537821178447;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.33238993138259626;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.024129196197260765;  // std dev = 2.277, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.008777043930171308;  // std dev = 2.205, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.04787470265291699;  // std dev = 4.286, 94.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=25 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), enzyme(H, K) )
%   | | | then return -0.16909555942454693;  // std dev = 1.268, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.07311354291832503;  // std dev = 3.654, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return -0.08207863626668609;  // std dev = 1.211, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.1947402961461999;  // std dev = 3.197, 41.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.467', 'seconds']
Refined model CLL: -0.391592


******************************************
Best model found
******************************************
Results 

CLL : -0.383526 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.646 

Total Inference Time : 6.265162467956543 

Total revision time: 23.92802832221985
Best scored revision CLL: -0.384125


Results 

CLL : -0.383526 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 24.035528875350952 

Total Inference Time : 6.265162467956543 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.596
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1752221058312202;  // std dev = 8.428, 328.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19407369586041667;  // std dev = 8.167, 290.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13508672408618588;  // std dev = 8.359, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12946734814147035;  // std dev = 8.257, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10343203464097896;  // std dev = 8.279, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0981584388302963;  // std dev = 8.191, 293.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08142211029286443;  // std dev = 8.175, 291.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04404155406848658;  // std dev = 8.306, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.061911150162433724;  // std dev = 8.135, 286.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02273540283874149;  // std dev = 8.300, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.250', 'seconds']
Parameter learned model CLL:-0.38802 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.428, 224, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.167, 186, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.359, 213, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.257, 198, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.279, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.191, 189, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.175, 187, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.306, 205, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.135, 182, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.3, 204, 104]}]
{'': [0.0, 0.21653777513384953], 'false': [nan, 0.21653777513384953], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23001189060641977], 'false': [nan, 0.23001189060642377], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22044203843206625], 'false': [nan, 0.22044203843206625], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22577957107144545], 'false': [nan, 0.22577957107144533], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22471378661650104], 'false': [nan, 0.22471378661650354]}
{'': [nan, 0.22896015096273542], 'false': [nan, 0.22896015096273542]}
{'': [0.0, 0.2296619076298099], 'false': [nan, 0.2296619076298099], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2232904975859081], 'false': [nan, 0.22329049758590894], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23140495867768474], 'false': [nan, 0.23140495867768424], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2236464833867433], 'false': [nan, 0.2236464833867433], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 14.96
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( enzyme(D, F), complex(A, G) )
%   | | then if ( phenotype(A, H), interaction(D, I) )
%   | | | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.45814893509951227;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else if ( location(D, E), interaction(J, A) )
%   | | | then return 0.25004082699140295;  // std dev = 4.199, 74.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=29 */
%   | | | else return 0.14981560176617895;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( phenotype(K, M), phenotype(A, N) )
%   | | | then return 0.17158177092040747;  // std dev = 3.797, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | | | else return 0.09191516886574612;  // std dev = 3.714, 77.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=18 */
%   | | else if ( location(A, P) )
%   | | | then return 0.3364098046647297;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.09344305274657114;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( location(A, D) )
%   | then if ( enzyme(A, E), interaction(F, A) )
%   | | then if ( enzyme(F, E), complex(F, G) )
%   | | | then return 0.40258924669310053;  // std dev = 1.315, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.1739362186857794;  // std dev = 3.961, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.15058368842097047;  // std dev = 6.158, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
%   | | | else return 0.10250064349692818;  // std dev = 3.069, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | else if ( interaction(A, J) )
%   | | then return 0.513188198998595;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.14225434571023438;  // std dev = 1.451, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.34638917099336153;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(D, D) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.12643772856138827;  // std dev = 2.592, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.36764111007303957;  // std dev = 1.112, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(D, F), complex(A, G) )
%   | | | then return -0.02752736945299714;  // std dev = 1.816, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.12778875294311426;  // std dev = 2.709, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then if ( interaction(A, J), complex(J, I) )
%   | | | then return 0.1395588731203442;  // std dev = 1.401, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.35033583991785633;  // std dev = 2.220, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | else if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.18243520732554833;  // std dev = 4.202, 75.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
%   | | | else return 0.11329621508221947;  // std dev = 4.860, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( location(D, E), enzyme(A, F) )
%   | | then if ( phenotype(D, G) )
%   | | | then return 0.08007174278406459;  // std dev = 2.727, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return -0.11548204077088191;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( location(D, E), interaction(H, A) )
%   | | | then return 0.17735275204461928;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=32 */
%   | | | else return 0.46335066384836193;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( complex(A, K), complex(I, L) )
%   | | | then return 0.008163596202618166;  // std dev = 2.148, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.07795687343520957;  // std dev = 5.118, 125.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=37 */
%   | | else if ( location(A, M) )
%   | | | then return 0.24043870421982663;  // std dev = 2.315, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return -0.05349229067821833;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( location(A, E) )
%   | then if ( phenotype(C, F), complex(A, D) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.09229805312598337;  // std dev = 2.281, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return -0.013799552735068133;  // std dev = 1.945, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( interaction(C, C), location(C, E) )
%   | | | then return 0.04601273106415555;  // std dev = 2.660, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.13660659029328132;  // std dev = 5.895, 149.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=56 */
%   | else return -0.020722265669307637;  // std dev = 0.415, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then return 0.32309568415765827;  // std dev = 1.154, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(A, L) )
%   | | | then return -0.03435641339346267;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2180749932473088;  // std dev = 1.481, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return -0.028977267628084506;  // std dev = 0.430, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( complex(C, E), interaction(C, F) )
%   | then return 0.016155392790010735;  // std dev = 0.460, 87.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=26 */
%   | else return 0.2007274208109374;  // std dev = 1.240, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, G), phenotype(G, H) )
%   | then if ( enzyme(A, I), interaction(J, A) )
%   | | then if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.011196094173390096;  // std dev = 1.644, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.13255660562585794;  // std dev = 1.326, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( phenotype(A, H), enzyme(G, L) )
%   | | | then return 0.09798093093397106;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.2878685234094061;  // std dev = 1.973, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else if ( phenotype(A, M), location(A, N) )
%   | | then if ( location(P, N), interaction(P, A) )
%   | | | then return 0.09735683067166667;  // std dev = 4.005, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
%   | | | else return 0.22066545784818342;  // std dev = 1.423, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.035821262637044736;  // std dev = 0.453, 95.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=27 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( complex(A, F), interaction(G, A) )
%   | | then if ( location(A, H), location(G, H) )
%   | | | then return 0.11062177225853952;  // std dev = 1.894, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.0885700490693292;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(I, E), interaction(I, I) )
%   | | | then return -0.03217368355333391;  // std dev = 2.924, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0.09599420355500021;  // std dev = 1.140, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(J, A), interaction(A, K) )
%   | | then if ( interaction(K, K), complex(J, L) )
%   | | | then return 0.13971039945198901;  // std dev = 3.091, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | | else return 0.01634692143598679;  // std dev = 3.877, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.11391727396022808;  // std dev = 5.129, 111.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=42 */
%   | | | else return 0.3927955518939121;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10911204563896101;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), phenotype(A, G) )
%   | | then if ( interaction(D, A), enzyme(F, E) )
%   | | | then return -0.06222423017206787;  // std dev = 1.943, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.07791000096108298;  // std dev = 2.377, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.030720787468793694;  // std dev = 2.642, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return -0.17772724463214873;  // std dev = 1.275, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( phenotype(A, K), phenotype(J, K) )
%   | | | then return -0.003298818215588368;  // std dev = 4.439, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
%   | | | else return 0.07303223053697773;  // std dev = 5.191, 118.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=42 */
%   | | else if ( location(A, L) )
%   | | | then return -0.006437625657224749;  // std dev = 2.004, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.1097900198088861;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( complex(A, G), complex(D, G) )
%   | | | then return -0.019219459087466563;  // std dev = 2.065, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return -0.09872229468149488;  // std dev = 2.348, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else if ( phenotype(D, E), enzyme(D, H) )
%   | | | then return 0.2218859693841786;  // std dev = 1.565, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.02274617414247842;  // std dev = 3.437, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), complex(J, K) )
%   | | | then return -0.01322257794722418;  // std dev = 3.496, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | | else return 0.07612750415082224;  // std dev = 1.783, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.07262371080752418;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.09918225570158615;  // std dev = 5.198, 112.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=45 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10565031268026288;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(D, F), interaction(A, D) )
%   | | then if ( location(A, G), location(D, G) )
%   | | | then return 0.049859081812132076;  // std dev = 3.135, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return 0.48683359903818263;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, H), phenotype(H, E) )
%   | | | then return -0.07432702312789001;  // std dev = 3.567, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | | else return 0.0048864449121281345;  // std dev = 5.873, 159.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=50 */
%   | else if ( complex(A, I), enzyme(A, J) )
%   | | then return 0.6396411358542887;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.0398273549046602;  // std dev = 1.481, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.16316353668918684;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.493', 'seconds']
Refined model CLL: -0.403874


******************************************
Best model found
******************************************
Results 

CLL : -0.388861 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 14.96 

Total Inference Time : 7.81045937538147 

Total revision time: 27.14854503250122
Best scored revision CLL: -0.38802


Results 

CLL : -0.388861 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 27.256045585632325 

Total Inference Time : 7.81045937538147 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.654
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21199508894566638;  // std dev = 7.710, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16366855618763967;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14056277462120093;  // std dev = 7.824, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12257483342570745;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10229120588776015;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08071701372801776;  // std dev = 7.803, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05299016463030699;  // std dev = 7.873, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.055583924236984515;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.030907015278847167;  // std dev = 7.873, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.026764764553266193;  // std dev = 7.859, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.399', 'seconds']
Parameter learned model CLL:-0.37105 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.71, 168, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.832, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.824, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.795, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.788, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.803, 180, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.873, 190, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.795, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.873, 190, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.859, 188, 92]}]
{'': [0.0, 0.2286390532544387], 'false': [nan, 0.2286390532544387], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22222222222222232], 'false': [nan, 0.22222222222222354], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2226247933884289], 'false': [nan, 0.2226247933884289], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22423441946596542], 'false': [nan, 0.2242344194659663], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22463648834019295], 'false': [nan, 0.2246364883401934]}
{'': [0.0, 0.22383217993079463], 'false': [nan, 0.22383217993079463], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21980785674764958], 'false': [nan, 0.21980785674764958]}
{'': [0.0, 0.22423441946596612], 'false': [nan, 0.22423441946596798], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21980785674764894], 'false': [nan, 0.21980785674764713]}
{'': [0.0, 0.220612244897959], 'false': [nan, 0.220612244897959], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 12.445
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(F, A), phenotype(F, E) )
%   | | then if ( complex(F, G) )
%   | | | then return 0.14386322081379807;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(D, H), interaction(H, H) )
%   | | | then return 0.20189893509951234;  // std dev = 2.687, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return 0.48972788246793336;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | else if ( enzyme(A, I) )
%   | | then if ( location(A, J) )
%   | | | then return 0.19661047356105021;  // std dev = 3.815, 65.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.1352573688344515;  // std dev = 4.078, 83.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=23 */
%   | | | else return 0.20189893509951234;  // std dev = 2.687, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, D), enzyme(A, E) )
%   | then if ( complex(F, D), interaction(F, G) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.5037300916255387;  // std dev = 0.813, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19159059217583077;  // std dev = 3.291, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | else if ( interaction(H, A), location(H, I) )
%   | | | then return 0.49915825188319124;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1658249185498579;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( location(A, J) )
%   | | then if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.09955162900380925;  // std dev = 3.906, 75.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=21 */
%   | | | else return 0.16306026905005705;  // std dev = 5.430, 133.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
%   | | else return 0.30874113578563506;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( complex(D, F), phenotype(D, G) )
%   | | then if ( interaction(H, A), phenotype(H, G) )
%   | | | then return 0.2556600059614515;  // std dev = 1.488, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.10597621548215211;  // std dev = 2.606, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( location(A, I), location(D, I) )
%   | | | then return 0.013596494180278893;  // std dev = 2.509, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.2076855153064133;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then if ( interaction(K, A) )
%   | | | then return 0.038906817674513726;  // std dev = 1.916, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.14197193103664002;  // std dev = 2.448, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.17859791698519875;  // std dev = 5.370, 125.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=46 */
%   | | | else return 0.36350015210460473;  // std dev = 1.831, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(D, F), enzyme(A, G) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.7649344572681177;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1883537978408249;  // std dev = 1.893, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( phenotype(A, H), location(D, I) )
%   | | | then return 0.08477870418106935;  // std dev = 2.992, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return 0.1890381604988948;  // std dev = 3.062, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(K, J), phenotype(K, L) )
%   | | | then return 0.2163137619995697;  // std dev = 2.588, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.028788130645054366;  // std dev = 3.880, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.11648605430177898;  // std dev = 2.653, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return 0.23179087480086108;  // std dev = 2.443, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( enzyme(C, D), phenotype(C, E) )
%   | then if ( interaction(F, A), interaction(C, C) )
%   | | then if ( complex(F, G) )
%   | | | then return -0.1337612396357382;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.10715043274289793;  // std dev = 1.391, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.37834762362491026;  // std dev = 1.337, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.10720805316331508;  // std dev = 1.383, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0.02552129855352346;  // std dev = 0.450, 138.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=39 */
%   else if ( interaction(I, A), location(I, J) )
%   | then if ( complex(A, K), complex(I, K) )
%   | | then return 0.012526313502506851;  // std dev = 0.441, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.26601041335222675;  // std dev = 2.493, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else return 0.11082112233985772;  // std dev = 3.869, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
%   | else return -0.12547062419566166;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11180235675221188;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(F, A), interaction(D, D) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.16392100018079422;  // std dev = 1.851, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.5150541606916008;  // std dev = 0.868, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(D, G), enzyme(A, H) )
%   | | | then return -0.01091660211664509;  // std dev = 2.197, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.15344324537399376;  // std dev = 3.429, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( interaction(K, I), enzyme(K, L) )
%   | | | then return 0.19135579582018442;  // std dev = 2.729, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.05255786556928714;  // std dev = 4.783, 106.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.009415435882490705;  // std dev = 2.054, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return -0.12402547122270872;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then return -0.024586353340301688;  // std dev = 0.455, 130.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=38 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( interaction(F, A), interaction(D, D) )
%   | | then if ( complex(F, E) )
%   | | | then return 0.0015350666258429385;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.09726243168470412;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(D, E), interaction(D, G) )
%   | | | then return 0.3634121959851946;  // std dev = 1.010, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1724229901564109;  // std dev = 1.487, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(A, H), phenotype(A, I) )
%   | | then if ( phenotype(H, J), location(A, K) )
%   | | | then return 0.027863266501343725;  // std dev = 1.683, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.2101077697345109;  // std dev = 1.368, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.02827633578332421;  // std dev = 4.649, 101.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=31 */
%   | | | else return -0.09524859090086638;  // std dev = 1.956, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( location(E, D), interaction(E, E) )
%   | | then if ( complex(A, F), enzyme(E, G) )
%   | | | then return -0.004099892771885848;  // std dev = 5.280, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
%   | | | else return 0.06236921535367949;  // std dev = 5.248, 120.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=42 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.009967915946352823;  // std dev = 1.451, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.10356008717287411;  // std dev = 1.813, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14482748979765525;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1195830223130966;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( phenotype(A, D) )
%   | then return -0.03425496354918037;  // std dev = 0.455, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( interaction(G, E), phenotype(G, F) )
%   | | | then return -0.004955505591336433;  // std dev = 1.160, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2306616159296427;  // std dev = 1.460, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0.021667181059246202;  // std dev = 0.466, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then return -0.054767834874261505;  // std dev = 0.452, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then if ( interaction(J, J), phenotype(A, L) )
%   | | | then return 0.03067402985922091;  // std dev = 1.843, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.1892246231719756;  // std dev = 2.932, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else if ( location(A, M) )
%   | | | then return 0.04444560421845922;  // std dev = 4.189, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | | | else return -0.10886627024059485;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09141706810243508;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), complex(F, G) )
%   | | then if ( complex(A, G), enzyme(A, H) )
%   | | | then return 0.13857528946251177;  // std dev = 1.320, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.08234239453228569;  // std dev = 3.796, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.20178752570747482;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.011879189873070843;  // std dev = 2.430, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( interaction(A, L) )
%   | | | then return 0.24318190461986852;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.04338428182312562;  // std dev = 1.951, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.15507124468994657;  // std dev = 1.644, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.014340725803808256;  // std dev = 5.567, 147.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=44 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.968', 'seconds']
Refined model CLL: -0.395222


******************************************
Best model found
******************************************
Results 

CLL : -0.371162 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.445 

Total Inference Time : 5.384115695953369 

Total revision time: 21.851659559249878
Best scored revision CLL: -0.37105


Results 

CLL : -0.371162 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 21.95916011238098 

Total Inference Time : 5.384115695953369 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.53
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18390651085708853;  // std dev = 7.615, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16375758506539273;  // std dev = 7.594, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1571318651417388;  // std dev = 7.495, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09775399692107153;  // std dev = 7.688, 275.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08193946271342756;  // std dev = 7.682, 274.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10706449080194835;  // std dev = 7.454, 243.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08517495255763029;  // std dev = 7.462, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.027302355981941417;  // std dev = 7.694, 276.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.048703058884903935;  // std dev = 7.542, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0071361078438814465;  // std dev = 7.719, 280.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.619', 'seconds']
Parameter learned model CLL:-0.363359 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.615, 178, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.594, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.495, 162, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.688, 189, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.682, 188, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.454, 157, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.462, 158, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.694, 190, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.542, 168, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.719, 194, 86]}]
{'': [0.0, 0.21963957759412367], 'false': [nan, 0.21963957759412367], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22093040325303562], 'false': [nan, 0.22093040325303615]}
{'': [nan, 0.22652185223725207], 'false': [nan, 0.22652185223725207]}
{'': [0.0, 0.214928925619834], 'false': [nan, 0.21492892561983365], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2153551068250847], 'false': [nan, 0.2153551068250844], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2286575555894267], 'false': [nan, 0.2286575555894267], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.22823165815641075], 'false': [nan, 0.22823165815641075], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [0.0, 0.21450325561856814], 'false': [nan, 0.21450325561856917], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22394444788889595], 'false': [nan, 0.22394444788889661], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21280612244897912], 'false': [nan, 0.21280612244897912]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 8.189
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, D), complex(D, E) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.06867525088898598;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.10814893509951222;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( location(A, G), location(D, G) )
%   | | | then return 0.24785481745245463;  // std dev = 5.687, 136.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=53 */
%   | | | else return 0.15226658215833588;  // std dev = 2.657, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.14386322081379804;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(D, E), interaction(D, D) )
%   | then if ( complex(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.18291512509470062;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.15855668025303565;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.6290721651029129;  // std dev = 0.899, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.34446743783575556;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( complex(D, H), phenotype(C, I) )
%   | | then if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.43099657419451826;  // std dev = 1.539, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.18395681514575252;  // std dev = 3.106, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | else return 0.1267528575116254;  // std dev = 0.457, 84.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=25 */
%   else if ( phenotype(A, L) )
%   | then return 0.16055654555351104;  // std dev = 0.474, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | else return 0.10827847357214002;  // std dev = 0.449, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), complex(D, E) )
%   | then return 0.10740294482105688;  // std dev = 0.468, 148.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=47 */
%   | else if ( phenotype(F, C), interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.13042063270806356;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2400002728323672;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.47613187205693047;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(H, A), enzyme(H, I) )
%   | then return 0.05386218489478836;  // std dev = 0.429, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.12823786022664285;  // std dev = 2.162, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.3080167051518489;  // std dev = 1.745, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return 0.439068404160663;  // std dev = 1.601, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.30680500342306755;  // std dev = 2.116, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1946615656036683;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( phenotype(D, F), interaction(G, A) )
%   | | then if ( enzyme(D, H) )
%   | | | then return 0.10706243177173534;  // std dev = 1.800, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.41121935952498534;  // std dev = 1.919, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else if ( interaction(D, D), phenotype(A, I) )
%   | | | then return 0.01122741072093029;  // std dev = 1.494, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.14256791010746928;  // std dev = 2.732, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( location(J, L), location(A, L) )
%   | | | then return 0.07311567349804679;  // std dev = 2.217, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.3613039350387635;  // std dev = 1.472, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.007447050972476115;  // std dev = 3.248, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | | else return 0.07335631219141883;  // std dev = 4.538, 96.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=30 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15100990675096393;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D), enzyme(A, E) )
%   | then if ( complex(A, F) )
%   | | then if ( phenotype(A, G), interaction(H, A) )
%   | | | then return 0.19914935565703362;  // std dev = 1.477, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.561294732338639;  // std dev = 0.888, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.33710097869960703;  // std dev = 1.278, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.06163502251345477;  // std dev = 3.201, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), interaction(J, L) )
%   | | | then return -0.0016200664715730966;  // std dev = 3.423, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | | else return 0.0799277488636018;  // std dev = 3.754, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
%   | | else if ( interaction(A, A), complex(A, M) )
%   | | | then return 0.24171762870404367;  // std dev = 1.012, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08564425166554702;  // std dev = 3.614, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13956224135843173;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( phenotype(D, F) )
%   | | then if ( location(A, G), location(D, G) )
%   | | | then return 0.060063327115264825;  // std dev = 3.415, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | | else return 0.338235681547011;  // std dev = 1.357, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(D, H), enzyme(H, I) )
%   | | | then return 0.021044123704970413;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.10404580771821094;  // std dev = 2.006, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( complex(K, L), interaction(A, M) )
%   | | | then return 0.2132464851032246;  // std dev = 2.472, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.035639684130830615;  // std dev = 4.416, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   | | else if ( location(A, N) )
%   | | | then return 0.24022307766739726;  // std dev = 2.603, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.04924915190552048;  // std dev = 1.166, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13419893272606684;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, A) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.4387126180730208;  // std dev = 0.878, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.11423206820596805;  // std dev = 1.548, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.03697762791957508;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( phenotype(H, I) )
%   | | | then return -0.028145794620290113;  // std dev = 1.476, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.08737101614971733;  // std dev = 1.944, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.046850998504289185;  // std dev = 4.149, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | | | else return 0.0025809551716525977;  // std dev = 5.533, 145.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=44 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12557207643065946;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(A, F), complex(D, F) )
%   | | then if ( enzyme(D, G) )
%   | | | then return 0.5002911096701155;  // std dev = 0.884, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.0859974466358111;  // std dev = 1.880, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.12203291184838293;  // std dev = 2.166, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.04795426958211765;  // std dev = 4.079, 70.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=26 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.14233189275326774;  // std dev = 3.088, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return 0.024740957185142527;  // std dev = 2.940, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | else if ( phenotype(A, M), enzyme(A, N) )
%   | | | then return 0.07915874898933437;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.23529689078200802;  // std dev = 2.219, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12307607448813927;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, E) )
%   | | then if ( phenotype(D, F) )
%   | | | then return -0.034190398819512656;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08143537910471445;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( complex(A, G), interaction(A, H) )
%   | | | then return 0.1209402309456523;  // std dev = 1.229, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.34592128091043317;  // std dev = 1.983, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(J, A), phenotype(A, K) )
%   | | | then return 0.16744241413595562;  // std dev = 2.308, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.006295931777746345;  // std dev = 4.515, 93.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=30 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.1080034901371288;  // std dev = 2.746, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return 0.02213640472343698;  // std dev = 3.500, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( phenotype(A, E) )
%   | then return -0.13897677754364132;  // std dev = 0.426, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | else return -0.04236929307493913;  // std dev = 0.481, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else if ( complex(A, F) )
%   | then if ( interaction(A, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.14649598165005595;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.13763245184459905;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(H, F), interaction(H, H) )
%   | | | then return 0.03673878050416184;  // std dev = 1.791, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.11694942845527513;  // std dev = 2.982, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then return -0.05176861143544925;  // std dev = 0.431, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.13884973520822413;  // std dev = 3.928, 62.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=28 */
%   | | | else return -0.01644298327192577;  // std dev = 2.772, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.840', 'seconds']
Refined model CLL: -0.426452


******************************************
Best model found
******************************************
Results 

CLL : -0.362666 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.189 

Total Inference Time : 3.3846147060394287 

Total revision time: 15.21808208847046
Best scored revision CLL: -0.363359


Results 

CLL : -0.362666 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 15.325582641601564 

Total Inference Time : 3.3846147060394287 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.484
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2006686201388824;  // std dev = 7.563, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15776761213093068;  // std dev = 7.658, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15121637806976163;  // std dev = 7.563, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12404973267755412;  // std dev = 7.578, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07999339614251984;  // std dev = 7.706, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08489445352450178;  // std dev = 7.594, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07117942326293313;  // std dev = 7.578, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.047920502172548736;  // std dev = 7.630, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07284687507968271;  // std dev = 7.430, 238.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.025328395836171153;  // std dev = 7.616, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.342', 'seconds']
Parameter learned model CLL:-0.380054 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.563, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.658, 180, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.563, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.578, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.706, 187, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.594, 171, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.578, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.63, 176, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.43, 151, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.616, 174, 87]}]
{'': [0.0, 0.22519995039990162], 'false': [nan, 0.22519995039990162], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21966923368261632], 'false': [nan, 0.21966923368261673]}
{'': [nan, 0.2251999503999006], 'false': [nan, 0.2251999503999006]}
{'': [0.0, 0.2243499755859383], 'false': [nan, 0.22434997558593864], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2167004102509461], 'false': [nan, 0.2167004102509469], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22349918875067637], 'false': [nan, 0.22349918875067637]}
{'': [nan, 0.2243499755859378], 'false': [nan, 0.2243499755859378]}
{'': [0.0, 0.2213708453208806], 'false': [nan, 0.22137084532087925], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23192218063696], 'false': [nan, 0.23192218063696018], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.222222222222222], 'false': [nan, 0.222222222222222]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 19.876
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( phenotype(E, G) )
%   | | | then return 0.19661047356105021;  // std dev = 3.815, 65.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | | | else return 0.35814893509951234;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( location(A, H), location(D, I) )
%   | | | then return 0.15492312864789934;  // std dev = 5.688, 155.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=46 */
%   | | | else return 0.04564893509951219;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( phenotype(A, D) )
%   | | then return 0.16582491854985784;  // std dev = 0.471, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.12937953616944098;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( complex(C, E), phenotype(A, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.2610630137879531;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.11820587093081023;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.26270100798476265;  // std dev = 1.310, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.5512737470144976;  // std dev = 1.198, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(A, J), interaction(J, J) )
%   | then if ( enzyme(A, K) )
%   | | then return 0.3206163605010798;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.4991582518831912;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.14771731202591967;  // std dev = 0.464, 204.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=64 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(D, D) )
%   | | then if ( interaction(D, E), phenotype(D, G) )
%   | | | then return 0.14141056702085106;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.31025400946774595;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.04923510492911075;  // std dev = 0.432, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | else if ( complex(A, H) )
%   | | then if ( interaction(I, D), complex(D, J) )
%   | | | then return 0.3171803335612271;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.14452479024795548;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( complex(D, K) )
%   | | | then return 0.3573159889463438;  // std dev = 1.653, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.6171803335612271;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, L), enzyme(L, M) )
%   | then return -0.0020192019407925606;  // std dev = 0.415, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | else return 0.1247811757925809;  // std dev = 0.467, 147.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=47 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.16116180639824207;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D), enzyme(A, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( location(A, H), location(F, H) )
%   | | | then return 0.05651110778958355;  // std dev = 1.475, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.4771275951624234;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.16498002750302784;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.022810908408221604;  // std dev = 2.354, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | else if ( interaction(A, K), interaction(L, A) )
%   | | then if ( phenotype(A, M), enzyme(K, N) )
%   | | | then return 0.28254105811267977;  // std dev = 1.867, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.07009364977142218;  // std dev = 4.508, 98.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=29 */
%   | | else if ( phenotype(A, P) )
%   | | | then return 0.06192964668761561;  // std dev = 3.172, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return 0.20272705431511626;  // std dev = 3.656, 55.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( enzyme(A, F) )
%   | | then if ( interaction(G, D), complex(G, H) )
%   | | | then return 0.06010934781328247;  // std dev = 3.103, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return -0.027837628881022085;  // std dev = 1.970, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( interaction(I, D), complex(I, E) )
%   | | | then return 0.056927561478743935;  // std dev = 3.844, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | | | else return 0.14182036663875075;  // std dev = 2.486, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(J, L), complex(L, M) )
%   | | | then return 0.24082822367777332;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.4513913054588068;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, N), interaction(A, P) )
%   | | | then return 0.01899793860926577;  // std dev = 1.901, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.12172726716438965;  // std dev = 4.145, 75.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=27 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then return 0.03776341446444982;  // std dev = 0.457, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | else return -0.07052150932969745;  // std dev = 0.398, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   else if ( enzyme(A, E), complex(A, F) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then return 0.35963013093779084;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.027773161155333737;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.22322493064486706;  // std dev = 1.929, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( phenotype(J, L) )
%   | | | then return 0.090356591669285;  // std dev = 4.046, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
%   | | | else return 0.2999872263251037;  // std dev = 1.326, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( location(A, M) )
%   | | | then return 0.03431138373588337;  // std dev = 4.336, 90.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
%   | | | else return 0.23884454400499433;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( enzyme(C, E), interaction(A, A) )
%   | then if ( phenotype(C, F) )
%   | | then return 0.3166225997241324;  // std dev = 1.108, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.010514173501031935;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(C, G), complex(C, H) )
%   | | then return -0.028704434075855174;  // std dev = 0.437, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | | else return 0.03683493599987197;  // std dev = 0.464, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   else if ( interaction(A, I) )
%   | then return 0.2588611809148197;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, J), complex(A, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.13786375076558988;  // std dev = 1.292, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.3103272010388308;  // std dev = 1.493, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.04885876218247027;  // std dev = 4.606, 97.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=32 */
%   | | | else return 0.16787480489391052;  // std dev = 1.307, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(D, E), enzyme(E, F) )
%   | | then if ( interaction(A, D), phenotype(A, G) )
%   | | | then return -0.06462238452401244;  // std dev = 2.301, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.08677744885389001;  // std dev = 4.737, 98.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=36 */
%   | | else if ( phenotype(A, H), interaction(I, E) )
%   | | | then return 0.06414259358014288;  // std dev = 3.013, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return -0.04757168884992693;  // std dev = 3.968, 84.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=21 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), interaction(L, K) )
%   | | | then return 0.5009860956715843;  // std dev = 0.950, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.0851934110075457;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.17646512487159918;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09489347945441524;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), phenotype(E, F) )
%   | | then if ( phenotype(A, F), enzyme(E, G) )
%   | | | then return 0.19172196665104713;  // std dev = 2.158, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.005543697972106059;  // std dev = 6.634, 208.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=63 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.31307212218596864;  // std dev = 1.086, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.03974035136670626;  // std dev = 2.062, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.2132600203778399;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.2663553439420593;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.11756478569636264;  // std dev = 1.048, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.10496467368592921;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(A, A), phenotype(A, D) )
%   | then return -0.10888895725033351;  // std dev = 0.387, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( interaction(E, A), phenotype(A, F) )
%   | | then if ( phenotype(A, D) )
%   | | | then return 0.0815830242532083;  // std dev = 2.382, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.5498772172955496;  // std dev = 0.956, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(C, G), phenotype(G, D) )
%   | | | then return 0.1054505410580743;  // std dev = 2.195, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.01983492309331743;  // std dev = 2.196, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   else if ( interaction(H, A), enzyme(H, I) )
%   | then return -0.10578676066510603;  // std dev = 0.423, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then return -0.06090394086867091;  // std dev = 0.438, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | | else if ( interaction(L, A), location(A, M) )
%   | | | then return 0.0053944843070131785;  // std dev = 3.790, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | | | else return 0.18887493661294652;  // std dev = 0.956, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.424', 'seconds']
Refined model CLL: -0.394069


******************************************
Best model found
******************************************
Results 

CLL : -0.37947 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 19.876 

Total Inference Time : 6.713516712188721 

Total revision time: 30.225172386169433
Best scored revision CLL: -0.380054


Results 

CLL : -0.37947 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 30.288241968154907 

Total Inference Time : 6.713516712188721 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.6
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2106913079808688;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1617290097290739;  // std dev = 8.340, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14092906678576927;  // std dev = 8.320, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0921850728191766;  // std dev = 8.480, 337.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0935575802540676;  // std dev = 8.372, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0970968584133113;  // std dev = 8.243, 300.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0867560324623399;  // std dev = 8.191, 293.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), function(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04355560047422189;  // std dev = 8.353, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04095721400440596;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.053056591785451974;  // std dev = 8.183, 292.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.228', 'seconds']
Parameter learned model CLL:-0.380295 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.206, 191, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.34, 210, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.32, 207, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.48, 233, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.372, 215, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.243, 196, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.191, 189, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), function(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.353, 212, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.313, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.183, 188, 104]}]
{'': [0.0, 0.22825624820453944], 'false': [nan, 0.22825624820453944], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2215100004056953], 'false': [nan, 0.22151000040569968], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22257834389636], 'false': [nan, 0.22257834389636], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.213368084600551], 'false': [nan, 0.21336808460055529]}
{'': [0.0, 0.21973054510077683], 'false': [nan, 0.21973054510077727], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22648888888888982], 'false': [nan, 0.22648888888888982], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2289601509627372], 'false': [nan, 0.2289601509627372], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22079794904662808], 'false': [nan, 0.22079794904662697]}
{'': [0.0, 0.22293444328824064], 'false': [nan, 0.22293444328824005], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22931131544379907], 'false': [nan, 0.22931131544379907], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 12.189
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then if ( complex(D, G) )
%   | | | then return 0.1914822684328457;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( complex(A, H), phenotype(D, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2699136409818652;  // std dev = 2.870, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(A, L), interaction(M, J) )
%   | | | then return 0.19581127276184887;  // std dev = 4.150, 77.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
%   | | | else return 0.12771415249081552;  // std dev = 4.759, 115.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=31 */
%   | | else if ( enzyme(A, N), phenotype(A, P) )
%   | | | then return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.20508771060971645;  // std dev = 3.332, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then if ( phenotype(D, E) )
%   | | | then return 0.12343722067816783;  // std dev = 2.798, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.49926967029889885;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(D, G), interaction(D, D) )
%   | | | then return 0.16729621756185273;  // std dev = 1.592, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.06805202818356604;  // std dev = 2.893, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( phenotype(H, J) )
%   | | | then return 0.39918219232676455;  // std dev = 1.854, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.13999602719818582;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.10494697809062838;  // std dev = 1.898, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.17427176096889438;  // std dev = 6.245, 173.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=59 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( phenotype(A, D), location(A, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( phenotype(A, G), location(F, E) )
%   | | | then return 0.1026853970386653;  // std dev = 4.435, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
%   | | | else return 0.18799882261876902;  // std dev = 3.935, 66.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=25 */
%   | | else if ( interaction(H, A), complex(A, I) )
%   | | | then return 0.03140230501232214;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.09256296783921633;  // std dev = 2.344, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( enzyme(A, L), complex(A, M) )
%   | | | then return 0.3829775920601649;  // std dev = 1.318, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.14351729366144955;  // std dev = 4.614, 95.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=32 */
%   | | else if ( location(A, N) )
%   | | | then return 0.3072105071572143;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.30543881141868157;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( interaction(A, E), complex(E, C) )
%   | then return 0.0015040670720709859;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(F, A), interaction(A, G) )
%   | | then return 0.7638080250041116;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.2685987200097932;  // std dev = 1.605, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.10818539977626095;  // std dev = 1.372, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( complex(A, J), interaction(A, K) )
%   | then return 0.06436334360937075;  // std dev = 0.457, 82.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=24 */
%   | else if ( interaction(L, A), interaction(M, L) )
%   | | then if ( interaction(A, L) )
%   | | | then return 0.1993351511944123;  // std dev = 2.566, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.10321389254016412;  // std dev = 5.847, 158.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=50 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.5303384199882211;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.197358944558177;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, F) )
%   | | then if ( interaction(G, D), interaction(G, A) )
%   | | | then return 0.09620227532153991;  // std dev = 1.817, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.320708247358864;  // std dev = 1.717, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(A, D), phenotype(A, H) )
%   | | | then return -0.0193043833210379;  // std dev = 1.533, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.09973940546841223;  // std dev = 4.135, 77.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
%   | else if ( complex(A, I), enzyme(A, J) )
%   | | then if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.06360991150493403;  // std dev = 1.817, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return -0.13558646927920134;  // std dev = 1.773, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( enzyme(A, M), location(A, N) )
%   | | | then return 0.23597158513964836;  // std dev = 2.246, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.05170018099069415;  // std dev = 5.620, 153.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=44 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1076235350882039;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D) )
%   | | then if ( enzyme(D, F), complex(E, G) )
%   | | | then return 0.12245553147238751;  // std dev = 4.299, 78.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=30 */
%   | | | else return 0.06202879130605232;  // std dev = 6.614, 201.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=64 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.16957243080395992;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.038170825022502956;  // std dev = 1.714, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( complex(A, I) )
%   | | then return 0.47960582737511814;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.0026021438185919845;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1383363076770001;  // std dev = 0.057, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( location(A, D), enzyme(A, E) )
%   | then if ( interaction(A, F), complex(A, G) )
%   | | then if ( interaction(H, A), interaction(F, H) )
%   | | | then return -0.22856792044074292;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.10423329838347568;  // std dev = 1.703, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( interaction(A, I), location(I, D) )
%   | | | then return 0.11730271179696712;  // std dev = 1.988, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return -0.047097734887476955;  // std dev = 3.772, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then if ( complex(J, L) )
%   | | | then return 0.10039069234810323;  // std dev = 4.356, 82.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | else return 0.23806017873113242;  // std dev = 1.727, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( complex(A, M) )
%   | | | then return -0.04637825394468778;  // std dev = 2.153, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.058643650561062674;  // std dev = 4.597, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( phenotype(A, E), phenotype(C, E) )
%   | then return -0.05572782889982439;  // std dev = 0.459, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( interaction(C, A) )
%   | | then if ( complex(C, F), phenotype(C, G) )
%   | | | then return -0.06475515403556076;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.05309118471950265;  // std dev = 1.103, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.26097715804032384;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( complex(A, H), interaction(I, A) )
%   | then return 0.05178472977188385;  // std dev = 0.469, 103.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), complex(J, M) )
%   | | | then return 0.11094767945895627;  // std dev = 4.756, 96.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=37 */
%   | | | else return 0.03041193220522076;  // std dev = 2.586, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( phenotype(A, N), interaction(P, A) )
%   | | | then return 0.4010150600360742;  // std dev = 1.150, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.13049004200232686;  // std dev = 1.645, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09196752532604151;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(A, E), complex(D, F) )
%   | | then if ( phenotype(D, G), phenotype(A, G) )
%   | | | then return 0.14118320443687668;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.00466350217408005;  // std dev = 1.882, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( location(A, H), location(D, H) )
%   | | | then return 0.43459990265997095;  // std dev = 1.555, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.034534087114233065;  // std dev = 1.604, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( enzyme(A, I), interaction(A, J) )
%   | | then if ( complex(J, K), enzyme(J, L) )
%   | | | then return -0.22443431040383435;  // std dev = 1.559, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.07207804826206962;  // std dev = 2.132, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( complex(A, M), location(A, N) )
%   | | | then return 0.07756726318368853;  // std dev = 3.761, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | | | else return 0.014986201457809533;  // std dev = 5.564, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08306665860823409;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), interaction(D, F) )
%   | | then if ( interaction(F, F), complex(F, G) )
%   | | | then return 0.17332222345800088;  // std dev = 1.909, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return -0.010969830560745037;  // std dev = 3.267, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | else if ( interaction(H, D), enzyme(H, I) )
%   | | | then return 0.6968971065709627;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1297353746575247;  // std dev = 2.755, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | else if ( interaction(J, A) )
%   | | then if ( complex(A, K), interaction(J, J) )
%   | | | then return 0.10394938387125247;  // std dev = 2.070, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.019481806727796622;  // std dev = 6.013, 175.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=51 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return -0.22618996639648037;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.0670235267663503;  // std dev = 1.418, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.744', 'seconds']
Refined model CLL: -0.416135


******************************************
Best model found
******************************************
Results 

CLL : -0.381165 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.189 

Total Inference Time : 5.132485866546631 

Total revision time: 21.575250591278078
Best scored revision CLL: -0.380295


Results 

CLL : -0.381165 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 21.63832017326355 

Total Inference Time : 5.132485866546631 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.616
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.192694389644967;  // std dev = 7.824, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16397222153207403;  // std dev = 7.846, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1273094154549577;  // std dev = 7.919, 289.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10907692999350177;  // std dev = 7.906, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09950742177520629;  // std dev = 7.853, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11102646968264157;  // std dev = 7.677, 256.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06010188124506012;  // std dev = 7.853, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05289940399140416;  // std dev = 7.824, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.026973188896352203;  // std dev = 7.913, 288.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.025859717421283072;  // std dev = 7.887, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.385', 'seconds']
Parameter learned model CLL:-0.365583 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.824, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.846, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.919, 197, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.906, 195, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.853, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.677, 164, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.853, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.824, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.913, 196, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.887, 192, 92]}]
{'': [0.0, 0.22262479338843064], 'false': [nan, 0.22262479338843064], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22141711091558308], 'false': [nan, 0.22141711091558564], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21699931753690638], 'false': [nan, 0.21699931753690638], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21780038606757435], 'false': [nan, 0.2178003860675726]}
{'': [nan, 0.22101463239167066], 'false': [nan, 0.22101463239167007]}
{'': [0.0, 0.23022460937500083], 'false': [nan, 0.23022460937500083], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22101463239167118], 'false': [nan, 0.22101463239167118], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2226247933884299], 'false': [nan, 0.22262479338843133], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21739969135802467], 'false': [nan, 0.21739969135802492]}
{'': [nan, 0.21900416584011145], 'false': [nan, 0.21900416584011145]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 8.82
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( phenotype(E, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.16926004621062346;  // std dev = 3.106, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.09624417319475045;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( enzyme(A, H), location(E, I) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.19148226843284563;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | else if ( interaction(J, A), interaction(A, K) )
%   | | then if ( interaction(L, J), interaction(M, L) )
%   | | | then return 0.2812258581764354;  // std dev = 2.519, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return 0.16117923812981538;  // std dev = 2.640, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.24198731893789532;  // std dev = 4.839, 99.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( phenotype(A, D), location(A, E) )
%   | then if ( interaction(A, F), complex(A, G) )
%   | | then if ( phenotype(F, H), interaction(I, A) )
%   | | | then return 0.16641605864161454;  // std dev = 2.306, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.4050996813751922;  // std dev = 1.310, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.0581819403215134;  // std dev = 3.287, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | | | else return 0.1491105777008357;  // std dev = 2.872, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | else if ( enzyme(A, L) )
%   | | then if ( interaction(A, M), enzyme(M, L) )
%   | | | then return 0.2725025906601402;  // std dev = 1.647, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.11462163437821207;  // std dev = 3.252, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | else if ( complex(A, N), interaction(A, P) )
%   | | | then return 0.1599978581085421;  // std dev = 2.001, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.2623673352427363;  // std dev = 3.972, 64.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=28 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D) )
%   | then if ( complex(A, E), complex(D, E) )
%   | | then if ( interaction(F, A), enzyme(A, G) )
%   | | | then return 0.09511738644380649;  // std dev = 2.177, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.2523145913472941;  // std dev = 2.214, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( complex(D, H), interaction(D, I) )
%   | | | then return 0.04666816526230195;  // std dev = 3.789, 78.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=19 */
%   | | | else return 0.13257044650164593;  // std dev = 3.250, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( complex(J, K) )
%   | | | then return 0.4809735585728019;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.38510118967263385;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.14801993692679705;  // std dev = 3.337, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | | else return 0.2390680442614026;  // std dev = 3.272, 44.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(A, E), interaction(D, D) )
%   | then return 0.25738462337390927;  // std dev = 0.496, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | else return 0.03666713687587924;  // std dev = 0.439, 122.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=32 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(H, F), interaction(I, H) )
%   | | then if ( interaction(J, I), interaction(J, H) )
%   | | | then return 0.144060667339189;  // std dev = 2.499, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.27813664098287466;  // std dev = 1.990, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.057484251250864975;  // std dev = 0.455, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( complex(L, M), phenotype(K, N) )
%   | | | then return 0.46945232622682564;  // std dev = 1.440, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.17492648589422818;  // std dev = 2.126, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( complex(A, P) )
%   | | | then return 0.08066589770267085;  // std dev = 1.448, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.2057561950350646;  // std dev = 1.669, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(C, C), complex(D, E) )
%   | then if ( interaction(F, A), phenotype(C, G) )
%   | | then if ( complex(A, H), enzyme(F, I) )
%   | | | then return 0.14299482269096378;  // std dev = 1.098, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3874999556725203;  // std dev = 1.588, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( phenotype(C, J) )
%   | | | then return 0.10326882045501741;  // std dev = 1.819, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.35403842865923696;  // std dev = 1.113, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( enzyme(A, K), complex(A, L) )
%   | | then return -0.024452402335026737;  // std dev = 0.429, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( location(A, M), location(D, M) )
%   | | | then return 0.13516159188294133;  // std dev = 3.282, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | | else return 0.2725346763219144;  // std dev = 1.582, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(N, A), location(N, P) )
%   | then return 0.04032051109040983;  // std dev = 0.463, 147.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=46 */
%   | else return 0.23867459624837356;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1304446239588035;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(D, E), location(A, F) )
%   | | then if ( enzyme(D, G), complex(D, H) )
%   | | | then return -0.013813625019086201;  // std dev = 1.496, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.10730465145931055;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.18078790702544056;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.013838683440337158;  // std dev = 1.822, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( enzyme(A, J), phenotype(A, K) )
%   | | then if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.09454057020370112;  // std dev = 1.786, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.02885194314489622;  // std dev = 2.751, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( complex(A, N), interaction(A, P) )
%   | | | then return 0.03413409388165029;  // std dev = 3.317, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return 0.07329705458302718;  // std dev = 5.607, 137.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=48 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10246592809754518;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(G, D), location(D, H) )
%   | | | then return -0.009477229041224701;  // std dev = 3.502, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | | else return -0.2345742457999122;  // std dev = 1.313, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.34456365090854585;  // std dev = 1.077, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.08274892701647536;  // std dev = 2.090, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.7323494417284271;  // std dev = 0.074, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11596606378364688;  // std dev = 1.883, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return 0.17516883351152446;  // std dev = 2.912, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.06887035637964731;  // std dev = 4.924, 104.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=38 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08785004297078441;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(A, F), interaction(A, G) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.09493859145709117;  // std dev = 1.108, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.009756794363309458;  // std dev = 1.874, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( enzyme(A, H), complex(A, I) )
%   | | | then return 0.4260935220205241;  // std dev = 1.238, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.09224621271042342;  // std dev = 3.883, 63.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=25 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), complex(K, L) )
%   | | | then return 0.02896577897926684;  // std dev = 3.353, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | | | else return 0.42890296674472556;  // std dev = 0.895, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return -0.08997244921539008;  // std dev = 2.266, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.009867834720259303;  // std dev = 4.289, 85.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then return 0.003158042194220492;  // std dev = 0.456, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( enzyme(A, E), interaction(F, A) )
%   | | then return 0.37670929762143046;  // std dev = 0.446, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else if ( phenotype(G, C), enzyme(G, H) )
%   | | | then return 0.031770590973760504;  // std dev = 3.259, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return 0.24755562704623316;  // std dev = 1.648, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   else if ( interaction(I, A), phenotype(I, J) )
%   | then return -0.059509551831493805;  // std dev = 0.449, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | else if ( interaction(A, K), enzyme(A, L) )
%   | | then if ( interaction(K, M), enzyme(M, L) )
%   | | | then return 0.3084171526910974;  // std dev = 1.220, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.06821052523427104;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( complex(A, N) )
%   | | | then return -0.039042520151215274;  // std dev = 2.540, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.10769847796231294;  // std dev = 3.018, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( interaction(A, E), interaction(E, F) )
%   | then return 0.0024011715655207363;  // std dev = 0.445, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | else return -0.2041955888626822;  // std dev = 0.438, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   else if ( interaction(A, G), interaction(G, G) )
%   | then if ( complex(A, H), complex(G, H) )
%   | | then return -0.13646952703436743;  // std dev = 0.433, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else if ( location(A, I), location(G, I) )
%   | | | then return 0.11750510942567036;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.08596298805996701;  // std dev = 2.186, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.33035037333749484;  // std dev = 1.279, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.13761080400438025;  // std dev = 3.089, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return -0.1195439592323598;  // std dev = 1.939, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.0551156982803864;  // std dev = 4.435, 82.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=32 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.034', 'seconds']
Refined model CLL: -0.440934


******************************************
Best model found
******************************************
Results 

CLL : -0.365681 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.82 

Total Inference Time : 3.5324859619140625 

Total revision time: 16.49624980545044
Best scored revision CLL: -0.365583


Results 

CLL : -0.365681 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 16.559319387435913 

Total Inference Time : 3.5324859619140625 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.562
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19148226843284613;  // std dev = 7.572, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12772603917675326;  // std dev = 7.789, 292.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15062963138513685;  // std dev = 7.557, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1321372815837303;  // std dev = 7.527, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08551638981541514;  // std dev = 7.662, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11700323664826327;  // std dev = 7.393, 236.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08119432893439399;  // std dev = 7.471, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), function(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06779094510885748;  // std dev = 7.454, 243.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0015909844392344203;  // std dev = 7.749, 285.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.021599659852838436;  // std dev = 7.635, 267.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.309', 'seconds']
Parameter learned model CLL:-0.36838 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.572, 172, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.789, 206, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.557, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.527, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.662, 185, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.393, 150, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.471, 159, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), function(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.454, 157, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.749, 199, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.635, 181, 86]}]
{'': [0.0, 0.22222222222222282], 'false': [nan, 0.22222222222222282], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.20777819478326096], 'false': [nan, 0.20777819478326037], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22308349609375067], 'false': [nan, 0.22308349609375067]}
{'': [0.0, 0.22480473670949802], 'false': [nan, 0.224804736709498], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21663648370800978], 'false': [nan, 0.21663648370800956], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23161447859810524], 'false': [nan, 0.23161447859810524], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22780508121615886], 'false': [nan, 0.22780508121615886]}
{'': [nan, 0.2286575555894248], 'false': [nan, 0.2286575555894238]}
{'': [nan, 0.21069867651585125], 'false': [nan, 0.21069867651585125]}
{'': [nan, 0.21835065718413887], 'false': [nan, 0.21835065718413887]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 9.272
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(F, E), interaction(F, F) )
%   | | then if ( complex(A, G), location(A, H) )
%   | | | then return 0.27920156667845974;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.1438632208137977;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=22 */
%   | | else if ( enzyme(D, I), interaction(E, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2895214841191202;  // std dev = 3.537, 51.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=22 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), interaction(A, K) )
%   | | | then return 0.1123862232351056;  // std dev = 3.345, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | | else return 0.1996123497336587;  // std dev = 3.036, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( enzyme(D, F), enzyme(A, G) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.2397187297348978;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.32942542089186677;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( enzyme(D, I), interaction(J, D) )
%   | | | then return 0.08684276025074845;  // std dev = 2.501, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.16552093002625967;  // std dev = 5.987, 161.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=54 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( complex(A, M) )
%   | | | then return 0.2605767571486833;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.8409507072695208;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.3428622502952368;  // std dev = 0.998, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12478854290034129;  // std dev = 2.036, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then if ( enzyme(C, F) )
%   | | then return 0.7648122447355815;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(C, D) )
%   | | | then return 0.4673705485387774;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11829001610903271;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( enzyme(C, G), interaction(C, C) )
%   | | then return 0.07052690454189577;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(C, A), complex(C, H) )
%   | | | then return 0.0863622401814381;  // std dev = 1.677, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.2557837848438189;  // std dev = 3.076, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   else if ( enzyme(A, I), location(A, J) )
%   | then if ( enzyme(K, I), interaction(K, L) )
%   | | then return 0.2993213261935295;  // std dev = 1.221, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.16694174376240023;  // std dev = 0.480, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else return 0.09552525923194591;  // std dev = 0.457, 133.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=40 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12219885077859328;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( phenotype(F, H) )
%   | | | then return 0.0373163123818684;  // std dev = 2.689, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return -0.19741663065495646;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.2711563612712388;  // std dev = 1.411, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.14098504638524464;  // std dev = 1.598, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( phenotype(A, K) )
%   | | then if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.021475294780969698;  // std dev = 1.745, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.2544275626610304;  // std dev = 3.869, 62.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=30 */
%   | | else if ( location(A, M), complex(A, N) )
%   | | | then return 0.028095729317045643;  // std dev = 2.713, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.12482070813174388;  // std dev = 3.872, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11362547155814912;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(D, F), interaction(A, D) )
%   | | then return -0.12007550223437995;  // std dev = 1.174, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(G, D), enzyme(A, H) )
%   | | | then return 0.14939409800393533;  // std dev = 3.190, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | | else return 0.04268857114245832;  // std dev = 5.187, 131.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=38 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( interaction(I, K), enzyme(K, L) )
%   | | | then return 0.036445340581311256;  // std dev = 2.740, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0.2115625350686627;  // std dev = 2.500, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.1731363573455676;  // std dev = 1.316, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.49572665065265736;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10195783036956796;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(A, F), interaction(G, D) )
%   | | then if ( enzyme(D, F) )
%   | | | then return -0.13790810081940036;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.05375437994128927;  // std dev = 3.276, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | else if ( interaction(A, D), phenotype(A, H) )
%   | | | then return 0.3027968843722897;  // std dev = 1.646, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.13234149253131064;  // std dev = 4.481, 85.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
%   | else if ( location(A, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.08441691592092007;  // std dev = 2.311, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.042007811928239026;  // std dev = 3.743, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
%   | | else return -0.22642778966358634;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(E, G), enzyme(G, H) )
%   | | then if ( interaction(G, E), complex(A, F) )
%   | | | then return -0.015391705611282891;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.28139496222994637;  // std dev = 1.292, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.03469765054240304;  // std dev = 0.443, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( complex(A, I) )
%   | | then return 0.05402014456848766;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.19626025072772796;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4508932231698602;  // std dev = 1.236, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(A, K), complex(K, L) )
%   | then if ( phenotype(A, M) )
%   | | then return 0.005840953897832841;  // std dev = 0.462, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else return 0.24313938518472183;  // std dev = 0.499, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | else return -0.004720022315867252;  // std dev = 0.454, 162.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=47 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( complex(A, E), interaction(C, C) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.21015018347870362;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.007987342807200407;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.20464580876791869;  // std dev = 0.498, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return -0.07293579186492255;  // std dev = 0.445, 87.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=23 */
%   else if ( interaction(H, A), enzyme(H, I) )
%   | then return -0.043177427694195275;  // std dev = 0.455, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.3244816915372546;  // std dev = 1.228, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.05825501710594186;  // std dev = 4.201, 79.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=27 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.07346650083210482;  // std dev = 1.528, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.009841648386744966;  // std dev = 2.570, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( interaction(A, E), phenotype(E, F) )
%   | then return -0.006571681682116998;  // std dev = 0.454, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else return -0.1050783703882074;  // std dev = 0.455, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   else if ( interaction(A, A) )
%   | then if ( phenotype(A, G) )
%   | | then return -0.033287988007497694;  // std dev = 0.439, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.41114043132559225;  // std dev = 0.905, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.23494180103448148;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(L, J), interaction(L, A) )
%   | | | then return -0.22653713998929992;  // std dev = 1.518, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.09542134452230452;  // std dev = 2.206, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.04271858498669901;  // std dev = 4.883, 105.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=36 */
%   | | | else return -0.012352794877009667;  // std dev = 2.852, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( complex(A, E), complex(C, E) )
%   | then if ( enzyme(D, F), interaction(G, D) )
%   | | then return 0.4012532074280266;  // std dev = 0.772, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(D, A) )
%   | | | then return 0.02458939103741986;  // std dev = 2.057, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.1490593830872052;  // std dev = 1.038, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.04304010419459295;  // std dev = 0.450, 155.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=43 */
%   else if ( enzyme(A, H), interaction(I, A) )
%   | then if ( interaction(A, J) )
%   | | then return 0.04726859357753049;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.07371002321651407;  // std dev = 0.451, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( complex(A, K), phenotype(A, L) )
%   | | then return 0.0032648651263178867;  // std dev = 0.457, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(M, A), location(A, N) )
%   | | | then return 0.2849637615668379;  // std dev = 1.712, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.1222943616991046;  // std dev = 2.567, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.380', 'seconds']
Refined model CLL: -0.415915


******************************************
Best model found
******************************************
Results 

CLL : -0.3677 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.272 

Total Inference Time : 4.001951217651367 

Total revision time: 17.326235898971557
Best scored revision CLL: -0.36838


Results 

CLL : -0.3677 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 17.38930548095703 

Total Inference Time : 4.001951217651367 

